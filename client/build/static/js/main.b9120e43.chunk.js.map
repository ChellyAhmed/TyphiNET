{"version":3,"sources":["assets/img/logo-typhinet3.png","constants.js","util/colorHelper.js","pages/dashboard/materialUI.js","pages/dashboard/index.js","pages/admin/materialUI.js","pages/admin/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForAMR","amr","getColorForDrug","drug","getColorForIncType","incType","getColorForTetracyclines","tetA","useStyles","makeStyles","theme","formControlSelect","marginBottom","marginTop","minWidth","color","borderBottomColor","formControlSelectCountryRegionH","alignItems","formControlSelectCountryRegionV","select","fontWeight","fontFamily","fontSize","selectYear","width","borderColor","selectCountry","textAlign","selectCountryValues","typography","typographyEndYear","tbg","inputLabel","paddingBottom","tooltipButton","height","marginLeft","tooltipTitle","tooltipIcon","backgroundColor","borderWidth","borderRadius","CustomCircularProgress","withStyles","root","thumb","boxShadow","valueLabel","Slider","position","top","left","CircularProgress","CustomToggleButton","padding","selected","ToggleButton","Buttons","styled","div","ButtonClearSelect","button","DashboardPage","classes","useState","coordinates","zoom","controlMapPosition","setControlMapPosition","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapSTADData","setWorldMapSTADData","worldMapXDRData","setWorldMapXDRData","worldMapDCSData","setWorldMapDCSData","worldMapAZITHData","setWorldMapAZITHData","worldMapCIPIData","setWorldMapCIPIData","worldMapCIPRData","setWorldMapCIPRData","worldMapDrugsData","setWorldMapDrugsData","worldMapAmrProfilesData","setWorldMapAmrProfilesData","worldMapPlasmidIncompatibilityTypeData","setWorldMapPlasmidIncompatibilityTypeData","plotAmrClassChart","setPlotAmrClassChart","plotDrugsAndGenotypesChart","setPlotDrugsAndGenotypesChart","plotPopulationStructureChart","setPlotPopulationStructureChart","plotDrugTrendsChart","setPlotDrugTrendsChart","captureControlMapInProgress","setCaptureControlMapInProgress","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","setCaptureReportInProgress","tooltipContent","setTooltipContent","React","timeInitial","setTimeInitial","timeFinal","setTimeFinal","actualTimeInitial","setActualTimeInitial","actualTimeFinal","setActualTimeFinal","years","setYears","countriesForFilter","setCountriesForFilter","setRegionsForFilter","actualCountry","setActualCountry","actualRegion","setActualRegion","actualContinent","setActualContinent","populationStructureFilter","setPopulationStructureFilter","value","id","populationStructureFilterOptions","RFWGFilterOptions","amrClassFilterOptions","amrClassFilterforFilterOptions","RFWGFilter","setRFWGFilter","amrClassesForFilter","drtClassesForFilter","trendClassesForFilter","trendDropdownOptions","RFWGDropdownOptions","setRFWGDropdownOptions","amrClassFilter","setAmrClassFilter","RDWAGDataviewFilter","setRDWAGDataviewFilter","drugTrendsChartData","setDrugTrendsChartData","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","chartMaxHeight","setChartMaxHeight","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","dataset","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","appLoading","setAppLoading","lastUpdated","setLastUpdated","countryPMID","setCountryPMID","allGenotypes","setAllGenotypes","trendValues","setTrendValues","RFWGValues","setRFWGValues","desktop","mobile","middle","hoverColor","window","innerHeight","innerWidth","dimensions","setDimensions","useEffect","document","getElementsByClassName","style","overflow","remove","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","sort","a","b","localeCompare","genotypes","arraysEqual","a1","a2","JSON","stringify","axios","get","then","res","limits","data","min","max","Date","timeOutId","response","parseDataForGenotypeChart","finalRegions","finalPopulationStructureChartData","genomes","forEach","entry","some","e","push","g","GENOTYPE","name","YEAR","year","find","yearIndex","findIndex","undefined","unshift","length","sum","Object","entries","total","populationStructureChartSums","_year","highestSum","Math","ceil","parseDataForCountryMap","genotypesData","drugsData","amrData","finalCountries","samplesData","h58Data","mdrData","stadData","xdrData","incTypesData","dcsData","azithData","cipIData","cipRData","countData","array","elementToCount","parentName","childName","temp","country","countryIndex","parent","index","count","displayName","congoCountryIndex","centralAfricanRepublicCountryIndex","ivoryCoastCountryIndex","timorLesteCountryIndex","includes","percentage","round","toFixed","STADs","stad","type","parseFloat","MDRs","mdr","XDRs","xdr","DCSs","dcs","AZs","az","CipRs","cipRs","aux","CipIs","filter","x","aux2","dataForCountingDrugs","DRUGS","DRUG","incTypes","parseDataForAmrClassChart","finalChartData","maxSum","totalSum","genotypeIndex","GENE","element","filteredData","keys","slice","key","obj","errorMargin","lowerValue","noneCount","total2","top10","parseDataForDrugTrendsChart","finalDrugTrendsChartData","finalDrugsAndGenotypesChartData","totalCountryCount","allDrugs","maxValue","drugsPercentage","higherPercentage","totalS","item","genotypeChartResponse","drugTrendsChartResponse","classChartResponse","mapSamplesColorScale","domain","scaleLinear","range","mapRedColorScale","tooltip","useCallback","positionY","width1","width2","wrapperS","stroke","chart","y","wrapperStyle","cursor","fill","content","active","payload","label","reverse","className","quantities","map","dataKey","imgOnLoadPromise","Promise","resolve","reject","onload","onerror","maxH","margin","bottom","right","maxBarSize","strokeDasharray","interval","tick","allowDataOverflow","allowDecimals","angle","offset","props","zIndex","i","stackId","teste","parse","barCategoryGap","amrClassChartTooltip","allowEscapeViewBox","armClassFilterComponent","info","dataAMR","layout","justifyContent","bars","barSize","fontsize","strokeWidth","cotrim","colors1","colors2","colors3","dataDRT","toString","tickCount","connectNulls","activeDot","values","stopLoading","names","brokenNames","ids","doc","jsPDF","unit","format","orientation","IPW","internal","pageSize","getWidth","typhinetLogo","Image","src","typhinetLogoImg2","addImage","date","replace","reportIntro","getElementById","visibility","domtoimage","toPng","quality","bgcolor","dataUrl","introURL","h","w","setFontSize","setTextColor","setFillColor","rect","textWithLink","url","setFont","line","text","align","addPage","svgAsPngUri","scale","uri","canvas","createElement","ctx","getContext","mapImg","mapImgPromise","drawImage","img","toDataURL","actualMapView","actualTimePeriodRange","region","img2","img3","names2","subtitleH","imgWidth","API","getImageProperties","floor","texts","spaceBetween","drugs","maxWidth","RFWGCount","img4","img5","save","graph","graphImg","graphImgPromise","cHeight","logoHeight","legendHeight","filterHeight","subtitleHeight","imgHeight","fillStyle","fillRect","font","fillText","legendImg","legendImgPromise","typhinetLogoPromise","base64","download","textHeight","legendImgoPromise","centerWidth","capturePicture","cols_to_remove","indexes","csv","split","lines","currentIndex","indexOf","newLines","j","newCSV","dowloadBaseSpreadsheet","generateMapLegendOptions","percentageSteps","n","legends","Array","renderMapLegend","FormControl","fullWidth","title","placement","IconButton","icon","faInfoCircle","size","Select","onChange","evt","target","MenuItem","typhinetLogoImg","alt","flexDirection","projectionConfig","rotate","center","onMoveEnd","geography","geographies","geo","sample","s","properties","NAME","CONTINENT","d","darkGray","lineage","countH58","isH58","onClick","onMouseLeave","onMouseEnter","additionalInfo","samples","GENOTYPES","TOTAL","H58","MDR","XDR","DCS","CipI","CipR","CipI_R","AzithR","STAD","genotypeInfo","simpleGenotypeInfo","smallerThan20","mdrInfo","stadInfo","xdrInfo","azInfo","cipI","cipR","cipIInfo","cipRInfo2","cipIRInfo","cipRInfo","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","newDataset","gutterBottom","Zoom","in","c","Tooltip","faCrosshairs","pos","faPlus","faMinus","faCamera","thickness","dcsInfo","drugsInfo","amrProfilesInfo","incTypesInfo","paddingRight","options","searchable","labelField","multi","clearable","separator","contentRenderer","state","itemRenderer","itemIndex","methods","isSelected","addItem","checked","valueField","clearRenderer","clearAll","selectAll","InputLabel","o","paddingLeft","areAllSelected","isValue","display","paddingTop","faTable","marginRight","href","rel","open","faEnvelope","faGithub","faTwitter","flex","Fab","innerText","click","text2","faUndoAlt","join","cellON","off","tableID","tablePadding","stickyCell","borderLeft","stickyHeaderCell","changesTable","maxHeight","viewButton","resetButton","uploadButton","checkChangesButton","dialog","flexWrap","input","input2","currentData","toolbar","borderBottom","deleteSelected","checkboxCell","checkbox","tableRowRoot","tableRowSelected","box","textAlignLast","userSelect","letterSpacing","choosePage","opacity","selectFilter","header","headerTitle","rowHeader","ColorButton","Button","ColorButton3","ColorButton4","ColorButton5","StyledHeaderCell","head","palette","common","black","white","body","TableCell","CustomTableContainer","TableContainer","CustomTableSortLabel","TableSortLabel","createData","changes","AdminPage","rows","setRows","setData","originalData","setOriginalData","setCurrentData","tableKeys","setTableKeys","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","currentRow","setCurrentRow","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","open7","setOpen7","resultMessage","setResultMessage","loading","setLoading","setSelected","search","setSearch","filters","setFilters","filterOptions","setFilterOptions","setFilteredData","isLoading","setIsLoading","startProgress","setStartProgress","loadingMessage","setLoadingMessage","exceptions","descendingComparator","betterChanges","added","deleted","updated","updates","point","new","old","handleCheckChanges","message","checkChanges","showPopup","Status","resetChanges","getData","catch","error","finally","updatedAt","toLocaleString","aux4","aux5","toLowerCase","pass","EnhancedTableToolbar","numSelected","Toolbar","sx","variant","component","placeholder","onCancelSearch","onRequestSearch","faTrashAlt","EnhancedTableHead","onRequestSort","onSelectAllClick","rowCount","TableHead","TableRow","Checkbox","indeterminate","headCell","sortDirection","direction","property","event","stopPropagation","displayEmpty","onOpen","onClose","option","Paper","Table","stickyHeader","TableBody","row","r","t","genome","gIndex","splice","changeView","newSelecteds","comparator","stabilizedThis","el","stableSort","getComparator","isItemSelected","dataRow","role","selectedIndex","newSelected","concat","handleClick","cell","random","handleEdit","faEdit","handleDelete","disableUnderline","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","ActionsComponent","useTheme","Box","flexShrink","ml","disabled","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteRow","autoFocus","TextField","defaultValue","rowIndex","inputs","editRow","addRow","times","parts","post","LZString","compress","current","uploadChanges","index2","deleteRows","App","to","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","ReactDOM","render","StrictMode","ThemeProvider","URL","process","origin","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"g4xIAAe,MAA0B,2C,SCA5BA,EAAe,6BCAfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UAGT,IAAK,QACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,IAAK,aACH,MAAO,QACT,IAAK,UACL,IAAK,cACL,IAAK,cACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,QACE,MAAO,YAIAC,EAAiB,SAACC,GAC7B,OAAQA,GACN,IAAK,kBACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,MACH,MAAO,MACT,IAAK,MACH,MAAO,UACT,IAAK,aACH,MAAO,UACT,IAAK,aACH,MAAO,UACT,IAAK,iBACH,MAAO,UACT,IAAK,MACH,MAAO,QACT,IAAK,MACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,QACE,MAAO,YAeAC,EAAkB,SAACC,GAC9B,OAAQA,GACN,IAAK,eACH,MAAO,mBACT,IAAK,4BACH,MAAO,mBACT,IAAK,OACH,MAAO,UACT,IAAK,kBACH,MAAO,mBACT,IAAK,aACH,MAAO,mBACT,IAAK,iBACH,MAAO,mBACT,IAAK,gBACH,MAAO,mBACT,IAAK,eACH,MAAO,mBACT,IAAK,gBACH,MAAO,mBACT,IAAK,cACH,MAAO,YACT,IAAK,0BACH,MAAO,UACT,IAAK,0BACH,MAAO,UACT,QACE,MAAO,YAIAC,EAAqB,SAACC,GACjC,OAAQA,GACN,IAAK,QACH,MAAO,mBACT,IAAK,cACH,MAAO,kBACT,IAAK,gBACH,MAAO,kBACT,IAAK,UACH,MAAO,iBACT,IAAK,QACH,MAAO,mBACT,IAAK,mCACH,MAAO,gBACT,IAAK,aACH,MAAO,mBACT,IAAK,uBACH,MAAO,iBACT,IAAK,OACH,MAAO,kBACT,IAAK,eACH,MAAO,kBACT,IAAK,QACH,MAAO,iBACT,IAAK,UACH,MAAO,mBACT,IAAK,QACH,MAAO,iBACT,IAAK,OACH,MAAO,mBACT,IAAK,mBACH,MAAO,gBACT,IAAK,YACH,MAAO,kBACT,IAAK,iBACH,MAAO,kBACT,IAAK,UACH,MAAO,iBACT,IAAK,SACH,MAAO,iBACT,IAAK,oBACH,MAAO,kBACT,IAAK,sBACH,MAAO,kBACT,IAAK,UACH,MAAO,gBACT,IAAK,SACH,MAAO,mBACT,IAAK,QACH,MAAO,mBACT,QACE,MAAO,YAIAC,EAA2B,SAACC,GACvC,OAAQA,GACN,IAAK,UACH,MAAO,mBACT,IAAK,UACH,MAAO,UACT,IAAK,U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","file":"static/js/main.b9120e43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet3.c193c2f3.png\";","export const API_ENDPOINT = \"http://localhost:8080/api/\";\r\n//export const API_ENDPOINT = \"https://typhinet.herokuapp.com/api/\";","export const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return \"#808080\";\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return \"#ffff00\";\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return \"#ffd700\";\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return \"#32cd32\";\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return \"#adff2f\";\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return \"#98fb98\";\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return \"#6b8e23\";\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return \"#2e8b57\";\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return \"#006400\";\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return \"#0000cd\";\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return \"#4682b4\";\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return \"#00bfff\";\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return \"#1e90ff\";\r\n    case '3.4':\r\n      return \"#6a5acd\";\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n      return \"#4b0082\";\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return \"#8b0000\";\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return \"#ff6347\";\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return \"#ff0000\";\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return \"black\";\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n      return \"#c51b7d\";\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return \"#fb8072\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForAMR = (amr) => {\r\n  switch (amr) {\r\n    case 'No AMR detected':\r\n      return \"#addd8e\";\r\n    case 'MDR_DCS':\r\n      return \"#9e9ac8\"\r\n    case 'MDR':\r\n      return \"red\"\r\n    case 'DCS':\r\n      return \"#6baed6\"\r\n    case 'AzithR_MDR':\r\n      return \"#a50f15\"\r\n    case 'AzithR_DCS':\r\n      return \"#7a0177\"\r\n    case 'AzithR_DCS_MDR':\r\n      return \"#54278f\"\r\n    case 'XDR':\r\n      return \"black\"\r\n    case 'AMR':\r\n      return \"#ffeda0\"\r\n    case 'AMR_DCS':\r\n      return \"#fd8d3c\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForSimpleGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case 'H58':\r\n      return \"green\";\r\n    case 'Non-H58':\r\n      return \"red\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Azithromycin':\r\n      return \"rgb(144,211,199)\";\r\n    case 'Fluoroquinolones (CipI/R)':\r\n      return \"rgb(255,236,120)\";\r\n    case 'ESBL':\r\n      return \"#DB90F0\";\r\n    case 'Chloramphenicol':\r\n      return \"rgb(249,129,117)\";\r\n    case 'Ampicillin':\r\n      return \"rgb(129,178,210)\";\r\n    case 'Co-trimoxazole':\r\n      return \"rgb(252,180,105)\";\r\n    case 'Sulphonamides':\r\n      return \"rgb(180,221,112)\";\r\n    case 'Trimethoprim':\r\n      return \"rgb(102,102,255)\";\r\n    case 'Tetracyclines':\r\n      return \"rgb(251,207,229)\";\r\n    case 'Susceptible':\r\n      return \"lightGray\";\r\n    case 'Fluoroquinolones (CipI)':\r\n      return \"#98fb98\";\r\n    case 'Fluoroquinolones (CipR)':\r\n      return \"#9e9ac8\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForIncType = (incType) => {\r\n  switch (incType) {\r\n    case 'IncX1':\r\n      return 'rgb(174,227,154)'\r\n    case 'IncFIA(HI1)':\r\n      return 'rgb(138,35,139)'\r\n    case 'IncFIB(pHCM2)':\r\n      return 'rgb(163,215,30)'\r\n    case 'IncA/C2':\r\n      return 'rgb(69,51,214)'\r\n    case 'IncP1':\r\n      return 'rgb(223,207,231)'\r\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(66,69,94)'\r\n    case 'Col(BS512)':\r\n      return 'rgb(251,172,246)'\r\n    case 'IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(34,151,67)'\r\n    case 'IncN':\r\n      return 'rgb(238,83,190)'\r\n    case 'IncHI1B(R27)':\r\n      return 'rgb(68,242,112)'\r\n    case 'p0111':\r\n      return 'rgb(251,45,76)'\r\n    case 'IncHI1A':\r\n      return 'rgb(101,230,249)'\r\n    case 'IncI1':\r\n      return 'rgb(123,44,49)'\r\n    case 'IncY':\r\n      return 'rgb(231,173,121)'\r\n    case 'IncFIB(AP001918)':\r\n      return 'rgb(32,80,46)'\r\n    case 'IncFIB(K)':\r\n      return 'rgb(53,136,209)'\r\n    case 'IncHI2/IncHI2A':\r\n      return 'rgb(115,140,78)'\r\n    case 'Col440I':\r\n      return 'rgb(159,4,252)'\r\n    case 'Col156':\r\n      return 'rgb(244,212,3)'\r\n    case 'Col440II/Col440II':\r\n      return 'rgb(17,160,170)'\r\n    case 'IncFIA(HI1)/IncHI1A':\r\n      return 'rgb(251,120,16)'\r\n    case 'ColRNAI':\r\n      return 'rgb(91,67,11)'\r\n    case 'ColpVC':\r\n      return 'rgb(248,117,116)'\r\n    case 'IncX3':\r\n      return 'rgb(190,177,231)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForTetracyclines = (tetA) => {\r\n  switch (tetA) {\r\n    case 'tetA(A)':\r\n      return 'rgb(174,227,154)'\r\n    case 'tetA(B)':\r\n      return '#D7AEF7'\r\n    case 'tetA(C)':\r\n      return '#FFEC78'\r\n    case 'tetA(D)':\r\n      return '#FCB469'\r\n    case 'tetA(AB)':\r\n      return 'rgb(223,207,231)'\r\n    case 'tetA(ABC)':\r\n      return 'rgb(66,69,94)'\r\n    case 'tetA(ABD)':\r\n      return 'rgb(251,172,246)'\r\n    case 'tetA(ABCD)':\r\n      return 'rgb(34,151,67)'\r\n    case 'tetA(AC)':\r\n      return 'rgb(238,83,190)'\r\n    case 'tetA(ACD)':\r\n      return 'rgb(68,242,112)'\r\n    case 'tetA(AD)':\r\n      return 'rgb(251,45,76)'\r\n    case 'tetA(BC)':\r\n      return 'rgb(101,230,249)'\r\n    case 'tetA(BD)':\r\n      return 'rgb(123,44,49)'\r\n    case 'tetA(BCD)':\r\n      return 'rgb(231,173,121)'\r\n    case 'tetA(CD)':\r\n      return 'rgb(32,80,46)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}","import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControlSelect: {\r\n        marginBottom: 12,\r\n        marginTop: 2,\r\n        minWidth: 120,\r\n        '&.label.Mui-focused': {\r\n            color: \"rgb(31, 187, 211)\",\r\n        },\r\n        '&:not(.Mui-error).MuiInput-underline:after': {\r\n            borderBottomColor: \"rgb(31, 187, 211)\",\r\n        }\r\n    },\r\n    formControlSelectCountryRegionH: {\r\n        marginBottom: 16,\r\n        alignItems: \"center\"\r\n    },\r\n    formControlSelectCountryRegionV: {\r\n        marginBottom: 16,\r\n        alignItems: \"center\",\r\n    },\r\n    select: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14\r\n    },\r\n    selectYear: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14,\r\n        width: '85px',\r\n        '&:before': {\r\n            borderColor: 'rgba(0, 0, 0, 0.12)',\r\n        }\r\n    },\r\n    selectCountry: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        width: 200,\r\n        textAlign: \"left\"\r\n    },\r\n    selectCountryValues: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\"\r\n    },\r\n    typography: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    typographyEndYear: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    tbg: {\r\n        marginTop: 5\r\n    },\r\n    inputLabel: {\r\n        fontSize: 12,\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        paddingBottom: 5\r\n    },\r\n    tooltipButton: {\r\n        height: 15.5,\r\n        width: 15.5,\r\n        marginLeft: 5\r\n    },\r\n    tooltipTitle: {\r\n        fontSize: 12\r\n    },\r\n    tooltipIcon: {\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"black\",\r\n        borderWidth: 1,\r\n        borderRadius: \"50%\"\r\n    }\r\n}));\r\n\r\nconst CustomSlider = withStyles({\r\n    root: {\r\n        color: \"rgb(31, 187, 211)\"\r\n    },\r\n    thumb: {\r\n        \"&.MuiSlider-thumb\": {\r\n            \"&:not(.MuiSlider-active):focus\": {\r\n                boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n            },\r\n            \"&:not(.MuiSlider-active):hover\": {\r\n                boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n            },\r\n            \"&.MuiSlider-active\": {\r\n                boxShadow: \"0px 0px 0px 14px rgba(31, 187, 211, 0.16)\"\r\n            },\r\n        },\r\n    },\r\n    valueLabel: {\r\n        fontFamily: \"Montserrat\",\r\n        fontWeight: 500\r\n    }\r\n})(Slider);\r\n\r\nconst CustomCircularProgress = withStyles({\r\n    root: {\r\n        color: \"rgb(31, 187, 211)\",\r\n        position: \"absolute\",\r\n        top: -5,\r\n        left: -6\r\n    }\r\n})(CircularProgress);\r\n\r\nconst CustomToggleButton = withStyles({\r\n    root: {\r\n        padding: \"2px 8px\",\r\n        fontFamily: \"Montserrat\",\r\n        fontWeight: 600\r\n    },\r\n    selected: {\r\n        backgroundColor: 'rgb(31, 187, 211) !important',\r\n        color: \"white !important\"\r\n    }\r\n})(ToggleButton);\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n\r\n  & div {\r\n    margin: 0 0 0 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst ButtonClearSelect = styled.button`\r\n  background: none;\r\n  border: 1px solid #555;\r\n  color: #555;\r\n  border-radius: 3px;\r\n  margin: 0 10px 0;\r\n  padding: 3px 5px;\r\n  font-size: 10px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &.clear {\r\n    color: tomato;\r\n    border: 1px solid tomato;\r\n  }\r\n\r\n  :hover {\r\n    border: 1px solid deepskyblue;\r\n    color: deepskyblue;\r\n  }\r\n`;\r\n\r\nexport { useStyles, CustomSlider, CustomCircularProgress, CustomToggleButton, Buttons, ButtonClearSelect };","import './index.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule, ZoomableGroup } from \"react-simple-maps\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {Tooltip as IconTooltip} from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TooltipMaterialUI from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { BarChart, Bar, XAxis, Label, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Brush, LineChart, Line, Legend } from 'recharts';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faMinus, faCrosshairs, faCamera, faTable, faFilePdf, faInfoCircle, faUndoAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport download from 'downloadjs';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport typhinetLogoImg from '../../assets/img/logo-typhinet3.png';\r\nimport typhinetLogoImg2 from '../../assets/img/logo-typhinet3.png';\r\nimport geography from '../../assets/world-110m.json'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { getColorForGenotype, getColorForAMR, getColorForDrug, getColorForIncType, getColorForTetracyclines } from '../../util/colorHelper';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { Select as DropDownSelect } from \"react-dropdown-select\"\r\nimport 'rodal/lib/rodal.css';\r\nimport domtoimage from 'dom-to-image';\r\nimport { jsPDF } from \"jspdf\";\r\nimport { useStyles, CustomCircularProgress, CustomToggleButton, Buttons, ButtonClearSelect } from './materialUI'\r\n\r\nconst DashboardPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [controlMapPosition, setControlMapPosition] = useState({ coordinates: [0, 0], zoom: 1 });\r\n\r\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\r\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState({});\r\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\r\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\r\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\r\n  const [worldMapSTADData, setWorldMapSTADData] = useState([]);\r\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\r\n  const [worldMapDCSData, setWorldMapDCSData] = useState([]);\r\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\r\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\r\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\r\n  const [worldMapDrugsData, setWorldMapDrugsData] = useState([]);\r\n  const [worldMapAmrProfilesData, setWorldMapAmrProfilesData] = useState([]);\r\n  const [worldMapPlasmidIncompatibilityTypeData, setWorldMapPlasmidIncompatibilityTypeData] = useState([]);\r\n\r\n  const [plotAmrClassChart, setPlotAmrClassChart] = useState(function () { })\r\n  const [plotDrugsAndGenotypesChart, setPlotDrugsAndGenotypesChart] = useState(function () { })\r\n  const [plotPopulationStructureChart, setPlotPopulationStructureChart] = useState(function () { })\r\n  const [plotDrugTrendsChart, setPlotDrugTrendsChart] = useState(function () { })\r\n\r\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] = useState(false)\r\n  const [captureControlChartRFWGInProgress, setCaptureControlChartRFWGInProgress] = useState(false)\r\n  const [captureControlChartDRTInProgress, setCaptureControlChartDRTInProgress] = useState(false)\r\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] = useState(false)\r\n  const [captureControlChartRFWAGInProgress, setCaptureControlChartRFWAGInProgress] = useState(false)\r\n  const [captureReportInProgress, setCaptureReportInProgress] = useState(false)\r\n  const [tooltipContent, setTooltipContent] = useState(null);\r\n\r\n  const [timeInitial, setTimeInitial] = React.useState(0);\r\n  const [timeFinal, setTimeFinal] = React.useState(0);\r\n  const [actualTimeInitial, setActualTimeInitial] = React.useState(0);\r\n  const [actualTimeFinal, setActualTimeFinal] = React.useState(0);\r\n  const [years, setYears] = useState([0, 0])\r\n\r\n  const [countriesForFilter, setCountriesForFilter] = React.useState(['All']);\r\n  const [regionsForFilter, setRegionsForFilter] = React.useState(['All']);\r\n  const [actualCountry, setActualCountry] = useState(\"All\");\r\n  const [actualRegion, setActualRegion] = useState(\"All\");\r\n\r\n  const [actualContinent, setActualContinent] = useState(\"All\")\r\n  const [continentOptions] = useState(['All', 'Africa', 'Asia', 'Central America', 'Europe', 'North America', 'Oceania', 'South America'])\r\n\r\n  const [populationStructureFilter, setPopulationStructureFilter] = React.useState(1);\r\n  const [populationStructureFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage per year', id: 2 }])\r\n  const [RFWGFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage within genotype', id: 2 }])\r\n  const [amrClassFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage per genotype', id: 2 }])\r\n  const [amrClassFilterforFilterOptions] = useState([{ value: \"Ampicillin\", id: 0 }, { value: \"Azithromycin\", id: 1 }, { value: \"Chloramphenicol\", id: 2 }, { value: \"Co-trimoxazole\", id: 3 }, { value: \"ESBL\", id: 4 }, { value: \"Fluoroquinolones (CipI/R)\", id: 5 }, { value: \"Sulphonamides\", id: 6 }, { value: \"Tetracyclines\", id: 7 }, { value: \"Trimethoprim\", id: 8 }])\r\n\r\n  const [RFWGFilter, setRFWGFilter] = React.useState(2);\r\n  const [amrClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [drtClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [trendClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", /*\"Fluoroquinolone (CipI)\",*/ \"Fluoroquinolones (CipR)\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [trendDropdownOptions] = useState([{ value: \"Ampicillin\", id: 0 }, { value: \"Azithromycin\", id: 1 }, { value: \"Chloramphenicol\", id: 2 }, /*{value: \"Fluoroquinolone (CipI)\", id: 3},*/ { value: \"Fluoroquinolones (CipR)\", id: 3 }, { value: \"Co-trimoxazole\", id: 4 }, { value: \"ESBL\", id: 5 }, { value: \"Fluoroquinolones (CipI/R)\", id: 6 }, { value: \"Susceptible\", id: 7 }, { value: \"Sulphonamides\", id: 8 }, { value: \"Tetracyclines\", id: 9 }, { value: \"Trimethoprim\", id: 10 }])\r\n  const [RFWGDropdownOptions, setRFWGDropdownOptions] = useState([])\r\n  const [amrClassFilter, setAmrClassFilter] = React.useState(amrClassesForFilter[5])\r\n  const [RDWAGDataviewFilter, setRDWAGDataviewFilter] = React.useState(2)\r\n\r\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([])\r\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState([])\r\n  const [chartMaxHeight, setChartMaxHeight] = useState(0)\r\n  const [populationStructureChartData, setPopulationStructureChartData] = useState([])\r\n  const [amrClassChartData, setAmrClassChartData] = useState([])\r\n\r\n  const [mapView, setMapView] = React.useState('CipI');\r\n  const [dataset, setDataset] = React.useState('All');\r\n  const [totalGenomes, setTotalGenomes] = useState([])\r\n  const [actualGenomes, setActualGenomes] = useState([])\r\n  const [totalGenotypes, setTotalGenotypes] = useState([])\r\n  const [actualGenotypes, setActualGenotypes] = useState([])\r\n  const [appLoading, setAppLoading] = useState(0)\r\n  const [lastUpdated, setLastUpdated] = useState(\"\")\r\n  const [countryPMID, setCountryPMID] = useState([])\r\n\r\n  const [allGenotypes, setAllGenotypes] = useState({})\r\n\r\n  const [trendValues, setTrendValues] = React.useState(trendDropdownOptions)\r\n  const [RFWGValues, setRFWGValues] = React.useState([])\r\n\r\n  const [desktop] = useState(767)\r\n  const [mobile] = useState(500)\r\n  const [middle] = useState(1300)\r\n\r\n  const [hoverColor] = useState(\"#D2F1F6\")\r\n\r\n  const [dimensions, setDimensions] = React.useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n\r\n  function debounce(fn, ms) {\r\n    let timer\r\n    return _ => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(_ => {\r\n        timer = null\r\n        fn.apply(this, arguments)\r\n      }, ms)\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (appLoading === 0) {\r\n      document.getElementsByClassName('App')[0].style.overflow = 'hidden'\r\n    } else if (appLoading === 2) {\r\n      document.getElementsByClassName('App')[0].style.overflow = 'visible'\r\n      document.getElementsByClassName('loading')[0].remove()\r\n    }\r\n  }, [appLoading])\r\n\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }, 1000)\r\n\r\n    window.addEventListener('resize', debouncedHandleResize)\r\n\r\n    return _ => {\r\n      window.removeEventListener('resize', debouncedHandleResize)\r\n    }\r\n  })\r\n\r\n  const [genotypes] = useState([\r\n    '0', '0.0.1', '0.0.2', '0.0.3', '0.1',\r\n    '0.1.1', '0.1.2', '0.1.3', '1.1', '1.1.1',\r\n    '1.1.2', '1.1.3', '1.1.4', '1.2', '1.2.1',\r\n    '2', '2.0.1', '2.0.2', '2.1',\r\n    '2.1.1', '2.1.2', '2.1.3', '2.1.4', '2.1.5', '2.1.6',\r\n    '2.1.7', '2.1.8', '2.1.9', '2.1.7.1', '2.1.7.2', '2.2',\r\n    '2.2.1', '2.2.2', '2.2.3', '2.2.4',\r\n    '2.3', '2.3.1', '2.3.2', '2.3.3', '2.3.4',\r\n    '2.3.5', '2.4', '2.4.1', '2.5',\r\n    '2.5.1', '2.5.2', '3', '3.0.1', '3.0.2',\r\n    '3.1', '3.1.1', '3.1.2', '3.2',\r\n    '3.2.1', '3.2.2', '3.3', '3.3.1',\r\n    '3.3.2', '3.3.2.Bd1', '3.3.2.Bd2', '3.4',\r\n    '3.5', '3.5.1', '3.5.2', '3.5.3',\r\n    '3.5.4', '4', '4.1', '4.1.1', '4.2', '4.2.1',\r\n    '4.2.2', '4.2.3', /*'4.3', '4.3.0', */'4.3.1', '4.3.1.1',\r\n    '4.3.1.1.P1', '4.3.1.1.EA1', '4.3.1.2', '4.3.1.2.EA2',\r\n    '4.3.1.2.EA3', '4.3.1.3', '4.3.1.3.Bdq'].sort((a, b) => a.localeCompare(b)));\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}filters/getYearLimits`)\r\n      .then((res) => {\r\n        let limits = res.data\r\n        setTimeInitial(limits.min)\r\n        setTimeFinal(limits.max)\r\n        setActualTimeInitial(limits.min)\r\n        setActualTimeFinal(limits.max)\r\n        // setAllCountries(limits.countries)\r\n        setAllGenotypes(limits.allGenotypes)\r\n        setTotalGenotypes(limits.totalGenotypes)\r\n        setAppLoading((value) => value + 1)\r\n        setYears(limits.years)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}mongo/lastUpdated`)\r\n      .then((res) => {\r\n        setLastUpdated(new Date(res.data))\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const timeOutId = setTimeout(() => {\r\n      axios.get(`${API_ENDPOINT}filters/all/${actualTimeInitial}/${actualTimeFinal}/${dataset}/all`)\r\n        .then((res) => {\r\n          var response = res.data\r\n\r\n          response['Dem. Rep. Congo'] = response['Democratic Republic of Congo']\r\n          delete response['Democratic Republic of Congo']\r\n          response['Central African Rep.'] = response['Central African Republic']\r\n          delete response['Central African Republic']\r\n          response[\"Côte d'Ivoire\"] = response['Ivory Coast']\r\n          delete response['Ivory Coast']\r\n          response[\"Timor-Leste\"] = response['East Timor']\r\n          delete response['East Timor']\r\n\r\n          setWorldMapComplementaryData(response)\r\n        })\r\n    }, 500)\r\n    return () => clearTimeout(timeOutId);\r\n  }, [actualTimeInitial, actualTimeFinal, dataset])\r\n\r\n  useEffect(() => {\r\n    const parseDataForGenotypeChart = (data) => {\r\n      let finalRegions = [];\r\n      var finalPopulationStructureChartData = [];\r\n\r\n      var genomes = data;\r\n      var genotypes = [];\r\n\r\n      data.forEach((entry) => {\r\n        if (!finalRegions.some(e => e === entry['REGION_IN_COUNTRY']) && entry['REGION_IN_COUNTRY'] !== \"-\" && entry['REGION_IN_COUNTRY'] !== \"\")\r\n          finalRegions.push(entry['REGION_IN_COUNTRY'])\r\n\r\n        if (!genotypes.some(g => g === entry.GENOTYPE)) {\r\n          genotypes.push(entry.GENOTYPE)\r\n        }\r\n\r\n        /* POPULATION STRUCTURE CHART GENERATION */\r\n        if (!finalPopulationStructureChartData.some(e => e.name === entry.YEAR)) {\r\n          finalPopulationStructureChartData.push({\r\n            name: entry.YEAR,\r\n            [entry.GENOTYPE]: 1\r\n          })\r\n        } else {\r\n          let year = finalPopulationStructureChartData.find(e => e.name === entry.YEAR);\r\n          let yearIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry.YEAR);\r\n\r\n          if (year[entry.GENOTYPE] === undefined) {\r\n            year[entry.GENOTYPE] = 1\r\n          } else {\r\n            year[entry.GENOTYPE] = year[entry.GENOTYPE] + 1\r\n          }\r\n          finalPopulationStructureChartData[yearIndex] = year;\r\n        }\r\n      })\r\n\r\n      finalRegions.sort((a, b) => a.localeCompare(b));\r\n      finalRegions.unshift(\"All\");\r\n      setRegionsForFilter(finalRegions)\r\n\r\n      if (totalGenomes.length === 0)\r\n        setTotalGenomes(genomes)\r\n\r\n      setActualGenomes(genomes)\r\n      setActualGenotypes(genotypes)\r\n\r\n      finalPopulationStructureChartData.forEach((data) => {\r\n        let sum = 0;\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] !== \"name\")\r\n            sum += entry[1];\r\n        })\r\n        data.total = sum;\r\n      })\r\n\r\n      if (!arraysEqual(finalPopulationStructureChartData, populationStructureChartData)) {\r\n        setPopulationStructureChartData(finalPopulationStructureChartData)\r\n      }\r\n\r\n      let populationStructureChartSums = []\r\n      finalPopulationStructureChartData.forEach((year) => {\r\n        let sum = 0\r\n        let yearArray = Object.entries(year)\r\n        yearArray.forEach((_year) => {\r\n          if (_year[0] !== \"name\" && _year[0] !== \"total\")\r\n            sum += _year[1]\r\n        })\r\n        populationStructureChartSums.push({\r\n          year: year.name,\r\n          sum\r\n        })\r\n      })\r\n\r\n      if (populationStructureChartSums.length > 0) {\r\n        let highestSum = populationStructureChartSums.sort((a, b) => b.sum - a.sum)[0].sum;\r\n\r\n        if (highestSum > chartMaxHeight)\r\n          setChartMaxHeight(Math.ceil(highestSum / 100) * 100)\r\n      }\r\n    }\r\n\r\n    const parseDataForCountryMap = (data) => {\r\n      let finalCountries = [];\r\n\r\n      let samplesData = [], genotypesData = [], h58Data = [], mdrData = [], stadData = [], xdrData = [], drugsData = [], amrData = [], incTypesData = [], dcsData = [], azithData = [], cipIData = [], cipRData = [];\r\n\r\n      const countData = (array, elementToCount, parentName, childName) => {\r\n        let temp = []\r\n        array.forEach(entry => {\r\n          if (!temp.some(e => e.name === entry['COUNTRY_ONLY'])) {\r\n            temp.push({\r\n              name: entry['COUNTRY_ONLY'],\r\n              displayName: entry['COUNTRY_ONLY'],\r\n              total: 1,\r\n              [parentName]: [{\r\n                [childName]: entry[elementToCount],\r\n                count: 1\r\n              }]\r\n            })\r\n          } else {\r\n            let country = temp.find(e => e.name === entry['COUNTRY_ONLY']);\r\n            let countryIndex = temp.findIndex(e => e.name === entry['COUNTRY_ONLY']);\r\n\r\n            if (!country[parentName].some(e => e[childName] === entry[elementToCount])) {\r\n              country[parentName].push({\r\n                [childName]: entry[elementToCount],\r\n                count: 1\r\n              })\r\n            } else {\r\n              let parent = country[parentName].find(e => e[childName] === entry[elementToCount]);\r\n              let index = country[parentName].findIndex(e => e[childName] === entry[elementToCount]);\r\n              parent.count = parent.count + 1\r\n              country[parentName][index] = parent\r\n            }\r\n            country.total = country.total + 1\r\n\r\n            temp[countryIndex] = country;\r\n          }\r\n        })\r\n\r\n        let congoCountryIndex = temp.findIndex(e => e.name === 'Democratic Republic of Congo');\r\n        if (congoCountryIndex !== -1)\r\n          temp[congoCountryIndex].displayName = 'Dem. Rep. Congo'\r\n\r\n        let centralAfricanRepublicCountryIndex = temp.findIndex(e => e.name === 'Central African Republic');\r\n        if (centralAfricanRepublicCountryIndex !== -1)\r\n          temp[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\r\n\r\n        let ivoryCoastCountryIndex = temp.findIndex(e => e.name === \"Ivory Coast\");\r\n        if (ivoryCoastCountryIndex !== -1)\r\n          temp[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\r\n\r\n        let timorLesteCountryIndex = temp.findIndex(e => e.name === \"East Timor\");\r\n        if (timorLesteCountryIndex !== -1)\r\n          temp[timorLesteCountryIndex].displayName = \"Timor-Leste\"\r\n\r\n        temp.forEach((country) => {\r\n          country[parentName].sort((a, b) => b.count - a.count);\r\n        })\r\n        temp.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n        return temp\r\n      }\r\n\r\n      data.forEach((entry) => {\r\n        if (!finalCountries.some(e => e === entry['COUNTRY_ONLY']) && entry['COUNTRY_ONLY'] !== \"-\" && entry['COUNTRY_ONLY'] !== \"\")\r\n          finalCountries.push(entry['COUNTRY_ONLY'])\r\n\r\n        if (!samplesData.some(e => e.name === entry['COUNTRY_ONLY'])) {\r\n          samplesData.push({\r\n            name: entry['COUNTRY_ONLY'],\r\n            displayName: entry['COUNTRY_ONLY'],\r\n            count: 1\r\n          })\r\n        } else {\r\n          let country = samplesData.find(e => e.name === entry['COUNTRY_ONLY']);\r\n          let countryIndex = samplesData.findIndex(e => e.name === entry['COUNTRY_ONLY']);\r\n          country.count = country.count + 1\r\n          samplesData[countryIndex] = country;\r\n        }\r\n      })\r\n\r\n      if (!arraysEqual(samplesData, worldMapSamplesData)) {\r\n        let congoCountryIndex = samplesData.findIndex(e => e.name === 'Democratic Republic of Congo');\r\n        if (congoCountryIndex !== -1)\r\n          samplesData[congoCountryIndex].displayName = 'Dem. Rep. Congo'\r\n\r\n        let centralAfricanRepublicCountryIndex = samplesData.findIndex(e => e.name === 'Central African Republic');\r\n        if (centralAfricanRepublicCountryIndex !== -1)\r\n          samplesData[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\r\n\r\n        let ivoryCoastCountryIndex = samplesData.findIndex(e => e.name === \"Ivory Coast\");\r\n        if (ivoryCoastCountryIndex !== -1)\r\n          samplesData[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\r\n\r\n        let timorLesteCountryIndex = samplesData.findIndex(e => e.name === \"East Timor\");\r\n        if (timorLesteCountryIndex !== -1)\r\n          samplesData[timorLesteCountryIndex].displayName = \"Timor-Leste\"\r\n\r\n        setWorldMapSamplesData(samplesData)\r\n      }\r\n\r\n      finalCountries.sort((a, b) => a.localeCompare(b));\r\n      finalCountries.unshift(\"All\");\r\n      setCountriesForFilter(finalCountries)\r\n\r\n      if (!finalCountries.includes(actualCountry))\r\n        setActualCountry(\"All\")\r\n\r\n      genotypesData = countData(data, \"GENOTYPE\", \"genotypes\", \"lineage\")\r\n      if (!arraysEqual(genotypesData, worldMapGenotypesData))\r\n        setWorldMapGenotypesData(genotypesData)\r\n\r\n      h58Data = countData(data, \"GENOTYPE_SIMPLE\", \"genotypes\", \"type\")\r\n      h58Data.forEach(country => {\r\n        country.genotypes.forEach((g, index) => {\r\n          let percentage = ((g.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage) {\r\n            percentage = percentage.toFixed(2)\r\n          }\r\n          g.percentage = percentage\r\n        })\r\n      })\r\n      if (!arraysEqual(h58Data, worldMapH58Data))\r\n        setWorldMapH58Data(h58Data)\r\n\r\n      stadData = countData(data, \"STAD\", \"STADs\", \"type\")\r\n      stadData.forEach(country => {\r\n        country.STADs.forEach((stad, index) => {\r\n          if (stad.type === \"No AMR detected\") {\r\n            let percentage = ((stad.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = stad.count;\r\n          }\r\n        })\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n      if (!arraysEqual(stadData, worldMapSTADData))\r\n        setWorldMapSTADData(stadData)\r\n\r\n      mdrData = countData(data, \"MDR\", \"MDRs\", \"type\")\r\n      mdrData.forEach(country => {\r\n        country.MDRs.forEach((mdr, index) => {\r\n          if (mdr.type === \"MDR\") {\r\n            let percentage = ((mdr.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = mdr.count;\r\n          }\r\n        })\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n      if (!arraysEqual(mdrData, worldMapMDRData))\r\n        setWorldMapMDRData(mdrData)\r\n\r\n      xdrData = countData(data, \"XDR\", \"XDRs\", \"type\")\r\n      xdrData.forEach(country => {\r\n        country.XDRs.forEach((xdr, index) => {\r\n          if (xdr.type === \"XDR\") {\r\n            let percentage = ((xdr.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = xdr.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(xdrData, worldMapXDRData))\r\n        setWorldMapXDRData(xdrData)\r\n\r\n      dcsData = countData(data, \"DCS\", \"DCSs\", \"type\")\r\n      dcsData.forEach(country => {\r\n        country.DCSs.forEach((dcs, index) => {\r\n          if (dcs.type === \"DCS\") {\r\n            let percentage = ((dcs.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = dcs.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(dcsData, worldMapDCSData))\r\n        setWorldMapDCSData(dcsData)\r\n\r\n      azithData = countData(data, \"Azith\", \"AZs\", \"type\")\r\n      azithData.forEach(country => {\r\n        country.AZs.forEach((az, index) => {\r\n          if (az.type === \"AzithR\") {\r\n            let percentage = ((az.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = az.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(azithData, worldMapAZITHData))\r\n        setWorldMapAZITHData(azithData)\r\n\r\n      cipRData = countData(data, \"CipR\", \"CipRs\", \"type\")\r\n      cipRData.forEach(country => {\r\n        country.CipRs.forEach((cipRs, index) => {\r\n          if (cipRs.type === \"CipR\") {\r\n            let percentage = ((cipRs.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = cipRs.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(cipRData, worldMapCIPRData))\r\n        setWorldMapCIPRData(cipRData)\r\n      \r\n      cipIData = countData(data, \"CipI\", \"CipIs\", \"type\")\r\n      cipIData.forEach(country => {\r\n        let aux = country.CipIs.filter(x => x.type === 'CipI')\r\n        let aux2 = country.CipIs.filter(x => x.type === 'CipR')\r\n        if (aux.length) {\r\n          aux[0].percentage = (aux[0].count / country.total) * 100\r\n          aux = aux[0].count\r\n        } else {\r\n          aux = 0\r\n        }\r\n        if (aux2.length) {\r\n          aux2[0].percentage = (aux2[0].count / country.total) * 100\r\n          aux2 = aux2[0].count\r\n        } else {\r\n          aux2 = 0\r\n        }\r\n\r\n        let percentage = ((aux + aux2) / country.total) * 100\r\n        if (Math.round(percentage) !== percentage)\r\n          percentage = percentage.toFixed(2)\r\n        percentage = parseFloat(percentage);\r\n        country.percentage = percentage;\r\n        country.count = aux + aux2;\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n      if (!arraysEqual(cipIData, worldMapCIPIData))\r\n        setWorldMapCIPIData(cipIData)\r\n\r\n      let dataForCountingDrugs = []\r\n      data.forEach(entry => {\r\n        entry.DRUGS.forEach(drug => {\r\n          dataForCountingDrugs.push({\r\n            ...entry,\r\n            DRUG: drug,\r\n          })\r\n        })\r\n      })\r\n      drugsData = countData(dataForCountingDrugs, \"DRUG\", \"drugs\", \"name\");\r\n      if (!arraysEqual(drugsData, worldMapDrugsData))\r\n        setWorldMapDrugsData(drugsData)\r\n\r\n      amrData = countData(data, \"AMR\", \"amrProfiles\", \"name\")\r\n      if (!arraysEqual(amrData, worldMapAmrProfilesData))\r\n        setWorldMapAmrProfilesData(amrData)\r\n\r\n      incTypesData = countData(data, \"IncTypes\", \"incTypes\", \"type\")\r\n      incTypesData.forEach(country => {\r\n        country.incTypes = country.incTypes.filter(g => g.type !== \"\")\r\n      })\r\n      if (!arraysEqual(incTypesData, worldMapPlasmidIncompatibilityTypeData))\r\n        setWorldMapPlasmidIncompatibilityTypeData(incTypesData)\r\n    }\r\n\r\n    const parseDataForAmrClassChart = (data) => {\r\n      let finalChartData = []\r\n      let maxSum = 0\r\n      let totalSum = {}\r\n      data.forEach((entry) => {\r\n        if (!finalChartData.some(e => e.genotype === entry.GENOTYPE)) {\r\n          finalChartData.push({\r\n            genotype: entry.GENOTYPE,\r\n            [entry.GENE]: 1\r\n          })\r\n        } else {\r\n          let genotype = finalChartData.find(e => e.genotype === entry.GENOTYPE);\r\n          let genotypeIndex = finalChartData.findIndex(e => e.genotype === entry.GENOTYPE);\r\n\r\n          if (genotype[entry.GENE] === undefined) {\r\n            genotype[entry.GENE] = 1\r\n          } else {\r\n            genotype[entry.GENE] = genotype[entry.GENE] + 1\r\n          }\r\n          finalChartData[genotypeIndex] = genotype;\r\n        }\r\n\r\n        if (entry.GENOTYPE !== \"\") {\r\n          if (!(entry.GENE in totalSum)) {\r\n            totalSum[entry.GENE] = 1\r\n          } else {\r\n            totalSum[entry.GENE] = totalSum[entry.GENE] + 1\r\n          }\r\n        }\r\n      })\r\n      delete totalSum[\"\"]\r\n\r\n      finalChartData.sort((a, b) => a.genotype.localeCompare(b.genotype));\r\n\r\n      let genotypes = []\r\n      finalChartData.forEach(element => {\r\n        let keys = Object.keys(element).slice(1)\r\n        let filteredData = keys.filter((key) => { return !(key.includes('No')) && !(key.includes('0_')) })\r\n        filteredData.push('None')\r\n        filteredData.push('None (CipS)')\r\n        if (filteredData.length === 0) {\r\n          genotypes.push(element.genotype)\r\n        }\r\n      });\r\n\r\n      for (const genotype in genotypes) {\r\n        finalChartData = finalChartData.filter((obj) => {\r\n          return obj.genotype !== genotypes[genotype]\r\n        })\r\n      }\r\n\r\n      finalChartData.forEach((data) => {\r\n        let sum = 0;\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] !== \"genotype\" && entry[0] !== \"undefined\") {\r\n            let errorMargin = Math.ceil(entry[1] * 0.2) // 20%\r\n            let lowerValue = errorMargin > entry[1] ? entry[1] : errorMargin;\r\n\r\n            if (entry[1] === 1)\r\n              lowerValue = 1\r\n\r\n            if (entry[1] === 0)\r\n              lowerValue = 0\r\n\r\n            data[`error-${entry[0]}`] = [lowerValue, errorMargin]\r\n\r\n            if (!(entry[0].includes('No')) && !(entry[0].includes('0_'))) {\r\n              sum += entry[1];\r\n              if (entry[1] > maxSum) {\r\n                maxSum = entry[1]\r\n              }\r\n            }\r\n\r\n          }\r\n        })\r\n        data.total = sum;\r\n      })\r\n\r\n      finalChartData.forEach((data) => {\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] === \"genotype\") {\r\n            let noneCount = 0\r\n            if (amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n              noneCount = 'None (CipS)' in data ? data['None (CipS)'] : 0\r\n            } else {\r\n              noneCount = 'None' in data ? data['None'] : 0\r\n            }\r\n            data.total2 = data.total + noneCount\r\n          }\r\n        })\r\n      })\r\n\r\n      finalChartData = finalChartData.filter(g => g.genotype !== undefined && g.genotype !== \"0\")\r\n      let top10 = []\r\n      finalChartData.forEach(element => {\r\n        if (top10.length < 10) {\r\n          top10.push(element)\r\n        } else {\r\n          top10.sort(function (a, b) {\r\n            if (a.total === b.total && a.genotype > b.genotype)\r\n              return -1\r\n            return a.total > b.total ? -1 : 1\r\n          })\r\n          if (element.total === top10[9].total) {\r\n            if (element.genotype > top10[9].genotype) {\r\n              top10[9] = element\r\n            }\r\n          }\r\n          if (element.total > top10[9].total) {\r\n            top10[9] = element\r\n          }\r\n        }\r\n      })\r\n\r\n      top10.sort(function (a, b) {\r\n        if (a.total === b.total && a.genotype > b.genotype)\r\n          return -1\r\n        return a.total > b.total ? -1 : 1\r\n      })\r\n\r\n      top10.push({ maxSum: top10.length === 0 ? 0 : Math.ceil(top10[0].total2 / 50) * 50, totalSum: totalSum })\r\n\r\n      if (!arraysEqual(amrClassChartData, top10)) {\r\n        setAmrClassChartData(top10)\r\n      }\r\n    }\r\n\r\n    const parseDataForDrugTrendsChart = (data) => {\r\n      let finalDrugTrendsChartData = []\r\n      let finalDrugsAndGenotypesChartData = []\r\n      let totalSum = {}\r\n      let totalCountryCount = data[data.length - 1][0]\r\n      let allDrugs = data[data.length - 2][0]\r\n      setCountryPMID(data[data.length - 2][1])\r\n      data = data.slice(0, data.length - 2)\r\n\r\n      data.forEach((entry) => {\r\n        if (!finalDrugTrendsChartData.some(e => e.name === entry.YEAR)) {\r\n          finalDrugTrendsChartData.push({\r\n            name: entry.YEAR,\r\n            [entry.DRUG]: 1\r\n          })\r\n        } else {\r\n          let year = finalDrugTrendsChartData.find(e => e.name === entry.YEAR);\r\n          let yearIndex = finalDrugTrendsChartData.findIndex(e => e.name === entry.YEAR);\r\n\r\n          if (year[entry.DRUG] === undefined) {\r\n            year[entry.DRUG] = 1\r\n          } else {\r\n            year[entry.DRUG] = year[entry.DRUG] + 1\r\n          }\r\n          finalDrugTrendsChartData[yearIndex] = year;\r\n        }\r\n\r\n        if (!finalDrugsAndGenotypesChartData.some(e => e.name === entry.GENOTYPE)) {\r\n          finalDrugsAndGenotypesChartData.push({\r\n            name: entry.GENOTYPE,\r\n            [entry.DRUG]: 1\r\n          })\r\n        } else {\r\n          let genotype = finalDrugsAndGenotypesChartData.find(e => e.name === entry.GENOTYPE);\r\n          let genotypeIndex = finalDrugsAndGenotypesChartData.findIndex(e => e.name === entry.GENOTYPE);\r\n\r\n          if (genotype[entry.DRUG] === undefined) {\r\n            genotype[entry.DRUG] = 1\r\n          } else {\r\n            genotype[entry.DRUG] = genotype[entry.DRUG] + 1\r\n          }\r\n          finalDrugsAndGenotypesChartData[genotypeIndex] = genotype;\r\n        }\r\n\r\n        if (!(entry.GENOTYPE in totalSum)) {\r\n          totalSum[entry.GENOTYPE] = 1\r\n        } else {\r\n          totalSum[entry.GENOTYPE] = totalSum[entry.GENOTYPE] + 1\r\n        }\r\n      })\r\n      finalDrugTrendsChartData.forEach((data) => {\r\n        data.total = allDrugs[data[\"name\"]];\r\n        let maxValue = 0;\r\n        const drugsPercentage = {}\r\n        for (const key in data) {\r\n          if (key !== 'name' && key !== 'total') {\r\n            if (data[key] > maxValue) {\r\n              maxValue = data[key]\r\n            }\r\n            const aux = (data[key] * 100) / data.total\r\n            drugsPercentage[key] = data[key]\r\n            data[key] = aux\r\n          }\r\n        }\r\n        data.higherPercentage = Math.round((maxValue * 100) / data.total)\r\n        data.drugsPercentage = drugsPercentage\r\n      })\r\n\r\n      finalDrugsAndGenotypesChartData.forEach((data) => {\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] === \"name\") {\r\n            data.total = totalCountryCount[entry[1]].total\r\n            data.totalS = totalCountryCount[entry[1]].totalS\r\n          }\r\n        })\r\n      })\r\n\r\n      finalDrugTrendsChartData = finalDrugTrendsChartData.filter(item => item.total === 10 || item.total > 10)\r\n\r\n      finalDrugTrendsChartData.sort((a, b) => a.name.localeCompare(b.name))\r\n      finalDrugTrendsChartData.push({ totalSum: allDrugs })\r\n\r\n      finalDrugsAndGenotypesChartData.sort((a, b) => b.total - a.total)\r\n      finalDrugsAndGenotypesChartData.push({ totalSum: totalSum })\r\n\r\n      if (!arraysEqual(finalDrugTrendsChartData, drugTrendsChartData)) {\r\n        setDrugTrendsChartData(finalDrugTrendsChartData)\r\n\r\n      }\r\n      if (!arraysEqual(finalDrugsAndGenotypesChartData, drugsAndGenotypesChartData)) {\r\n        setDrugsAndGenotypesChartData(finalDrugsAndGenotypesChartData)\r\n      }\r\n    }\r\n\r\n    const timeOutId = setTimeout(async () => {\r\n      let filter;\r\n\r\n      filter = 2\r\n\r\n      let genotypeChartResponse = await axios.get(`${API_ENDPOINT}filters/${filter}/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimeInitial}/${actualTimeFinal}/${dataset}/${actualRegion === \"All\" ? \"all\" : actualRegion}`)\r\n      parseDataForGenotypeChart(genotypeChartResponse.data)\r\n\r\n      if (actualCountry === \"All\") {\r\n        parseDataForCountryMap(genotypeChartResponse.data)\r\n      } else {\r\n        let response = await axios.get(`${API_ENDPOINT}filters/${filter}/all/${actualTimeInitial}/${actualTimeFinal}/${dataset}/all`)\r\n        parseDataForCountryMap(response.data)\r\n      }\r\n\r\n      let drugTrendsChartResponse = await axios.get(`${API_ENDPOINT}filters/drugTrendsChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimeInitial}/${actualTimeFinal}/${dataset}/${actualRegion === \"All\" ? \"all\" : actualRegion}`)\r\n      parseDataForDrugTrendsChart(drugTrendsChartResponse.data)\r\n\r\n      let classChartResponse\r\n      if (amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n        classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimeInitial}/${actualTimeFinal}/${\"Fluoroquinolones (CipI-R)\"}/${dataset}/${actualRegion === \"All\" ? \"all\" : actualRegion}`)\r\n      } else {\r\n        classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimeInitial}/${actualTimeFinal}/${amrClassFilter}/${dataset}/${actualRegion === \"All\" ? \"all\" : actualRegion}`)\r\n      }\r\n      parseDataForAmrClassChart(classChartResponse.data)\r\n\r\n      setAppLoading((value) => { if (value < 2) return value + 1 })\r\n\r\n    }, 500);\r\n    return () => clearTimeout(timeOutId);\r\n  }, [populationStructureFilter, actualTimeInitial, actualTimeFinal, actualCountry, dataset, amrClassFilter, allGenotypes, actualRegion]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function arraysEqual(a1, a2) {\r\n    return JSON.stringify(a1) === JSON.stringify(a2);\r\n  }\r\n\r\n  const mapSamplesColorScale = (domain) => {\r\n    if (domain >= 1 && domain <= 9) {\r\n      return '#4575b4'\r\n    } else if (domain >= 10 && domain <= 19) {\r\n      return '#91bfdb'\r\n    } else if (domain >= 20 && domain <= 99) {\r\n      return '#addd8e'\r\n    } else if (domain >= 100 && domain <= 299) {\r\n      return '#fee090'\r\n    } else if (domain >= 300) {\r\n      return '#fc8d59'\r\n    }\r\n  }\r\n\r\n  const [mapRedColorScale] = useState(() => scaleLinear()\r\n    .domain([0, 50, 100])\r\n    .range([\"#ffebee\", \"#f44336\", \"#b71c1c\"]));\r\n\r\n  const tooltip = React.useCallback((positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\r\n    return (\r\n      <Tooltip\r\n        position={{ y: dimensions.width < mobile ? positionY[0] : dimensions.width < desktop ? positionY[1] : positionY[2], x: dimensions.width < mobile ? -10 : 0 }}\r\n        wrapperStyle={wrapperS}\r\n        cursor={{ fill: hoverColor }}\r\n        content={({ active, payload, label }) => {\r\n          if (payload !== null) {\r\n            if (payload[0]?.payload.name === \"\") {\r\n              return null;\r\n            }\r\n\r\n            if (sort) {\r\n              payload.sort((a, b) => b.value - a.value)\r\n              payload = payload.reverse()\r\n            }\r\n            if (active) {\r\n              return (\r\n                <div className=\"my-tooltip\">\r\n                  <div className=\"my-tooltip-title\">\r\n                    <span className=\"my-tooltip-title-label\">{label}</span>\r\n                    {chart === 0 && (<span className=\"my-tooltip-title-total\">{\"N = \" + (payload[0].payload.totalS)}</span>)}\r\n                    {chart === 4 && (<span className=\"my-tooltip-title-total\">{\"N = \" + (payload[0].payload.quantities.totalS)}</span>)}\r\n                    {chart === 1 && (<span className=\"my-tooltip-title-total\">{\"N = \" + payload[0].payload.total}</span>)}\r\n                  </div>\r\n                  <div className=\"my-tooltip-content\" style={{ width: width1 }}>\r\n                    {payload.reverse().map((item, index) => {\r\n                      let percentage = ((item.value / item.payload.total) * 100)\r\n                      if (chart === 1) {\r\n                        percentage = ((item.payload.drugsPercentage[item.dataKey] / item.payload.total) * 100)\r\n                      }\r\n                      if (chart === 0) {\r\n                        percentage = ((item.value / item.payload.totalS) * 100)\r\n                      }\r\n                      percentage = Math.round(percentage * 100) / 100\r\n                      if ((populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4)) {\r\n                        percentage = Math.round(item.value * 100) / 100\r\n                      }\r\n                      if (chart === 1 && item.payload.drugsPercentage[item.dataKey] === 0) {\r\n                        return null\r\n                      }\r\n                      return (\r\n                        <div key={index + item} className=\"my-tooltip-content-individual\" style={{ width: width2 }}>\r\n                          <div className=\"my-tooltip-content-square\" style={{ backgroundColor: stroke ? item.stroke : item.fill }} />\r\n                          <div className=\"my-tooltip-content-info\">\r\n                            <span className=\"my-tooltip-content-name\" style={{ width: dimensions.width < mobile ? '80%' : '100%' }}>{item.name}</span>\r\n                            <span className=\"my-tooltip-content-count\">N = {(populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4) ? item.payload.quantities[item.name] : chart === 1 ? item.payload.drugsPercentage[item.dataKey] : item.value}</span>\r\n                            <span className=\"my-tooltip-content-percent\">{percentage}%</span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n          return null;\r\n        }}\r\n      />\r\n    )\r\n  }, [desktop, dimensions, mobile, populationStructureFilter, RFWGFilter, hoverColor])\r\n\r\n  useEffect(() => {\r\n    const plotPopulationStructureChart = () => {\r\n\r\n      if (populationStructureFilter === 1) { /* QUANTITY */\r\n        let maxH = 0\r\n        for (let index = 0; index < populationStructureChartData.length; index++) {\r\n          if (populationStructureChartData[index].total > maxH) {\r\n            maxH = populationStructureChartData[index].total\r\n          }\r\n        }\r\n        maxH = Math.ceil(maxH / 50) * 50\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={populationStructureChartData}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n              maxBarSize={62}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"PSC-label\" offset={6}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {populationStructureChartData.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"PSC_2\"} className=\"PSC-legend-info\">\r\n                              <div className=\"PSC-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"PSC-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip([290, 290, 260], dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false)}\r\n              {genotypes.map((item, i) => <Bar key={i+\"PSC_Q\"} dataKey={item} stackId={0} fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else { /* PERCENTAGE */\r\n        let maxH = 100\r\n\r\n        let teste = JSON.parse(JSON.stringify(populationStructureChartData))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (keys[key] !== 'name' && keys[key] !== 'total' && keys[key] !== 'quantities') {\r\n              let aux = keys[key]\r\n              element.quantities[aux] = element[aux]\r\n              element[aux] = (element[aux] * 100) / element.total\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={teste}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n              maxBarSize={62}\r\n              barCategoryGap={'10%'}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"PSC-label\" offset={6}>\r\n                  % Genomes per year\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"PSC\"} className=\"PSC-legend-info\">\r\n                              <div className=\"PSC-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"PSC-legend-info-name\" >{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip([290, 290, 260], dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false, 3)}\r\n              {genotypes.map((item, i) => <Bar key={i+\"PSC_P\"} dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotPopulationStructureChart(plotPopulationStructureChart)\r\n  }, [dimensions, genotypes, populationStructureChartData, populationStructureFilter, tooltip])\r\n\r\n  useEffect(() => {\r\n    const amrClassChartTooltip = () => {\r\n      return (\r\n        <Tooltip\r\n          position={{ x: 0, y: 230 }}\r\n          wrapperStyle={{ zIndex: 100, top: 50 }}\r\n          allowEscapeViewBox={{ x: true, y: true }}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (active) {\r\n                return (\r\n                  <div className=\"my-tooltip\">\r\n                    <span className=\"my-tooltip-title-label\">{label}</span>\r\n                    <div className=\"my-tooltip-content amr-tooltip-content\">\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage\r\n                        if (RDWAGDataviewFilter === 1) {\r\n                          percentage = ((item.value / item.payload.total2) * 100)\r\n                        } else {\r\n                          percentage = item.value\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100\r\n                        return (\r\n                          <div key={index+\"tooltip\"} className=\"amr-tooltip-content-individual\">\r\n                            <div className=\"my-tooltip-content-square\" style={{ backgroundColor: item.fill }} />\r\n                            <div className=\"amr-tooltip-content-info\">\r\n                              <span className=\"amr-tooltip-content-name\">{item.name}</span>\r\n                              <span className=\"my-tooltip-content-count\">N = {RDWAGDataviewFilter === 2 ? item.payload.percentage[item.name] : item.value}</span>\r\n                              <span className=\"my-tooltip-content-percent\">{percentage}%</span>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }}\r\n        />\r\n      )\r\n    }\r\n\r\n    const armClassFilterComponent = (info) => {\r\n      let maxSum = 0\r\n      if (amrClassChartData[amrClassChartData.length - 1] !== undefined) {\r\n        maxSum = amrClassChartData[amrClassChartData.length - 1].maxSum\r\n      }\r\n\r\n      const dataAMR = amrClassChartData.slice(0, amrClassChartData.length - 1)\r\n\r\n      if (RDWAGDataviewFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={dataAMR}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < 1700 ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxSum]} type={\"number\"} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"RDWAG-label\" offset={6}>\r\n                  Number of occurrences\r\n                </Label>\r\n              </YAxis>\r\n              {dataAMR.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div className=\"RDWAG-legend-div\" style={{ justifyContent: amrClassFilter === \"Ampicillin\" || amrClassFilter === \"Fluoroquinolones (CipI/R)\" ? \"\" : \"space-between\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index+\"RDWAG-legend\"} className=\"RDWAG-legend-info\">\r\n                              <div className=\"RDWAG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RDWAG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar key={i+\"RDWAG_Q\"} dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else if (RDWAGDataviewFilter === 2) {\r\n        let temp = JSON.parse(JSON.stringify(dataAMR))\r\n\r\n        temp.forEach(element => {\r\n          element.percentage = {}\r\n          for (const key in element) {\r\n            if (![\"genotype\", \"total\", \"total2\", \"percentage\"].includes(key) && !key.includes(\"error\")) {\r\n              const aux = (element[key] * 100) / element.total2\r\n              element.percentage[key] = element[key]\r\n              element[key] = aux\r\n            }\r\n          }\r\n        })\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={temp}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < 1700 ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} type={\"number\"} allowDecimals={false} width={70} allowDataOverflow={true}>\r\n                <Label angle={-90} position='insideLeft' className=\"RDWAG-label\" offset={6}>\r\n                  % Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {temp.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div className=\"RDWAG-legend-div\" style={{ justifyContent: amrClassFilter === \"Ampicillin\" || amrClassFilter === \"Fluoroquinolones (CipI/R)\" ? \"\" : \"space-between\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RDWAG-legend-2\"} className=\"RDWAG-legend-info\">\r\n                              <div className=\"RDWAG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RDWAG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar key={i+\"RDWAG_P\"} dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n\r\n    const plotAmrClassChart = () => {\r\n      switch (amrClassFilter) {\r\n        case 'Azithromycin':\r\n          return (armClassFilterComponent({\r\n            left: -5, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['ereA', \"#9e9ac8\", \"error-ereA\"],\r\n              ['acrB_R717Q', \"#addd8e\", \"error-acrB_R717Q\"],\r\n              ['acrB_R717L', \"#FBCFE5\", \"error-acrB_R717L\"],\r\n              ['ereA + acrB_R717Q', \"#FFEC78\", \"error-ereA-acrB_R717Q\"],\r\n              ['ereA + acrB_R717L', \"#66c2a4\", \"error-ereA-acrB_R717L\"],\r\n              ['acrB_R717Q + acrB_R717L', \"#fd8d3c\", \"error-acrB_R717Q-acrB_R717L\"],\r\n              ['ereA + acrB_R717Q + acrB_R717L', \"#6baed6\", \"error-ereA-acrB_R717Q-acrB_R717L\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n          }))\r\n        case 'Fluoroquinolones (CipI/R)':\r\n          return (armClassFilterComponent({\r\n            left: 10, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['3_QRDR + qnrS (CipR)', \"black\", \"error-3_QRDR + qnrS\"],\r\n              ['3_QRDR + qnrB (CipR)', \"#660000\", \"error-3_QRDR + qnrB\"],\r\n              ['3_QRDR (CipR)', \"#cc0000\", \"error-3_QRDR\"],\r\n              ['2_QRDR + qnrS (CipR)', \"#ff6666\", \"error-2_QRDR + qnrS\"],\r\n              ['2_QRDR + qnrB (CipR)', \"#ffcccc\", \"error-2_QRDR + qnrB\"],\r\n              ['2_QRDR (CipI)', \"#ff6600\", \"error-2_QRDR\"],\r\n              ['1_QRDR + qnrS (CipR)', \"#660066\", \"error-1_QRDR + qnrS\"],\r\n              ['1_QRDR + qnrB (CipR)', \"#993399\", \"error-1_QRDR + qnrB\"],\r\n              ['1_QRDR (CipI)', \"#ffcc00\", \"error-1_QRDR\"],\r\n              ['0_QRDR + qnrS (CipI)', \"#009999\", \"error-0_QRDR + qnrS\"],\r\n              ['0_QRDR + qnrB (CipI)', \"#0066cc\", \"error-0_QRDR + qnrB\"],\r\n              ['None (CipS)', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Chloramphenicol':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['cmlA', \"#addd8e\", \"error-cmlA\"],\r\n              ['catA1', \"#9e9ac8\", \"error-catA1\"],\r\n              [\"catA1 + cmlA\", \"#FFEC78\", \"error-catA1-cmlA\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n          }))\r\n        case 'Ampicillin':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaTEM-1D', \"#addd8e\", \"error-blaTEM-1D\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Sulphonamides':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['sul2', \"#ffeda0\", \"error-sul2\"],\r\n              ['sul1', \"#fd8d3c\", \"error-sul1\"],\r\n              ['sul1 + sul2', \"#B4DD70\", \"error-sul1-sul2\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Trimethoprim':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['dfrA1', \"#B4DD70\", \"error-dfrA1\"],\r\n              ['dfrA5', \"#D7AEF7\", \"error-dfrA5\"],\r\n              ['dfrA7', \"#FFEC78\", \"error-dfrA7\"],\r\n              ['dfrA14', \"#6baed6\", \"error-dfrA14\"],\r\n              ['dfrA7 + dfrA14', \"#fd8d3c\", \"error-dfrA7-dfrA14\"],\r\n              ['dfrA15', \"#FBCFE5\", \"error-dfrA15\"],\r\n              ['dfrA17', \"#FCB469\", \"error-dfrA17\"],\r\n              ['dfrA18', \"#66c2a4\", \"error-dfrA18\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Co-trimoxazole':\r\n          let cotrim = [\"dfrA1\", \"dfrA5\", \"dfrA7\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\"];\r\n          let colors1 = [\"#ffeda0\", \"#fd8d3c\", \"#addd8e\", \"#9e9ac8\", \"#6baed6\", \"#7a0177\", \"#54278f\"]\r\n          let colors2 = [\"#a50f15\", \"#6a5acd\", \"#f1b6da\", \"#fb8072\", \"#4682b4\", \"#2e8b57\", \"#98fb98\"]\r\n          let colors3 = [\"#fcc5c0\", \"#bcbddc\", \"#fdd0a2\", \"#c994c7\", \"#9ecae1\", \"#a8ddb5\", \"#fc9272\"]\r\n          let bars = [['None', \"#B9B9B9\", \"error-None\"]]\r\n\r\n          for (const index in cotrim) {\r\n            bars.push([cotrim[index] + \" + sul1\", colors1[index], \"error-\" + cotrim[index] + \"-sul1\"])\r\n            bars.push([cotrim[index] + \" + sul2\", colors2[index], \"error-\" + cotrim[index] + \"-sul2\"])\r\n            bars.push([cotrim[index] + \" + sul1 + sul2\", colors3[index], \"error-\" + cotrim[index] + \"-sul1-sul2\"])\r\n          }\r\n          bars.push([\"dfrA7 + dfrA14 + sul1 + sul2\", \"#F54CEB\", \"error-dfrA7-dfrA14-sul1-sul2\"])\r\n\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: bars\r\n          }))\r\n        case 'Tetracyclines':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['tetA(D)', getColorForTetracyclines('tetA(D)'), \"error-tetA(D)\"],\r\n              ['tetA(C)', getColorForTetracyclines('tetA(C)'), \"error-tetA(C)\"],\r\n              ['tetA(B)', getColorForTetracyclines('tetA(B)'), \"error-tetA(B)\"],\r\n              ['tetA(A)', getColorForTetracyclines('tetA(A)'), \"error-tetA(A)\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n          }))\r\n        case 'ESBL':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaSHV-12', \"#addd8e\", \"error-blaSHV-12\"],\r\n              ['blaOXA-7', \"#9e9ac8\", \"error-blaOXA-7\"],\r\n              ['blaCTX-M-15', \"#6baed6\", \"error-blaCTX-M-15\"],\r\n              ['blaCTX-M-55', \"#FBCFE5\", \"error-blaCTX-M-55\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    setPlotAmrClassChart(plotAmrClassChart)\r\n  }, [hoverColor, RDWAGDataviewFilter, amrClassFilter, dimensions, amrClassChartData, desktop, middle])\r\n\r\n  useEffect(() => {\r\n    const plotDrugTrendsChart = () => {\r\n      let dataDRT = drugTrendsChartData.slice(0, drugTrendsChartData.length - 1)\r\n      for (const index in dataDRT) {\r\n        for (const i in trendClassesForFilter) {\r\n          if (!((trendClassesForFilter[i].toString()) in dataDRT[index])) {\r\n            dataDRT[index][trendClassesForFilter[i]] = 0\r\n            dataDRT[index].drugsPercentage[trendClassesForFilter[i]] = 0\r\n          }\r\n        }\r\n      }\r\n\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <LineChart\r\n            data={dataDRT}\r\n            margin={{\r\n              top: 20, bottom: 5, right: 0, left: -5\r\n            }}\r\n            height={582}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis tickCount={20} allowDecimals={false} type=\"number\" padding={{ left: 20, right: 20 }} dataKey=\"name\" domain={['dataMin', 'dataMax']} interval={\"preserveStartEnd\"} tick={{ fontSize: 14 }} />\r\n            <YAxis tickCount={6} padding={{ top: 20, bottom: 20 }} allowDecimals={false} width={70}>\r\n              <Label angle={-90} position='insideLeft' className=\"DRT-label\" offset={12}>\r\n                Resistant (%)\r\n              </Label>\r\n            </YAxis>\r\n            {drugTrendsChartData.slice(0, drugTrendsChartData.length - 1).length > 0 && (\r\n              <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n            )}\r\n\r\n            <Legend\r\n              content={(props) => {\r\n                const { payload } = props;\r\n                return (\r\n                  <div className=\"DRT-legend\">\r\n                    <div className=\"DRT-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry\r\n                        return (\r\n                          <div key={index + \"DRT-legend\"} className=\"DRT-legend-info\">\r\n                            <div className=\"DRT-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                            <span className=\"DRT-legend-info-name\">{dataKey}</span>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n            {tooltip([160, 275, 255], dimensions.width < mobile ? 250 : 325, \"50%\", true, { zIndex: 100, top: 175, right: 0 }, true, 1)}\r\n            {trendClassesForFilter.map((item, i) => (<Line key={i + \"DRTLine\"} dataKey={item} strokeWidth={2} stroke={getColorForDrug(item)} connectNulls type=\"monotone\" activeDot={timeInitial === timeFinal ? true : false} />))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n\r\n    setPlotDrugTrendsChart(plotDrugTrendsChart)\r\n  }, [trendClassesForFilter, dimensions, drugTrendsChartData, tooltip, mobile, timeInitial, timeFinal])\r\n\r\n  useEffect(() => {\r\n    const plotDrugsAndGenotypesChart = () => {\r\n      let aux = JSON.parse(JSON.stringify(drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1)))\r\n      \r\n      const aux2 = []\r\n      for (let index = 0; index < aux.length; index++) {\r\n        const percentage = (aux[index].total / aux[index].totalS) * 100\r\n        aux2.push({value: aux[index].name, label: aux[index].name + ` (total N=${aux[index].totalS}, ${Math.round(percentage * 100) / 100}% resistant)`, id: index})\r\n      }\r\n      setRFWGDropdownOptions(aux2)\r\n\r\n      const values = RFWGValues.map(x => x.value)\r\n      aux = aux.filter(x => values.includes(x.name))\r\n\r\n      if (RFWGFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              data={aux}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n              height={582}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis allowDecimals={false} width={71}>\r\n                <Label angle={-90} position='insideLeft' className=\"RFWG-label\" offset={12}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div className=\"RFWG-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RFWG-legend\"} className=\"RFWG-legend-info\">\r\n                              <div className=\"RFWG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RFWG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip([155, 270, 270], dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 0)}\r\n              {drtClassesForFilter.map((item, i) => (<Bar key={i+\"DRT_Q\"} dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else {\r\n        const teste = JSON.parse(JSON.stringify(aux))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (keys[key] !== 'name' && keys[key] !== 'total' && keys[key] !== 'quantities') {\r\n              let aux = keys[key]\r\n              element.quantities[aux] = element[aux]\r\n              element[aux] = (element[aux] * 100) / element.totalS\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\" height=\"100%\">\r\n            <BarChart\r\n              data={teste}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"RFWG-label\" offset={12}>\r\n                  Percentage within genotype (%)\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div className=\"RFWG-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RFWG-legend-2\"} className=\"RFWG-legend-info\">\r\n                              <div className=\"RFWG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RFWG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip([155, 270, 270], dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 4)}\r\n              {drtClassesForFilter.map((item, i) => (<Bar key={i+\"DRT_P\"} dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotDrugsAndGenotypesChart(plotDrugsAndGenotypesChart)\r\n  }, [actualCountry, drtClassesForFilter, dimensions, drugsAndGenotypesChartData, tooltip, mobile, RFWGFilter, actualRegion, RFWGValues])\r\n\r\n  function imgOnLoadPromise(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      obj.onload = () => resolve(obj);\r\n      obj.onerror = reject;\r\n    });\r\n  }\r\n\r\n  const [stopLoading] = useState(() => (index) => {\r\n    switch (index) {\r\n      case 0: setCaptureControlMapInProgress(false)\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(false)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(false)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(false)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(false)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  })\r\n\r\n  const [capturePicture] = useState(() => async (id, index, info = {}) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(true)\r\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(true)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(true)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(true)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(true)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const names = [\"Resistance frequencies within genotypes\", \"Drug resistance trends\", \"Genotype distribution\", \"Resistance determinants within genotypes\"]\r\n    const brokenNames = [[\"Resistance frequencies\", \"within genotypes\"], [\"Resistance determinants\", \"within all genotypes\"]]\r\n\r\n    if (index === 5) {\r\n      let ids = [\"RFWG\", \"RFWAG\", \"DRT\", \"GD\"]\r\n\r\n      var doc = new jsPDF({ unit: 'mm', format: 'a4', orientation: 'l' });\r\n\r\n      const IPW = doc.internal.pageSize.getWidth() / 2;\r\n\r\n      let typhinetLogo = new Image();\r\n      typhinetLogo.src = typhinetLogoImg2;\r\n      doc.addImage(typhinetLogo, 'PNG', 110, 8, 80, 26)\r\n\r\n      let date = new Date()\r\n      date = date.toString().replace(/ *\\([^)]*\\) */g, \"\")\r\n\r\n      let introURL\r\n\r\n      let reportIntro = document.getElementById(\"report-info\");\r\n      reportIntro.style.visibility = 'visible'\r\n\r\n      await domtoimage.toPng(reportIntro, { quality: 1, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          introURL = dataUrl;\r\n          reportIntro.style.visibility = 'hidden'\r\n        });\r\n\r\n      doc.addImage(introURL, \"PNG\", 20 , 35);\r\n\r\n      const h = 3.5\r\n      const w = 1\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor(77,77,77);\r\n      doc.setFillColor(255, 255, 255);\r\n      doc.rect(105, 55, 31.5, 5, 'F');\r\n      doc.textWithLink('(http://typhi.net)', 105 + w, 55 + h, {url: 'http://typhi.net'})\r\n      doc.setFillColor(255, 255, 255);\r\n      doc.rect(156, 60, 44, 5, 'F');\r\n      doc.textWithLink('(http://pathogen.watch)', 156 + w, 60 + h, {url: 'http://pathogen.watch'})\r\n      doc.setFillColor(255, 255, 255);\r\n      doc.rect(181, 81.5, 80, 5, 'F');\r\n      doc.textWithLink('https://github.com/zadyson/TyphiNET.', 181 + w, 82 + h, {url: 'https://github.com/zadyson/TyphiNET'})\r\n      doc.setTextColor(0,0,0);\r\n      doc.setFont(undefined, 'bold')\r\n      doc.setFillColor(255, 255, 255);\r\n      doc.rect(106, 94, 80, 5, 'F');\r\n      doc.setTextColor(20,20,20);\r\n      doc.textWithLink('Dyson & Holt (2021), J. Infect. Dis.', 105 + w, 94 + h, {url: 'https://academic.oup.com/jid/advance-article/doi/10.1093/infdis/jiab414/6358992'})\r\n      doc.setFillColor(255, 255, 255);\r\n      doc.rect(188, 102, 80, 5, 'F');\r\n      doc.setTextColor(20,20,20);\r\n      doc.textWithLink('Argimón et al. 2021, Nat. Commun.', 188 + w, 102.5 + h, {url: 'https://www.nature.com/articles/s41467-021-23091-2'})\r\n      doc.setFillColor(255, 255, 255);\r\n      doc.rect(198, 111, 60, 5, 'F');\r\n      doc.setTextColor(20,20,20);\r\n      doc.textWithLink('Ingle et al. 2019, PLoS NTDs).', 198 + w, 111 + h, {url: 'https://journals.plos.org/plosntds/article?id=10.1371/journal.pntd.0007620'})\r\n      doc.setFont(undefined, 'normal')\r\n\r\n      doc.line(0, 200, 300, 200)\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n\r\n      doc.addPage('a4', 'l')\r\n      doc.setFontSize(25);\r\n      doc.text(\"Global Overview of\", 77, 12);\r\n      doc.setFont(undefined, 'italic')\r\n      doc.text(\"Salmonella\", 154, 12);\r\n      doc.setFont(undefined, 'normal')\r\n      doc.text(\"Typhi\", 200, 12);\r\n\r\n      await svgAsPngUri(document.getElementById('control-map'), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          canvas.width = 1400;\r\n          canvas.height = 700;\r\n          ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n          var img = canvas.toDataURL(\"image/png\")\r\n          doc.addImage(img, \"PNG\", 0, 45, 298, 155);\r\n        })\r\n\r\n      let actualMapView = info.mapView\r\n      switch (actualMapView) {\r\n        case \"MDR\":\r\n          actualMapView = \"Multidrug resistant (MDR)\"\r\n          break;\r\n        case \"XDR\":\r\n          actualMapView = \"Extensively drug resistant (XDR)\"\r\n          break;\r\n        case \"Azith\":\r\n          actualMapView = \"Azithromycin resistant\"\r\n          break;\r\n        case \"CipI\":\r\n          actualMapView = \"Ciprofloxacin insusceptible and resistant (CipI/R)\"\r\n          break;\r\n        case \"CipR\":\r\n          actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n          break;\r\n        case \"H58 / Non-H58\":\r\n          actualMapView = \"H58 genotype\"\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      doc.setFontSize(12);\r\n      const dataset = info.dataset === \"All\" ? 'All (local + travel)' : info.dataset === \"Local\" ? 'Locally isolated' : 'Travel isolates'\r\n\r\n      doc.setFont(undefined, 'bold')\r\n      doc.text(info.mapView, 8, 20);\r\n      doc.setFont(undefined, 'normal')\r\n      doc.text(`Total ${info.actualGenomes} genomes`, 8, 25);\r\n      doc.text(\"Dataset: \" + dataset, 8, 30);\r\n      doc.text(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 8, 35);\r\n      doc.text(\"Country: \" + info.country, 8, 40);\r\n      doc.text(\"Region: \" + info.region, 8, 45);\r\n\r\n      if (info.mapView === 'Dominant Genotype') {\r\n        var img = new Image()\r\n        img.src = \"legends/MapView_DominantGenotype.png\"\r\n        doc.addImage(img, 'PNG', 68, 19, 219, 27)\r\n      } else if (info.mapView === 'No. Samples') {\r\n        var img2 = new Image()\r\n        img2.src = \"legends/MapView_NoSamples.png\"\r\n        doc.addImage(img2, 'PNG', 250, 15, 35, 35)\r\n      } else {\r\n        var img3 = new Image()\r\n        img3.src = \"legends/MapView_Others.png\"\r\n        doc.addImage(img3, 'PNG', 250, 15, 35, 35)\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200)\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n\r\n      doc.addPage('a4', 'l')\r\n      const names2 = [\"Resistance frequencies within genotypes\", \"Resistance determinants within genotypes\", \"Drug resistance trends\", \"Genotype distribution\"]\r\n      for (let index = 0; index < ids.length; index++) {\r\n\r\n        let url\r\n        await domtoimage.toPng(document.getElementById(ids[index]), { quality: 1, bgcolor: \"white\" })\r\n          .then(function (dataUrl) {\r\n            url = dataUrl\r\n          });\r\n\r\n        let subtitleH = 0\r\n        if (index === 0 || index === 1 || index === 2) {\r\n          subtitleH = 3\r\n        }\r\n        subtitleH += 3\r\n\r\n        doc.addImage(url, \"PNG\", 5, 15 + subtitleH);\r\n\r\n        let imgWidth = jsPDF.API.getImageProperties(url).width\r\n        imgWidth = Math.floor(imgWidth * 0.264583)\r\n        doc.setFontSize(11)\r\n        const texts = [\r\n          \" \",\r\n          \" \",\r\n          \" \",\r\n          \" \"\r\n        ]\r\n        let spaceBetween = -4\r\n        if (dimensions.width < 1750) {\r\n          spaceBetween = 13\r\n        }\r\n\r\n        let drugs = []\r\n        for (let i = 0; i < info.drugs.length; i++) {\r\n          drugs.push(info.drugs[i].value)\r\n        }\r\n        if (drugs.length === 0) {\r\n          drugs.push('None')\r\n        }\r\n\r\n        doc.text(texts[index], imgWidth + spaceBetween, 23 + subtitleH, { align: 'justify', maxWidth: 50 })\r\n\r\n        doc.setFontSize(14)\r\n        if (index === 1) {\r\n          doc.text(names2[index] + ' : ' + info.amrClassFilter, 23, 10)\r\n        } else {\r\n          doc.text(names2[index], 23, 10)\r\n        }\r\n        doc.setFontSize(9)\r\n\r\n        if (index === 0) {\r\n          doc.text(`Top Genotypes (up to ${info.RFWGCount})`, 23, 15)\r\n        }\r\n        if (index === 1) {\r\n          doc.text(\"Top Genotypes (up to 10)\", 23, 15)\r\n        }\r\n        if (index === 2) {\r\n          doc.text(\"Data are plotted for years with N >= 10 genomes\", 23, 15)\r\n        }\r\n\r\n        doc.setFontSize(12)\r\n        doc.text(`Total ${info.actualGenomes} genomes`, 230, 30);\r\n        doc.text(\"Dataset: \" + dataset, 230, 35);\r\n        doc.text(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 230, 40);\r\n        doc.text(\"Country: \" + info.country, 230, 45);\r\n        doc.text(\"Region: \" + info.region, 230, 50);\r\n\r\n        if (index === 1 || index === 3){\r\n          doc.setFillColor(255,255,255);\r\n          doc.rect(22, info.dimensions.width < info.desktop ? 120 : 115, 150, 100, 'F');\r\n        }\r\n\r\n        if (index === 1) {\r\n          var img4 = new Image()\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            img4.src = \"legends/Fluoroquinolones (CipI-R).png\"\r\n          } else {\r\n            img4.src = \"legends/\" + info.amrClassFilter + \".png\"\r\n          }\r\n          doc.addImage(img4, 'PNG', 22, 107 + subtitleH)\r\n        } else if (index === 3) {\r\n          var img5 = new Image()\r\n          img5.src = \"legends/Genotype_Distribution.png\"\r\n          doc.addImage(img5, 'PNG', 22, (info.dimensions.width < info.desktop ? 115 : 108) + subtitleH)\r\n        }\r\n        doc.line(0, 200, 300, 200)\r\n        doc.setFontSize(10);\r\n        doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n        if (index < ids.length - 1) {\r\n          doc.addPage('a4', 'l')\r\n        }\r\n      }\r\n\r\n      doc.save(\"TyphiNET - Report.pdf\");\r\n      setCaptureReportInProgress(false);\r\n\r\n    } else if (index !== 0) {\r\n\r\n      let graph = document.getElementById(id)\r\n      let canvas = document.createElement(\"canvas\")\r\n      let ctx = canvas.getContext('2d');\r\n      let graphImg = document.createElement(\"img\");\r\n      let graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      await domtoimage.toPng(graph, { quality: 0.1, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          graphImg.src = dataUrl;\r\n        });\r\n\r\n      let cHeight = 20\r\n      let logoHeight = 100\r\n      let legendHeight = 0\r\n      let filterHeight = 80\r\n      let subtitleHeight = 0\r\n      if (id === \"RFWG\" || id === \"RFWAG\" || id === \"DRT\") {\r\n        cHeight += 20\r\n        subtitleHeight = 20\r\n      }\r\n      let imgHeight = graphImg.height\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        imgHeight -= 200\r\n      }\r\n\r\n      if (id === \"GD\" || id === \"RFWAG\") legendHeight = 40\r\n\r\n      let imgWidth = graphImg.width\r\n      if (id === \"RFWAG\") {\r\n        imgWidth += 130\r\n        if (info.amrClassFilter === \"Azithromycin\") {\r\n          imgWidth += 100\r\n        }\r\n        else if (info.amrClassFilter === \"Co-trimoxazole\") {\r\n          imgWidth += 195\r\n        }\r\n        else if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n          imgWidth += 250\r\n        }\r\n      } else if (id === \"GD\") {\r\n        imgWidth += 370\r\n      }\r\n\r\n      await graphImgPromise;\r\n      canvas.width = imgWidth;\r\n\r\n      canvas.height = imgHeight + cHeight + logoHeight + legendHeight + filterHeight + subtitleHeight + 60;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"18px Montserrat\"\r\n      ctx.fillStyle = \"black\";\r\n      ctx.textAlign = \"center\";\r\n\r\n      ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight);\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(60, canvas.height - 130, 800, 300);\r\n      ctx.fillStyle = \"black\";\r\n\r\n      if (id === \"RFWG\") {\r\n        ctx.fillText(brokenNames[0][0], canvas.width / 2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[0][1], canvas.width / 2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(`Top Genotypes (up to ${info.RFWGCount})`, canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else if (id === \"RFWAG\") {\r\n        ctx.fillText(brokenNames[1][0], canvas.width / 2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[1][1], canvas.width / 2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Top Genotypes (up to 10)\", canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else if (id === \"DRT\") {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Data are plotted for years with N ≥ 10 genomes\", canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight)\r\n      }\r\n\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        let legendImg = document.createElement(\"img\")\r\n        let legendImgPromise = imgOnLoadPromise(legendImg)\r\n        if (id === \"RFWAG\") {\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            legendImg.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            if (info.amrClassFilter === \"Trimethoprim\" || info.amrClassFilter === \"Co-trimoxazole\") {\r\n              info.amrClassFilter += \"2\"\r\n            }\r\n            legendImg.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n\r\n        } else {\r\n          legendImg.src = \"legends/Genotype_Distribution_2.png\";\r\n        }\r\n        await legendImgPromise;\r\n\r\n        ctx.drawImage(legendImg, graphImg.width, logoHeight + subtitleHeight + 12 + cHeight);\r\n      }\r\n\r\n      let typhinetLogo = document.createElement(\"img\");\r\n      let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n      typhinetLogo.src = typhinetLogoImg2;\r\n      await typhinetLogoPromise;\r\n      ctx.drawImage(typhinetLogo, 10, 10, 170, 55);\r\n\r\n      ctx.fillStyle = \"black\"\r\n      ctx.font = \"14px Montserrat\"\r\n      ctx.textAlign = \"start\"\r\n      ctx.fillText(\"Dataset: \" + info.dataset, 10, canvas.height - 92)\r\n      ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 10, canvas.height - 70)\r\n      ctx.fillText(\"Country: \" + info.country, 10, canvas.height - 48)\r\n      ctx.fillText(\"Region: \" + info.region, 10, canvas.height - 26)\r\n\r\n      const base64 = canvas.toDataURL();\r\n      stopLoading(index)\r\n      download(base64, \"TyphiNET - \" + names[index - 1] + \".png\");\r\n    } else {\r\n      svgAsPngUri(document.getElementById(id), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          let cWidth = 3600\r\n          let cHeight = 1800\r\n          let textHeight = 240\r\n          let legendHeight = 0\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendHeight = 440\r\n          }\r\n\r\n          canvas.width = cWidth;\r\n          canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n          ctx.fillStyle = \"white\";\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n          ctx.font = \"bolder 50px Montserrat\"\r\n          ctx.fillStyle = \"black\";\r\n          ctx.textAlign = \"center\";\r\n          ctx.fillText(\"Global Overview of Salmonella Typhi\", canvas.width / 2, 80)\r\n          ctx.font = \"35px Montserrat\"\r\n          ctx.textAlign = \"center\";\r\n\r\n          let actualMapView = info.mapView\r\n          switch (actualMapView) {\r\n            case \"MDR\":\r\n              actualMapView = \"Multidrug resistant (MDR)\"\r\n              break;\r\n            case \"XDR\":\r\n              actualMapView = \"Extensively drug resistant (XDR)\"\r\n              break;\r\n            case \"Azith\":\r\n              actualMapView = \"Azithromycin resistant\"\r\n              break;\r\n            case \"CipI\":\r\n              actualMapView = \"Ciprofloxacin insusceptible and resistant (CipI/R)\"\r\n              break;\r\n            case \"CipR\":\r\n              actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n              break;\r\n            case \"H58 / Non-H58\":\r\n              actualMapView = \"H58 genotype\"\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          ctx.fillText(\"Map view: \" + actualMapView, canvas.width / 2, 140)\r\n          ctx.fillText(\"Dataset: \" + info.dataset, canvas.width / 2, 190)\r\n          ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], canvas.width / 2, 240)\r\n\r\n          ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n          let legendImg = document.createElement(\"img\");\r\n          let legendImgoPromise = imgOnLoadPromise(legendImg);\r\n          let h\r\n          let w\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendImg.src = \"legends/MapView_DominantGenotype.png\";\r\n            await legendImgoPromise;\r\n            let centerWidth = (canvas.width - 1731) / 2\r\n            ctx.drawImage(legendImg, centerWidth, canvas.height - legendHeight - 20, 1731, 420);\r\n          } else if (info.mapView === 'No. Samples') {\r\n            legendImg.src = \"legends/MapView_NoSamples.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 310\r\n            ctx.drawImage(legendImg, canvas.width - w - 15, canvas.height - h - 10, w, h);\r\n          } else {\r\n            legendImg.src = \"legends/MapView_Others.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 280\r\n            ctx.drawImage(legendImg, canvas.width - w - 25, canvas.height - h - 20, w, h);\r\n          }\r\n\r\n          let typhinetLogo = document.createElement(\"img\");\r\n          let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n          typhinetLogo.src = typhinetLogoImg2;\r\n          await typhinetLogoPromise;\r\n          ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n          const base64 = canvas.toDataURL();\r\n          stopLoading(index)\r\n          download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n        });\r\n    }\r\n\r\n  })\r\n\r\n  const [dowloadBaseSpreadsheet] = useState(() => () => {\r\n    axios.get(`${API_ENDPOINT}file/download`)\r\n      .then((res) => {\r\n        let cols_to_remove = ['azith_pred_pheno', 'cip_pred_pheno', 'dcs_category', 'amr_category', 'num_qrdr', 'num_acrb', 'ESBL_category', 'chloramphenicol_category', 'tetracycline_category', 'cip_pheno_qrdr_gene', 'dcs_mechanisms', 'num_amr_genes', 'dfra_any', 'sul_any', 'co_trim', 'GENOTYPE_SIMPLE', 'h58_genotypes']\r\n        let indexes = []\r\n        let csv = res.data.split('\\n')\r\n        let lines = []\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',')\r\n          if (line[1] !== '-' && line[2] !== '-') {\r\n            lines.push(line)\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < cols_to_remove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(cols_to_remove[index])\r\n          indexes.push(currentIndex)\r\n        }\r\n        indexes.sort()\r\n        indexes.reverse()\r\n\r\n        let newLines = []\r\n        for (let j = 0; j < lines.length; j++) {\r\n          let aux = []\r\n          for (let i = 0; i < lines[j].length; i++) {\r\n            if (!indexes.includes(i)) {\r\n              aux.push(lines[j][i])\r\n            }\r\n          }\r\n          newLines.push(aux)\r\n        }\r\n\r\n        let newCSV = \"\"\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = \"\"\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index]\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += \",\"\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += \"\\n\"\r\n          }\r\n          newCSV += aux\r\n        }\r\n\r\n        download(newCSV, 'TyphiNET_Database.csv');\r\n      })\r\n  })\r\n\r\n  const generateMapLegendOptions = () => {\r\n    let percentageSteps = ['1', '25', '50', '75']\r\n    const otherViews = ['CipI', 'CipR', 'Azith', 'Sensitive to all drugs', 'MDR', 'XDR']\r\n\r\n    if (otherViews.includes(mapView)) {\r\n      return (\r\n        <>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-insufficient-data\" />\r\n            <span>Insufficient data</span>\r\n          </div>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-zero-percent\" />\r\n            <span>0%</span>\r\n          </div>\r\n          {percentageSteps.map((n) => {\r\n            return (\r\n              <div key={n} className=\"samples-info\">\r\n                <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                {n === \"1\" && (<span>{'1 - 25'}%</span>)}\r\n                {n === \"25\" && (<span>{'26 - 50'}%</span>)}\r\n                {n === \"50\" && (<span>{'51 - 75'}%</span>)}\r\n                {n === \"75\" && (<span>{'76 - 100'}%</span>)}\r\n              </div>\r\n            )\r\n          })}\r\n        </>\r\n      )\r\n    }\r\n\r\n    switch (mapView) {\r\n      case 'No. Samples':\r\n        let legends = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300']\r\n        let aux = [1, 10, 20, 100, 300]\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {[...Array(5).keys()].map((n, i) => {\r\n              return (\r\n                <div key={n + i} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapSamplesColorScale(aux[n]) }} />\r\n                  <span>{legends[n]}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'Dominant Genotype':\r\n        return (\r\n          <div className=\"map-legend-DG\">\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {genotypes.map((g, n) => {\r\n              return (\r\n                <div key={n + \"DG\"} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForGenotype(g) }} />\r\n                  <span>{g}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      case 'H58 / Non-H58':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-zero-percent\" />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((g, n) => {\r\n              return (\r\n                <div key={n + \"H58\"} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(g) }} />\r\n                  {g === \"1\" && (<span>{'1 - 25'}%</span>)}\r\n                  {g === \"25\" && (<span>{'26 - 50'}%</span>)}\r\n                  {g === \"50\" && (<span>{'51 - 75'}%</span>)}\r\n                  {g === \"75\" && (<span>{'76 - 100'}%</span>)}\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const renderMapLegend = () => {\r\n    const mapLegends = [\r\n      ['MDR', 'Multidrug resistant (MDR)'], ['XDR', 'Extensively drug resistant (XDR)'], ['Azith', 'Azithromycin resistant'],\r\n      ['CipI', 'Ciprofloxacin insusceptible and resistant (CipI/R)'], ['CipR', 'Ciprofloxacin resistant (CipR)'], ['Sensitive to all drugs', 'Sensitive to all drugs'], \r\n      ['Dominant Genotype', 'Dominant Genotype'], ['H58 / Non-H58', 'H58 genotype'], ['No. Samples', 'No. Samples']\r\n    ]\r\n    return (\r\n      <div className=\"map-legend\">\r\n        {/* <FormControl fullWidth className={classes.formControlSelect}>\r\n          <div className=\"map-legend-formcontrol-div\">\r\n            <div className=\"map-legend-formcontrol-label\">Select continent</div>\r\n          </div>\r\n          <Select\r\n            value={actualContinent}\r\n            onChange={(evt, value) => setActualContinent(value.props.value)}\r\n            className={classes.select}\r\n            fullWidth\r\n          >\r\n            {continentOptions.map((n)=>{\r\n              return (\r\n                <MenuItem className={classes.select} value={n}>\r\n                  {n}\r\n                </MenuItem>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl> */}\r\n        <FormControl fullWidth className={classes.formControlSelect}>\r\n          <div className=\"map-legend-formcontrol-div map-legend-formcontrol-div-pad\">\r\n            <div className=\"map-legend-formcontrol-label\">Select map view</div>\r\n            <IconTooltip\r\n              title={<div className={classes.tooltipTitle}>Percentage frequency data is shown only for countries with N≥20 genomes</div>}\r\n              placement=\"top\"\r\n            >\r\n              <IconButton className={classes.tooltipButton}>\r\n                  <FontAwesomeIcon icon={faInfoCircle} size=\"xs\" className={classes.tooltipIcon}/>\r\n              </IconButton>\r\n            </IconTooltip>\r\n            {/* <FontAwesomeIcon icon={faInfoCircle} onClick={handleClickOpen3} className=\"icon-info\" />\r\n            <Dialog\r\n              open={open3}\r\n              onClose={handleClose3}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Information\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {'Percentage frequency data is shown only for countries with N≥20 genomes'}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose3} color=\"primary\">\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog> */}\r\n          </div>\r\n          <Select\r\n            value={mapView}\r\n            onChange={evt => setMapView(evt.target.value)}\r\n            fullWidth\r\n            className={classes.select}\r\n          >\r\n            {mapLegends.map((n, i) => {\r\n              return (\r\n                <MenuItem key={i + \"mapview\"} className={classes.select} value={n[0]}>\r\n                  {n[1]}\r\n                </MenuItem>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        {generateMapLegendOptions()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"menu-bar-mobile\">\r\n        <img className=\"logoImageMenu-mobile\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n      </div>\r\n      <div style={{ padding: dimensions.width > 770 ? '16px 16px 0px 16px' : '16px 0px 0px 0px' }}>\r\n        <div className=\"info-wrapper\">\r\n          {dimensions.width > desktop && (\r\n            <>\r\n              <div className=\"typhinet-logo\">\r\n                <img className=\"typhinet-logo-image\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className=\"card card-padding\">\r\n            <span>\r\n              Total Genomes\r\n              {/* <FontAwesomeIcon icon={faInfoCircle} onClick={handleClickOpen2} className=\"icon-info\" />\r\n              <Dialog\r\n                open={open2}\r\n                onClose={handleClose2}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Information\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    155 genome samples absent from TyphiNET DB\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose2} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog> */}\r\n            </span>\r\n            {totalGenomes.length === actualGenomes.length ? (\r\n              <span className=\"value\">{totalGenomes.length}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenomes.length}\r\n                <span className=\"value-total\">/{totalGenomes.length}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"card\">\r\n            <span>\r\n              Total Genotypes\r\n              {/* <FontAwesomeIcon icon={faInfoCircle} onClick={handleClickOpen} className=\"icon-info\" />\r\n              <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Information\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    Total genotypes present in TyphiNET database / Total genotypes worldwide published\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog> */}\r\n            </span>\r\n            {totalGenotypes.length === actualGenotypes.length ? (\r\n              <span className=\"value\">{totalGenotypes.length}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenotypes.length}\r\n                <span className=\"value-total\">/{totalGenotypes.length}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"map-filters-wrapper\">\r\n          <h2>Global Overview of <i>Salmonella</i> Typhi</h2>\r\n          <div className=\"map-filters-wrapper-inside\" style={{ flexDirection: dimensions.width > desktop ? 'row' : 'column' }}>\r\n            <div className=\"map-wrapper\">\r\n              <ComposableMap\r\n                id=\"control-map\"\r\n                data-tip=\"\"\r\n                projectionConfig={{\r\n                  rotate: [-10, 0, 0],\r\n                  scale: 210,\r\n                }}\r\n                className=\"composable-map\"\r\n              >\r\n                <ZoomableGroup\r\n                  zoom={controlMapPosition.zoom}\r\n                  center={controlMapPosition.coordinates}\r\n                  onMoveEnd={(position) => {\r\n                    setControlMapPosition(position);\r\n                  }}\r\n                >\r\n                  <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Geographies\r\n                    geography={geography}>\r\n                    {({ geographies }) =>\r\n                      geographies.map((geo) => {\r\n                        const sample = worldMapSamplesData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n\r\n                        const d = worldMapComplementaryData[geo.properties.NAME];\r\n                        let country\r\n\r\n                        let fill = \"lightgrey\"\r\n                        let darkGray = \"#727272\"\r\n\r\n                        switch (mapView) {\r\n                          case 'No. Samples':\r\n                            if (sample && sample.count !== 0) {\r\n                              fill = mapSamplesColorScale(sample.count);\r\n                            } else if (sample && sample.count === 0) {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'Dominant Genotype':\r\n                            country = worldMapGenotypesData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              const temp = country.genotypes\r\n                              temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                              if (sample) {\r\n                                fill = getColorForGenotype(temp[0].lineage)\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'H58 / Non-H58':\r\n                            country = worldMapH58Data.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              let countH58 = 0\r\n                              const isH58 = country.genotypes.find(g => g.type === 'H58')\r\n                              if (isH58 !== undefined) { countH58 = isH58.count }\r\n\r\n                              if (country.total >= 20 && countH58 > 0) {\r\n                                fill = mapRedColorScale(isH58.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'MDR':\r\n                            country = worldMapMDRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'Sensitive to all drugs':\r\n                            country = worldMapSTADData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'XDR':\r\n                            country = worldMapXDRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'Azith':\r\n                            country = worldMapAZITHData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'CipI':\r\n                            country = worldMapCIPIData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'CipR':\r\n                            country = worldMapCIPRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          default:\r\n                            break;\r\n                        }\r\n\r\n                        return (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            cursor=\"pointer\"\r\n                            fill={fill}\r\n                            onClick={() => {\r\n                              if (d !== undefined && sample !== undefined)\r\n                                setActualCountry(sample.name)\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              setTooltipContent(null);\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              const { NAME } = geo.properties;\r\n                              switch (mapView) {\r\n                                case 'No. Samples':\r\n                                  if (sample !== undefined && d !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      additionalInfo: {\r\n                                        samples: sample.count,\r\n                                        genotypes: d.GENOTYPES.TOTAL,\r\n                                        H58: Math.round(d.H58) !== d.H58 ? d.H58.toFixed(2) : d.H58,\r\n                                        MDR: Math.round(d.MDR) !== d.MDR ? d.MDR.toFixed(2) : d.MDR,\r\n                                        XDR: Math.round(d.XDR) !== d.XDR ? d.XDR.toFixed(2) : d.XDR,\r\n                                        DCS: Math.round(d.DCS) !== d.DCS ? d.DCS.toFixed(2) : d.DCS,\r\n                                        CipI: Math.round(d.CipI) !== d.CipI ? d.CipI.toFixed(2) : d.CipI,\r\n                                        CipR: Math.round(d.CipR) !== d.CipR ? d.CipR.toFixed(2) : d.CipR,\r\n                                        CipI_R: Math.round(d.CipI_R) !== d.CipI_R ? d.CipI_R.toFixed(2) : d.CipI_R,\r\n                                        AzithR: Math.round(d.AzithR) !== d.AzithR ? d.AzithR.toFixed(2) : d.AzithR,\r\n                                        STAD: Math.round(d.STAD) !== d.STAD ? d.STAD.toFixed(2) : d.STAD\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Dominant Genotype':\r\n                                  if (country !== undefined) {\r\n                                    let temp = country.genotypes\r\n                                    temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      genotypeInfo: temp\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'H58 / Non-H58':\r\n                                  if (country !== undefined && country.genotypes.length > 0) {\r\n                                    let countH58 = 0\r\n                                    const isH58 = country.genotypes.find(g => g.type === 'H58')\r\n                                    if (isH58 !== undefined) { countH58 = isH58.count }\r\n\r\n                                    if (country.total >= 20 && countH58 > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        simpleGenotypeInfo: country.genotypes\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n\r\n                                  break;\r\n                                case 'MDR':\r\n                                  if (country !== undefined && country.MDRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        mdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Sensitive to all drugs':\r\n                                  if (country !== undefined && country.STADs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        stadInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'XDR':\r\n                                  if (country !== undefined && country.XDRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        xdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Azith':\r\n                                  if (country !== undefined && country.AZs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        azInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipI':\r\n                                  if (country !== undefined && country.CipIs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      let cipI = country.CipIs.filter(x => x.type === 'CipI')\r\n                                      if (cipI.length) {\r\n                                        cipI = cipI[0]\r\n                                        if (Math.round(cipI.percentage) !== cipI.percentage)\r\n                                          cipI.percentage = cipI.percentage.toFixed(2)\r\n                                        cipI.percentage = parseFloat(cipI.percentage);\r\n                                      } else {\r\n                                        cipI = {\r\n                                          count: 0,\r\n                                          percentage: 0\r\n                                        }\r\n                                      }\r\n                                      let cipR = country.CipIs.filter(x => x.type === 'CipR')\r\n                                      if (cipR.length) {\r\n                                        cipR = cipR[0]\r\n                                        if (Math.round(cipR.percentage) !== cipR.percentage)\r\n                                          cipR.percentage = cipR.percentage.toFixed(2)\r\n                                        cipR.percentage = parseFloat(cipR.percentage);\r\n                                      } else {\r\n                                        cipR = {\r\n                                          count: 0,\r\n                                          percentage: 0\r\n                                        }\r\n                                      }\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipIInfo: {\r\n                                          count: cipI.count,\r\n                                          percentage: cipI.percentage,\r\n                                        },\r\n                                        cipRInfo2: {\r\n                                          count: cipR.count,\r\n                                          percentage: cipR.percentage,\r\n                                        },\r\n                                        cipIRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipR':\r\n                                  if (country !== undefined && country.CipRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                default:\r\n                                  break;\r\n                              }\r\n                            }}\r\n                            style={{\r\n                              default: {\r\n                                outline: \"none\",\r\n                              },\r\n                              hover: {\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                              pressed: {\r\n                                fill: \"#FF5722\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              }\r\n                            }}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n                  </Geographies>\r\n                </ZoomableGroup>\r\n\r\n              </ComposableMap>\r\n              {(dimensions.width > desktop) && (\r\n                <div className=\"map-upper-right-buttons\">\r\n                  {renderMapLegend()}\r\n                </div>\r\n              )}\r\n              {(dimensions.width > desktop) && (\r\n                <div className=\"map-upper-left-buttons \">\r\n                  <div className=\"map-filters\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span className=\"map-filters-label\" style={{ marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div className=\"margin-div\">\r\n                      {years.length > 2 && (<div className=\"my-year-range\">\r\n                        <div>\r\n                          <Typography gutterBottom className={classes.typography}>\r\n                            Start year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeInitial}\r\n                            onChange={(evt, value) => setActualTimeInitial(value.props.value)}\r\n                            className={classes.selectYear}\r\n                            fullWidth\r\n                          >\r\n                            {years?.filter(x => x <= actualTimeFinal).map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i+\"timeperiod\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                        <div className=\"my-divider\"></div>\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typographyEndYear}>\r\n                            End year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeFinal}\r\n                            onChange={(evt, value) => setActualTimeFinal(value.props.value)}\r\n                            className={classes.selectYear}\r\n                            fullWidth\r\n                          >\r\n                            {years?.filter(x => x >= actualTimeInitial).map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"timeperiod2\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                      </div>)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"map-lower-left-buttons\">\r\n                <Zoom in={controlMapPosition.zoom !== 1 || controlMapPosition.coordinates.some(c => c !== 0)}>\r\n                  <TooltipMaterialUI title={<span className=\"my-font\">Recenter Map</span>} placement=\"right\">\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() => setControlMapPosition({ coordinates: [0, 0], zoom: 1 })}\r\n                    >\r\n                      <FontAwesomeIcon icon={faCrosshairs} />\r\n                    </div>\r\n                  </TooltipMaterialUI>\r\n                </Zoom>\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Zoom In</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom >= 4) return;\r\n                      setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Zoom Out</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom <= 1) return;\r\n                      if (controlMapPosition.zoom / 2 === 1) {\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                      } else {\r\n                        setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n              </div>\r\n              <div className=\"map-lower-right-buttons\">\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Download Map as PNG</span>} placement=\"left\">\r\n                  <div\r\n                    className={`button ${captureControlMapInProgress && \"disabled\"}`}\r\n                    onClick={() => {\r\n                      if (!captureControlMapInProgress)\r\n                        capturePicture('control-map', 0, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal] })\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCamera} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                {captureControlMapInProgress && (\r\n                  <CustomCircularProgress\r\n                    size={54}\r\n                    thickness={4}\r\n                    style={{ top: 5, left: -7 }} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {!(dimensions.width > desktop) && (\r\n              <div className=\"wrapper-map-legend\">\r\n                {renderMapLegend()}\r\n                <div>\r\n                  <div className=\"map-filters-mobile\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span className=\"map-filters-label\" style={{ marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div className=\"margin-div\">\r\n                      <div className=\"my-year-range\">\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typography}>\r\n                            Start year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeInitial}\r\n                            onChange={(evt, value) => setActualTimeInitial(value.props.value)}\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"year\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                        <div className=\"my-divider\"></div>\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typographyEndYear}>\r\n                            End year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeFinal}\r\n                            onChange={(evt, value) => setActualTimeFinal(value.props.value)}\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"year2\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            )}\r\n            <ReactTooltip>\r\n              {tooltipContent && (\r\n                <div className=\"tooltip-map\">\r\n                  <span className=\"country\">{tooltipContent.name}</span>\r\n                  {tooltipContent.additionalInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Samples: {tooltipContent.additionalInfo.samples}</span>\r\n                      <span>Genotypes: {tooltipContent.additionalInfo.genotypes}</span>\r\n                      <span>H58: {tooltipContent.additionalInfo.H58}%</span>\r\n                      <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\r\n                      <span>XDR: {tooltipContent.additionalInfo.XDR}%</span>\r\n                      <span>DCS: {tooltipContent.additionalInfo.DCS}%</span>\r\n                      <span>AzithR: {tooltipContent.additionalInfo.AzithR}%</span>\r\n                      <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\r\n                      <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\r\n                      <span>CipI/R: {tooltipContent.additionalInfo.CipI_R}%</span>\r\n                      <span>Susceptible: {tooltipContent.additionalInfo.STAD}%</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.genotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.genotypeInfo.map((genotype, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index + \"genotypeInfo\"} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForGenotype(genotype.lineage) }} />\r\n                              <span>{genotype.lineage}: {genotype.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.simpleGenotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[0].type}: {tooltipContent.simpleGenotypeInfo[0].count} ({tooltipContent.simpleGenotypeInfo[0].percentage}%)</span>\r\n                      ) : tooltipContent.simpleGenotypeInfo.length > 1 && tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[1].type}: {tooltipContent.simpleGenotypeInfo[1].count} ({tooltipContent.simpleGenotypeInfo[1].percentage}%)</span>\r\n                      ) : (\r\n                        <span>H58: 0 (0%)</span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.mdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>MDR: {tooltipContent.mdrInfo.count} ({tooltipContent.mdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.stadInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Susceptible: {tooltipContent.stadInfo.count} ({tooltipContent.stadInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.xdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>XDR: {tooltipContent.xdrInfo.count} ({tooltipContent.xdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.dcsInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>DCS: {tooltipContent.dcsInfo.count} ({tooltipContent.dcsInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.azInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>AzithR: {tooltipContent.azInfo.count} ({tooltipContent.azInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipIInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipI/R: {tooltipContent.cipIRInfo.count} ({tooltipContent.cipIRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipRInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipR: {tooltipContent.cipRInfo.count} ({tooltipContent.cipRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.drugsInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.drugsInfo.map((drug, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index + \"drugsInfo\"} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForDrug(drug.name) }} />\r\n                              <span>{drug.name}: {drug.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.amrProfilesInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.amrProfilesInfo.map((amr, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index + \"amrInfo\"} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForAMR(amr.name) }} />\r\n                              <span>{amr.name}: {amr.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.incTypesInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.incTypesInfo.map((incType, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index + \"inctypes\"} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForIncType(incType.type) }} />\r\n                              <span>{incType.type}: {incType.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {(!tooltipContent.incTypesInfo && !tooltipContent.amrProfilesInfo && !tooltipContent.drugsInfo && !tooltipContent.xdrInfo && !tooltipContent.mdrInfo && !tooltipContent.stadInfo && !tooltipContent.dcsInfo && !tooltipContent.azInfo && !tooltipContent.cipIInfo && !tooltipContent.cipRInfo && !tooltipContent.simpleGenotypeInfo && !tooltipContent.genotypeInfo && !tooltipContent.additionalInfo) && (\r\n                    <div className=\"additional-info\">\r\n                      <span>{tooltipContent.smallerThan20 ? \"0%\" : 'Insufficient data'}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n        <div className=\"chart-wrapper\">\r\n          <h2 className=\"showing-data\">Now showing: {dataset} data from {actualCountry === \"All\" ? \"all countries\" : actualCountry} from {actualTimeInitial} to {actualTimeFinal}</h2>\r\n          <div className=\"country-region-div\" style={{flexDirection: dimensions.width > 560 ? 'row' : 'column'}}>\r\n            <FormControl className={classes.formControlSelect, dimensions.width <= 560 ? classes.formControlSelectCountryRegionH : classes.formControlSelectCountryRegionV}>\r\n              <label className=\"select-country-label\">Select country (or click map)</label>\r\n              <Select\r\n                value={actualCountry}\r\n                onChange={evt => setActualCountry(evt.target.value)}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {countriesForFilter.map((country, index) => {\r\n                  return (\r\n                    <MenuItem key={index + \"countriesFilter\"} className={classes.selectCountryValues} value={country}>\r\n                      {country}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            {/* {dimensions.width > 560 && <div className=\"country-region-spacer\"></div>}\r\n            <FormControl className={`${classes.formControlSelect} ${dimensions.width <= 560 ? classes.formControlSelectCountryRegionH : classes.formControlSelectCountryRegionV}`}>\r\n              <label className=\"select-country-label\">Select region</label>\r\n              <Select\r\n                value={actualRegion}\r\n                onChange={evt => setActualRegion(evt.target.value)}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {regionsForFilter.map((region, index) => {\r\n                  return (\r\n                    <MenuItem key={index + \"regionFilter\"} className={classes.selectCountryValues} value={region}>\r\n                      {region}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl> */}\r\n          </div>\r\n          <div className=\"chart-wrapper-div\">\r\n            <div className=\"chart-wrapper-div2\" style={{ flexDirection: dimensions.width > desktop ? \"row\" : \"column\", paddingBottom: dimensions.width > desktop ? 20 : 0 }}>\r\n              <div className=\"chart-wrapper-div3\" style={{ paddingRight: dimensions.width < mobile ? 0 : 10 }}>\r\n                <div className=\"chart-wrapper-RFWA\">\r\n                  <div className=\"chart-wrapper-RFWA-div\">\r\n                    <span className=\"chart-title chart-wrapper-RFWA-title\">Resistance frequencies within genotypes</span>\r\n                    <div className=\"chart-wrapper-RFWA-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartRFWGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWGInProgress)\r\n                              capturePicture('RFWG', 1, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion, RFWGCount: RFWGValues.length})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">Top Genotypes (up to {RFWGValues.length})</span>\r\n                  <div className=\"chart-wrapper-RFWA-view\" style={{ width: dimensions.width > 790 ? \"71%\" : '260px' }}>\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">Data view</div>\r\n                      <IconTooltip\r\n                        title={<div className={classes.tooltipTitle}>Select up to 7 genotypes</div>}\r\n                        placement=\"top\"\r\n                      >\r\n                        <IconButton className={classes.tooltipButton}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} size=\"xs\" className={classes.tooltipIcon}/>\r\n                        </IconButton>\r\n                      </IconTooltip>\r\n                    </div>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={RFWGFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: RFWGFilterOptions[RFWGFilter - 1].value, id: RFWGFilter }]}\r\n                        onChange={evt => {\r\n                          setRFWGFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl id=\"DDS2\" fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={RFWGDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"label\"}\r\n                        values={RFWGDropdownOptions.slice(0, 5)}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length} Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({ item, itemIndex, props, state, methods }) => {\r\n                          return (\r\n                            <div key={item[props.valueField]} onClick={() => {\r\n                              if (RFWGValues.length >= 7) {\r\n                                if (methods.isSelected(item)) {\r\n                                  methods.addItem(item)\r\n                                }\r\n                              } else {\r\n                                methods.addItem(item)\r\n                              }\r\n                            }}>\r\n                              <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                                <input type=\"checkbox\" checked={methods.isSelected(item)} onChange={() => {}} />\r\n                                &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        }}\r\n                        clearRenderer={\r\n                          ({ props, state, methods }) => {\r\n                            return (\r\n                              <Buttons>\r\n                                {state.values.length > 0 ? (\r\n                                  <ButtonClearSelect id=\"DSButton2\" className=\"clear\" onClick={methods.clearAll} checked={false}>\r\n                                    Clear all\r\n                                  </ButtonClearSelect>\r\n                                ) : (\r\n                                  <ButtonClearSelect\r\n                                    id=\"DSButton2\"\r\n                                    onClick={() => {\r\n                                      methods.selectAll(RFWGDropdownOptions.slice(0,5))\r\n                                    }}\r\n                                    checked={true}\r\n                                  >\r\n                                    Reset\r\n                                  </ButtonClearSelect>\r\n                                )}\r\n                              </Buttons>\r\n                            );\r\n                          }\r\n                        }\r\n                        onChange={(values) => {\r\n                          setRFWGValues(values)\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWG\">\r\n                    {plotDrugsAndGenotypesChart}\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-wrapper-RDWAG\">\r\n                  <div className=\"chart-wrapper-RDWAG-div\">\r\n                    <span className=\"chart-title chart-wrapper-RDWAG-title\">Resistance determinants within genotypes</span>\r\n                    <div className=\"chart-wrapper-RDWAG-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartRFWAGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWAGInProgress)\r\n                              capturePicture('RFWAG', 4, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, amrClassFilter: amrClassFilter, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWAGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title chart-wrapper-RDWAG-top\">Top Genotypes (up to 10)</span>\r\n                  <div className=\"chart-wrapper-RDWAG-view\" style={{ width: dimensions.width > desktop ? \"71%\" : \"90%\" }}>\r\n                    <InputLabel className={classes.inputLabel}>Select Drug Class</InputLabel>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={amrClassFilterforFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: amrClassFilter, id: (amrClassFilterforFilterOptions.find(o => o.value === amrClassFilter)).id }]}\r\n                        onChange={evt => {\r\n                          setAmrClassFilter(evt[0].value)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    <InputLabel className={classes.inputLabel}>Data view</InputLabel>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={amrClassFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: amrClassFilterOptions[RDWAGDataviewFilter - 1].value, id: RDWAGDataviewFilter }]}\r\n                        onChange={evt => {\r\n                          setRDWAGDataviewFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWAG\" >\r\n                    {plotAmrClassChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"chart-wrapper-div3\" style={{ paddingLeft: dimensions.width < mobile ? 0 : 10, marginTop: dimensions.width < desktop ? 50 : 0 }}>\r\n                <div className=\"chart-wrapper-DRT\">\r\n                  <div className=\"chart-wrapper-DRT-div\">\r\n                    <span className=\"chart-title chart-wrapper-DRT-title\">Drug resistance trends</span>\r\n                    <div className=\"chart-wrapper-DRT-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartDRTInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartDRTInProgress)\r\n                              capturePicture('DRT', 2, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, drugs: trendValues, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartDRTInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">Data are plotted for years with N ≥ 10 genomes</span>\r\n                  {dimensions.width > desktop && (<span className=\"chart-title\" ></span>)}\r\n                  <div className=\"chart-wrapper-DRT-view\" style={{ width: dimensions.width > 790 ? \"71%\" : '260px' }}>\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">Drugs view</div>\r\n                    </div>\r\n                    <FormControl id=\"DDS\" fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={trendDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"value\"}\r\n                        values={trendDropdownOptions}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length} Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({ item, itemIndex, props, state, methods }) => (\r\n                          <div key={item[props.valueField]} onClick={() => methods.addItem(item)}>\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                              <input type=\"checkbox\" checked={methods.isSelected(item)} onChange={() => {}}/>\r\n                              &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        clearRenderer={\r\n                          ({ props, state, methods }) => {\r\n                            return (\r\n                              <Buttons>\r\n                                {methods.areAllSelected() ? (\r\n                                  <ButtonClearSelect id=\"DSButton\" className=\"clear\" onClick={methods.clearAll} checked={false}>\r\n                                    Clear all\r\n                                  </ButtonClearSelect>\r\n                                ) : (\r\n                                  <ButtonClearSelect id=\"DSButton\" onClick={methods.selectAll} checked={true}>Select all</ButtonClearSelect>\r\n                                )}\r\n                              </Buttons>\r\n                            );\r\n                          }\r\n                        }\r\n                        onChange={(values) => {\r\n                          const doc = document.getElementById('DRT');\r\n                          const lines = doc.getElementsByClassName('recharts-line')\r\n                          for (let index = 0; index < lines.length; index++) {\r\n                            const isValue = values.some(e => e.id === index)\r\n                            lines[index].style.display = isValue ? 'block' : 'none';\r\n                          }\r\n                          setTrendValues(values)\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"DRT\">\r\n                    {plotDrugTrendsChart}\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-wrapper-GD\">\r\n                  <div className=\"chart-wrapper-GD-div\">\r\n                    <span className=\"chart-title chart-wrapper-GD-title\">Genotype distribution</span>\r\n                    <div className=\"chart-wrapper-GD-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartGDInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartGDInProgress)\r\n                              capturePicture('GD', 3, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartGDInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {dimensions.width > desktop && (<span className=\"chart-title chart-wrapper-GD-space\"></span>)}\r\n                  <div className=\"chart-wrapper-GD-view\" style={{ paddingTop: dimensions.width > desktop ? '67px' : '', width: dimensions.width > desktop ? \"71%\" : \"90%\" }}>\r\n                    <InputLabel className={classes.inputLabel}>Data view</InputLabel>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={populationStructureFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: populationStructureFilterOptions[populationStructureFilter - 1].value, id: populationStructureFilter }]}\r\n                        onChange={evt => {\r\n                          setPopulationStructureFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"GD\">\r\n                    {plotPopulationStructureChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"wrapper-download-sheet-button\" style={{ flexDirection: dimensions.width > desktop ? \"row\" : \"column\", padding: dimensions.width < desktop ? '0px 12px 12px 12px' : '50px 12px 12px 12px', width: \"-webkit-fill-available\" }}>\r\n              <div className=\"download-sheet-button\" onClick={() => dowloadBaseSpreadsheet()}>\r\n                <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\r\n                <span>Download database</span>\r\n              </div>\r\n              {/* <div style={{ marginTop: dimensions.width > desktop ? 0 : 20, marginLeft: dimensions.width > desktop ? 20 : 0 }} className={`download-sheet-button`} onClick={() => {\r\n                if (!captureReportInProgress) {\r\n                  setCaptureReportInProgress(true);\r\n                  capturePicture('', 5, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion, amrClassFilter: amrClassFilter, actualGenomes: actualGenomes.length, drugs: trendValues, dimensions: dimensions, desktop: desktop, RFWGCount: RFWGValues.length });\r\n                }\r\n              }}>\r\n                <FontAwesomeIcon icon={faFilePdf} style={{ marginRight: 8 }} />\r\n                <span>Download report from current view</span>\r\n                {captureReportInProgress && (<div style={{ position: 'absolute', paddingBottom: 32, paddingRight: 20 }}>\r\n                  <CustomCircularProgress\r\n                    size={44}\r\n                    thickness={4}\r\n                    style={{ position: \"absolute\", top: -5, left: -6, color: \"white\" }} />\r\n                </div>)}\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"about-wrapper\">\r\n          <h2>About TyphiNET</h2>\r\n          <p>\r\n            The TyphiNET dashboard collates antimicrobial resistance (AMR) and genotype (lineage) information extracted from whole genome sequence (WGS) data from the bacterial pathogen <i>Salmonella</i> Typhi, the agent of typhoid fever. Data are sourced monthly from Typhoid <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">Pathogenwatch</a>. Information on genotype definitions and population structure can be found in <a href=\"https://www.nature.com/articles/ncomms12827\" target=\"_blank\" rel=\"noreferrer\">Wong et al, 2016</a>, and details of AMR determinants in <a href=\"https://www.nature.com/articles/s41467-021-23091-2\" target=\"_blank\" rel=\"noreferrer\">Argimon et al, 2021</a>. (CipI/R = decreased ciprofloxacin susceptibility).\r\n          </p>\r\n          <p>\r\n            The TyphiNET dashboard is coordinated by Dr Zoe Dyson, Dr Louise Cerdeira &amp; Prof Kat Holt at the <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">London School of Hygiene and Tropical Medicine</a> &amp; <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">Monash University</a>, supported by the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the EU Horizon 2020 research and innovation programme (Marie Skłodowska-Curie grant #845681).\r\n          </p>\r\n          <p>\r\n            <b>Note: This is a beta version, data are incomplete</b>.\r\n          </p>\r\n        </div>\r\n        <div className=\"footer-buttons-wrapper\">\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('mailto:dashboard@typhi.net', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} className=\"fontawesome-icon\" />\r\n            <span>Contact</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://github.com/zadyson/TyphiNET', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} className=\"fontawesome-icon\" />\r\n            <span>GitHub</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://twitter.com/typhinet', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} className=\"fontawesome-icon\" />\r\n            <span>Twitter</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }} />\r\n        <div className=\"footer\">\r\n          <span>Data obtained from: <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">pathogen watch project</a> on 15/06/2021. <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">Holt Lab</a></span>\r\n        </div>\r\n        <div className=\"fab-button\" style={{ width: dimensions.width < mobile ? '48px' : '56px' }}>\r\n          <TooltipMaterialUI title={<span className=\"my-font\">Reset Configurations</span>} placement=\"left\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size={dimensions.width < mobile ? 'medium' : 'large'}\r\n              onClick={() => {\r\n                setMapView('CipI');\r\n                setDataset('All');\r\n                setActualTimeInitial(timeInitial);\r\n                setActualTimeFinal(timeFinal);\r\n                setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                setActualCountry('All');\r\n                setActualRegion('All');\r\n                setPopulationStructureFilter(1);\r\n                setAmrClassFilter(amrClassesForFilter[5]);\r\n                setRDWAGDataviewFilter(2)\r\n                setRFWGFilter(2)\r\n                setActualContinent(\"All\")\r\n                const text = document.getElementById('DSButton')\r\n                if (text.innerText === \"SELECT ALL\") {\r\n                  text.click()\r\n                }\r\n                const text2 = document.getElementById('DSButton2')\r\n                if (text2.innerText === \"RESET\") {\r\n                  text2.click()\r\n                }\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faUndoAlt} size=\"lg\" color=\"white\" />\r\n            </Fab>\r\n          </TooltipMaterialUI>\r\n        </div>\r\n      </div>\r\n      <div className=\"loading\">\r\n        {dimensions.width > desktop && (\r\n          <img className=\"logoImageMenu-loading\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n        )}\r\n        <Loader\r\n          className=\"my-loader\"\r\n          type=\"Circles\"\r\n          color=\"#D91E45\"\r\n          height={70}\r\n          width={70}\r\n        />\r\n      </div>\r\n      <div className=\"info\" id=\"report-info\">\r\n        <p><b>TyphiNET report [{(new Date()).toString().replace(/ *\\([^)]*\\) */g, \"\")}]</b></p>\r\n        <p>This report was generated by the TyphiNET <a href=\"http://typhi.net\">(http://typhi.net)</a> website, a data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch <a href=\"http://pathogen.watch\">(http://pathogen.watch)</a>. Data were last updated on [{lastUpdated.toString()}].</p>\r\n        <p>This report was generated at [{(new Date()).toString().replace(/ *\\([^)]*\\) */g, \"\")}] using the beta version of TyphiNET which is still undergoing development and data are not yet complete. For code and further details please see: <a href=\"https://github.com/zadyson/TyphiNET\">https://github.com/zadyson/TyphiNET</a></p>\r\n        <p className=\"info-p\">The genotypes reported here are defined in <b>Dyson & Holt (2021), J. Infect. Dis.</b></p>\r\n        <p className=\"info-p\">Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, <b>Argimón et al. 2021, Nat. Commun.</b></p>\r\n        <p>Travel-associated cases are attributed to the country of travel, not the country of isolation (see <b>Ingle et al. 2019, PLoS NTDs</b>).</p>\r\n        <p>{'TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (typhi.net).'}</p>\r\n        <p>The TyphiNET dashboard was developed with support from the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the EU Horizon 2020 research and innovation programme (Marie Sklodowska-Curie grant #845681).</p>\r\n        { actualCountry !== \"All\" && (\r\n          <div>\r\n            <p className=\"info-p\"><b>For country report:</b></p>\r\n            <p>Studies contributing genomes representing infections originating from {actualCountry} have the following PubMed IDs (PMIDs): {countryPMID.join(', ')}.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","import { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n      color: \"rgb(31, 187, 211)\"\r\n  }\r\n})(CircularProgress);\r\n\r\nconst useStyles = makeStyles({\r\n    cellON: {\r\n        backgroundColor: '#e9f9fc'\r\n    },\r\n    off: {},\r\n    tableID : {\r\n        position: 'sticky',\r\n        right: 0\r\n    },\r\n    tablePadding: {\r\n        marginTop: '16px'\r\n    },\r\n    stickyCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n        backgroundColor: 'white'\r\n    },\r\n    stickyHeaderCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    changesTable: {\r\n        maxHeight: '400px',\r\n        marginBottom: 32\r\n    },\r\n    viewButton: {\r\n        width: 100\r\n    },\r\n    resetButton: {\r\n        width: 150,\r\n        height: 40,\r\n        marginRight: 16\r\n    },\r\n    uploadButton: {\r\n        width: 150,\r\n        height: 40\r\n    },\r\n    checkChangesButton: {\r\n      width: 100,\r\n      height: 40,\r\n      marginLeft: 16\r\n    }, \r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    input: {\r\n        marginBottom: 16\r\n    },\r\n    input2: {\r\n        marginBottom: 16\r\n    },\r\n    currentData: {\r\n      backgroundColor: 'black',\r\n      color: 'white'\r\n    },\r\n    toolbar: {\r\n      backgroundColor: 'black',\r\n      borderBottom: '1px solid white',\r\n      justifyContent: 'space-between'\r\n    },\r\n    deleteSelected: {\r\n      color: 'red'\r\n    },\r\n    checkboxCell: {\r\n      backgroundColor: 'black'\r\n    },\r\n    checkbox: {\r\n      color: 'white'\r\n    },\r\n    tableRowRoot: {\r\n      \"&$tableRowSelected, &$tableRowSelected:hover\": {\r\n        backgroundColor: '#e9f9fc'\r\n      }\r\n    },\r\n    tableRowSelected: {\r\n      backgroundColor: '#e9f9fc'\r\n    },\r\n    box: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingLeft: 16\r\n    },\r\n    select: {\r\n      textAlign: 'right',\r\n      paddingLeft: 8,\r\n      textAlignLast: 'right',\r\n      minWidth: 16,\r\n      userSelect: 'none',\r\n      borderRadius: 0,\r\n      font: 'inherit',\r\n      letterSpacing: 'inherit',\r\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n      fontSize: 14,\r\n      backgroundColor: 'transparent',\r\n      '&:focus': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      marginRight: 12\r\n    },\r\n    choosePage: {\r\n      opacity: 0.87\r\n    },\r\n    selectFilter: {\r\n      backgroundColor: 'white',\r\n      textAlign: 'start'\r\n    },\r\n    header: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'stretch'\r\n    },\r\n    headerTitle:{\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'flex-start'\r\n    },\r\n    rowHeader: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-start'\r\n    }\r\n  });\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'grey',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n      marginRight: '16px'\r\n    },\r\n}))(Button);\r\n\r\nconst ColorButton3 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'white',\r\n      color: '#1FBBD3',\r\n      '&:hover': {\r\n        color: 'black',\r\n        backgroundColor: '#CFCFCF'\r\n      },\r\n      borderColor: '#1FBBD3'\r\n    },\r\n}))(Button);\r\n\r\nconst ColorButton4 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: '#1FBBD3',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#188C9E'\r\n      }\r\n    },\r\n}))(Button);\r\n\r\nconst ColorButton5 = withStyles((theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    fontWeight: 'bold'\r\n  },\r\n}))(Button);\r\n\r\nconst StyledHeaderCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\nconst CustomTableContainer = withStyles((theme) => ({\r\n    root: {\r\n        maxHeight: '600px'\r\n    }\r\n}))(TableContainer);\r\n\r\nconst CustomTableSortLabel = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        \"&:hover\": {\r\n        color: 'white',\r\n      },\r\n      '&$active': {\r\n        color: 'white',\r\n      },\r\n    },\r\n    active: {},\r\n    icon: {\r\n        color: 'inherit !important'\r\n    },\r\n}))(TableSortLabel);\r\n\r\n\r\nexport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress};","import './index.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Tooltip, Toolbar, Typography, Checkbox, Box, IconButton, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport {FirstPage, LastPage, KeyboardArrowLeft, KeyboardArrowRight} from '@material-ui/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress } from './materialUI'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport axios from 'axios';\r\nimport LZString from 'lz-string';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction createData(id, date, changes) {\r\n  return { id, date, changes };\r\n}\r\n\r\nconst AdminPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [rows, setRows] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [originalData, setOriginalData] = useState([])\r\n    const [currentData, setCurrentData] = useState(0)\r\n    const [tableKeys, setTableKeys] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('NAME');\r\n    const [currentRow, setCurrentRow] = useState({})\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const [open3, setOpen3] = React.useState(false);\r\n    const [open4, setOpen4] = React.useState(false);\r\n    const [open5, setOpen5] = React.useState(false);\r\n    const [open6, setOpen6] = React.useState(false);\r\n    const [open7, setOpen7] = React.useState(false);\r\n    const [resultMessage, setResultMessage] = React.useState(\"\");\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [filters, setFilters] = React.useState({});\r\n    const [filterOptions, setFilterOptions] = React.useState({});\r\n    const [filteredData, setFilteredData] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [startProgress, setStartProgress] = React.useState(false);\r\n    const [loadingMessage, setLoadingMessage] = React.useState(\"\");\r\n\r\n    const [exceptions] = React.useState([\"NAME\", \"ACCESION\", \"Genome ID\", \"LATITUDE\", \"LONGITUDE\", \"LOCATION\", \"Mash Distance\", \"Matching Hashes\", \"SANGER LANE\", \"STRAIN\"]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function changeView (id) {\r\n        resetChanges()\r\n        setData(originalData)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        if (id > 0) {\r\n            for (let index = 0; index < id; index++) {\r\n                Object.keys(rows[index].changes.added).forEach(element => {\r\n                    const genome = rows[index].changes.added[element]\r\n                    const gIndex = aux.findIndex(x => x.NAME === genome.NAME)\r\n                    aux.splice(gIndex, 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.deleted).forEach(element => {\r\n                    const genome = rows[index].changes.deleted[element]\r\n                    aux.push(genome)\r\n                    aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.updated).forEach(element => {\r\n                    const keys = rows[index].changes.updated[element]\r\n                    for (const key in keys) {\r\n                        const genome = aux.filter(x => x.NAME === element)\r\n                        if (genome.length > 0) {\r\n                            genome[0][key] = keys[key].old\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            setData(aux)\r\n        }\r\n        setCurrentData(id)\r\n    }\r\n\r\n    function betterChanges (changes) {\r\n        const aux = JSON.parse(JSON.stringify(changes))\r\n        const added = Object.keys(aux.added).length > 0 ? Object.keys(aux.added).join(\", \") + \".\" : \"\"\r\n        const deleted = (Object.keys(aux.deleted).length > 0 ? (Object.keys(aux.deleted).join(\", \")) + \".\" : \"\")\r\n        let updated = \"\"\r\n        \r\n        if (Object.keys(aux.updated).length > 0) {\r\n            updated = Object.entries(aux.updated).map(x => {\r\n                const updates = Object.entries(x[1])\r\n                const changes = updates.map((y, i) => {\r\n                    const point = i === updates.length - 1 ? \".\" : \"\"\r\n                    return y[0] + \" (new: \" + y[1].new + \", old: \" + y[1].old + \")\" + point\r\n                });\r\n                return x[0] + \": \" + changes.join(\", \");\r\n            })\r\n        }\r\n        \r\n        const text = []\r\n        if (added !== \"\") text.push([\"ADDED\", added])\r\n        if (deleted !== \"\") text.push([\"DELETED\", deleted])\r\n        if (updated !== \"\") text.push([\"UPDATED\", updated])\r\n        return text\r\n    }\r\n\r\n    function handleDelete (row) {\r\n        setCurrentRow(row)\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleEdit (row) {\r\n        setCurrentRow(row)\r\n        setOpen2(true)\r\n    }\r\n\r\n    function handleUpload () {\r\n        setOpen4(true)\r\n    }\r\n\r\n    function handleCheckChanges (message) {\r\n        setResultMessage(message);\r\n        setOpen5(true);\r\n    }\r\n\r\n    async function checkChanges (showPopup = true) {\r\n        setStartProgress(true);\r\n        setLoading(true);\r\n        return await axios.get(`${API_ENDPOINT}mongo/checkForChanges`)\r\n            .then(async (res) => {\r\n                if (res.data.Status === \"Changes\") {\r\n                    await resetChanges();\r\n                    await getData();\r\n                    if (showPopup) {\r\n                        handleCheckChanges('Changes were found. Tables updated.');\r\n                    }\r\n                    return true\r\n                } else if (res.data.Status === \"No Changes\") {\r\n                    if (showPopup) {\r\n                        handleCheckChanges('No changes found.');\r\n                    }\r\n                    return false\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (showPopup) {\r\n                    handleCheckChanges('Could not check for changes. Try again later.');\r\n                }\r\n                return false\r\n            })\r\n            .finally(()=>{\r\n                setOpen7(false)\r\n                setLoading(false);\r\n                setStartProgress(false);\r\n            })\r\n    }\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n          const newSelecteds = filteredData.map((n) => n.NAME);\r\n          setSelected(newSelecteds);\r\n          return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n    \r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n    \r\n        setSelected(newSelected);\r\n    };\r\n\r\n    function deleteRow () {\r\n        // if (isSelected(currentRow.NAME)) {\r\n        //     handleClick(currentRow.NAME)\r\n        // }\r\n        const index = data.findIndex(x => x.NAME === currentRow.NAME)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        aux.splice(index, 1)\r\n        setData(aux)\r\n        setOpen(false)\r\n    }\r\n\r\n    function deleteRows () {\r\n        const aux = JSON.parse(JSON.stringify(filteredData))\r\n        const aux2 = JSON.parse(JSON.stringify(data))\r\n        selected.forEach(row => {\r\n            const index = aux.findIndex(x => x.NAME === row);\r\n            if (index !== -1) {\r\n                aux.splice(index, 1)\r\n            }\r\n            const index2 = aux2.findIndex(x => x.NAME === row);\r\n            if (index2 !== -1) {\r\n                aux2.splice(index2, 1)\r\n            }\r\n        })\r\n        setData(aux2)\r\n        setFilteredData(aux)\r\n        setSelected([])\r\n        setOpen6(false)\r\n    }\r\n\r\n    function editRow () {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const rowIndex = aux.findIndex(x => x.NAME === currentRow.NAME)\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n        \r\n        aux[rowIndex] = row\r\n        setData(aux)\r\n        setOpen2(false)\r\n        setResultMessage(`Row ${currentRow.NAME} edited with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    function addRow () {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n        \r\n        aux.push(row)\r\n        aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n        setData(aux)\r\n        setOpen3(false)\r\n        setResultMessage(`Row ${row.NAME} added with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    async function resetChanges () {\r\n        setSearch(\"\")\r\n        let aux = JSON.parse(JSON.stringify(filters))\r\n        for (const key in aux) {\r\n            aux[key] = \"\"\r\n        }\r\n        setFilters(aux)\r\n        setPage(0)\r\n        setRowsPerPage(10)\r\n        setCurrentData(0)\r\n        setData(originalData)\r\n    }\r\n\r\n    function uploadChanges () {\r\n        setLoading(true)\r\n        setStartProgress(true);\r\n        setResultMessage(\"\")\r\n        const times = Math.ceil(data.length / 1500)\r\n        const parts = []\r\n        for (let index = 0; index < times; index++) {\r\n            if (times === 0) {\r\n                break\r\n            }\r\n            if (times === index - 1) {\r\n                if (times === 1) {\r\n                    parts.push([data])\r\n                } else {\r\n                    parts.push([data.slice((times - 1) * 1500)])\r\n                }\r\n            } else {\r\n                parts.push([data.slice(index * 1500, (index * 1500) + 1500)])\r\n            }\r\n            axios.post(`${API_ENDPOINT}mongo/upload/admin`, {\r\n                data: LZString.compress(JSON.stringify(parts[parts.length - 1])),\r\n                parts: times,\r\n                current: index + 1\r\n            })\r\n                .then((res) => {\r\n                    if (res.data !== '' && res.data.Status === 'Uploaded') {\r\n                        axios.get(`${API_ENDPOINT}mongo/download`)\r\n                        .then(async () => {\r\n                            await checkChanges()\r\n                            setResultMessage(\"Upload and download completed!\")\r\n                        })\r\n                        .catch(() => {\r\n                            setResultMessage(\"Something went wrong with the download, please try again later!\")\r\n                        })\r\n                        .finally(() => {\r\n                            setStartProgress(false)\r\n                            setLoading(false)\r\n                            setOpen4(false)\r\n                            setOpen5(true)\r\n                        })\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    setStartProgress(false)\r\n                    setLoading(false)\r\n                    setOpen4(false)\r\n                    setResultMessage(\"Something went wrong with the upload, please try again later!\")\r\n                    setOpen5(true)\r\n                })\r\n        }\r\n        \r\n    }\r\n\r\n    async function getData () {\r\n        await axios.get(`${API_ENDPOINT}file/databaseLog`)\r\n          .then((res) => {\r\n            let data = res.data\r\n            let aux = []\r\n            for (let index = 0; index < data.length - 1; index++) {\r\n                const date = new Date(data[index].updatedAt)\r\n                aux.push(\r\n                    createData(index, date.toLocaleString(), data[index].changes)\r\n                )\r\n            }\r\n            setRows(aux)\r\n            \r\n            let aux2 = Object.values(data[data.length - 1].data)\r\n            let aux4 = {}\r\n            let aux5 = {}\r\n\r\n            Object.keys(aux2[0]).forEach(key => {\r\n                if (!exceptions.includes(key)) {\r\n                    aux4[key] = \"\"\r\n                    aux5[key] = []\r\n                    let options = aux2.map(value => value[key]);\r\n                    options.forEach(x => {\r\n                        if (!aux5[key].includes(x)) {\r\n                            aux5[key].push(x)\r\n                        }\r\n                    })\r\n                    aux5[key].sort()\r\n                }\r\n            });\r\n            \r\n            setData(aux2)\r\n            setFilters(aux4)\r\n            setFilterOptions(aux5)\r\n            setFilteredData(JSON.parse(JSON.stringify(aux2)))\r\n            setOriginalData(JSON.parse(JSON.stringify(aux2)))\r\n            setTableKeys(Object.keys(aux2[0]))\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoadingMessage(\"Checking for changes...\")\r\n        checkChanges(false).then((response)=>{\r\n            if (!response) {\r\n                getData().finally(() => {\r\n                    setIsLoading(false);\r\n                });\r\n            } else {\r\n                setIsLoading(false);\r\n            }\r\n        }).finally(()=>{\r\n            setLoadingMessage(\"\")\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let aux = JSON.parse(JSON.stringify(data))\r\n        if (search === \"\" && Object.values(filters).join(\"\") === \"\") {\r\n            setFilteredData(aux)\r\n        } else {\r\n            let s = search.toLowerCase()\r\n\r\n            aux = aux.filter(x => {\r\n                let pass = true\r\n                Object.keys(x).forEach(y => {\r\n                    if (!exceptions.includes(y) && filters[y] !== \"\" && x[y] !== filters[y]) {\r\n                        pass = false\r\n                    }\r\n                    if (search !== \"\" && !Object.values(x).join(\" \").toLowerCase().includes(s)) {\r\n                        pass = false\r\n                    }\r\n                })\r\n                return pass\r\n            })\r\n\r\n            setFilteredData(aux)\r\n        }\r\n    }, [search, data, filters, exceptions])\r\n\r\n    const EnhancedTableToolbar = (props) => {\r\n        const { numSelected } = props;\r\n        \r\n        return (\r\n            <Toolbar className={classes.toolbar}>\r\n                {numSelected > 0 ? (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        color=\"inherit\"\r\n                        variant=\"subtitle1\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        <b>DATA ID:</b> {currentData}\r\n                    </Typography>\r\n                )}\r\n\r\n                <SearchBar\r\n                    value={search}\r\n                    placeholder={\"Search and press enter...\"}\r\n                    onCancelSearch={() => {\r\n                        setSearch(\"\")\r\n                        setPage(0)\r\n                    }}\r\n                    onRequestSearch={(value) => {\r\n                        setSearch(value)\r\n                        setPage(0)\r\n                    }}\r\n                />\r\n            \r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"Delete\">\r\n                        <IconButton onClick={() => setOpen6(true)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className={classes.deleteSelected}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : null}\r\n\r\n                \r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    function EnhancedTableHead(props) {\r\n        const { classes, order, orderBy, onRequestSort, onSelectAllClick, numSelected, rowCount } = props;\r\n        const createSortHandler = (property) => (event) => {\r\n            onRequestSort(event, property);\r\n        };\r\n        \r\n        return data.length > 0 && (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\" className={classes.checkboxCell}>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            className={classes.checkbox}\r\n                        />\r\n                    </TableCell>\r\n                    {tableKeys.map((headCell) => (\r\n                        <StyledHeaderCell\r\n                            key={headCell + 'table'}\r\n                            align={'center'}\r\n                            sortDirection={orderBy === headCell ? order : false}\r\n                        >\r\n                            <CustomTableSortLabel\r\n                                active={orderBy === headCell}\r\n                                direction={orderBy === headCell ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell)}\r\n                                className={classes.rowHeader}\r\n                            >\r\n                                <div className={classes.header}>\r\n                                    <div className={classes.headerTitle}>{headCell}</div>\r\n                                    {!exceptions.includes(headCell) && (\r\n                                        <FormControl>\r\n                                            <Select\r\n                                                value={filters[headCell]}\r\n                                                onChange={(event) => {\r\n                                                    setPage(0)\r\n                                                    let aux = JSON.parse(JSON.stringify(filters))\r\n                                                    aux[headCell] = event.target.value\r\n                                                    setFilters(aux)\r\n                                                    event.stopPropagation()\r\n                                                }}\r\n                                                displayEmpty\r\n                                                className={classes.selectFilter}\r\n                                                onOpen={(event) => event.stopPropagation()}\r\n                                                onClose={(event) => event.stopPropagation()}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem>\r\n                                                {filterOptions[headCell].map((option, i) => (<MenuItem key={i + option} value={option}>{option}</MenuItem>))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    )}\r\n                                </div>\r\n                            </CustomTableSortLabel>\r\n                        </StyledHeaderCell>\r\n                    ))}\r\n                    <TableCell className={classes.stickyHeaderCell}>\r\n                        <div className=\"actions\">ACTIONS</div>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n\r\n    function NumberOfPages() {\r\n        return Math.ceil(filteredData.length / rowsPerPage)\r\n    }\r\n\r\n    function TablePaginationActions(props) {\r\n        const theme = useTheme();\r\n        const { count, page, rowsPerPage, onPageChange } = props;\r\n      \r\n        const handleFirstPageButtonClick = (event) => {\r\n          onPageChange(event, 0);\r\n        };\r\n      \r\n        const handleBackButtonClick = (event) => {\r\n          onPageChange(event, page - 1);\r\n        };\r\n      \r\n        const handleNextButtonClick = (event) => {\r\n          onPageChange(event, page + 1);\r\n        };\r\n      \r\n        const handleLastPageButtonClick = (event) => {\r\n          onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n        };\r\n      \r\n        return (\r\n          <Box sx={{ flexShrink: 0, ml: 2.5 }} className={classes.box}>\r\n            <IconButton\r\n              onClick={handleFirstPageButtonClick}\r\n              disabled={page === 0}\r\n              aria-label=\"first page\"\r\n            >\r\n              {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label=\"previous page\"\r\n            >\r\n              {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleNextButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label=\"next page\"\r\n            >\r\n              {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleLastPageButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label=\"last page\"\r\n            >\r\n              {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n            </IconButton>\r\n          </Box>\r\n        );\r\n    } \r\n      \r\n    TablePaginationActions.propTypes = {\r\n        count: PropTypes.number.isRequired,\r\n        onPageChange: PropTypes.func.isRequired,\r\n        page: PropTypes.number.isRequired,\r\n        rowsPerPage: PropTypes.number.isRequired,\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    return (\r\n        <div className=\"mainDiv\">\r\n            <div className=\"mainDiv-padding\">\r\n                <div className=\"titleActions\">\r\n                    <div className=\"titleButtonRow\">\r\n                        <h2 className=\"title\">MongoDB Admin Page</h2>\r\n                        <ColorButton5 onClick={() => {setOpen7(true)}} variant=\"outlined\" size=\"small\" className={classes.checkChangesButton} >Refresh</ColorButton5>\r\n                    </div>\r\n                    <div className=\"tooltipSubmitRow\">\r\n                        <Tooltip \r\n                            title={<div className=\"tooltipTitle\">Changes are only saved by pressing the <b className=\"boldTooltipText\">SUBMIT CHANGES</b> button!</div>}\r\n                            placement=\"left\"\r\n                        >\r\n                            <IconButton>\r\n                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <ColorButton4 onClick={() => {handleUpload()}} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    </div>\r\n                </div>\r\n                <TableContainer component={Paper} className={classes.changesTable}>\r\n                    <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledHeaderCell>ID</StyledHeaderCell>\r\n                                <StyledHeaderCell>Date</StyledHeaderCell>\r\n                                <StyledHeaderCell align=\"left\">Changes</StyledHeaderCell>\r\n                                <StyledHeaderCell className={classes.stickyHeaderCell} align=\"left\">Actions</StyledHeaderCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row, r) => (\r\n                                <TableRow key={row.id + 'changes'} className={row.id === currentData ? classes.cellON : classes.off}>\r\n                                    <TableCell align=\"left\">{row.id}</TableCell>\r\n                                    <TableCell align=\"left\">{row.date}</TableCell>\r\n                                    <TableCell align=\"left\">{betterChanges(row.changes).map((text, t) => (\r\n                                        <div key={`${r}${t}change`} className=\"changesText\">\r\n                                            <div>{text[0]}</div>\r\n                                            &nbsp;{\"entries with name:\"}&nbsp;\r\n                                            {text[0] !== \"UPDATED\" \r\n                                                ? (<div>{text[1]}</div>) \r\n                                                : (\r\n                                                    <div>\r\n                                                        {Object.values(text[1]).map((x, i) => (<div key={x + i}>{x}</div>))}\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    ))}</TableCell>\r\n                                    <TableCell align=\"left\" className={classes.stickyCell}>\r\n                                        <ColorButton onClick={() => changeView(row.id)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div className=\"addButton\">\r\n                    <ColorButton3\r\n                        onClick={() => {\r\n                            resetChanges()\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.resetButton}\r\n                    >\r\n                        Reset changes\r\n                    </ColorButton3>\r\n                    <ColorButton3 onClick={() => {setOpen3(true)}} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Add new entry</ColorButton3>\r\n                </div>\r\n                <Paper className={classes.tablePadding}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} />\r\n                    <CustomTableContainer>\r\n                        <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                            <EnhancedTableHead\r\n                                numSelected={selected.length}\r\n                                classes={classes}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                rowCount={filteredData.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(filteredData, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.NAME);\r\n                                    return (\r\n                                        <TableRow\r\n                                            key={row.NAME + index}\r\n                                            className={classes.dataRow}\r\n                                            role=\"checkbox\"\r\n                                            hover\r\n                                            aria-checked={isItemSelected}\r\n                                            selected={isItemSelected}\r\n                                            classes={{selected: classes.tableRowSelected, root: classes.tableRowRoot}}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    onClick={() => handleClick(row.NAME)}\r\n                                                />\r\n                                            </TableCell>\r\n                                            {Object.values(row).map((cell) => (\r\n                                                <TableCell key={Math.random() + 'cell'} align=\"center\">{cell}</TableCell>\r\n                                            ))}\r\n                                            <TableCell align=\"center\" className={classes.stickyCell}>\r\n                                                <div className=\"tableActions\">\r\n                                                    <IconButton aria-label=\"edit\" size=\"small\" onClick={() => handleEdit(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faEdit} className=\"editIcon\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton aria-label=\"delete\" size=\"small\" onClick={() => handleDelete(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} className=\"trashIcon\"/>\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CustomTableContainer>\r\n                    <div className=\"pagination\">\r\n                        <Typography className={classes.choosePage} variant=\"body2\">Choose Page: </Typography>\r\n                        {filteredData.length > 0 && (<Select\r\n                            value={page}\r\n                            onChange={(event) => {setPage(event.target.value)}}\r\n                            className={classes.select}\r\n                            disableUnderline\r\n                        >\r\n                            {[...Array(NumberOfPages())].map((x, i) => <MenuItem key={x + 'nPage'} value={i}>{i}</MenuItem>)}\r\n                        </Select>)}\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 50, 100]}\r\n                            component=\"div\"\r\n                            count={filteredData.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n            { isLoading && (<div className=\"div-loader\">\r\n                <Loader\r\n                    type=\"Circles\"\r\n                    color=\"white\"\r\n                    height={70}\r\n                    width={70}\r\n                />\r\n                <p className=\"div-loader-msg\">{loadingMessage}</p>\r\n            </div>)}\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to delete {currentRow.NAME} ?\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n                <Button onClick={() => deleteRow()} autoFocus>\r\n                    Ok\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open2}\r\n                onClose={() => setOpen2(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Edit\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {Object.entries(currentRow).map(item => (\r\n                        <TextField key={item[0] + 'input'} id={item[0]} className={classes.input} label={item[0]} variant=\"outlined\" defaultValue={item[1]} />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen2(false)}>Cancel</Button>\r\n                    <Button onClick={() => editRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open3}\r\n                onClose={() => setOpen3(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Add\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {data.length > 0 && Object.keys(data[0]).map(item => (\r\n                        <TextField key={item + 'input2'} id={item} className={classes.input2} label={item} variant=\"outlined\" />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen3(false)}>Cancel</Button>\r\n                    <Button onClick={() => addRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open4}\r\n                onClose={() => setOpen4(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Submit data\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Would you like to submit changes to the database and download the new version to TyphiNET ?\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                {!startProgress && (<Button onClick={() => setOpen4(false)}>Cancel</Button>)}\r\n                {!startProgress && (<Button onClick={() => uploadChanges()} autoFocus>\r\n                    Ok\r\n                </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open5}\r\n                onClose={() => setOpen5(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Result\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {resultMessage}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen5(false)} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open6}\r\n                onClose={() => setOpen6(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete many\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to delete {selected.length} row(s) ?\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => setOpen6(false)}>Cancel</Button>\r\n                <Button onClick={() => deleteRows()} autoFocus>\r\n                    Ok\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open7}\r\n                onClose={() => setOpen7(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Look for changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Look for changes in the database? If there are, your current changes in the table below will be reseted.\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                {!startProgress && (<Button onClick={() => setOpen7(false)}>Cancel</Button>)}\r\n                {!startProgress && (<Button onClick={() => {checkChanges()}} autoFocus>\r\n                    Ok\r\n                </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport DashboardPage from './pages/dashboard'\r\nimport AdminPage from './pages/admin'\r\n// import typhinetLogoImg from './assets/img/logo-typhinet.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <nav>\r\n          <Link to=\"/\"></Link>\r\n          <Link to=\"/admin\"></Link>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <div>\r\n              <AdminPage/>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <div className=\"App\">\r\n              <div className=\"content\">\r\n                <DashboardPage/>\r\n              </div>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    // <div className=\"App\">\r\n    //   <div className=\"content\">\r\n    //     <DashboardPage/>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}