{"version":3,"sources":["assets/img/logo-typhinet.png","constants.js","util/colorHelper.js","pages/contact/index.js","pages/dashboard/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForAMR","amr","getColorForDrug","drug","getColorForIncType","incType","useStyles","makeStyles","theme","textField","color","borderBottomColor","button","backgroundColor","fade","ContactPage","classes","React","useState","company","email","firstName","lastName","address","city","country","postalCode","additionalInformation","form","setForm","formErrors","setFormErrors","loading","setLoading","isDesktop","window","innerWidth","className","TextField","value","onChange","evt","target","fullWidth","label","style","fontFamily","fontWeight","InputProps","error","helperText","FormHelperTextProps","width","multiline","marginTop","LinearProgress","Button","variant","onClick","_formErrors","axios","post","then","res","alert","catch","formControl","spacing","marginBottom","minWidth","selectEmpty","formControlSelect","CustomSlider","withStyles","root","thumb","boxShadow","valueLabel","Slider","CustomCircularProgress","CircularProgress","CustomToggleButton","padding","selected","ToggleButton","DashboardPage","coordinates","zoom","controlMapPosition","setControlMapPosition","samplesQty","setSamplesQty","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapXDRData","setWorldMapXDRData","worldMapDCSData","setWorldMapDCSData","worldMapAZITHData","setWorldMapAZITHData","worldMapDrugsData","setWorldMapDrugsData","worldMapAmrProfilesData","setWorldMapAmrProfilesData","worldMapPlasmidIncompatibilityTypeData","setWorldMapPlasmidIncompatibilityTypeData","captureControlMapInProgress","setCaptureControlMapInProgress","tooltipContent","setTooltipContent","timePeriodRange","setTimePeriodRange","actualTimePeriodRange","setActualTimePeriodRange","countriesForFilter","setCountriesForFilter","actualCountry","setActualCountry","populationStructureFilter","setPopulationStructureFilter","amrClassesForFilter","amrClassFilter","setAmrClassFilter","drugTrendsChartData","setDrugTrendsChartData","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","chartMaxHeight","setChartMaxHeight","chartMaxWidth","setChartMaxWidth","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","dataset","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","contactModalVisible","setContactModalVisible","genotypes","sort","a","b","localeCompare","useEffect","get","limits","data","min","max","timeOutId","setTimeout","response","clearTimeout","filter","genotypeChartResponse","parseDataForGenotypeChart","parseDataForCountryMap","drugTrendsChartResponse","parseDataForDrugTrendsChart","classChartResponse","parseDataForAmrClassChart","finalPopulationStructureChartData","genomes","forEach","entry","some","g","GENOTYPE","push","e","name","YEAR","year","find","yearIndex","findIndex","undefined","genotypeSimple","genotypeSimpleIndex","length","sum","Object","entries","total","arraysEqual","populationStructureChartSums","_year","highestSum","Math","ceil","genotypesData","drugsData","amrData","finalCountries","samplesData","h58Data","mdrData","xdrData","incTypesData","dcsData","azithData","countData","array","elementToCount","parentName","childName","temp","countryIndex","parent","index","count","displayName","congoCountryIndex","centralAfricanRepublicCountryIndex","ivoryCoastCountryIndex","timorLesteCountryIndex","unshift","includes","percentage","round","toFixed","MDRs","mdr","type","parseFloat","XDRs","xdr","DCSs","dcs","AZs","az","dataForCountingDrugs","DRUGS","DRUG","incTypes","finalChartData","genotypeIndex","GENE","errorMargin","lowerValue","finalDrugTrendsChartData","finalDrugsAndGenotypesChartData","slice","a1","a2","JSON","stringify","mapSamplesColorScale","scaleLinear","domain","range","mapRedColorScale","tooltip","positionY","width1","width2","wrapperS","stroke","position","y","wrapperStyle","content","active","payload","reverse","border","display","flexDirection","fontSize","height","flexWrap","justifyContent","map","item","alignItems","fill","flex","marginLeft","amrClassChartTooltip","x","zIndex","top","allowEscapeViewBox","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","generateMapLegendOptions","percentageSteps","Array","keys","n","samplesLegend","amrProfiles","maxHeight","overflowY","d","renderMapLegend","FormControl","InputLabel","whiteSpace","Select","MenuItem","src","typhinetLogoImg","alt","textAlign","id","data-tip","projectionConfig","rotate","scale","center","onMoveEnd","strokeWidth","geography","geographies","geo","sample","s","properties","NAME","lineage","drugs","cursor","onMouseEnter","additionalInfo","samples","GENOTYPES","TOTAL","H58","MDR","DCS","AzithR","amrProfilesInfo","genotypeInfo","simpleGenotypeInfo","mdrInfo","xdrInfo","dcsInfo","azInfo","drugsInfo","incTypesInfo","onMouseLeave","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","size","newDataset","gutterBottom","marks","step","valueLabelDisplay","Zoom","in","c","Tooltip","title","placement","icon","faCrosshairs","pos","faPlus","faMinus","svgAsPngUri","document","getElementById","left","uri","canvas","createElement","ctx","getContext","mapImg","mapImgPromise","fillStyle","fillRect","drawImage","typhinetLogo","typhinetLogoPromise","typhinetLogoWidth","typhinetLogoHeight","base64","toDataURL","download","faCamera","thickness","toString","substring","marginRight","minHeight","margin","bottom","right","strokeDasharray","dataKey","interval","tick","props","paddingLeft","paddingRight","borderRadius","flexShrink","connectNulls","alignSelf","maxH","stackId","layout","plotPopulationStructureChart","amrClass","plotAmrClassChart","faTable","href","rel","faEnvelope","open","faGithub","faTwitter","visible","showCloseButton","customStyles","overflow","onClose","faTimes","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"k3xIAAe,MAA0B,0C,SCA5BA,EAAe,6BCAfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACH,MAAO,UACT,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,aACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,QACE,MAAO,YAIAC,EAAiB,SAA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","file":"static/js/main.ab47e633.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet.f503745b.png\";","export const API_ENDPOINT = \"http://localhost:8080/api/\";\n// export const API_ENDPOINT = \"https://typhinet.herokuapp.com/api/\";","export const getColorForGenotype = (genotype) => {\n  switch (genotype) {\n    case '0':\n      return \"#000000\";\n    case '0.0.1':\n    case '0.0.2':\n    case '0.0.3':\n    case '4.3.1.1.P1':\n      return \"#000000\";\n    case '0.1.0':\n    case '0.1':\n    case '0.1.1':\n    case '0.1.2':\n    case '0.1.3':\n      return \"#808080\";\n    case '1.1':\n    case '1.1.1':\n    case '1.1.2':\n    case '1.1.3':\n    case '1.1.4':\n      return \"#ffff00\";\n    case '1.2':\n    case '1.2.1':\n      return \"#ffd700\";\n    case '2':\n    case '2.0.0':\n    case '2.0.1':\n    case '2.0.2':\n      return \"#32cd32\";\n    case '2.1.0':\n    case '2.1':\n    case '2.1.1':\n    case '2.1.2':\n    case '2.1.3':\n    case '2.1.4':\n    case '2.1.5':\n    case '2.1.6':\n    case '2.1.7':\n    case '2.1.8':\n    case '2.1.9':\n      return \"#adff2f\";\n    case '2.2':\n    case '2.2.0':\n    case '2.2.1':\n    case '2.2.2':\n    case '2.2.3':\n    case '2.2.4':\n      return \"#98fb98\";\n    case '2.3':\n    case '2.3.1':\n    case '2.3.2':\n    case '2.3.3':\n    case '2.3.4':\n    case '2.3.5':\n      return \"#6b8e23\";\n    case '2.4.0':\n    case '2.4':\n    case '2.4.1':\n      return \"#2e8b57\";\n    case '2.5.0':\n    case '2.5':\n    case '2.5.1':\n    case '2.5.2':\n      return \"#006400\";\n    case '3.0.0':\n    case '3':\n    case '3.0.1':\n    case '3.0.2':\n      return \"#0000cd\";\n    case '3.1.0':\n    case '3.1':\n    case '3.1.1':\n    case '3.1.2':\n      return \"#4682b4\";\n    case '3.2.1':\n    case '3.2':\n    case '3.2.2':\n      return \"#00bfff\";\n    case '3.3.0':\n    case '3.3':\n    case '3.3.1':\n    case '3.3.2':\n    case '3.3.2.Bd1':\n    case '3.3.2.Bd2':\n      return \"#1e90ff\";\n    case '3.4':\n      return \"#6a5acd\";\n    case '3.5':\n    case '3.5.1':\n    case '3.5.2':\n    case '3.5.3':\n    case '3.5.4':\n      return \"#4b0082\";\n    case '4':\n    case '4.1.0':\n    case '4.1':\n    case '4.1.1':\n      return \"#8b0000\";\n    case '4.2':\n    case '4.2.1':\n    case '4.2.2':\n    case '4.2.3':\n      return \"#ff6347\";\n    case '4.3':\n    case '4.3.0':\n    case '4.3.1':\n      return \"#ff0000\";\n    case '4.3.1.1':\n      return \"#f1b6da\";\n    case '4.3.1.2':\n      return \"#c51b7d\";\n    case '4.3.1.3':\n      return \"#fb8072\";\n    default:\n      return \"#F5F4F6\";\n  }\n}\n\nexport const getColorForAMR = (amr) => {\n  switch (amr) {\n    case 'No AMR detected':\n      return \"#addd8e\";\n    case 'MDR_DCS':\n      return \"#9e9ac8\"\n    case 'MDR':\n      return \"red\"\n    case 'DCS':\n      return \"#6baed6\"\n    case 'AzithR_MDR':\n      return \"#a50f15\"\n    case 'AzithR_DCS':\n      return \"#7a0177\"\n    case 'AzithR_DCS_MDR':\n      return \"#54278f\"\n    case 'XDR':\n      return \"black\"\n    case 'AMR':\n      return \"#ffeda0\"\n    case 'AMR_DCS':\n      return \"#fd8d3c\";\n    default:\n      return \"#F5F4F6\";\n  }\n}\n\nexport const getColorForSimpleGenotype = (genotype) => {\n  switch (genotype) {\n    case 'H58':\n      return \"green\";\n    case 'Non-H58':\n      return \"red\";\n    default:\n      return \"#F5F4F6\";\n  }\n}\n\nexport const getColorForDrug = (drug) => {\n  switch (drug) {\n    case 'Azithromycin':\n      return \"rgb(144,211,199)\";\n    case 'Fluoroquinolones (DCS)':\n      return \"rgb(255,236,120)\";\n    case 'ESBL':\n      return \"rgb(190,186,217)\";\n    case 'Chloramphenicol':\n      return \"rgb(249,129,117)\";\n    case 'Ampicillin':\n      return \"rgb(129,178,210)\";\n    case 'Co-trimoxazole':\n      return \"rgb(252,180,105)\";\n    case 'Sulphonamides':\n      return \"rgb(180,221,112)\";\n    case 'Trimethoprim':\n      return \"rgb(144,211,199)\";\n    case 'Tetracyclines':\n      return \"rgb(251,207,229)\";\n    default:\n      return \"#F5F4F6\";\n  }\n}\n\nexport const getColorForIncType = (incType) => {\n  switch (incType) {\n    case 'IncX1':\n      return 'rgb(174,227,154)'\n    case 'IncFIA(HI1)':\n      return 'rgb(138,35,139)'\n    case 'IncFIB(pHCM2)':\n      return 'rgb(163,215,30)'\n    case 'IncA/C2':\n      return 'rgb(69,51,214)'\n    case 'IncP1':\n      return 'rgb(223,207,231)'\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\n      return 'rgb(66,69,94)'\n    case 'Col(BS512)':\n      return 'rgb(251,172,246)'\n    case 'IncHI1A/IncHI1B(R27)':\n      return 'rgb(34,151,67)'\n    case 'IncN':\n      return 'rgb(238,83,190)'\n    case 'IncHI1B(R27)':\n      return 'rgb(68,242,112)'\n    case 'p0111':\n      return 'rgb(251,45,76)'\n    case 'IncHI1A':\n      return 'rgb(101,230,249)'\n    case 'IncI1':\n      return 'rgb(123,44,49)'\n    case 'IncY':\n      return 'rgb(231,173,121)'\n    case 'IncFIB(AP001918)':\n      return 'rgb(32,80,46)'\n    case 'IncFIB(K)':\n      return 'rgb(53,136,209)'\n    case 'IncHI2/IncHI2A':\n      return 'rgb(115,140,78)'\n    case 'Col440I':\n      return 'rgb(159,4,252)'\n    case 'Col156':\n      return 'rgb(244,212,3)'\n    case 'Col440II/Col440II':\n      return 'rgb(17,160,170)'\n    case 'IncFIA(HI1)/IncHI1A':\n      return 'rgb(251,120,16)'\n    case 'ColRNAI':\n      return 'rgb(91,67,11)'\n    case 'ColpVC':\n      return 'rgb(248,117,116)'\n    case 'IncX3':\n      return 'rgb(190,177,231)'\n    default:\n      return \"#F5F4F6\";\n  }\n}","import './index.css'\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { API_ENDPOINT } from '../../constants';\nimport { makeStyles, fade } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    '& label.Mui-focused': {\n      color: \"rgb(31, 187, 211)\",\n    },\n    '& :not(.Mui-error).MuiInput-underline:after': {\n      borderBottomColor: \"rgb(31, 187, 211)\",\n    }\n  },\n  button: {\n    backgroundColor: \"rgb(31, 187, 211)\",\n    '&:hover': {\n      backgroundColor: fade(\"rgb(31, 187, 211)\", .6)\n    }\n  }\n}));\n\nconst ContactPage = () => {\n  const classes = useStyles();\n\n  const [form, setForm] = React.useState({\n    company: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    country: '',\n    postalCode: '',\n    additionalInformation: ''\n  })\n  const [formErrors, setFormErrors] = React.useState({\n    company: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    city: '',\n    country: '',\n  })\n  const [loading, setLoading] = React.useState(false)\n\n  const isDesktop = window.innerWidth > 767\n\n  const submit = () => {\n    let error = false;\n    let _formErrors = {\n      company: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      city: '',\n      country: '',\n    }\n\n    if (form.company === '') {\n      _formErrors = { ..._formErrors, company: 'This field is required.' }\n      error = true\n    }\n\n    if (form.email === '') {\n      _formErrors = { ..._formErrors, email: 'This field is required.' }\n      error = true\n    }\n\n    if (form.firstName === '') {\n      _formErrors = { ..._formErrors, firstName: 'This field is required.' }\n      error = true\n    }\n\n    if (form.lastName === '') {\n      _formErrors = { ..._formErrors, lastName: 'This field is required.' }\n      error = true\n    }\n\n    if (form.city === '') {\n      _formErrors = { ..._formErrors, city: 'This field is required.' }\n      error = true\n    }\n\n    if (form.country === '') {\n      _formErrors = { ..._formErrors, country: 'This field is required.' }\n      error = true\n    }\n\n    if (!error) {\n      setLoading(true)\n      axios.post(`${API_ENDPOINT}email`, form)\n        .then((res) => {\n          setLoading(false)\n          window.alert('Message successfully sent!')\n        })\n        .catch((res) => {\n          setLoading(false)\n          window.alert('Error while sending message. Please try again.')\n        })\n    } else {\n      setFormErrors(_formErrors)\n    }\n  }\n\n  return (\n    <div className=\"contact\">\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.company}\n          onChange={(evt) => {\n            setForm({ ...form, company: evt.target.value })\n            setFormErrors({ ...formErrors, company: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Company</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.company !== ''}\n          helperText={formErrors.company}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n        {isDesktop && (\n          <div style={{ width: 16 }} />\n        )}\n        <TextField\n          className={classes.textField}\n          value={form.email}\n          onChange={(evt) => {\n            setForm({ ...form, email: evt.target.value })\n            setFormErrors({ ...formErrors, email: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Email address</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.email !== ''}\n          helperText={formErrors.email}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.firstName}\n          onChange={(evt) => {\n            setForm({ ...form, firstName: evt.target.value })\n            setFormErrors({ ...formErrors, firstName: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>First name</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.firstName !== ''}\n          helperText={formErrors.firstName}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n        {isDesktop && (\n          <div style={{ width: 16 }} />\n        )}\n        <TextField\n          className={classes.textField}\n          value={form.lastName}\n          onChange={(evt) => {\n            setForm({ ...form, lastName: evt.target.value })\n            setFormErrors({ ...formErrors, lastName: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Last name</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.lastName !== ''}\n          helperText={formErrors.lastName}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.address}\n          onChange={(evt) => {\n            setForm({ ...form, address: evt.target.value })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Address</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n        />\n      </div>\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.city}\n          onChange={(evt) => {\n            setForm({ ...form, city: evt.target.value })\n            setFormErrors({ ...formErrors, city: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>City</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.city !== ''}\n          helperText={formErrors.city}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n        {isDesktop && (\n          <div style={{ width: 16 }} />\n        )}\n        <TextField\n          className={classes.textField}\n          value={form.country}\n          onChange={(evt) => {\n            setForm({ ...form, country: evt.target.value })\n            setFormErrors({ ...formErrors, country: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Country</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.country !== ''}\n          helperText={formErrors.country}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n        {isDesktop && (\n          <div style={{ width: 16 }} />\n        )}\n        <TextField\n          className={classes.textField}\n          value={form.postalCode}\n          onChange={(evt) => {\n            setForm({ ...form, postalCode: evt.target.value })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Postal code</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n        />\n      </div>\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.additionalInformation}\n          onChange={(evt) => {\n            setForm({ ...form, additionalInformation: evt.target.value })\n          }}\n          fullWidth\n          multiline\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Additional information</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n        />\n      </div>\n      {!loading ? (\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{ fontFamily: \"Montserrat\", marginTop: 16 }} onClick={submit}>\n          Submit\n        </Button>\n      ) : (\n          <div style={{ marginTop: 16 }}>\n            <LinearProgress />\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default ContactPage;","import './index.css';\nimport React, { useEffect, useState } from \"react\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule, ZoomableGroup } from \"react-simple-maps\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport TooltipMaterialUI from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Zoom from '@material-ui/core/Zoom';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport ReactTooltip from \"react-tooltip\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ErrorBar, Brush, LineChart, Line, Legend } from 'recharts';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faCrosshairs, faCamera, faTable, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport download from 'downloadjs';\nimport { svgAsPngUri } from 'save-svg-as-png';\nimport typhinetLogoImg from '../../assets/img/logo-typhinet.png';\nimport geography from '../../assets/world-110m.json'\nimport { API_ENDPOINT } from '../../constants';\nimport { getColorForGenotype, getColorForAMR, getColorForDrug, getColorForIncType } from '../../util/colorHelper';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\nimport ContactPage from '../contact';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formControlSelect: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n    '& label.Mui-focused': {\n      color: \"rgb(31, 187, 211)\",\n    },\n    '& :not(.Mui-error).MuiInput-underline:after': {\n      borderBottomColor: \"rgb(31, 187, 211)\",\n    },\n  },\n}));\n\nconst CustomSlider = withStyles({\n  root: {\n    color: \"rgb(31, 187, 211)\"\n  },\n  thumb: {\n    \"&.MuiSlider-thumb\": {\n      \"&:not(.MuiSlider-active):focus\": {\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\n      },\n      \"&:not(.MuiSlider-active):hover\": {\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\n      },\n      \"&.MuiSlider-active\": {\n        boxShadow: \"0px 0px 0px 14px rgba(31, 187, 211, 0.16)\"\n      },\n    },\n  },\n  valueLabel: {\n    fontFamily: \"Montserrat\",\n    fontWeight: 500\n  }\n})(Slider);\n\nconst CustomCircularProgress = withStyles({\n  root: {\n    color: \"rgb(31, 187, 211)\",\n  }\n})(CircularProgress);\n\nconst CustomToggleButton = withStyles({\n  root: {\n    padding: \"2px 8px\",\n    fontFamily: \"Montserrat\",\n    fontWeight: 600\n  },\n  selected: {\n    backgroundColor: 'rgb(31, 187, 211) !important',\n    color: \"white !important\"\n  }\n})(ToggleButton);\n\nconst DashboardPage = () => {\n  const classes = useStyles();\n\n  const [controlMapPosition, setControlMapPosition] = useState({ coordinates: [0, 0], zoom: 1 });\n  const [samplesQty, setSamplesQty] = useState(0);\n\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState({});\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\n  const [worldMapDCSData, setWorldMapDCSData] = useState([]);\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\n  const [worldMapDrugsData, setWorldMapDrugsData] = useState([]);\n  const [worldMapAmrProfilesData, setWorldMapAmrProfilesData] = useState([]);\n  const [worldMapPlasmidIncompatibilityTypeData, setWorldMapPlasmidIncompatibilityTypeData] = useState([]);\n\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] = useState(false)\n  const [tooltipContent, setTooltipContent] = useState(null);\n\n  const [timePeriodRange, setTimePeriodRange] = React.useState([1905, 2019]);\n  const [actualTimePeriodRange, setActualTimePeriodRange] = React.useState([1905, 2019]);\n  const [countriesForFilter, setCountriesForFilter] = React.useState(['All']);\n  const [actualCountry, setActualCountry] = useState(\"All\");\n  const [populationStructureFilter, setPopulationStructureFilter] = React.useState(1);\n  const amrClassesForFilter = [\"AMR Profiles\", \"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (DCS)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"]\n  const [amrClassFilter, setAmrClassFilter] = React.useState(amrClassesForFilter[0])\n\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([])\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState([])\n  const [chartMaxHeight, setChartMaxHeight] = useState(0)\n  const [chartMaxWidth, setChartMaxWidth] = useState(0)\n  const [populationStructureChartData, setPopulationStructureChartData] = useState([])\n  const [amrClassChartData, setAmrClassChartData] = useState([])\n\n  const [mapView, setMapView] = React.useState('Dominant Genotype');\n  const [dataset, setDataset] = React.useState('full');\n  const [totalGenomes, setTotalGenomes] = useState([])\n  const [actualGenomes, setActualGenomes] = useState([])\n  const [totalGenotypes, setTotalGenotypes] = useState([])\n  const [actualGenotypes, setActualGenotypes] = useState([])\n\n  const [contactModalVisible, setContactModalVisible] = useState(false)\n\n  const isDesktop = window.innerWidth > 767\n\n  const genotypes = ['0', '0.0.1', '0.0.2', '0.0.3', '4.3.1.1.P1', '0.1.0', '0.1', '0.1.1', '0.1.2', '0.1.3', '1.1', '1.1.1', '1.1.2', '1.1.3', '1.1.4', '1.2', '1.2.1', '2', '2.0.0', '2.0.1', '2.0.2', '2.1.0', '2.1', '2.1.1', '2.1.2', '2.1.3', '2.1.4', '2.1.5', '2.1.6', '2.1.7', '2.1.8', '2.1.9', '2.2', '2.2.0', '2.2.1', '2.2.2', '2.2.3', '2.2.4', '2.3', '2.3.1', '2.3.2', '2.3.3', '2.3.4', '2.3.5', '2.4.0', '2.4', '2.4.1', '2.5.0', '2.5', '2.5.1', '2.5.2', '3.0.0', '3', '3.0.1', '3.0.2', '3.1.0', '3.1', '3.1.1', '3.1.2', '3.2.1', '3.2', '3.2.2', '3.3.0', '3.3', '3.3.1', '3.3.2', '3.3.2.Bd1', '3.3.2.Bd2', '3.4', '3.5', '3.5.1', '3.5.2', '3.5.3', '3.5.4', '4', '4.1.0', '4.1', '4.1.1', '4.2', '4.2.1', '4.2.2', '4.2.3', '4.3', '4.3.0', '4.3.1', '4.3.1.1', '4.3.1.2', '4.3.1.3'].sort((a, b) => a.localeCompare(b));\n\n  useEffect(() => {\n    axios.get(`${API_ENDPOINT}filters/getYearLimits`)\n      .then((res) => {\n        let limits = res.data\n        setTimePeriodRange([limits.min, limits.max])\n        setActualTimePeriodRange([limits.min, limits.max])\n      })\n  }, [])\n\n  useEffect(() => {\n    const timeOutId = setTimeout(() => {\n      axios.get(`${API_ENDPOINT}filters/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\n        .then((res) => {\n          var response = res.data\n\n          response['Dem. Rep. Congo'] = response['Democratic Republic of Congo']\n          delete response['Democratic Republic of Congo']\n          response['Central African Rep.'] = response['Central African Republic']\n          delete response['Central African Republic']\n          response[\"Côte d'Ivoire\"] = response['Ivory Coast']\n          delete response['Ivory Coast']\n          response[\"Timor-Leste\"] = response['East Timor']\n          delete response['East Timor']\n\n          setWorldMapComplementaryData(response)\n        })\n    }, 500)\n    return () => clearTimeout(timeOutId);\n  }, [actualTimePeriodRange, dataset])\n\n  useEffect(() => {\n    const timeOutId = setTimeout(async () => {\n      let filter;\n\n      if (populationStructureFilter === 1) {\n        filter = 2\n      } else {\n        filter = 3 /* H58 and Non-H58 */\n      }\n\n      let genotypeChartResponse = await axios.get(`${API_ENDPOINT}filters/${filter}/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\n      parseDataForGenotypeChart(genotypeChartResponse.data)\n\n      if (actualCountry === \"All\") {\n        parseDataForCountryMap(genotypeChartResponse.data)\n      }\n      else {\n        let response = await axios.get(`${API_ENDPOINT}filters/${filter}/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\n        parseDataForCountryMap(response.data)\n      }\n\n      let drugTrendsChartResponse = await axios.get(`${API_ENDPOINT}filters/drugTrendsChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}`)\n      parseDataForDrugTrendsChart(drugTrendsChartResponse.data)\n\n      let classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${amrClassFilter}`)\n      parseDataForAmrClassChart(classChartResponse.data)\n\n    }, 500);\n    return () => clearTimeout(timeOutId);\n  }, [populationStructureFilter, actualTimePeriodRange, actualCountry, dataset, amrClassFilter]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const parseDataForGenotypeChart = (data) => {\n    var finalPopulationStructureChartData = [];\n\n    var genomes = data;\n    var genotypes = [];\n\n    data.forEach((entry) => {\n      if (!genotypes.some(g => g === entry.GENOTYPE)) {\n        genotypes.push(entry.GENOTYPE)\n      }\n\n      /* POPULATION STRUCTURE CHART GENERATION */\n      if (populationStructureFilter === 1) { /* Genotype */\n        if (!finalPopulationStructureChartData.some(e => e.name === entry.YEAR)) {\n          finalPopulationStructureChartData.push({\n            name: entry.YEAR,\n            [entry.GENOTYPE]: 1\n          })\n        } else {\n          let year = finalPopulationStructureChartData.find(e => e.name === entry.YEAR);\n          let yearIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry.YEAR);\n\n          if (year[entry.GENOTYPE] === undefined) {\n            year[entry.GENOTYPE] = 1\n          } else {\n            year[entry.GENOTYPE] = year[entry.GENOTYPE] + 1\n          }\n          finalPopulationStructureChartData[yearIndex] = year;\n        }\n      } else { /* H58 / Non-H58 */\n        if (entry['GENOTYPE_SIMPLE'] === 'H58' || entry['GENOTYPE_SIMPLE'] === 'Non-H58')\n          if (!finalPopulationStructureChartData.some(e => e.name === entry['GENOTYPE_SIMPLE'])) {\n            finalPopulationStructureChartData.push({\n              name: entry['GENOTYPE_SIMPLE'],\n              [entry.GENOTYPE]: 1\n            })\n          } else {\n            let genotypeSimple = finalPopulationStructureChartData.find(e => e.name === entry['GENOTYPE_SIMPLE']);\n            let genotypeSimpleIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry['GENOTYPE_SIMPLE']);\n\n            if (genotypeSimple[entry.GENOTYPE] === undefined) {\n              genotypeSimple[entry.GENOTYPE] = 1\n            } else {\n              genotypeSimple[entry.GENOTYPE] = genotypeSimple[entry.GENOTYPE] + 1\n            }\n            finalPopulationStructureChartData[genotypeSimpleIndex] = genotypeSimple;\n          }\n      }\n    })\n\n    if (totalGenomes.length === 0)\n      setTotalGenomes(genomes)\n\n    if (totalGenotypes.length === 0)\n      setTotalGenotypes(genotypes)\n\n    setActualGenomes(genomes)\n    setActualGenotypes(genotypes)\n\n    finalPopulationStructureChartData.forEach((data) => {\n      let sum = 0;\n      Object.entries(data).forEach((entry) => {\n        if (entry[0] !== \"name\")\n          sum += entry[1];\n      })\n      data.total = sum;\n    })\n\n    if (!arraysEqual(finalPopulationStructureChartData, populationStructureChartData))\n      setPopulationStructureChartData(finalPopulationStructureChartData)\n\n    let populationStructureChartSums = []\n    finalPopulationStructureChartData.forEach((year) => {\n      let sum = 0\n      let yearArray = Object.entries(year)\n      yearArray.forEach((_year) => {\n        if (_year[0] !== \"name\" && _year[0] !== \"total\")\n          sum += _year[1]\n      })\n      populationStructureChartSums.push({\n        year: year.name,\n        sum\n      })\n    })\n\n    if (populationStructureChartSums.length > 0) {\n      let highestSum = populationStructureChartSums.sort((a, b) => b.sum - a.sum)[0].sum;\n\n      if (populationStructureFilter === 1) {\n        if (highestSum > chartMaxHeight)\n          setChartMaxHeight(Math.ceil(highestSum / 100) * 100)\n      } else {\n        if (highestSum > chartMaxWidth)\n          setChartMaxWidth(Math.ceil(highestSum / 100) * 100)\n      }\n    }\n  }\n\n  const parseDataForCountryMap = (data) => {\n    let finalCountries = [];\n\n    let samplesData = [], genotypesData = [], h58Data = [], mdrData = [], xdrData = [], drugsData = [], amrData = [], incTypesData = [], dcsData = [], azithData = [];\n\n    const countData = (array, elementToCount, parentName, childName) => {\n      let temp = []\n      array.forEach(entry => {\n        if (!temp.some(e => e.name === entry['COUNTRY_ONLY'])) {\n          temp.push({\n            name: entry['COUNTRY_ONLY'],\n            displayName: entry['COUNTRY_ONLY'],\n            total: 1,\n            [parentName]: [{\n              [childName]: entry[elementToCount],\n              count: 1\n            }]\n          })\n        } else {\n          let country = temp.find(e => e.name === entry['COUNTRY_ONLY']);\n          let countryIndex = temp.findIndex(e => e.name === entry['COUNTRY_ONLY']);\n\n          if (!country[parentName].some(e => e[childName] === entry[elementToCount])) {\n            country[parentName].push({\n              [childName]: entry[elementToCount],\n              count: 1\n            })\n          } else {\n            let parent = country[parentName].find(e => e[childName] === entry[elementToCount]);\n            let index = country[parentName].findIndex(e => e[childName] === entry[elementToCount]);\n            parent.count = parent.count + 1\n            country[parentName][index] = parent\n          }\n\n          country.total = country.total + 1\n\n          temp[countryIndex] = country;\n        }\n      })\n\n      let congoCountryIndex = temp.findIndex(e => e.name === 'Democratic Republic of Congo');\n      if (congoCountryIndex !== -1)\n        temp[congoCountryIndex].displayName = 'Dem. Rep. Congo'\n\n      let centralAfricanRepublicCountryIndex = temp.findIndex(e => e.name === 'Central African Republic');\n      if (centralAfricanRepublicCountryIndex !== -1)\n        temp[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\n\n      let ivoryCoastCountryIndex = temp.findIndex(e => e.name === \"Ivory Coast\");\n      if (ivoryCoastCountryIndex !== -1)\n        temp[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\n\n      let timorLesteCountryIndex = temp.findIndex(e => e.name === \"East Timor\");\n      if (timorLesteCountryIndex !== -1)\n        temp[timorLesteCountryIndex].displayName = \"Timor-Leste\"\n\n      temp.forEach((country) => {\n        country[parentName].sort((a, b) => b.count - a.count);\n      })\n      temp.sort((a, b) => a.name.localeCompare(b.name));\n\n      return temp\n    }\n\n    data.forEach((entry) => {\n      if (!finalCountries.some(e => e === entry['COUNTRY_ONLY']) && entry['COUNTRY_ONLY'] !== \"-\" && entry['COUNTRY_ONLY'] !== \"\")\n        finalCountries.push(entry['COUNTRY_ONLY'])\n\n      if (!samplesData.some(e => e.name === entry['COUNTRY_ONLY'])) {\n        samplesData.push({\n          name: entry['COUNTRY_ONLY'],\n          displayName: entry['COUNTRY_ONLY'],\n          count: 1\n        })\n      } else {\n        let country = samplesData.find(e => e.name === entry['COUNTRY_ONLY']);\n        let countryIndex = samplesData.findIndex(e => e.name === entry['COUNTRY_ONLY']);\n        country.count = country.count + 1\n        samplesData[countryIndex] = country;\n      }\n    })\n\n    if (!arraysEqual(samplesData, worldMapSamplesData)) {\n      let congoCountryIndex = samplesData.findIndex(e => e.name === 'Democratic Republic of Congo');\n      if (congoCountryIndex !== -1)\n        samplesData[congoCountryIndex].displayName = 'Dem. Rep. Congo'\n\n      let centralAfricanRepublicCountryIndex = samplesData.findIndex(e => e.name === 'Central African Republic');\n      if (centralAfricanRepublicCountryIndex !== -1)\n        samplesData[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\n\n      let ivoryCoastCountryIndex = samplesData.findIndex(e => e.name === \"Ivory Coast\");\n      if (ivoryCoastCountryIndex !== -1)\n        samplesData[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\n\n      let timorLesteCountryIndex = samplesData.findIndex(e => e.name === \"East Timor\");\n      if (timorLesteCountryIndex !== -1)\n        samplesData[timorLesteCountryIndex].displayName = \"Timor-Leste\"\n\n      setWorldMapSamplesData(samplesData)\n      setSamplesQty(\n        Math.ceil((\n          samplesData.length > 0 ? samplesData.sort((a, b) => b.count - a.count)[0].count : 0\n        ) / 50) * 50\n      )\n    }\n\n    finalCountries.sort((a, b) => a.localeCompare(b));\n    finalCountries.unshift(\"All\");\n    setCountriesForFilter(finalCountries)\n\n    if (!finalCountries.includes(actualCountry))\n      setActualCountry(\"All\")\n\n    genotypesData = countData(data, \"GENOTYPE\", \"genotypes\", \"lineage\")\n    if (!arraysEqual(genotypesData, worldMapGenotypesData))\n      setWorldMapGenotypesData(genotypesData)\n\n    h58Data = countData(data, \"GENOTYPE_SIMPLE\", \"genotypes\", \"type\")\n    h58Data.forEach(country => {\n      country.genotypes.forEach((g, index) => {\n        let percentage = ((g.count / country.total) * 100)\n        if (Math.round(percentage) !== percentage) {\n          percentage = percentage.toFixed(2)\n        }\n        g.percentage = percentage\n      })\n    })\n    if (!arraysEqual(h58Data, worldMapH58Data))\n      setWorldMapH58Data(h58Data)\n\n    mdrData = countData(data, \"MDR\", \"MDRs\", \"type\")\n    mdrData.forEach(country => {\n      country.MDRs.forEach((mdr, index) => {\n        if (mdr.type === \"MDR\") {\n          let percentage = ((mdr.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = mdr.count;\n        }\n      })\n      if (country.percentage === undefined) {\n        country.percentage = parseFloat(0)\n      }\n      if (country.count === undefined) {\n        country.count = 0\n      }\n    })\n    if (!arraysEqual(mdrData, worldMapMDRData))\n      setWorldMapMDRData(mdrData)\n\n    xdrData = countData(data, \"XDR\", \"XDRs\", \"type\")\n    xdrData.forEach(country => {\n      country.XDRs.forEach((xdr, index) => {\n        if (xdr.type === \"XDR\") {\n          let percentage = ((xdr.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = xdr.count;\n        }\n        if (country.percentage === undefined) {\n          country.percentage = parseFloat(0)\n        }\n        if (country.count === undefined) {\n          country.count = 0\n        }\n      })\n    })\n    if (!arraysEqual(xdrData, worldMapXDRData))\n      setWorldMapXDRData(xdrData)\n\n    dcsData = countData(data, \"DCS\", \"DCSs\", \"type\")\n    dcsData.forEach(country => {\n      country.DCSs.forEach((dcs, index) => {\n        if (dcs.type === \"DCS\") {\n          let percentage = ((dcs.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = dcs.count;\n        }\n        if (country.percentage === undefined) {\n          country.percentage = parseFloat(0)\n        }\n        if (country.count === undefined) {\n          country.count = 0\n        }\n      })\n    })\n    if (!arraysEqual(dcsData, worldMapDCSData))\n      setWorldMapDCSData(dcsData)\n\n    azithData = countData(data, \"Azith\", \"AZs\", \"type\")\n    azithData.forEach(country => {\n      country.AZs.forEach((az, index) => {\n        if (az.type === \"AzithR\") {\n          let percentage = ((az.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = az.count;\n        }\n        if (country.percentage === undefined) {\n          country.percentage = parseFloat(0)\n        }\n        if (country.count === undefined) {\n          country.count = 0\n        }\n      })\n    })\n    if (!arraysEqual(azithData, worldMapAZITHData))\n      setWorldMapAZITHData(azithData)\n\n    let dataForCountingDrugs = []\n    data.forEach(entry => {\n      entry.DRUGS.forEach(drug => {\n        dataForCountingDrugs.push({\n          ...entry,\n          DRUG: drug,\n        })\n      })\n    })\n    drugsData = countData(dataForCountingDrugs, \"DRUG\", \"drugs\", \"name\");\n    if (!arraysEqual(drugsData, worldMapDrugsData))\n      setWorldMapDrugsData(drugsData)\n\n    amrData = countData(data, \"AMR\", \"amrProfiles\", \"name\")\n    if (!arraysEqual(amrData, worldMapAmrProfilesData))\n      setWorldMapAmrProfilesData(amrData)\n\n    incTypesData = countData(data, \"IncTypes\", \"incTypes\", \"type\")\n    incTypesData.forEach(country => {\n      country.incTypes = country.incTypes.filter(g => g.type !== \"\")\n    })\n    if (!arraysEqual(incTypesData, worldMapPlasmidIncompatibilityTypeData))\n      setWorldMapPlasmidIncompatibilityTypeData(incTypesData)\n  }\n\n  const parseDataForAmrClassChart = (data) => {\n    let finalChartData = []\n\n    data.forEach((entry) => {\n      if (!finalChartData.some(e => e.genotype === entry.GENOTYPE)) {\n        finalChartData.push({\n          genotype: entry.GENOTYPE,\n          [entry.GENE]: 1\n        })\n      } else {\n        let genotype = finalChartData.find(e => e.genotype === entry.GENOTYPE);\n        let genotypeIndex = finalChartData.findIndex(e => e.genotype === entry.GENOTYPE);\n\n        if (genotype[entry.GENE] === undefined) {\n          genotype[entry.GENE] = 1\n        } else {\n          genotype[entry.GENE] = genotype[entry.GENE] + 1\n        }\n        finalChartData[genotypeIndex] = genotype;\n      }\n    })\n\n    finalChartData.sort((a, b) => a.genotype.localeCompare(b.genotype));\n\n    finalChartData.forEach((data) => {\n      let sum = 0;\n      Object.entries(data).forEach((entry) => {\n        if (entry[0] !== \"genotype\") {\n          let errorMargin = Math.ceil(entry[1] * 0.2) // 20%\n          let lowerValue = errorMargin > entry[1] ? entry[1] : errorMargin;\n\n          if (entry[1] === 1)\n            lowerValue = 1\n\n          if (entry[1] === 0)\n            lowerValue = 0\n\n          data[`error-${entry[0]}`] = [lowerValue, errorMargin]\n\n          sum += entry[1];\n        }\n      })\n      data.total = sum;\n    })\n\n    finalChartData = finalChartData.filter(g => g.genotype !== undefined)\n\n    if (!arraysEqual(amrClassChartData, finalChartData))\n      setAmrClassChartData(finalChartData)\n  }\n\n  const parseDataForDrugTrendsChart = (data) => {\n    let finalDrugTrendsChartData = []\n    let finalDrugsAndGenotypesChartData = []\n\n    data.forEach((entry) => {\n      if (!finalDrugTrendsChartData.some(e => e.name === entry.YEAR)) {\n        finalDrugTrendsChartData.push({\n          name: entry.YEAR,\n          [entry.DRUG]: 1\n        })\n      } else {\n        let year = finalDrugTrendsChartData.find(e => e.name === entry.YEAR);\n        let yearIndex = finalDrugTrendsChartData.findIndex(e => e.name === entry.YEAR);\n\n        if (year[entry.DRUG] === undefined) {\n          year[entry.DRUG] = 1\n        } else {\n          year[entry.DRUG] = year[entry.DRUG] + 1\n        }\n        finalDrugTrendsChartData[yearIndex] = year;\n      }\n\n      if (!finalDrugsAndGenotypesChartData.some(e => e.name === entry.GENOTYPE)) {\n        finalDrugsAndGenotypesChartData.push({\n          name: entry.GENOTYPE,\n          [entry.DRUG]: 1\n        })\n      } else {\n        let genotype = finalDrugsAndGenotypesChartData.find(e => e.name === entry.GENOTYPE);\n        let genotypeIndex = finalDrugsAndGenotypesChartData.findIndex(e => e.name === entry.GENOTYPE);\n\n        if (genotype[entry.DRUG] === undefined) {\n          genotype[entry.DRUG] = 1\n        } else {\n          genotype[entry.DRUG] = genotype[entry.DRUG] + 1\n        }\n        finalDrugsAndGenotypesChartData[genotypeIndex] = genotype;\n      }\n    })\n\n    finalDrugTrendsChartData.forEach((data) => {\n      let sum = 0;\n      Object.entries(data).forEach((entry) => {\n        if (entry[0] !== \"name\")\n          sum += entry[1];\n      })\n      data.total = sum;\n    })\n\n    finalDrugsAndGenotypesChartData.forEach((data) => {\n      let sum = 0;\n      Object.entries(data).forEach((entry) => {\n        if (entry[0] !== \"name\")\n          sum += entry[1];\n      })\n      data.total = sum;\n    })\n\n    finalDrugTrendsChartData.sort((a, b) => a.name.localeCompare(b.name))\n    finalDrugsAndGenotypesChartData.sort((a, b) => b.total - a.total)\n\n    if (!arraysEqual(finalDrugTrendsChartData, drugTrendsChartData))\n      setDrugTrendsChartData(finalDrugTrendsChartData)\n\n    if (!arraysEqual(finalDrugsAndGenotypesChartData, drugsAndGenotypesChartData))\n      setDrugsAndGenotypesChartData(finalDrugsAndGenotypesChartData.slice(0, finalDrugsAndGenotypesChartData.length >= 5 ? 5 : finalDrugsAndGenotypesChartData.length))\n  }\n\n  function arraysEqual(a1, a2) {\n    return JSON.stringify(a1) === JSON.stringify(a2);\n  }\n\n  const mapSamplesColorScale = scaleLinear()\n    .domain([1, samplesQty / 5, 2 * (samplesQty / 5), 3 * (samplesQty / 5), 4 * (samplesQty / 5), samplesQty])\n    .range([\"#4575b4\", \"#91bfdb\", \"#e0f3f8\", \"#fee090\", \"#fc8d59\", \"#d73027\"]);\n\n  const mapRedColorScale = scaleLinear()\n    .domain([1, 50, 100])\n    .range([\"#ffebee\", \"#f44336\", \"#b71c1c\"]);\n\n  const tooltip = (positionY, width1, width2, sort, wrapperS, stroke) => {\n    return (\n      <Tooltip\n        position={{ y: positionY }}\n        wrapperStyle={wrapperS}\n        content={({ active, payload, label }) => {\n          if (payload !== null) {\n            if (sort) {\n              payload.sort((a, b) => b.value - a.value)\n              payload = payload.reverse()\n            }\n            if (active) {\n              return (\n                <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\n                  <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\n                  <div style={{ height: 14 }} />\n                  <div style={{ display: \"flex\", flexWrap: sort ? \"\" : \"wrap\", justifyContent: sort ? \"\" : \"space-between\", width: sort ? \"\" : width1, flexDirection: sort ? \"column\" : \"\" }}>\n                    {payload.reverse().map((item, index) => {\n                      let percentage = ((item.value / item.payload.total) * 100)\n                      if (Math.round(percentage) !== percentage)\n                        percentage = percentage.toFixed(2)\n                      return (\n                        <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: width2, marginBottom: 8 }}>\n                          <div style={{ backgroundColor: stroke ? item.stroke : item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\n                          <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8 }}>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14 }}>{item.name}</span>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {item.value}</span>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n              );\n            }\n          }\n          return null;\n        }}\n      />\n    )\n  }\n\n  const plotPopulationStructureChart = () => {\n\n    if (populationStructureFilter === 1) { /* Genotype */\n      let maxH = 0\n      for (let index = 0; index < populationStructureChartData.length; index++) {\n        if (populationStructureChartData[index].total > maxH) {\n          maxH = populationStructureChartData[index].total\n        }\n      }\n      maxH = Math.ceil(maxH / 50) * 50\n      return (\n        <ResponsiveContainer width=\"90%\">\n          <BarChart\n            width={500}\n            height={300}\n            data={populationStructureChartData}\n            margin={{\n              top: 20, left: -20, bottom: 5, right: 0\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis domain={[0, maxH]} />\n            {tooltip(300, 325, \"33.33%\", false, { zIndex: 100 }, false)}\n            {genotypes.map((item) => <Bar dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\n          </BarChart>\n        </ResponsiveContainer>\n      )\n    } else { /* H58 and Non-H58 */\n      return (\n        <ResponsiveContainer width=\"90%\">\n          <BarChart\n            width={500}\n            height={300}\n            data={populationStructureChartData}\n            margin={{\n              top: 20, left: 20, bottom: 5, right: 0\n            }}\n            layout=\"vertical\"\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis type={\"number\"} domain={[0, chartMaxWidth]} />\n            <YAxis dataKey=\"name\" type={\"category\"} />\n            {tooltip(300, 400, \"25%\", false, { zIndex: 100 }, false)}\n            {genotypes.map((item) => <Bar dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\n          </BarChart>\n        </ResponsiveContainer>\n      )\n    }\n  }\n\n  const plotAmrClassChart = () => {\n    switch (amrClassFilter) {\n      case 'Azithromycin':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: -5, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'acrB_R717Q'} fill={\"#addd8e\"}>\n                <ErrorBar dataKey={\"error-acrB_R717Q\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n              <Bar dataKey={'ereA'} fill={\"#9e9ac8\"}>\n                <ErrorBar dataKey={\"error-ereA\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'Fluoroquinolones (DCS)':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: 10, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'3_QRDR'} fill={\"rgb(198,127,251)\"}>\n                <ErrorBar dataKey={\"error-3_QRDR\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'2_QRDR'} fill={\"rgb(70,191,195)\"}>\n                <ErrorBar dataKey={\"error-2_QRDR\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'1_QRDR + qnrS'} fill={\"rgb(125,172,32)\"} >\n                <ErrorBar dataKey={\"error-1_QRDR + qnrS\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'1_QRDR'} fill={\"rgb(244,119,112)\"} >\n                <ErrorBar dataKey={\"error-1_QRDR\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'Chloramphenicol':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: 3, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'cmlA'} fill={\"#addd8e\"}>\n                <ErrorBar dataKey={\"error-cmlA\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n              <Bar dataKey={'catA1'} fill={\"#9e9ac8\"}>\n                <ErrorBar dataKey={\"error-catA1\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'Ampicillin':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: 3, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'blaTEM-1D'} fill={\"#addd8e\"}>\n                <ErrorBar dataKey={\"error-blaTEM-1D\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'Sulphonamides':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: 3, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'sul2'} fill={\"#ffeda0\"}>\n                <ErrorBar dataKey={\"error-sul2\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n              <Bar dataKey={'sul1'} fill={\"#fd8d3c\"}>\n                <ErrorBar dataKey={\"error-sul1\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'Trimethoprim':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: 3, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'dfrA7'} fill={\"#addd8e\"} >\n                <ErrorBar dataKey={\"error-dfrA7\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA5'} fill={\"#9e9ac8\"} >\n                <ErrorBar dataKey={\"error-dfrA5\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA18'} fill={\"#6baed6\"} >\n                <ErrorBar dataKey={\"error-dfrA18\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA17'} fill={\"#7a0177\"} >\n                <ErrorBar dataKey={\"error-dfrA17\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA15'} fill={\"#54278f\"} >\n                <ErrorBar dataKey={\"error-dfrA15\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA14'} fill={\"#a50f15\"} >\n                <ErrorBar dataKey={\"error-dfrA14\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA1'} fill={\"red\"} >\n                <ErrorBar dataKey={\"error-dfrA1\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'Co-trimoxazole':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: 3, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'sul2'} fill={\"#ffeda0\"}>\n                <ErrorBar dataKey={\"error-sul2\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'sul1'} fill={\"#fd8d3c\"}>\n                <ErrorBar dataKey={\"error-sul1\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA7'} fill={\"#addd8e\"} >\n                <ErrorBar dataKey={\"error-dfrA7\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA5'} fill={\"#9e9ac8\"} >\n                <ErrorBar dataKey={\"error-dfrA5\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA18'} fill={\"#6baed6\"} >\n                <ErrorBar dataKey={\"error-dfrA18\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA17'} fill={\"#7a0177\"} >\n                <ErrorBar dataKey={\"error-dfrA17\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA15'} fill={\"#54278f\"} >\n                <ErrorBar dataKey={\"error-dfrA15\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA14'} fill={\"#a50f15\"} >\n                <ErrorBar dataKey={\"error-dfrA14\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'dfrA1'} fill={\"red\"} >\n                <ErrorBar dataKey={\"error-dfrA1\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'Tetracyclines':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: 3, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'tetA(D)'} fill={\"#addd8e\"}>\n                <ErrorBar dataKey={\"error-tetA(D)\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n              <Bar dataKey={'tetA(C)'} fill={\"#9e9ac8\"} >\n                <ErrorBar dataKey={\"error-tetA(C)\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n              <Bar dataKey={'tetA(B)'} fill={\"#6baed6\"} >\n                <ErrorBar dataKey={\"error-tetA(B)\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n              <Bar dataKey={'tetA(A)'} fill={\"#a50f15\"} >\n                <ErrorBar dataKey={\"error-tetA(A)\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'AMR Profiles':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: isDesktop ? 12 : -30, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: isDesktop ? 14 : 5 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'No AMR detected'} fill={getColorForAMR('No AMR detected')}>\n                <ErrorBar dataKey={\"error-No AMR detected\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'MDR_DCS'} fill={getColorForAMR('MDR_DCS')} >\n                <ErrorBar dataKey={\"error-MDR_DCS\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'MDR'} fill={getColorForAMR('MDR')}>\n                <ErrorBar dataKey={\"error-MDR\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'DCS'} fill={getColorForAMR('DCS')}>\n                <ErrorBar dataKey={\"error-DCS\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'AzithR_MDR'} fill={getColorForAMR('AzithR_MDR')}>\n                <ErrorBar dataKey={\"error-AzithR_MDR\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'AzithR_DCS'} fill={getColorForAMR('AzithR_DCS')}>\n                <ErrorBar dataKey={\"error-AzithR_DCS\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'AzithR_DCS_MDR'} fill={getColorForAMR('AzithR_DCS_MDR')}>\n                <ErrorBar dataKey={\"error-AzithR_DCS_MDR\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'XDR'} fill={getColorForAMR('XDR')}>\n                <ErrorBar dataKey={\"error-XDR\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'AMR'} fill={getColorForAMR('AMR')}>\n                <ErrorBar dataKey={\"error-AMR\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n              <Bar dataKey={'AMR_DCS'} fill={getColorForAMR('AMR_DCS')}>\n                <ErrorBar dataKey={\"error-AMR_DCS\"} strokeWidth={0.5} stroke={\"rgba(0,0,0,0.5)\"} width={3} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      case 'ESBL':\n        return (\n          <ResponsiveContainer width=\"90%\">\n            <BarChart\n              width={500}\n              height={300}\n              data={amrClassChartData}\n              margin={{\n                top: 20, left: 3, bottom: 5, right: 0\n              }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis domain={[0, 'dataMax + 100']} type={\"number\"} />\n              <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: 14 }} />\n              <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n              {amrClassChartTooltip()}\n              <Bar dataKey={'blaSHV-12'} fill={\"#addd8e\"}>\n                <ErrorBar dataKey={\"error-blaSHV-12\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n              <Bar dataKey={'blaOXA-7'} fill={\"#9e9ac8\"}>\n                <ErrorBar dataKey={\"error-blaOXA-7\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n              <Bar dataKey={'blaCTX-M-15_23'} fill={\"#6baed6\"}>\n                <ErrorBar dataKey={\"error-blaCTX-M-15_23\"} strokeWidth={1} stroke={\"rgba(0,0,0,0.5)\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )\n      default:\n        return null;\n    }\n  }\n\n  const amrClassChartTooltip = () => {\n    return (\n      <Tooltip\n        position={{ x: 0 }}\n        wrapperStyle={{ zIndex: 100, top: 100 }}\n        allowEscapeViewBox={{ x: true, y: true }}\n        content={({ active, payload, label }) => {\n          if (payload !== null) {\n            if (active) {\n              return (\n                <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\n                  <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\n                  <div style={{ height: 14 }} />\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", width: 325 }}>\n                    {payload.reverse().map((item, index) => {\n                      let percentage = ((item.value / item.payload.total) * 100)\n                      if (Math.round(percentage) !== percentage)\n                        percentage = percentage.toFixed(2)\n                      return (\n                        <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: \"33.33%\", marginBottom: 8 }}>\n                          <div style={{ backgroundColor: item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\n                          <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8 }}>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14 }}>{item.name}</span>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {item.value}</span>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n              );\n            }\n          }\n\n          return null;\n        }}\n      />\n    )\n  }\n\n  const plotDrugTrendsChart = () => {\n    return (\n      <ResponsiveContainer width=\"90%\">\n        <LineChart\n          width={500}\n          height={300}\n          data={drugTrendsChartData}\n          margin={{\n            top: 20, left: -20, bottom: 5, right: 0\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Legend\n            content={(props) => {\n              const { payload } = props;\n              return (\n                <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", width: \"86%\", justifyContent: \"space-between\", marginLeft: 60, paddingLeft: isDesktop ? 32 : 0, paddingRight: isDesktop ? 32 : 0 }}>\n                  {payload.map((entry, index) => {\n                    const { dataKey, color } = entry\n                    return (\n                      <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: isDesktop ? \"30%\" : \"50%\", marginBottom: 4 }}>\n                        <div style={{ height: 8, width: 8, borderRadius: 4, backgroundColor: color, flexShrink: 0 }} />\n                        <span style={{ fontSize: 12, marginLeft: 4 }}>{dataKey}</span>\n                      </div>\n                    )\n                  })}\n                </div>\n              );\n            }}\n          />\n\n          {tooltip(300, null, \"100%\", true, { zIndex: 100 }, true)}\n          <Line dataKey=\"Ampicillin\" stroke={getColorForDrug(\"Ampicillin\")} connectNulls type=\"monotone\" />\n          <Line dataKey=\"Azithromycin\" stroke={getColorForDrug(\"Azithromycin\")} connectNulls type=\"monotone\" />\n          <Line dataKey=\"Chloramphenicol\" stroke={getColorForDrug(\"Chloramphenicol\")} connectNulls type=\"monotone\" />\n          <Line dataKey=\"Co-trimoxazole\" stroke={getColorForDrug(\"Co-trimoxazole\")} connectNulls type=\"monotone\" />\n          <Line dataKey=\"ESBL\" stroke={getColorForDrug(\"ESBL\")} connectNulls type=\"monotone\" />\n          <Line dataKey=\"Fluoroquinolones (DCS)\" stroke={getColorForDrug(\"Fluoroquinolones (DCS)\")} connectNulls type=\"monotone\" />\n          <Line dataKey=\"Sulphonamides\" stroke={getColorForDrug(\"Sulphonamides\")} connectNulls type=\"monotone\" />\n          <Line dataKey=\"Tetracyclines\" stroke={getColorForDrug(\"Tetracyclines\")} connectNulls type=\"monotone\" />\n          <Line dataKey=\"Trimethoprim\" stroke={getColorForDrug(\"Trimethoprim\")} connectNulls type=\"monotone\" />\n        </LineChart>\n      </ResponsiveContainer>\n    )\n  }\n\n  const plotDrugsAndGenotypesChart = () => {\n    return (\n      <ResponsiveContainer width=\"90%\">\n        <BarChart\n          width={500}\n          height={300}\n          data={drugsAndGenotypesChartData}\n          margin={{\n            top: 20, left: -5, bottom: 5, right: 0\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" interval={0} tick={{ fontSize: isDesktop ? 16 : 8 }} />\n          <YAxis />\n          <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n          <Legend\n            content={(props) => {\n              const { payload } = props;\n              return (\n                <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", width: \"86%\", justifyContent: \"space-between\", marginLeft: 60, marginTop: 8, paddingLeft: isDesktop ? 32 : 0, paddingRight: isDesktop ? 32 : 0 }}>\n                  {payload.map((entry, index) => {\n                    const { dataKey, color } = entry\n                    return (\n                      <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: isDesktop ? \"30%\" : \"50%\", marginBottom: 4 }}>\n                        <div style={{ height: 8, width: 8, borderRadius: 4, backgroundColor: color, flexShrink: 0 }} />\n                        <span style={{ fontSize: 12, marginLeft: 4 }}>{dataKey}</span>\n                      </div>\n                    )\n                  })}\n                </div>\n              );\n            }}\n          />\n          {tooltip(150, 325, \"50%\", false, { zIndex: 100, top: 100 }, false)}\n          <Bar dataKey=\"Ampicillin\" fill={getColorForDrug(\"Ampicillin\")} />\n          <Bar dataKey=\"Azithromycin\" fill={getColorForDrug(\"Azithromycin\")} />\n          <Bar dataKey=\"Chloramphenicol\" fill={getColorForDrug(\"Chloramphenicol\")} />\n          <Bar dataKey=\"Co-trimoxazole\" fill={getColorForDrug(\"Co-trimoxazole\")} />\n          <Bar dataKey=\"ESBL\" fill={getColorForDrug(\"ESBL\")} />\n          <Bar dataKey=\"Fluoroquinolones (DCS)\" fill={getColorForDrug(\"Fluoroquinolones (DCS)\")} />\n          <Bar dataKey=\"Sulphonamides\" fill={getColorForDrug(\"Sulphonamides\")} />\n          <Bar dataKey=\"Tetracyclines\" fill={getColorForDrug(\"Tetracyclines\")} />\n          <Bar dataKey=\"Trimethoprim\" fill={getColorForDrug(\"Trimethoprim\")} />\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n\n  const getPopulationStructureChartLabel = () => {\n    if (populationStructureFilter === 1)\n      return <span className=\"y-axis-label-vertical\" style={{ marginRight: 8 }}>Number of genomes</span>\n    else\n      return <span className=\"y-axis-label-horizontal\">Number of genomes</span>\n  }\n\n  function imgOnLoadPromise(obj) {\n    return new Promise((resolve, reject) => {\n      obj.onload = () => resolve(obj);\n      obj.onerror = reject;\n    });\n  }\n\n  const captureMap = () => {\n    setCaptureControlMapInProgress(true)\n\n    svgAsPngUri(document.getElementById('control-map'), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\n      .then(async (uri) => {\n        // const canvasBottomPadding = 220\n\n        let canvas = document.createElement(\"canvas\")\n        let ctx = canvas.getContext('2d');\n\n        let mapImg = document.createElement(\"img\");\n        let mapImgPromise = imgOnLoadPromise(mapImg);\n        mapImg.src = uri;\n        await mapImgPromise;\n\n        // canvas.width = mapImg.width;\n        // canvas.height = mapImg.height;\n        canvas.width = 3600;\n        canvas.height = 1800;\n        // canvas.height = mapImg.height + canvasBottomPadding;\n\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\n\n        let typhinetLogo = document.createElement(\"img\");\n        let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\n        typhinetLogo.src = typhinetLogoImg;\n        await typhinetLogoPromise;\n\n        const typhinetLogoWidth = typhinetLogo.width * 0.5\n        const typhinetLogoHeight = typhinetLogo.height * 0.5\n\n        ctx.drawImage(typhinetLogo, 26, canvas.height - typhinetLogoHeight - 16, typhinetLogoWidth, typhinetLogoHeight);\n        // ctx.drawImage(typhinetLogo, (canvas.width / 2) - (typhinetLogo.width / 2), canvas.height - canvasBottomPadding - 78);\n\n        const base64 = canvas.toDataURL();\n        download(base64, 'Genome Samples (World Map) - TyphiNET.png');\n\n        setCaptureControlMapInProgress(false)\n      });\n\n    //* Funcionando! (PNG)\n    // saveSvgAsPng(document.getElementById('control-map'), \"Genome Samples (World Map) - TyphiNET.png\", {scale: 1.5, backgroundColor: \"white\", width: 1200, left: -200 });\n\n    //* Funcionando! (SVG)\n    // NPM: html-to-image\n    // toSvg(document.getElementById('control-map'),\n    //   {\n    //     backgroundColor: \"white\",\n    //     style: {\n    //       width: 800,\n    //       height: 400\n    //     },\n    //     width: 800,\n    //     height: 400\n    //   }\n    // )\n    //   .then(function (dataUrl) {\n    //     download(dataUrl, 'Genome Samples (World Map) - TyphiNET.svg');\n    //   });\n  }\n\n  const dowloadBaseSpreadsheet = () => {\n    axios.get(`${API_ENDPOINT}file/download`)\n      .then((res) => {\n        download(res.data, 'TyphiNET Database.tsv');\n      })\n  }\n\n  const generateMapLegendOptions = () => {\n    let percentageSteps = ['1', '25', '50', '75', '100']\n\n    switch (mapView) {\n      case 'No. Samples':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0</span>\n            </div>\n            {[...Array(6).keys()].map((n) => {\n              const samplesLegend = n !== 0 ? n * (samplesQty / 5) : 1\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapSamplesColorScale(samplesLegend) }} />\n                  <span>{samplesLegend}</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'AMR Profiles':\n        let amrProfiles = ['MDR_DCS', 'MDR', 'DCS', 'AzithR_MDR', 'AzithR_DCS', 'AzithR_DCS_MDR', 'XDR', 'AMR', 'AMR_DCS'].sort((a, b) => a.localeCompare(b));\n        amrProfiles.push('No AMR detected')\n        return (\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\n            {amrProfiles.map((a, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: getColorForAMR(a) }} />\n                  <span>{a}</span>\n                </div>\n              )\n            })}\n          </div>\n        )\n      case 'Dominant Genotype':\n        return (\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\n            {genotypes.map((g, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: getColorForGenotype(g) }} />\n                  <span>{g}</span>\n                </div>\n              )\n            })}\n          </div>\n        )\n      case 'H58 / Non-H58':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"darkgrey\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((g, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(g) }} />\n                  <span>{g}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'MDR':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'XDR':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'DCS':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'Azith':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'Resistance to Drug':\n        let drugs = [\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (DCS)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"]\n        return (\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\n            {drugs.map((d, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: getColorForDrug(d) }} />\n                  <span>{d}</span>\n                </div>\n              )\n            })}\n          </div>\n        )\n      case 'Plasmid Incompatibility Type':\n        let incTypes = [\"IncX1\", \"IncFIA(HI1)\", \"IncFIB(pHCM2)\", \"IncA/C2\", \"IncP1\", \"IncFIA(HI1)/IncHI1A/IncHI1B(R27)\", \"Col(BS512)\", \"IncHI1A/IncHI1B(R27)\", \"IncN\", \"IncHI1B(R27)\", \"p0111\", \"IncHI1A\", \"IncI1\", \"IncY\", \"IncFIB(AP001918)\", \"IncFIB(K)\", \"IncHI2/IncHI2A\", \"Col440I\", \"Col440I\", \"Col156\", \"Col440II/Col440II\", \"IncFIA(HI1)/IncHI1A\", \"ColRNAI\", \"ColpVC\", \"IncX3\"].sort((a, b) => a.localeCompare(b));\n        return (\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\n            {incTypes.map((d, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: getColorForIncType(d) }} />\n                  <span>{d}</span>\n                </div>\n              )\n            })}\n          </div>\n        )\n      default:\n        return null\n    }\n  }\n\n  const renderMapLegend = () => {\n    return (\n      <div className=\"map-legend\">\n        <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 12, marginTop: 2 }}>\n          <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\" }}>Select map view</InputLabel>\n          <Select\n            value={mapView}\n            onChange={evt => setMapView(evt.target.value)}\n            fullWidth\n            style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }}\n          >\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Dominant Genotype'}>\n              Dominant Genotype\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'No. Samples'}>\n              No. Samples\n          </MenuItem>\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'AMR Profiles'}>\n              AMR Profiles\n          </MenuItem> */}\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'H58 / Non-H58'}>\n              H58\n          </MenuItem>\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Plasmid Incompatibility Type'}>\n              Plasmid Incompatibility Type\n          </MenuItem> */}\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'MDR'}>\n              MDR\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'XDR'}>\n              XDR\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'DCS'}>\n              DCS\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Azith'}>\n              AzithR\n          </MenuItem>\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Resistance to Drug'}>\n              Resistance to Drug\n          </MenuItem> */}\n          </Select>\n        </FormControl>\n        {generateMapLegendOptions()}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"info-wrapper\">\n        {isDesktop && (\n          <>\n            <div style={{ display: \"flex\", flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n              <img style={{ height: 90, marginBottom: -10 }} src={typhinetLogoImg} alt=\"TyphiNET\" />\n            </div>\n            <div style={{ width: 16 }} />\n          </>\n        )}\n        <div className=\"card\">\n          <span>Total Genomes</span>\n          {totalGenomes.length === actualGenomes.length ? (\n            <span className=\"value\">{totalGenomes.length}</span>\n          ) : (\n            <span className=\"value\">\n              {actualGenomes.length}\n              <span className=\"value-total\">/{totalGenomes.length}</span>\n            </span>\n          )}\n        </div>\n        <div style={{ width: 16 }} />\n        <div className=\"card\">\n          <span>Total Genotypes</span>\n          {totalGenotypes.length === actualGenotypes.length ? (\n            <span className=\"value\">{totalGenotypes.length}</span>\n          ) : (\n            <span className=\"value\">\n              {actualGenotypes.length}\n              <span className=\"value-total\">/{totalGenotypes.length}</span>\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"map-filters-wrapper\" style={{ flexDirection: 'column' }}>\n        <h2 style={{ textAlign: \"center\" }}>Global Overview of Salmonella Typhi</h2>\n        <div className=\"map-filters-wrapper-inside\" style={{ flexDirection: isDesktop ? 'row' : 'column' }}>\n          <div className=\"map-wrapper\">\n            <ComposableMap\n              id=\"control-map\"\n              data-tip=\"\"\n              projectionConfig={{\n                rotate: [-10, 0, 0],\n                scale: 210,\n              }}\n              style={{ height: \"100%\", width: \"100%\" }}\n            >\n              <ZoomableGroup\n                zoom={controlMapPosition.zoom}\n                center={controlMapPosition.coordinates}\n                onMoveEnd={(position) => {\n                  setControlMapPosition(position);\n                }}\n              >\n                <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\n                <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n                <Geographies\n                  geography={geography}>\n                  {({ geographies }) =>\n                    geographies.map((geo) => {\n                      const sample = worldMapSamplesData.find(s => s.displayName === geo.properties.NAME)\n                      const d = worldMapComplementaryData[geo.properties.NAME]; /* .NAME || .NAME_LONG */\n                      let country\n\n                      let fill = \"#F5F4F6\"\n\n                      switch (mapView) {\n                        case 'No. Samples':\n                          if (sample && sample.count !== 0)\n                            fill = mapSamplesColorScale(sample.count);\n                          break;\n                        case 'AMR Profiles':\n                          country = worldMapAmrProfilesData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.amrProfiles.length > 0)\n                            fill = getColorForAMR(country.amrProfiles[0].name);\n                          break;\n                        case 'Dominant Genotype':\n                          country = worldMapGenotypesData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined) {\n                            const temp = country.genotypes\n                            temp.sort((a, b) => a.lineage < b.lineage ? 1 : -1)\n                            fill = getColorForGenotype(temp[0].lineage)\n                          }\n                          break;\n                        case 'H58 / Non-H58':\n                          country = worldMapH58Data.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.genotypes[0]) {\n                            const temp = country.genotypes.find(g => g.type === 'H58')\n                            switch (temp === undefined) {\n                              case false:\n                                fill = mapRedColorScale(temp.percentage)\n                                break;\n                              case 'Non-H58':\n                                fill = \"darkgrey\"\n                                break;\n                              default:\n                                break;\n                            }\n                          }\n                          break;\n                        case 'MDR':\n                          country = worldMapMDRData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'XDR':\n                          country = worldMapXDRData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'DCS':\n                          country = worldMapDCSData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'Azith':\n                          country = worldMapAZITHData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'Resistance to Drug':\n                          country = worldMapDrugsData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.drugs.length > 0)\n                            fill = getColorForDrug(country.drugs[0].name);\n                          break;\n                        case 'Plasmid Incompatibility Type':\n                          country = worldMapPlasmidIncompatibilityTypeData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.incTypes.length > 0)\n                            fill = getColorForIncType(country.incTypes[0].type);\n                          break;\n                        default:\n                          break;\n                      }\n\n                      return (\n                        <Geography\n                          key={geo.rsmKey}\n                          geography={geo}\n                          cursor=\"pointer\"\n                          fill={fill}\n                          onClick={() => {\n                            if (d !== undefined && sample !== undefined)\n                              setActualCountry(sample.name)\n                          }}\n                          onMouseEnter={() => {\n                            const { NAME } = geo.properties;\n                            switch (mapView) {\n                              case 'No. Samples':\n                                if (sample !== undefined && d !== undefined) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    additionalInfo: {\n                                      samples: sample.count,\n                                      genotypes: d.GENOTYPES.TOTAL,\n                                      H58: Math.round(d.H58) !== d.H58 ? d.H58.toFixed(2) : d.H58,\n                                      MDR: Math.round(d.MDR) !== d.MDR ? d.MDR.toFixed(2) : d.MDR,\n                                      DCS: Math.round(d.DCS) !== d.DCS ? d.DCS.toFixed(2) : d.DCS,\n                                      AzithR: Math.round(d.AzithR) !== d.AzithR ? d.AzithR.toFixed(2) : d.AzithR\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'AMR Profiles':\n                                if (country !== undefined) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    amrProfilesInfo: country.amrProfiles\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'Dominant Genotype':\n                                if (country !== undefined) {\n                                  let temp = country.genotypes\n                                  temp.sort((a, b) => a.lineage < b.lineage ? 1 : -1)\n                                  setTooltipContent({\n                                    name: NAME,\n                                    genotypeInfo: temp\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'H58 / Non-H58':\n                                if (country !== undefined && country.genotypes.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    simpleGenotypeInfo: country.genotypes\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'MDR':\n                                if (country !== undefined && country.MDRs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    mdrInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'XDR':\n                                if (country !== undefined && country.XDRs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    xdrInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'DCS':\n                                if (country !== undefined && country.DCSs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    dcsInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'Azith':\n                                if (country !== undefined && country.AZs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    azInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'Resistance to Drug':\n                                if (country !== undefined && country.drugs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    drugsInfo: country.drugs\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'Plasmid Incompatibility Type':\n                                if (country !== undefined && country.incTypes.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    incTypesInfo: country.incTypes\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              default:\n                                break;\n                            }\n                          }}\n                          onMouseLeave={() => {\n                            setTooltipContent(null);\n                          }}\n                          style={{\n                            default: {\n                              outline: \"none\",\n                            },\n                            hover: {\n                              fill: \"#CFD8DC\",\n                              stroke: \"#607D8B\",\n                              strokeWidth: 1,\n                              outline: \"none\",\n                            },\n                            pressed: {\n                              fill: \"#FF5722\",\n                              stroke: \"#607D8B\",\n                              strokeWidth: 1,\n                              outline: \"none\",\n                            }\n                          }}\n                        />\n                      );\n                    })\n                  }\n                </Geographies>\n              </ZoomableGroup>\n            </ComposableMap>\n            {(samplesQty > 0 && isDesktop) && (\n              <div className=\"map-upper-right-buttons\">\n                {renderMapLegend()}\n              </div>\n            )}\n            {(samplesQty > 0 && isDesktop) && (\n              <div className=\"map-upper-left-buttons \">\n                <div className=\"map-filters\" style={{ width: isDesktop ? 200 : \"-webkit-fill-available\" }}>\n                  <span style={{ fontWeight: 600, fontSize: 20, marginBottom: 20 }}>Filters</span>\n                  <div style={{ marginBottom: 16 }}>\n                    <Typography style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\n                      Select dataset\n                    </Typography>\n                    <ToggleButtonGroup\n                      value={dataset}\n                      exclusive\n                      size=\"small\"\n                      style={{ marginTop: 5 }}\n                      onChange={(evt, newDataset) => {\n                        if (newDataset !== null)\n                          setDataset(newDataset)\n                      }}\n                    >\n                      <CustomToggleButton value=\"full\">\n                        All\n                      </CustomToggleButton>\n                      <CustomToggleButton value=\"global\">\n                        Local\n                      </CustomToggleButton>\n                      <CustomToggleButton value=\"local\">\n                        Travel\n                      </CustomToggleButton>\n                    </ToggleButtonGroup>\n                  </div>\n                  <div style={{ marginTop: 4 }}>\n                    <Typography gutterBottom style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\n                      Select time period\n                    </Typography>\n                    <CustomSlider\n                      value={actualTimePeriodRange}\n                      min={timePeriodRange[0]}\n                      max={timePeriodRange[1]}\n                      marks\n                      step={10}\n                      onChange={(evt, value) => {\n                        setActualTimePeriodRange(value)\n                      }}\n                      valueLabelDisplay=\"auto\"\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\"map-lower-left-buttons\">\n              <Zoom in={controlMapPosition.zoom !== 1 || controlMapPosition.coordinates.some(c => c !== 0)}>\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Recenter Map</span>} placement=\"right\">\n                  <div\n                    className=\"button\"\n                    onClick={() => setControlMapPosition({ coordinates: [0, 0], zoom: 1 })}\n                  >\n                    <FontAwesomeIcon icon={faCrosshairs} />\n                  </div>\n                </TooltipMaterialUI>\n              </Zoom>\n              <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom In</span>} placement=\"right\">\n                <div\n                  className=\"button\"\n                  onClick={() => {\n                    if (controlMapPosition.zoom >= 4) return;\n                    setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\n                  }}\n                >\n                  <FontAwesomeIcon icon={faPlus} />\n                </div>\n              </TooltipMaterialUI>\n              <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom Out</span>} placement=\"right\">\n                <div\n                  className=\"button\"\n                  onClick={() => {\n                    if (controlMapPosition.zoom <= 1) return;\n                    if (controlMapPosition.zoom / 2 === 1) {\n                      setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\n                    } else {\n                      setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\n                    }\n                  }}\n                >\n                  <FontAwesomeIcon icon={faMinus} />\n                </div>\n              </TooltipMaterialUI>\n            </div>\n            <div className=\"map-lower-right-buttons\">\n              <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Map as PNG</span>} placement=\"left\">\n                <div\n                  className={`button ${captureControlMapInProgress && \"disabled\"}`}\n                  onClick={() => {\n                    if (!captureControlMapInProgress)\n                      captureMap()\n                  }}\n                >\n                  <FontAwesomeIcon icon={faCamera} />\n                </div>\n              </TooltipMaterialUI>\n              {captureControlMapInProgress && (\n                <CustomCircularProgress\n                  size={54}\n                  thickness={4}\n                  style={{ position: \"absolute\", top: 5, left: -7 }} />\n              )}\n            </div>\n          </div>\n          {(samplesQty > 0 && !isDesktop) && (\n            <div style={{ marginTop: 16, marginBottom: 8 }}>\n              {renderMapLegend()}\n            </div>\n          )}\n          <ReactTooltip>\n            {tooltipContent && (\n              <div className=\"tooltip-map\">\n                <span className=\"country\">{tooltipContent.name}</span>\n                {tooltipContent.additionalInfo && (\n                  <div className=\"additional-info\">\n                    <span>Samples: {tooltipContent.additionalInfo.samples}</span>\n                    <span>Genotypes: {tooltipContent.additionalInfo.genotypes}</span>\n                    <span>H58: {tooltipContent.additionalInfo.H58}%</span>\n                    <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\n                    <span>DCS: {tooltipContent.additionalInfo.DCS}%</span>\n                    <span>AzithR: {tooltipContent.additionalInfo.AzithR}%</span>\n                  </div>\n                )}\n                {tooltipContent.genotypeInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.genotypeInfo.map((genotype, index) => {\n                      if (index < 5) {\n                        return (\n                          <div key={index} className=\"genotype\">\n                            <div className=\"color\" style={{ backgroundColor: getColorForGenotype(genotype.lineage) }} />\n                            <span>{genotype.lineage}: {genotype.count}</span>\n                          </div>\n                        )\n                      } else\n                        return null;\n                    })}\n                  </div>\n                )}\n                {tooltipContent.simpleGenotypeInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\n                      <span>{tooltipContent.simpleGenotypeInfo[0].type}: {tooltipContent.simpleGenotypeInfo[0].count} ({tooltipContent.simpleGenotypeInfo[0].percentage}%)</span>\n                    ) : tooltipContent.simpleGenotypeInfo.length > 1 && tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\n                      <span>{tooltipContent.simpleGenotypeInfo[1].type}: {tooltipContent.simpleGenotypeInfo[1].count} ({tooltipContent.simpleGenotypeInfo[1].percentage}%)</span>\n                    ) : (\n                      <span>H58: 0 (0%)</span>\n                    )}\n                  </div>\n                )}\n                {tooltipContent.mdrInfo && (\n                  <div className=\"additional-info\">\n                    <span>MDR: {tooltipContent.mdrInfo.count} ({tooltipContent.mdrInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.xdrInfo && (\n                  <div className=\"additional-info\">\n                    <span>XDR: {tooltipContent.xdrInfo.count} ({tooltipContent.xdrInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.dcsInfo && (\n                  <div className=\"additional-info\">\n                    <span>DCS: {tooltipContent.dcsInfo.count} ({tooltipContent.dcsInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.azInfo && (\n                  <div className=\"additional-info\">\n                    <span>AzithR: {tooltipContent.azInfo.count} ({tooltipContent.azInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.drugsInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.drugsInfo.map((drug, index) => {\n                      if (index < 5) {\n                        return (\n                          <div key={index} className=\"genotype\">\n                            <div className=\"color\" style={{ backgroundColor: getColorForDrug(drug.name) }} />\n                            <span>{drug.name}: {drug.count}</span>\n                          </div>\n                        )\n                      } else\n                        return null;\n                    })}\n                  </div>\n                )}\n                {tooltipContent.amrProfilesInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.amrProfilesInfo.map((amr, index) => {\n                      if (index < 5) {\n                        return (\n                          <div key={index} className=\"genotype\">\n                            <div className=\"color\" style={{ backgroundColor: getColorForAMR(amr.name) }} />\n                            <span>{amr.name}: {amr.count}</span>\n                          </div>\n                        )\n                      } else\n                        return null;\n                    })}\n                  </div>\n                )}\n                {tooltipContent.incTypesInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.incTypesInfo.map((incType, index) => {\n                      if (index < 5) {\n                        return (\n                          <div key={index} className=\"genotype\">\n                            <div className=\"color\" style={{ backgroundColor: getColorForIncType(incType.type) }} />\n                            <span>{incType.type}: {incType.count}</span>\n                          </div>\n                        )\n                      } else\n                        return null;\n                    })}\n                  </div>\n                )}\n                {(!tooltipContent.incTypesInfo && !tooltipContent.amrProfilesInfo && !tooltipContent.drugsInfo && !tooltipContent.xdrInfo && !tooltipContent.mdrInfo && !tooltipContent.dcsInfo && !tooltipContent.azInfo && !tooltipContent.simpleGenotypeInfo && !tooltipContent.genotypeInfo && !tooltipContent.additionalInfo) && (\n                  <div className=\"additional-info\">\n                    <span>No reported data</span>\n                  </div>\n                )}\n              </div>\n            )}\n          </ReactTooltip>\n        </div>\n      </div>\n      <div className=\"chart-wrapper\" style={{ flexDirection: 'column' }}>\n        <h2 style={{ textAlign: \"center\" }}>Now showing: {dataset === \"full\" ? \"All\" : dataset === \"global\" ? \"Local\" : \"Travel\"} dataset from {actualCountry === \"All\" ? \"all countries\" : actualCountry} from {actualTimePeriodRange.toString().substring(0, 4)} to {actualTimePeriodRange.toString().substring(5)}</h2>\n        <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 16, alignItems: \"center\" }}>\n          {/* <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\", width: 200 }}>Select country (or click map)</InputLabel> */}\n          <Select\n            value={actualCountry}\n            onChange={evt => setActualCountry(evt.target.value)}\n            fullWidth\n            style={{ fontWeight: 600, fontFamily: \"Montserrat\", width: 200 }}\n          >\n            {countriesForFilter.map((country, index) => {\n              return (\n                <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={country}>\n                  {country}\n                </MenuItem>\n              )\n            })}\n          </Select>\n        </FormControl>\n        <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n          <div style={{ display: \"flex\", flexDirection: isDesktop ? \"row\" : \"column\", marginTop: 16 }}>\n            <div style={{ display: \"flex\", flexDirection: \"column\", flex: 0.6 }}>\n              <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n                <span className=\"chart-title\" style={{ marginRight: -22 }}>Resistance Frequencies Within Genotypes</span>\n                <span className=\"chart-title\" style={{ marginRight: -22, marginBottom: -8, fontSize: 10, fontWeight: 400 }}>Top Five Genotypes</span>\n                <div style={{ height: isDesktop ? 350 : 400, minHeight: isDesktop ? 350 : 400, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                  <span className=\"y-axis-label-vertical\" style={{ marginRight: 8, marginBottom: isDesktop ? 84 : 154 }}>Number of occurrences</span>\n                  {plotDrugsAndGenotypesChart()}\n                </div>\n              </div>\n              <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", marginTop: 22 }}>\n                <span className=\"chart-title\" style={{ marginRight: -22, marginBottom: -8 }}>Drug Resistance Trends</span>\n                <div style={{ height: isDesktop ? 350 : 400, minHeight: isDesktop ? 350 : 400, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                  <span className=\"y-axis-label-vertical\" style={{ marginRight: 8, marginBottom: isDesktop ? 84 : 124 }}>Number of occurrences</span>\n                  {plotDrugTrendsChart()}\n                </div>\n              </div>\n              <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", marginTop: 22 }}>\n                <span className=\"chart-title\" style={{ marginRight: -22, marginBottom: 0 }}>Genotype Distribution</span>\n                <div style={{ width: isDesktop ? \"60%\" : \"90%\", alignSelf: \"center\", marginRight: isDesktop && populationStructureFilter !== 1 ? \"-10%\" : 0, marginBottom: populationStructureFilter === 1 ? -8 : 16 }}>\n                  <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 16 }}>\n                    <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Population Structure</InputLabel>\n                    <Select\n                      value={populationStructureFilter}\n                      onChange={evt => setPopulationStructureFilter(evt.target.value)}\n                      fullWidth\n                      style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\n                    >\n                      <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\n                        Genotype\n                      </MenuItem>\n                      <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\n                        H58 / Non-H58\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n                <div style={{ height: 600, minHeight: 600, display: \"flex\", flexDirection: populationStructureFilter === 1 ? \"row\" : \"column-reverse\", alignItems: \"center\", marginLeft: populationStructureFilter === 2 ? -22 : 0 }}>\n                  {getPopulationStructureChartLabel()}\n                  {plotPopulationStructureChart()}\n                </div>\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"column\", flex: 0.4 }}>\n              <span className=\"chart-title\" style={{ marginRight: -22, marginBottom: 12 }}>Resistance frequencies within all genotypes</span>\n              <div style={{ width: isDesktop ? \"60%\" : \"90%\", alignSelf: \"center\", marginBottom: -4, marginRight: isDesktop ? \"-10%\" : 0 }}>\n                <FormControl fullWidth className={classes.formControlSelect} style={{ marginTop: 0 }}>\n                  <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Select Drug Class</InputLabel>\n                  <Select\n                    value={amrClassFilter}\n                    onChange={evt => setAmrClassFilter(evt.target.value)}\n                    fullWidth\n                    style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\n                  >\n                    {amrClassesForFilter.map((amrClass, index) => {\n                      return (\n                        <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={amrClass}>\n                          {amrClass}\n                        </MenuItem>\n                      )\n                    })}\n                  </Select>\n                </FormControl>\n              </div>\n              <div style={{ height: isDesktop ? \"100%\" : 800, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                <span className=\"y-axis-label-vertical\" style={{ marginRight: 8 }}>Number of occurrences</span>\n                {plotAmrClassChart()}\n              </div>\n            </div>\n          </div>\n          <div style={{ display: \"flex\", flexDirection: isDesktop ? \"row\" : \"column\", padding: 12, alignItems: \"center\", width: \"-webkit-fill-available\", justifyContent: \"center\" }}>\n            <div className=\"download-sheet-button\" onClick={() => dowloadBaseSpreadsheet()}>\n              <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\n              <span>Download TyphiNET Database</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"about-wrapper\">\n        <h2 style={{ marginBottom: 0 }}>About TyphiNET</h2>\n        <p>\n          TyphiNET is a multi-institutional global collaborative network. Our goal is to facilitate data sharing, and assist in removing barriers to the re-use of pathogen genomic data from both endemic surveillance projects, as well as those data routinely generated by public health reference laboratories, for global public health benefit.\n        </p>\n        <p>\n          The TyphiNET online platform is designed to collate all available whole genome sequence (WGS) data from the bacterial pathogen Salmonella Typhi. As bacterial WGS data is uniquely enriched with many characteristics of the infecting pathogen, we aim to provide up to date global estimates of both antimicrobial resistance and circulating genotypes for S. Typhi. We aim to improve global typhoid fever surveillance in the short term, and to provide evidence to assist in the improvement of intervention strategies and treatment guidelines for this pathogen in the long term.\n        </p>\n        <p>\n          TyphiNET is coordinated by Dr Zoe Dyson, Dr Louise Cerdeira and Prof Kat Holt. We are based at the Department of Infection Biology at the <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">London School of Hygiene and Tropical Medicine</a>, as well as the Department of Infectious Diseases at <a href=\"https://www.monash.edu/medicine/ccs/infectious-diseases/home\" target=\"_blank\" rel=\"noreferrer\">Monash University</a>. For more information about Holt lab projects and members, please visit the <a href=\"https://holtlab.net/\" target=\"_blank\" rel=\"noreferrer\">Holt Lab website</a>.\n        </p>\n        <p>\n          TyphiNET has received funding from the European Union's Horizon 2020 research and innovation programme under the Marie Skłodowska-Curie grant agreement TyphiNET No 845681. We are also grateful to the Wellcome Trust for support from their Open Research Fund programme (219692/Z/19/Z). Follow us on <a href=\"https://twitter.com/typhinet\" target=\"_blank\" rel=\"noreferrer\">Twitter</a>.\n        </p>\n        <h2 style={{ marginBottom: 0 }}>Genomic analysis framework:</h2>\n        <p>\n          TyphiNET utilises the <a href=\"https://github.com/katholt/genotyphi/\" target=\"_blank\" rel=\"noreferrer\">GenoTyphi</a> genotyping scheme, publised by <a href=\"https://www.nature.com/articles/ncomms12827\" target=\"_blank\" rel=\"noreferrer\">Wong <i>et al.</i> 2016</a>, and discussed in this <a href=\"https://holtlab.net/2016/10/12/global-picture-typhoid/\" target=\"_blank\" rel=\"noreferrer\">blog post</a>.  Data are sourced monthly from the <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">Pathogenwatch</a> online data analysis platform described in this <a href=\"https://www.biorxiv.org/content/10.1101/2020.07.03.186692v1.abstract\" target=\"_blank\" rel=\"noreferrer\">preprint</a> by Argimón <i>et al.</i> 2020.\n      </p>\n      </div>\n      <div className=\"footer-buttons-wrapper\">\n        <div\n          className=\"flex-button\"\n          onClick={() => {\n            setContactModalVisible(true)\n          }}\n        >\n          <FontAwesomeIcon icon={faEnvelope} style={{ marginRight: 8 }} />\n          <span style={{ fontWeight: 600 }}>Contact</span>\n        </div>\n        <div\n          className=\"flex-button\"\n          onClick={() => {\n            window.open('https://github.com/zadyson/TyphiNET', '_blank')\n          }}\n        >\n          <FontAwesomeIcon icon={faGithub} style={{ marginRight: 8 }} />\n          <span style={{ fontWeight: 600 }}>GitHub</span>\n        </div>\n        <div\n          className=\"flex-button\"\n          onClick={() => {\n            window.open('https://twitter.com/typhinet', '_blank')\n          }}\n        >\n          <FontAwesomeIcon icon={faTwitter} style={{ marginRight: 8 }} />\n          <span style={{ fontWeight: 600 }}>Twitter</span>\n        </div>\n      </div>\n      <div style={{ flex: 1 }} />\n      <div className=\"footer\">\n        <span>Data obtained from: <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">pathogen watch project</a> on 07/02/2021.</span>\n        <span><a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">Holt Lab</a></span>\n      </div>\n\n      <div style={{ zIndex: 1000 }}>\n        <Rodal\n          visible={contactModalVisible}\n          showCloseButton={false}\n          customStyles={{ padding: 0, overflow: \"hidden\", width: isDesktop ? \"75%\" : \"95%\", height: isDesktop ? \"75%\" : \"95%\" }}\n          onClose={() => {\n            setContactModalVisible(false);\n          }}\n        >\n          <div style={{ backgroundColor: \"transparent\", height: \"100%\", width: \"100%\", overflow: \"hidden\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", height: \"100%\" }}>\n              <div\n                className=\"modal-close-button\"\n                style={{ position: \"absolute\", right: 24, top: 24, height: 24, width: 24, zIndex: 500 }}\n                onClick={() => {\n                  setContactModalVisible(false);\n                }}\n              >\n                <FontAwesomeIcon icon={faTimes} style={{ marginRight: 8, color: \"black\", fontSize: 24 }} />\n              </div>\n              <div style={{\n                padding: 32, height: \"100%\", width: \"-webkit-fill-available\", display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\"\n              }}>\n                <span style={{ fontWeight: 600, fontSize: 20, marginBottom: 20 }}>Contact</span>\n                <ContactPage />\n              </div>\n            </div>\n          </div>\n        </Rodal>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage;","import React from 'react';\nimport './App.css';\nimport DashboardPage from './pages/dashboard'\nimport typhinetLogoImg from './assets/img/logo-typhinet.png';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        {window.innerWidth > 767 ? (\n          <DashboardPage />\n        ) : (\n            <>\n              <div className=\"menu-bar-mobile\">\n                <img className=\"logoImageMenu-mobile\" src={typhinetLogoImg} alt=\"TyphiNET\" />\n              </div>\n              <div style={{ width: \"100%\" }}>\n                <DashboardPage />\n              </div>\n            </>\n          )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}