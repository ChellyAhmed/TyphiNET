{"version":3,"sources":["assets/img/logo-typhinet.png","constants.js","util/colorHelper.js","pages/contact/index.js","pages/dashboard/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForAMR","amr","getColorForDrug","drug","getColorForIncType","incType","useStyles","makeStyles","theme","textField","color","borderBottomColor","button","backgroundColor","fade","ContactPage","classes","React","useState","company","email","firstName","lastName","address","city","country","postalCode","additionalInformation","form","setForm","formErrors","setFormErrors","loading","setLoading","isDesktop","window","innerWidth","className","TextField","value","onChange","evt","target","fullWidth","label","style","fontFamily","fontWeight","InputProps","error","helperText","FormHelperTextProps","width","multiline","marginTop","LinearProgress","Button","variant","onClick","_formErrors","axios","post","then","res","alert","catch","formControlSelect","spacing","marginBottom","minWidth","CustomSlider","withStyles","root","thumb","boxShadow","valueLabel","Slider","CustomCircularProgress","CircularProgress","CustomToggleButton","padding","selected","ToggleButton","DashboardPage","coordinates","zoom","controlMapPosition","setControlMapPosition","samplesQty","setSamplesQty","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapXDRData","setWorldMapXDRData","worldMapDCSData","setWorldMapDCSData","worldMapAZITHData","setWorldMapAZITHData","worldMapCIPIData","setWorldMapCIPIData","worldMapCIPRData","setWorldMapCIPRData","worldMapDrugsData","setWorldMapDrugsData","worldMapAmrProfilesData","setWorldMapAmrProfilesData","worldMapPlasmidIncompatibilityTypeData","setWorldMapPlasmidIncompatibilityTypeData","captureControlMapInProgress","setCaptureControlMapInProgress","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","tooltipContent","setTooltipContent","timePeriodRange","setTimePeriodRange","actualTimePeriodRange","setActualTimePeriodRange","countriesForFilter","setCountriesForFilter","actualCountry","setActualCountry","populationStructureFilter","setPopulationStructureFilter","amrClassesForFilter","amrClassFilter","setAmrClassFilter","drugTrendsChartData","setDrugTrendsChartData","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","chartMaxHeight","setChartMaxHeight","chartMaxWidth","setChartMaxWidth","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","dataset","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","contactModalVisible","setContactModalVisible","genotypes","sort","a","b","localeCompare","useEffect","get","limits","data","min","max","timeOutId","setTimeout","response","clearTimeout","filter","genotypeChartResponse","parseDataForGenotypeChart","parseDataForCountryMap","drugTrendsChartResponse","parseDataForDrugTrendsChart","classChartResponse","parseDataForAmrClassChart","finalPopulationStructureChartData","genomes","forEach","entry","some","g","GENOTYPE","push","e","name","YEAR","year","find","yearIndex","findIndex","undefined","genotypeSimple","genotypeSimpleIndex","length","sum","Object","entries","total","arraysEqual","populationStructureChartSums","_year","highestSum","Math","ceil","genotypesData","drugsData","amrData","finalCountries","samplesData","h58Data","mdrData","xdrData","incTypesData","dcsData","azithData","cipIData","cipRData","countData","array","elementToCount","parentName","childName","temp","countryIndex","parent","index","count","displayName","congoCountryIndex","centralAfricanRepublicCountryIndex","ivoryCoastCountryIndex","timorLesteCountryIndex","unshift","includes","percentage","round","toFixed","MDRs","mdr","type","parseFloat","XDRs","xdr","DCSs","dcs","AZs","az","CipIs","cipIs","CipRs","cipRs","dataForCountingDrugs","DRUGS","DRUG","incTypes","finalChartData","maxSum","totalSum","genotypeIndex","GENE","errorMargin","lowerValue","top10","element","finalDrugTrendsChartData","finalDrugsAndGenotypesChartData","allDrugs","slice","a1","a2","JSON","stringify","mapSamplesColorScale","scaleLinear","domain","range","mapRedColorScale","tooltip","positionY","width1","width2","wrapperS","stroke","chart","position","y","wrapperStyle","content","active","payload","reverse","border","display","flexDirection","fontSize","height","flexWrap","justifyContent","map","item","alignItems","fill","flex","marginLeft","armClassFilterComponent","info","margin","top","left","bottom","right","layout","strokeDasharray","dataKey","interval","tick","fontsize","amrClassChartTooltip","bars","barSize","x","zIndex","allowEscapeViewBox","wordWrap","overflowX","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","stopLoading","capturePicture","id","names","domtoimage","toPng","document","getElementById","quality","bgcolor","dataUrl","link","createElement","download","href","click","svgAsPngUri","scale","uri","canvas","ctx","getContext","mapImg","mapImgPromise","src","fillStyle","fillRect","drawImage","typhinetLogo","typhinetLogoPromise","typhinetLogoImg","typhinetLogoWidth","typhinetLogoHeight","base64","toDataURL","generateMapLegendOptions","percentageSteps","Array","keys","n","samplesLegend","amrProfiles","maxHeight","overflowY","d","renderMapLegend","FormControl","InputLabel","whiteSpace","Select","MenuItem","alt","textAlign","data-tip","projectionConfig","rotate","center","onMoveEnd","strokeWidth","geography","geographies","geo","sample","s","properties","NAME","lineage","drugs","cursor","onMouseEnter","additionalInfo","samples","GENOTYPES","TOTAL","H58","MDR","DCS","CipI","CipR","AzithR","amrProfilesInfo","genotypeInfo","simpleGenotypeInfo","mdrInfo","xdrInfo","dcsInfo","azInfo","cipIInfo","cipRInfo","drugsInfo","incTypesInfo","onMouseLeave","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","size","newDataset","gutterBottom","marks","step","valueLabelDisplay","Zoom","in","c","Tooltip","title","placement","icon","faCrosshairs","pos","faPlus","faMinus","faCamera","thickness","toString","substring","paddingRight","marginRight","props","paddingLeft","borderRadius","flexShrink","paddingTop","paddingBottom","connectNulls","alignSelf","minHeight","maxH","stackId","plotPopulationStructureChart","amrClass","cotrim","colors1","colors2","plotAmrClassChart","faTable","rel","faEnvelope","open","faGithub","faTwitter","visible","showCloseButton","customStyles","overflow","onClose","faTimes","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"k3xIAAe,MAA0B,0C,SCA5BA,EAAe,6BCAfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACH,MAAO,UACT,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,aACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,QACE,MAAO,YAIAC,EAAiB,SAA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","file":"static/js/main.6a44e0ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet.f503745b.png\";","export const API_ENDPOINT = \"http://localhost:8080/api/\";\n// export const API_ENDPOINT = \"https://typhinet.herokuapp.com/api/\";","export const getColorForGenotype = (genotype) => {\n  switch (genotype) {\n    case '0':\n      return \"#000000\";\n    case '0.0.1':\n    case '0.0.2':\n    case '0.0.3':\n    case '4.3.1.1.P1':\n      return \"#000000\";\n    case '0.1.0':\n    case '0.1':\n    case '0.1.1':\n    case '0.1.2':\n    case '0.1.3':\n      return \"#808080\";\n    case '1.1':\n    case '1.1.1':\n    case '1.1.2':\n    case '1.1.3':\n    case '1.1.4':\n      return \"#ffff00\";\n    case '1.2':\n    case '1.2.1':\n      return \"#ffd700\";\n    case '2':\n    case '2.0.0':\n    case '2.0.1':\n    case '2.0.2':\n      return \"#32cd32\";\n    case '2.1.0':\n    case '2.1':\n    case '2.1.1':\n    case '2.1.2':\n    case '2.1.3':\n    case '2.1.4':\n    case '2.1.5':\n    case '2.1.6':\n    case '2.1.7':\n    case '2.1.8':\n    case '2.1.9':\n      return \"#adff2f\";\n    case '2.2':\n    case '2.2.0':\n    case '2.2.1':\n    case '2.2.2':\n    case '2.2.3':\n    case '2.2.4':\n      return \"#98fb98\";\n    case '2.3':\n    case '2.3.1':\n    case '2.3.2':\n    case '2.3.3':\n    case '2.3.4':\n    case '2.3.5':\n      return \"#6b8e23\";\n    case '2.4.0':\n    case '2.4':\n    case '2.4.1':\n      return \"#2e8b57\";\n    case '2.5.0':\n    case '2.5':\n    case '2.5.1':\n    case '2.5.2':\n      return \"#006400\";\n    case '3.0.0':\n    case '3':\n    case '3.0.1':\n    case '3.0.2':\n      return \"#0000cd\";\n    case '3.1.0':\n    case '3.1':\n    case '3.1.1':\n    case '3.1.2':\n      return \"#4682b4\";\n    case '3.2.1':\n    case '3.2':\n    case '3.2.2':\n      return \"#00bfff\";\n    case '3.3.0':\n    case '3.3':\n    case '3.3.1':\n    case '3.3.2':\n    case '3.3.2.Bd1':\n    case '3.3.2.Bd2':\n      return \"#1e90ff\";\n    case '3.4':\n      return \"#6a5acd\";\n    case '3.5':\n    case '3.5.1':\n    case '3.5.2':\n    case '3.5.3':\n    case '3.5.4':\n      return \"#4b0082\";\n    case '4':\n    case '4.1.0':\n    case '4.1':\n    case '4.1.1':\n      return \"#8b0000\";\n    case '4.2':\n    case '4.2.1':\n    case '4.2.2':\n    case '4.2.3':\n      return \"#ff6347\";\n    case '4.3':\n    case '4.3.0':\n    case '4.3.1':\n      return \"#ff0000\";\n    case '4.3.1.1':\n      return \"#f1b6da\";\n    case '4.3.1.2':\n      return \"#c51b7d\";\n    case '4.3.1.3':\n      return \"#fb8072\";\n    default:\n      return \"#F5F4F6\";\n  }\n}\n\nexport const getColorForAMR = (amr) => {\n  switch (amr) {\n    case 'No AMR detected':\n      return \"#addd8e\";\n    case 'MDR_DCS':\n      return \"#9e9ac8\"\n    case 'MDR':\n      return \"red\"\n    case 'DCS':\n      return \"#6baed6\"\n    case 'AzithR_MDR':\n      return \"#a50f15\"\n    case 'AzithR_DCS':\n      return \"#7a0177\"\n    case 'AzithR_DCS_MDR':\n      return \"#54278f\"\n    case 'XDR':\n      return \"black\"\n    case 'AMR':\n      return \"#ffeda0\"\n    case 'AMR_DCS':\n      return \"#fd8d3c\";\n    default:\n      return \"#F5F4F6\";\n  }\n}\n\nexport const getColorForSimpleGenotype = (genotype) => {\n  switch (genotype) {\n    case 'H58':\n      return \"green\";\n    case 'Non-H58':\n      return \"red\";\n    default:\n      return \"#F5F4F6\";\n  }\n}\n\nexport const getColorForDrug = (drug) => {\n  switch (drug) {\n    case 'Azithromycin':\n      return \"rgb(144,211,199)\";\n    case 'Fluoroquinolones (DCS)':\n      return \"rgb(255,236,120)\";\n    case 'ESBL':\n      return \"rgb(190,186,217)\";\n    case 'Chloramphenicol':\n      return \"rgb(249,129,117)\";\n    case 'Ampicillin':\n      return \"rgb(129,178,210)\";\n    case 'Co-trimoxazole':\n      return \"rgb(252,180,105)\";\n    case 'Sulphonamides':\n      return \"rgb(180,221,112)\";\n    case 'Trimethoprim':\n      return \"rgb(144,211,199)\";\n    case 'Tetracyclines':\n      return \"rgb(251,207,229)\";\n    default:\n      return \"#F5F4F6\";\n  }\n}\n\nexport const getColorForIncType = (incType) => {\n  switch (incType) {\n    case 'IncX1':\n      return 'rgb(174,227,154)'\n    case 'IncFIA(HI1)':\n      return 'rgb(138,35,139)'\n    case 'IncFIB(pHCM2)':\n      return 'rgb(163,215,30)'\n    case 'IncA/C2':\n      return 'rgb(69,51,214)'\n    case 'IncP1':\n      return 'rgb(223,207,231)'\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\n      return 'rgb(66,69,94)'\n    case 'Col(BS512)':\n      return 'rgb(251,172,246)'\n    case 'IncHI1A/IncHI1B(R27)':\n      return 'rgb(34,151,67)'\n    case 'IncN':\n      return 'rgb(238,83,190)'\n    case 'IncHI1B(R27)':\n      return 'rgb(68,242,112)'\n    case 'p0111':\n      return 'rgb(251,45,76)'\n    case 'IncHI1A':\n      return 'rgb(101,230,249)'\n    case 'IncI1':\n      return 'rgb(123,44,49)'\n    case 'IncY':\n      return 'rgb(231,173,121)'\n    case 'IncFIB(AP001918)':\n      return 'rgb(32,80,46)'\n    case 'IncFIB(K)':\n      return 'rgb(53,136,209)'\n    case 'IncHI2/IncHI2A':\n      return 'rgb(115,140,78)'\n    case 'Col440I':\n      return 'rgb(159,4,252)'\n    case 'Col156':\n      return 'rgb(244,212,3)'\n    case 'Col440II/Col440II':\n      return 'rgb(17,160,170)'\n    case 'IncFIA(HI1)/IncHI1A':\n      return 'rgb(251,120,16)'\n    case 'ColRNAI':\n      return 'rgb(91,67,11)'\n    case 'ColpVC':\n      return 'rgb(248,117,116)'\n    case 'IncX3':\n      return 'rgb(190,177,231)'\n    default:\n      return \"#F5F4F6\";\n  }\n}","import './index.css'\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { API_ENDPOINT } from '../../constants';\nimport { makeStyles, fade } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    '& label.Mui-focused': {\n      color: \"rgb(31, 187, 211)\",\n    },\n    '& :not(.Mui-error).MuiInput-underline:after': {\n      borderBottomColor: \"rgb(31, 187, 211)\",\n    }\n  },\n  button: {\n    backgroundColor: \"rgb(31, 187, 211)\",\n    '&:hover': {\n      backgroundColor: fade(\"rgb(31, 187, 211)\", .6)\n    }\n  }\n}));\n\nconst ContactPage = () => {\n  const classes = useStyles();\n\n  const [form, setForm] = React.useState({\n    company: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    country: '',\n    postalCode: '',\n    additionalInformation: ''\n  })\n  const [formErrors, setFormErrors] = React.useState({\n    company: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    city: '',\n    country: '',\n  })\n  const [loading, setLoading] = React.useState(false)\n\n  const isDesktop = window.innerWidth > 767\n\n  const submit = () => {\n    let error = false;\n    let _formErrors = {\n      company: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      city: '',\n      country: '',\n    }\n\n    if (form.company === '') {\n      _formErrors = { ..._formErrors, company: 'This field is required.' }\n      error = true\n    }\n\n    if (form.email === '') {\n      _formErrors = { ..._formErrors, email: 'This field is required.' }\n      error = true\n    }\n\n    if (form.firstName === '') {\n      _formErrors = { ..._formErrors, firstName: 'This field is required.' }\n      error = true\n    }\n\n    if (form.lastName === '') {\n      _formErrors = { ..._formErrors, lastName: 'This field is required.' }\n      error = true\n    }\n\n    if (form.city === '') {\n      _formErrors = { ..._formErrors, city: 'This field is required.' }\n      error = true\n    }\n\n    if (form.country === '') {\n      _formErrors = { ..._formErrors, country: 'This field is required.' }\n      error = true\n    }\n\n    if (!error) {\n      setLoading(true)\n      axios.post(`${API_ENDPOINT}email`, form)\n        .then((res) => {\n          setLoading(false)\n          window.alert('Message successfully sent!')\n        })\n        .catch((res) => {\n          setLoading(false)\n          window.alert('Error while sending message. Please try again.')\n        })\n    } else {\n      setFormErrors(_formErrors)\n    }\n  }\n\n  return (\n    <div className=\"contact\">\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.company}\n          onChange={(evt) => {\n            setForm({ ...form, company: evt.target.value })\n            setFormErrors({ ...formErrors, company: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Company</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.company !== ''}\n          helperText={formErrors.company}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n        {isDesktop && (\n          <div style={{ width: 16 }} />\n        )}\n        <TextField\n          className={classes.textField}\n          value={form.email}\n          onChange={(evt) => {\n            setForm({ ...form, email: evt.target.value })\n            setFormErrors({ ...formErrors, email: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Email address</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.email !== ''}\n          helperText={formErrors.email}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.firstName}\n          onChange={(evt) => {\n            setForm({ ...form, firstName: evt.target.value })\n            setFormErrors({ ...formErrors, firstName: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>First name</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.firstName !== ''}\n          helperText={formErrors.firstName}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n        {isDesktop && (\n          <div style={{ width: 16 }} />\n        )}\n        <TextField\n          className={classes.textField}\n          value={form.lastName}\n          onChange={(evt) => {\n            setForm({ ...form, lastName: evt.target.value })\n            setFormErrors({ ...formErrors, lastName: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Last name</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.lastName !== ''}\n          helperText={formErrors.lastName}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.address}\n          onChange={(evt) => {\n            setForm({ ...form, address: evt.target.value })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Address</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n        />\n      </div>\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.city}\n          onChange={(evt) => {\n            setForm({ ...form, city: evt.target.value })\n            setFormErrors({ ...formErrors, city: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>City</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.city !== ''}\n          helperText={formErrors.city}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n        {isDesktop && (\n          <div style={{ width: 16 }} />\n        )}\n        <TextField\n          className={classes.textField}\n          value={form.country}\n          onChange={(evt) => {\n            setForm({ ...form, country: evt.target.value })\n            setFormErrors({ ...formErrors, country: '' })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Country</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n          error={formErrors.country !== ''}\n          helperText={formErrors.country}\n          FormHelperTextProps={{\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\n          }}\n        />\n        {isDesktop && (\n          <div style={{ width: 16 }} />\n        )}\n        <TextField\n          className={classes.textField}\n          value={form.postalCode}\n          onChange={(evt) => {\n            setForm({ ...form, postalCode: evt.target.value })\n          }}\n          fullWidth\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Postal code</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n        />\n      </div>\n      <div className=\"row\">\n        <TextField\n          className={classes.textField}\n          value={form.additionalInformation}\n          onChange={(evt) => {\n            setForm({ ...form, additionalInformation: evt.target.value })\n          }}\n          fullWidth\n          multiline\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Additional information</span>}\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\n        />\n      </div>\n      {!loading ? (\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{ fontFamily: \"Montserrat\", marginTop: 16 }} onClick={submit}>\n          Submit\n        </Button>\n      ) : (\n          <div style={{ marginTop: 16 }}>\n            <LinearProgress />\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default ContactPage;","import './index.css';\nimport React, { useEffect, useState } from \"react\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule, ZoomableGroup } from \"react-simple-maps\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport TooltipMaterialUI from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Zoom from '@material-ui/core/Zoom';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport ReactTooltip from \"react-tooltip\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Brush, LineChart, Line, Legend } from 'recharts';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faCrosshairs, faCamera, faTable, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport download from 'downloadjs';\nimport { svgAsPngUri } from 'save-svg-as-png';\nimport typhinetLogoImg from '../../assets/img/logo-typhinet.png';\nimport geography from '../../assets/world-110m.json'\nimport { API_ENDPOINT } from '../../constants';\nimport { getColorForGenotype, getColorForAMR, getColorForDrug, getColorForIncType } from '../../util/colorHelper';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\nimport ContactPage from '../contact';\nimport domtoimage from 'dom-to-image';\n\nconst useStyles = makeStyles((theme) => ({\n  formControlSelect: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n    '& label.Mui-focused': {\n      color: \"rgb(31, 187, 211)\",\n    },\n    '& :not(.Mui-error).MuiInput-underline:after': {\n      borderBottomColor: \"rgb(31, 187, 211)\",\n    },\n  }\n}));\n\nconst CustomSlider = withStyles({\n  root: {\n    color: \"rgb(31, 187, 211)\"\n  },\n  thumb: {\n    \"&.MuiSlider-thumb\": {\n      \"&:not(.MuiSlider-active):focus\": {\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\n      },\n      \"&:not(.MuiSlider-active):hover\": {\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\n      },\n      \"&.MuiSlider-active\": {\n        boxShadow: \"0px 0px 0px 14px rgba(31, 187, 211, 0.16)\"\n      },\n    },\n  },\n  valueLabel: {\n    fontFamily: \"Montserrat\",\n    fontWeight: 500\n  }\n})(Slider);\n\nconst CustomCircularProgress = withStyles({\n  root: {\n    color: \"rgb(31, 187, 211)\",\n  }\n})(CircularProgress);\n\nconst CustomToggleButton = withStyles({\n  root: {\n    padding: \"2px 8px\",\n    fontFamily: \"Montserrat\",\n    fontWeight: 600\n  },\n  selected: {\n    backgroundColor: 'rgb(31, 187, 211) !important',\n    color: \"white !important\"\n  }\n})(ToggleButton);\n\nconst DashboardPage = () => {\n  const classes = useStyles();\n\n  const [controlMapPosition, setControlMapPosition] = useState({ coordinates: [0, 0], zoom: 1 });\n  const [samplesQty, setSamplesQty] = useState(0);\n\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState({});\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\n  const [worldMapDCSData, setWorldMapDCSData] = useState([]);\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\n  const [worldMapDrugsData, setWorldMapDrugsData] = useState([]);\n  const [worldMapAmrProfilesData, setWorldMapAmrProfilesData] = useState([]);\n  const [worldMapPlasmidIncompatibilityTypeData, setWorldMapPlasmidIncompatibilityTypeData] = useState([]);\n\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] = useState(false)\n  const [captureControlChartRFWGInProgress, setCaptureControlChartRFWGInProgress] = useState(false)\n  const [captureControlChartDRTInProgress, setCaptureControlChartDRTInProgress] = useState(false)\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] = useState(false)\n  const [captureControlChartRFWAGInProgress, setCaptureControlChartRFWAGInProgress] = useState(false)\n\n  const [tooltipContent, setTooltipContent] = useState(null);\n\n  const [timePeriodRange, setTimePeriodRange] = React.useState([1905, 2019]);\n  const [actualTimePeriodRange, setActualTimePeriodRange] = React.useState([1905, 2019]);\n  const [countriesForFilter, setCountriesForFilter] = React.useState(['All']);\n  const [actualCountry, setActualCountry] = useState(\"All\");\n  const [populationStructureFilter, setPopulationStructureFilter] = React.useState(1);\n  const amrClassesForFilter = [\"AMR Profiles\", \"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (DCS)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"]\n  const [amrClassFilter, setAmrClassFilter] = React.useState(amrClassesForFilter[0])\n\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([])\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState([])\n  const [chartMaxHeight, setChartMaxHeight] = useState(0)\n  const [chartMaxWidth, setChartMaxWidth] = useState(0)\n  const [populationStructureChartData, setPopulationStructureChartData] = useState([])\n  const [amrClassChartData, setAmrClassChartData] = useState([])\n\n  const [mapView, setMapView] = React.useState('Dominant Genotype');\n  const [dataset, setDataset] = React.useState('full');\n  const [totalGenomes, setTotalGenomes] = useState([])\n  const [actualGenomes, setActualGenomes] = useState([])\n  const [totalGenotypes, setTotalGenotypes] = useState([])\n  const [actualGenotypes, setActualGenotypes] = useState([])\n\n  const [contactModalVisible, setContactModalVisible] = useState(false)\n\n  const isDesktop = window.innerWidth > 767\n\n  const genotypes = [\n    '0.0.1', '0.0.2', '0.0.3', '0.1',\n    '0.1.1', '0.1.2', '0.1.3', '1.1.1',\n    '1.1.2', '1.1.3', '1.2', '1.2.1',\n    '2', '2.0.1', '2.0.2', '2.1',\n    '2.1.1', '2.1.3', '2.1.5', '2.1.6',\n    '2.1.7', '2.1.8', '2.1.9', '2.2',\n    '2.2.1', '2.2.2', '2.2.3', '2.2.4',\n    '2.3.1', '2.3.2', '2.3.3', '2.3.4',\n    '2.3.5', '2.4', '2.4.1', '2.5',\n    '2.5.1', '3', '3.0.1', '3.0.2',\n    '3.1', '3.1.1', '3.1.2', '3.2',\n    '3.2.1', '3.2.2', '3.3', '3.3.1',\n    '3.3.2', '3.3.2.Bd1', '3.3.2.Bd2', '3.4',\n    '3.5', '3.5.1', '3.5.2', '3.5.3',\n    '3.5.4', '4.1', '4.2', '4.2.1',\n    '4.2.2', '4.2.3', '4.3.1', '4.3.1.1',\n    '4.3.1.1.P1', '4.3.1.2', '4.3.1.3'].sort((a, b) => a.localeCompare(b));\n  useEffect(() => {\n    axios.get(`${API_ENDPOINT}filters/getYearLimits`)\n      .then((res) => {\n        let limits = res.data\n        setTimePeriodRange([limits.min, limits.max])\n        setActualTimePeriodRange([limits.min, limits.max])\n      })\n  }, [])\n\n  useEffect(() => {\n    const timeOutId = setTimeout(() => {\n      axios.get(`${API_ENDPOINT}filters/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\n        .then((res) => {\n          var response = res.data\n\n          response['Dem. Rep. Congo'] = response['Democratic Republic of Congo']\n          delete response['Democratic Republic of Congo']\n          response['Central African Rep.'] = response['Central African Republic']\n          delete response['Central African Republic']\n          response[\"Côte d'Ivoire\"] = response['Ivory Coast']\n          delete response['Ivory Coast']\n          response[\"Timor-Leste\"] = response['East Timor']\n          delete response['East Timor']\n\n          setWorldMapComplementaryData(response)\n        })\n    }, 500)\n    return () => clearTimeout(timeOutId);\n  }, [actualTimePeriodRange, dataset])\n\n  useEffect(() => {\n    const timeOutId = setTimeout(async () => {\n      let filter;\n\n      if (populationStructureFilter === 1) {\n        filter = 2\n      } else {\n        filter = 3 /* H58 and Non-H58 */\n      }\n\n      let genotypeChartResponse = await axios.get(`${API_ENDPOINT}filters/${filter}/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\n      parseDataForGenotypeChart(genotypeChartResponse.data)\n\n      if (actualCountry === \"All\") {\n        parseDataForCountryMap(genotypeChartResponse.data)\n      }\n      else {\n        let response = await axios.get(`${API_ENDPOINT}filters/${filter}/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\n        parseDataForCountryMap(response.data)\n      }\n\n      let drugTrendsChartResponse = await axios.get(`${API_ENDPOINT}filters/drugTrendsChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\n      parseDataForDrugTrendsChart(drugTrendsChartResponse.data)\n\n      let classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${amrClassFilter}/${dataset}`)\n      parseDataForAmrClassChart(classChartResponse.data)\n\n    }, 500);\n    return () => clearTimeout(timeOutId);\n  }, [populationStructureFilter, actualTimePeriodRange, actualCountry, dataset, amrClassFilter]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const parseDataForGenotypeChart = (data) => {\n    var finalPopulationStructureChartData = [];\n\n    var genomes = data;\n    var genotypes = [];\n\n    data.forEach((entry) => {\n      if (!genotypes.some(g => g === entry.GENOTYPE)) {\n        genotypes.push(entry.GENOTYPE)\n      }\n\n      /* POPULATION STRUCTURE CHART GENERATION */\n      if (populationStructureFilter === 1) { /* Genotype */\n        if (!finalPopulationStructureChartData.some(e => e.name === entry.YEAR)) {\n          finalPopulationStructureChartData.push({\n            name: entry.YEAR,\n            [entry.GENOTYPE]: 1\n          })\n        } else {\n          let year = finalPopulationStructureChartData.find(e => e.name === entry.YEAR);\n          let yearIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry.YEAR);\n\n          if (year[entry.GENOTYPE] === undefined) {\n            year[entry.GENOTYPE] = 1\n          } else {\n            year[entry.GENOTYPE] = year[entry.GENOTYPE] + 1\n          }\n          finalPopulationStructureChartData[yearIndex] = year;\n        }\n      } else { /* H58 / Non-H58 */\n        if (entry['GENOTYPE_SIMPLE'] === 'H58' || entry['GENOTYPE_SIMPLE'] === 'Non-H58')\n          if (!finalPopulationStructureChartData.some(e => e.name === entry['GENOTYPE_SIMPLE'])) {\n            finalPopulationStructureChartData.push({\n              name: entry['GENOTYPE_SIMPLE'],\n              [entry.GENOTYPE]: 1\n            })\n          } else {\n            let genotypeSimple = finalPopulationStructureChartData.find(e => e.name === entry['GENOTYPE_SIMPLE']);\n            let genotypeSimpleIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry['GENOTYPE_SIMPLE']);\n\n            if (genotypeSimple[entry.GENOTYPE] === undefined) {\n              genotypeSimple[entry.GENOTYPE] = 1\n            } else {\n              genotypeSimple[entry.GENOTYPE] = genotypeSimple[entry.GENOTYPE] + 1\n            }\n            finalPopulationStructureChartData[genotypeSimpleIndex] = genotypeSimple;\n          }\n      }\n    })\n\n    if (totalGenomes.length === 0)\n      setTotalGenomes(genomes)\n\n    if (totalGenotypes.length === 0)\n      setTotalGenotypes(genotypes)\n\n    setActualGenomes(genomes)\n    setActualGenotypes(genotypes)\n\n    finalPopulationStructureChartData.forEach((data) => {\n      let sum = 0;\n      Object.entries(data).forEach((entry) => {\n        if (entry[0] !== \"name\")\n          sum += entry[1];\n      })\n      data.total = sum;\n    })\n\n    if (!arraysEqual(finalPopulationStructureChartData, populationStructureChartData))\n      setPopulationStructureChartData(finalPopulationStructureChartData)\n\n    let populationStructureChartSums = []\n    finalPopulationStructureChartData.forEach((year) => {\n      let sum = 0\n      let yearArray = Object.entries(year)\n      yearArray.forEach((_year) => {\n        if (_year[0] !== \"name\" && _year[0] !== \"total\")\n          sum += _year[1]\n      })\n      populationStructureChartSums.push({\n        year: year.name,\n        sum\n      })\n    })\n\n    if (populationStructureChartSums.length > 0) {\n      let highestSum = populationStructureChartSums.sort((a, b) => b.sum - a.sum)[0].sum;\n\n      if (populationStructureFilter === 1) {\n        if (highestSum > chartMaxHeight)\n          setChartMaxHeight(Math.ceil(highestSum / 100) * 100)\n      } else {\n        if (highestSum > chartMaxWidth)\n          setChartMaxWidth(Math.ceil(highestSum / 100) * 100)\n      }\n    }\n  }\n\n  const parseDataForCountryMap = (data) => {\n    let finalCountries = [];\n\n    let samplesData = [], genotypesData = [], h58Data = [], mdrData = [], xdrData = [], drugsData = [], amrData = [], incTypesData = [], dcsData = [], azithData = [], cipIData = [], cipRData = [];\n\n    const countData = (array, elementToCount, parentName, childName) => {\n      let temp = []\n      array.forEach(entry => {\n        if (!temp.some(e => e.name === entry['COUNTRY_ONLY'])) {\n          temp.push({\n            name: entry['COUNTRY_ONLY'],\n            displayName: entry['COUNTRY_ONLY'],\n            total: 1,\n            [parentName]: [{\n              [childName]: entry[elementToCount],\n              count: 1\n            }]\n          })\n        } else {\n          let country = temp.find(e => e.name === entry['COUNTRY_ONLY']);\n          let countryIndex = temp.findIndex(e => e.name === entry['COUNTRY_ONLY']);\n\n          if (!country[parentName].some(e => e[childName] === entry[elementToCount])) {\n            country[parentName].push({\n              [childName]: entry[elementToCount],\n              count: 1\n            })\n          } else {\n            let parent = country[parentName].find(e => e[childName] === entry[elementToCount]);\n            let index = country[parentName].findIndex(e => e[childName] === entry[elementToCount]);\n            parent.count = parent.count + 1\n            country[parentName][index] = parent\n          }\n          country.total = country.total + 1\n\n          temp[countryIndex] = country;\n        }\n      })\n\n      let congoCountryIndex = temp.findIndex(e => e.name === 'Democratic Republic of Congo');\n      if (congoCountryIndex !== -1)\n        temp[congoCountryIndex].displayName = 'Dem. Rep. Congo'\n\n      let centralAfricanRepublicCountryIndex = temp.findIndex(e => e.name === 'Central African Republic');\n      if (centralAfricanRepublicCountryIndex !== -1)\n        temp[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\n\n      let ivoryCoastCountryIndex = temp.findIndex(e => e.name === \"Ivory Coast\");\n      if (ivoryCoastCountryIndex !== -1)\n        temp[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\n\n      let timorLesteCountryIndex = temp.findIndex(e => e.name === \"East Timor\");\n      if (timorLesteCountryIndex !== -1)\n        temp[timorLesteCountryIndex].displayName = \"Timor-Leste\"\n\n      temp.forEach((country) => {\n        country[parentName].sort((a, b) => b.count - a.count);\n      })\n      temp.sort((a, b) => a.name.localeCompare(b.name));\n\n      return temp\n    }\n\n    data.forEach((entry) => {\n      if (!finalCountries.some(e => e === entry['COUNTRY_ONLY']) && entry['COUNTRY_ONLY'] !== \"-\" && entry['COUNTRY_ONLY'] !== \"\")\n        finalCountries.push(entry['COUNTRY_ONLY'])\n\n      if (!samplesData.some(e => e.name === entry['COUNTRY_ONLY'])) {\n        samplesData.push({\n          name: entry['COUNTRY_ONLY'],\n          displayName: entry['COUNTRY_ONLY'],\n          count: 1\n        })\n      } else {\n        let country = samplesData.find(e => e.name === entry['COUNTRY_ONLY']);\n        let countryIndex = samplesData.findIndex(e => e.name === entry['COUNTRY_ONLY']);\n        country.count = country.count + 1\n        samplesData[countryIndex] = country;\n      }\n    })\n\n    if (!arraysEqual(samplesData, worldMapSamplesData)) {\n      let congoCountryIndex = samplesData.findIndex(e => e.name === 'Democratic Republic of Congo');\n      if (congoCountryIndex !== -1)\n        samplesData[congoCountryIndex].displayName = 'Dem. Rep. Congo'\n\n      let centralAfricanRepublicCountryIndex = samplesData.findIndex(e => e.name === 'Central African Republic');\n      if (centralAfricanRepublicCountryIndex !== -1)\n        samplesData[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\n\n      let ivoryCoastCountryIndex = samplesData.findIndex(e => e.name === \"Ivory Coast\");\n      if (ivoryCoastCountryIndex !== -1)\n        samplesData[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\n\n      let timorLesteCountryIndex = samplesData.findIndex(e => e.name === \"East Timor\");\n      if (timorLesteCountryIndex !== -1)\n        samplesData[timorLesteCountryIndex].displayName = \"Timor-Leste\"\n\n      setWorldMapSamplesData(samplesData)\n      setSamplesQty(\n        Math.ceil((\n          samplesData.length > 0 ? samplesData.sort((a, b) => b.count - a.count)[0].count : 0\n        ) / 50) * 50\n      )\n    }\n\n    finalCountries.sort((a, b) => a.localeCompare(b));\n    finalCountries.unshift(\"All\");\n    setCountriesForFilter(finalCountries)\n\n    if (!finalCountries.includes(actualCountry))\n      setActualCountry(\"All\")\n\n    genotypesData = countData(data, \"GENOTYPE\", \"genotypes\", \"lineage\")\n    if (!arraysEqual(genotypesData, worldMapGenotypesData))\n      setWorldMapGenotypesData(genotypesData)\n\n    h58Data = countData(data, \"GENOTYPE_SIMPLE\", \"genotypes\", \"type\")\n    h58Data.forEach(country => {\n      country.genotypes.forEach((g, index) => {\n        let percentage = ((g.count / country.total) * 100)\n        if (Math.round(percentage) !== percentage) {\n          percentage = percentage.toFixed(2)\n        }\n        g.percentage = percentage\n      })\n    })\n    if (!arraysEqual(h58Data, worldMapH58Data))\n      setWorldMapH58Data(h58Data)\n\n    mdrData = countData(data, \"MDR\", \"MDRs\", \"type\")\n    mdrData.forEach(country => {\n      country.MDRs.forEach((mdr, index) => {\n        if (mdr.type === \"MDR\") {\n          let percentage = ((mdr.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = mdr.count;\n        }\n      })\n      if (country.percentage === undefined) {\n        country.percentage = parseFloat(0)\n      }\n      if (country.count === undefined) {\n        country.count = 0\n      }\n    })\n    if (!arraysEqual(mdrData, worldMapMDRData))\n      setWorldMapMDRData(mdrData)\n\n    xdrData = countData(data, \"XDR\", \"XDRs\", \"type\")\n    xdrData.forEach(country => {\n      country.XDRs.forEach((xdr, index) => {\n        if (xdr.type === \"XDR\") {\n          let percentage = ((xdr.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = xdr.count;\n        }\n        if (country.percentage === undefined) {\n          country.percentage = parseFloat(0)\n        }\n        if (country.count === undefined) {\n          country.count = 0\n        }\n      })\n    })\n    if (!arraysEqual(xdrData, worldMapXDRData))\n      setWorldMapXDRData(xdrData)\n\n    dcsData = countData(data, \"DCS\", \"DCSs\", \"type\")\n    dcsData.forEach(country => {\n      country.DCSs.forEach((dcs, index) => {\n        if (dcs.type === \"DCS\") {\n          let percentage = ((dcs.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = dcs.count;\n        }\n        if (country.percentage === undefined) {\n          country.percentage = parseFloat(0)\n        }\n        if (country.count === undefined) {\n          country.count = 0\n        }\n      })\n    })\n    if (!arraysEqual(dcsData, worldMapDCSData))\n      setWorldMapDCSData(dcsData)\n\n    azithData = countData(data, \"Azith\", \"AZs\", \"type\")\n    azithData.forEach(country => {\n      country.AZs.forEach((az, index) => {\n        if (az.type === \"AzithR\") {\n          let percentage = ((az.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = az.count;\n        }\n        if (country.percentage === undefined) {\n          country.percentage = parseFloat(0)\n        }\n        if (country.count === undefined) {\n          country.count = 0\n        }\n      })\n    })\n    if (!arraysEqual(azithData, worldMapAZITHData))\n      setWorldMapAZITHData(azithData)\n\n    cipIData = countData(data, \"CipI\", \"CipIs\", \"type\")\n    cipIData.forEach(country => {\n      country.CipIs.forEach((cipIs, index) => {\n        if (cipIs.type === \"CipI\") {\n          let percentage = ((cipIs.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = cipIs.count;\n        }\n        if (country.percentage === undefined) {\n          country.percentage = parseFloat(0)\n        }\n        if (country.count === undefined) {\n          country.count = 0\n        }\n      })\n    })\n    if (!arraysEqual(cipIData, worldMapCIPIData))\n      setWorldMapCIPIData(cipIData)\n\n    cipRData = countData(data, \"CipR\", \"CipRs\", \"type\")\n    cipRData.forEach(country => {\n      country.CipRs.forEach((cipRs, index) => {\n        if (cipRs.type === \"CipR\") {\n          let percentage = ((cipRs.count / country.total) * 100)\n          if (Math.round(percentage) !== percentage)\n            percentage = percentage.toFixed(2)\n          percentage = parseFloat(percentage);\n          country.percentage = percentage;\n          country.count = cipRs.count;\n        }\n        if (country.percentage === undefined) {\n          country.percentage = parseFloat(0)\n        }\n        if (country.count === undefined) {\n          country.count = 0\n        }\n      })\n    })\n    if (!arraysEqual(cipRData, worldMapCIPRData))\n      setWorldMapCIPRData(cipRData)\n\n    let dataForCountingDrugs = []\n    data.forEach(entry => {\n      entry.DRUGS.forEach(drug => {\n        dataForCountingDrugs.push({\n          ...entry,\n          DRUG: drug,\n        })\n      })\n    })\n    drugsData = countData(dataForCountingDrugs, \"DRUG\", \"drugs\", \"name\");\n    if (!arraysEqual(drugsData, worldMapDrugsData))\n      setWorldMapDrugsData(drugsData)\n\n    amrData = countData(data, \"AMR\", \"amrProfiles\", \"name\")\n    if (!arraysEqual(amrData, worldMapAmrProfilesData))\n      setWorldMapAmrProfilesData(amrData)\n\n    incTypesData = countData(data, \"IncTypes\", \"incTypes\", \"type\")\n    incTypesData.forEach(country => {\n      country.incTypes = country.incTypes.filter(g => g.type !== \"\")\n    })\n    if (!arraysEqual(incTypesData, worldMapPlasmidIncompatibilityTypeData))\n      setWorldMapPlasmidIncompatibilityTypeData(incTypesData)\n  }\n\n  const parseDataForAmrClassChart = (data) => {\n    let finalChartData = []\n    let maxSum = 0\n    let totalSum = {}\n    data.forEach((entry) => {\n      if (!finalChartData.some(e => e.genotype === entry.GENOTYPE)) {\n        finalChartData.push({\n          genotype: entry.GENOTYPE,\n          [entry.GENE]: 1\n        })\n      } else {\n        let genotype = finalChartData.find(e => e.genotype === entry.GENOTYPE);\n        let genotypeIndex = finalChartData.findIndex(e => e.genotype === entry.GENOTYPE);\n\n        if (genotype[entry.GENE] === undefined) {\n          genotype[entry.GENE] = 1\n        } else {\n          genotype[entry.GENE] = genotype[entry.GENE] + 1\n        }\n        finalChartData[genotypeIndex] = genotype;\n      }\n      if (entry.GENOTYPE !== \"\") {\n        if (!(entry.GENE in totalSum)) {\n          totalSum[entry.GENE] = 1\n        } else {\n          totalSum[entry.GENE] = totalSum[entry.GENE] + 1\n        }\n      }\n    })\n    delete totalSum[\"\"]\n\n    finalChartData.sort((a, b) => a.genotype.localeCompare(b.genotype));\n    finalChartData.forEach((data) => {\n      let sum = 0;\n      Object.entries(data).forEach((entry) => {\n        if (entry[0] !== \"genotype\") {\n          let errorMargin = Math.ceil(entry[1] * 0.2) // 20%\n          let lowerValue = errorMargin > entry[1] ? entry[1] : errorMargin;\n\n          if (entry[1] === 1)\n            lowerValue = 1\n\n          if (entry[1] === 0)\n            lowerValue = 0\n\n          data[`error-${entry[0]}`] = [lowerValue, errorMargin]\n\n          sum += entry[1];\n          if (entry[1] > maxSum) {\n            maxSum = entry[1]\n          }\n        }\n      })\n      data.total = sum;\n    })\n    finalChartData = finalChartData.filter(g => g.genotype !== undefined && g.genotype !== \"0\")\n    let top10 = []\n    finalChartData.forEach(element => {\n      if (top10.length < 10) {\n        top10.push(element)\n      } else {\n        top10.sort(function (a, b) {\n          if (a.total === b.total && a.genotype > b.genotype)\n            return -1\n          return a.total > b.total ? -1 : 1\n        })\n        if (element.total === top10[9].total) {\n          if (element.genotype > top10[9].genotype) {\n            top10[9] = element\n          }\n        }\n        if (element.total > top10[9].total) {\n          top10[9] = element\n        }\n      }\n    })\n    top10.sort(function (a, b) {\n      if (a.total === b.total && a.genotype > b.genotype)\n        return -1\n      return a.total > b.total ? -1 : 1\n    })\n    top10.push({ maxSum: Math.ceil(maxSum / 50) * 50, totalSum: totalSum })\n    if (amrClassFilter !== \"Co-trimoxazole\") {\n      if (!arraysEqual(amrClassChartData, top10))\n        setAmrClassChartData(top10)\n    } else {\n      if (!arraysEqual(amrClassChartData, top10))\n        setAmrClassChartData(top10)\n    }\n  }\n\n  const parseDataForDrugTrendsChart = (data) => {\n    let finalDrugTrendsChartData = []\n    let finalDrugsAndGenotypesChartData = []\n    let totalSum = {}\n    let allDrugs = data[data.length - 1]\n    data = data.slice(0, data.length - 1)\n\n    data.forEach((entry) => {\n      if (!finalDrugTrendsChartData.some(e => e.name === entry.YEAR)) {\n        finalDrugTrendsChartData.push({\n          name: entry.YEAR,\n          [entry.DRUG]: 1\n        })\n      } else {\n        let year = finalDrugTrendsChartData.find(e => e.name === entry.YEAR);\n        let yearIndex = finalDrugTrendsChartData.findIndex(e => e.name === entry.YEAR);\n\n        if (year[entry.DRUG] === undefined) {\n          year[entry.DRUG] = 1\n        } else {\n          year[entry.DRUG] = year[entry.DRUG] + 1\n        }\n        finalDrugTrendsChartData[yearIndex] = year;\n      }\n\n      if (!finalDrugsAndGenotypesChartData.some(e => e.name === entry.GENOTYPE)) {\n        finalDrugsAndGenotypesChartData.push({\n          name: entry.GENOTYPE,\n          [entry.DRUG]: 1\n        })\n      } else {\n        let genotype = finalDrugsAndGenotypesChartData.find(e => e.name === entry.GENOTYPE);\n        let genotypeIndex = finalDrugsAndGenotypesChartData.findIndex(e => e.name === entry.GENOTYPE);\n\n        if (genotype[entry.DRUG] === undefined) {\n          genotype[entry.DRUG] = 1\n        } else {\n          genotype[entry.DRUG] = genotype[entry.DRUG] + 1\n        }\n        finalDrugsAndGenotypesChartData[genotypeIndex] = genotype;\n      }\n\n      if (!(entry.DRUG in totalSum)) {\n        totalSum[entry.DRUG] = 1\n      } else {\n        totalSum[entry.DRUG] = totalSum[entry.DRUG] + 1\n      }\n    })\n    finalDrugTrendsChartData.forEach((data) => {\n      let sum = 0;\n      Object.entries(data).forEach((entry) => {\n        if (entry[0] !== \"name\")\n          sum += entry[1];\n      })\n      data.total = sum;\n    })\n\n    finalDrugsAndGenotypesChartData.forEach((data) => {\n      let sum = 0;\n      Object.entries(data).forEach((entry) => {\n        if (entry[0] !== \"name\")\n          sum += entry[1];\n      })\n      data.total = sum;\n    })\n\n    finalDrugTrendsChartData.sort((a, b) => a.name.localeCompare(b.name))\n    finalDrugTrendsChartData.push({ totalSum: allDrugs })\n\n    finalDrugsAndGenotypesChartData.sort((a, b) => b.total - a.total)\n    finalDrugsAndGenotypesChartData = finalDrugsAndGenotypesChartData.slice(0, finalDrugsAndGenotypesChartData.length >= 5 ? 5 : finalDrugsAndGenotypesChartData.length)\n    finalDrugsAndGenotypesChartData.push({ totalSum: totalSum })\n\n    if (!arraysEqual(finalDrugTrendsChartData, drugTrendsChartData))\n      setDrugTrendsChartData(finalDrugTrendsChartData)\n\n    if (!arraysEqual(finalDrugsAndGenotypesChartData, drugsAndGenotypesChartData)) {\n      setDrugsAndGenotypesChartData(finalDrugsAndGenotypesChartData)\n    }\n  }\n\n  function arraysEqual(a1, a2) {\n    return JSON.stringify(a1) === JSON.stringify(a2);\n  }\n\n  const mapSamplesColorScale = scaleLinear()\n    .domain([1, samplesQty / 5, 2 * (samplesQty / 5), 3 * (samplesQty / 5), 4 * (samplesQty / 5), samplesQty])\n    .range([\"#4575b4\", \"#91bfdb\", \"#e0f3f8\", \"#fee090\", \"#fc8d59\", \"#d73027\"]);\n\n  const mapRedColorScale = scaleLinear()\n    .domain([1, 50, 100])\n    .range([\"#ffebee\", \"#f44336\", \"#b71c1c\"]);\n\n  const tooltip = (positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\n    return (\n      <Tooltip\n        position={{ y: positionY }}\n        wrapperStyle={wrapperS}\n        content={({ active, payload, label }) => {\n          if (payload !== null) {\n            if (sort) {\n              payload.sort((a, b) => b.value - a.value)\n              payload = payload.reverse()\n            }\n            if (active) {\n              return (\n                <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\n                  <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\n                  <div style={{ height: 14 }} />\n                  <div style={{ display: \"flex\", flexWrap: sort ? \"\" : \"wrap\", justifyContent: sort ? \"\" : \"space-between\", width: sort ? \"\" : width1, flexDirection: sort ? \"column\" : \"\" }}>\n                    {payload.reverse().map((item, index) => {\n                      let percentage = ((item.value / item.payload.total) * 100)\n                      if (chart === 0) {\n                        percentage = ((item.value / drugsAndGenotypesChartData[drugsAndGenotypesChartData.length - 1].totalSum[item.name]) * 100)\n                      } else if (chart === 1) {\n                        percentage = ((item.value / drugTrendsChartData[drugTrendsChartData.length - 1].totalSum[item.payload.name]) * 100)\n                      }\n                      if (Math.round(percentage) !== percentage)\n                        percentage = percentage.toFixed(2)\n                      return (\n                        <div key={index + item} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: width2, marginBottom: 8 }}>\n                          <div style={{ backgroundColor: stroke ? item.stroke : item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\n                          <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8 }}>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14 }}>{item.name}</span>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {item.value}</span>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n              );\n            }\n          }\n          return null;\n        }}\n      />\n    )\n  }\n\n  const plotPopulationStructureChart = () => {\n\n    if (populationStructureFilter === 1) { /* Genotype */\n      let maxH = 0\n      for (let index = 0; index < populationStructureChartData.length; index++) {\n        if (populationStructureChartData[index].total > maxH) {\n          maxH = populationStructureChartData[index].total\n        }\n      }\n      maxH = Math.ceil(maxH / 50) * 50\n      return (\n        <ResponsiveContainer width=\"90%\">\n          <BarChart\n            width={500}\n            height={300}\n            data={populationStructureChartData}\n            margin={{\n              top: 20, left: -20, bottom: 5, right: 0\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n            <YAxis domain={[0, maxH]} />\n            {tooltip(300, 325, \"33.33%\", false, { zIndex: 100 }, false)}\n            {genotypes.map((item) => <Bar dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\n          </BarChart>\n        </ResponsiveContainer>\n      )\n    } else { /* H58 and Non-H58 */\n      return (\n        <ResponsiveContainer width=\"90%\">\n          <BarChart\n            width={500}\n            height={300}\n            data={populationStructureChartData}\n            margin={{\n              top: 20, left: 20, bottom: 5, right: 0\n            }}\n            layout=\"vertical\"\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis type={\"number\"} domain={[0, chartMaxWidth]} />\n            <YAxis dataKey=\"name\" type={\"category\"} />\n            {tooltip(300, 400, \"25%\", false, { zIndex: 100 }, false)}\n            {genotypes.map((item) => <Bar dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\n          </BarChart>\n        </ResponsiveContainer>\n      )\n    }\n  }\n\n  const armClassFilterComponent = (info) => {\n    let maxSum = 0\n    if (amrClassChartData[amrClassChartData.length - 1] !== undefined) {\n      maxSum = amrClassChartData[amrClassChartData.length - 1].maxSum\n    }\n\n    const data = amrClassChartData.slice(0, amrClassChartData.length - 1)\n\n    return (\n      <ResponsiveContainer width=\"90%\">\n        <BarChart\n          width={500}\n          height={800}\n          data={data}\n          margin={{\n            top: 20, left: info.left, bottom: 5, right: 0\n          }}\n          layout=\"vertical\"\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis domain={[0, maxSum]} type={\"number\"} />\n          <YAxis dataKey=\"genotype\" type={\"category\"} interval={0} tick={{ fontSize: info.fontsize }} />\n          <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n          {amrClassChartTooltip()}\n          {info.bars.map((item) => {\n            return (\n              <Bar dataKey={item[0]} fill={item[1]} barSize={20} />\n            )\n          })}\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n\n  const plotAmrClassChart = () => {\n    switch (amrClassFilter) {\n      case 'Azithromycin':\n        return (armClassFilterComponent({\n          left: -5, fontsize: 14, strokeWidth: 1, width: null, bars: [\n            ['acrB_R717Q', \"#addd8e\", \"error-acrB_R717Q\"],\n            ['ereA', \"#9e9ac8\", \"error-ereA\"]]\n        }))\n      case 'Fluoroquinolones (DCS)':\n        return (armClassFilterComponent({\n          left: 10, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\n            ['3_QRDR', \"rgb(198,127,251)\", \"error-3_QRDR\"],\n            ['2_QRDR', \"rgb(70,191,195)\", \"error-2_QRDR\"],\n            ['1_QRDR + qnrS', \"rgb(125,172,32)\", \"error-1_QRDR + qnrS\"],\n            ['1_QRDR', \"rgb(244,119,112)\", \"error-1_QRDR\"]]\n        }))\n      case 'Chloramphenicol':\n        return (armClassFilterComponent({\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\n            ['cmlA', \"#addd8e\", \"error-cmlA\"],\n            ['catA1', \"#9e9ac8\", \"error-catA1\"]]\n        }))\n      case 'Ampicillin':\n        return (armClassFilterComponent({\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\n            ['blaTEM-1D', \"#addd8e\", \"error-blaTEM-1D\"]]\n        }))\n      case 'Sulphonamides':\n        return (armClassFilterComponent({\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\n            ['sul2', \"#ffeda0\", \"error-sul2\"],\n            ['sul1', \"#fd8d3c\", \"error-sul1\"]]\n        }))\n      case 'Trimethoprim':\n        return (armClassFilterComponent({\n          left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\n            ['dfrA7', \"#addd8e\", \"error-dfrA7\"],\n            ['dfrA5', \"#9e9ac8\", \"error-dfrA5\"],\n            ['dfrA18', \"#6baed6\", \"error-dfrA18\"],\n            ['dfrA17', \"#7a0177\", \"error-dfrA17\"],\n            ['dfrA15', \"#54278f\", \"error-dfrA15\"],\n            ['dfrA14', \"#a50f15\", \"error-dfrA14\"],\n            ['dfrA1', \"red\", \"error-dfrA1\"]]\n        }))\n      case 'Co-trimoxazole':\n        let cotrim = [\"dfrA1\", \"dfrA5\", \"dfrA7\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\"];\n        let colors1 = [\"#ffeda0\", \"#fd8d3c\", \"#addd8e\", \"#9e9ac8\", \"#6baed6\", \"#7a0177\", \"#54278f\"]\n        let colors2 = [\"#a50f15\", \"#6a5acd\", \"#f1b6da\", \"#fb8072\", \"#4682b4\", \"#2e8b57\", \"#98fb98\"]\n        let bars = []\n\n        for (const index in cotrim) {\n          bars.push([cotrim[index] + \"-sul1\", colors1[index], \"error-\" + cotrim[index] + \"-sul1\"])\n          bars.push([cotrim[index] + \"-sul2\", colors2[index], \"error-\" + cotrim[index] + \"-sul2\"])\n        }\n\n        return (armClassFilterComponent({\n          left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: bars\n        }))\n      case 'Tetracyclines':\n        return (armClassFilterComponent({\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\n            ['tetA(D)', \"#addd8e\", \"error-tetA(D)\"],\n            ['tetA(C)', \"#9e9ac8\", \"error-tetA(C)\"],\n            ['tetA(B)', \"#6baed6\", \"error-tetA(B)\"],\n            ['tetA(A)', \"#a50f15\", \"error-tetA(A)\"]]\n        }))\n      case 'AMR Profiles':\n        return (armClassFilterComponent({\n          left: isDesktop ? 12 : -30, fontsize: isDesktop ? 14 : 5, strokeWidth: 0.5, width: 3, bars: [\n            ['No AMR detected', getColorForAMR('No AMR detected'), \"error-No AMR detected\"],\n            ['MDR_DCS', getColorForAMR('MDR_DCS'), \"error-MDR_DCS\"],\n            ['MDR', getColorForAMR('MDR'), \"error-MDR\"],\n            ['DCS', getColorForAMR('DCS'), \"error-DCS\"],\n            ['AzithR_MDR', getColorForAMR('AzithR_MDR'), \"error-AzithR_MDR\"],\n            ['AzithR_DCS', getColorForAMR('AzithR_DCS'), \"error-AzithR_DCS\"],\n            ['AzithR_DCS_MDR', getColorForAMR('AzithR_DCS_MDR'), \"error-AzithR_DCS_MDR\"],\n            ['XDR', getColorForAMR('XDR'), \"error-XDR\"],\n            ['AMR', getColorForAMR('AMR'), \"error-AMR\"],\n            ['AMR_DCS', getColorForAMR('AMR_DCS'), \"error-AMR_DCS\"]]\n        }))\n      case 'ESBL':\n        return (armClassFilterComponent({\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\n            ['blaSHV-12', \"#addd8e\", \"error-blaSHV-12\"],\n            ['blaOXA-7', \"#9e9ac8\", \"error-blaOXA-7\"],\n            ['blaCTX-M-15_23', \"#6baed6\", \"error-blaCTX-M-15_23\"]]\n        }))\n      default:\n        return null;\n    }\n  }\n\n  const amrClassChartTooltip = () => {\n    return (\n      <Tooltip\n        position={{ x: 0 }}\n        wrapperStyle={{ zIndex: 100, top: 100 }}\n        allowEscapeViewBox={{ x: true, y: true }}\n        content={({ active, payload, label }) => {\n          if (payload !== null) {\n            if (active) {\n              return (\n                <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\n                  <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\n                  <div style={{ height: 14 }} />\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", width: 325 }}>\n                    {payload.reverse().map((item, index) => {\n                      let percentage = ((item.value / amrClassChartData[amrClassChartData.length - 1].totalSum[item.name]) * 100)\n                      if (Math.round(percentage) !== percentage)\n                        percentage = percentage.toFixed(2)\n                      return (\n                        <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: \"33.33%\", marginBottom: 8 }}>\n                          <div style={{ backgroundColor: item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\n                          <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8, wordWrap: \"break-word\", overflowX: \"hidden\" }}>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14 }}>{item.name}</span>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {item.value}</span>\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n              );\n            }\n          }\n\n          return null;\n        }}\n      />\n    )\n  }\n\n  const plotDrugTrendsChart = () => {\n    return (\n      <ResponsiveContainer width=\"90%\">\n        <LineChart\n          width={500}\n          height={300}\n          data={drugTrendsChartData.slice(0, drugTrendsChartData.length - 1)}\n          margin={{\n            top: 20, left: -20, bottom: 5, right: 0\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n          <YAxis />\n          <Legend\n            content={(props) => {\n              const { payload } = props;\n              return (\n                <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", width: \"86%\", justifyContent: \"space-between\", marginLeft: 60, paddingLeft: isDesktop ? 32 : 0, paddingRight: isDesktop ? 32 : 0 }}>\n                  {payload.map((entry, index) => {\n                    const { dataKey, color } = entry\n                    return (\n                      <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: isDesktop ? \"30%\" : \"50%\", marginBottom: 4 }}>\n                        <div style={{ height: 8, width: 8, borderRadius: 4, backgroundColor: color, flexShrink: 0 }} />\n                        <span style={{ fontSize: 12, marginLeft: 4 }}>{dataKey}</span>\n                      </div>\n                    )\n                  })}\n                </div>\n              );\n            }}\n          />\n\n          {tooltip(300, null, \"100%\", true, { zIndex: 100 }, true, 1)}\n          {amrClassesForFilter.slice(1).map((item) => (<Line dataKey={item} stroke={getColorForDrug(item)} connectNulls type=\"monotone\" />))}\n        </LineChart>\n      </ResponsiveContainer>\n    )\n  }\n\n  const plotDrugsAndGenotypesChart = () => {\n    return (\n      <ResponsiveContainer width=\"90%\">\n        <BarChart\n          width={500}\n          height={300}\n          data={drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1)}\n          margin={{\n            top: 20, left: -5, bottom: 5, right: 0\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" interval={0} tick={{ fontSize: isDesktop ? 16 : 8 }} />\n          <YAxis />\n          <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\n          <Legend\n            content={(props) => {\n              const { payload } = props;\n              return (\n                <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", width: \"86%\", justifyContent: \"space-between\", marginLeft: 60, marginTop: 8, paddingLeft: isDesktop ? 32 : 0, paddingRight: isDesktop ? 32 : 0 }}>\n                  {payload.map((entry, index) => {\n                    const { dataKey, color } = entry\n                    return (\n                      <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: isDesktop ? \"30%\" : \"50%\", marginBottom: 4 }}>\n                        <div style={{ height: 8, width: 8, borderRadius: 4, backgroundColor: color, flexShrink: 0 }} />\n                        <span style={{ fontSize: 12, marginLeft: 4 }}>{dataKey}</span>\n                      </div>\n                    )\n                  })}\n                </div>\n              );\n            }}\n          />\n          {tooltip(150, 325, \"50%\", false, { zIndex: 100, top: 100 }, false, 0)}\n          {amrClassesForFilter.slice(1).map((item) => (<Bar dataKey={item} fill={getColorForDrug(item)} />))}\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n\n  const getPopulationStructureChartLabel = () => {\n    if (populationStructureFilter === 1)\n      return <span className=\"y-axis-label-vertical\" style={{ marginRight: 8 }}>Number of genomes</span>\n    else\n      return <span className=\"y-axis-label-horizontal\">Number of genomes</span>\n  }\n\n  function imgOnLoadPromise(obj) {\n    return new Promise((resolve, reject) => {\n      obj.onload = () => resolve(obj);\n      obj.onerror = reject;\n    });\n  }\n\n  const stopLoading = (index) => {\n    switch (index) {\n      case 0: setCaptureControlMapInProgress(false)\n        break;\n      case 1: setCaptureControlChartRFWGInProgress(false)\n        break;\n      case 2: setCaptureControlChartDRTInProgress(false)\n        break;\n      case 3: setCaptureControlChartGDInProgress(false)\n        break;\n      case 4: setCaptureControlChartRFWAGInProgress(false)\n        break;\n      default:\n        break;\n    }\n  }\n\n  const capturePicture = (id, index) => {\n    switch (index) {\n      case 0:\n        setCaptureControlMapInProgress(true)\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\n        break;\n      case 1: setCaptureControlChartRFWGInProgress(true)\n        break;\n      case 2: setCaptureControlChartDRTInProgress(true)\n        break;\n      case 3: setCaptureControlChartGDInProgress(true)\n        break;\n      case 4: setCaptureControlChartRFWAGInProgress(true)\n        break;\n      default:\n        break;\n    }\n\n    if (index !== 0) {\n      const names = [\"Resistance Frequencies Within Genotypes (Chart) - TiphyNET.png\", \"Drug Resistance Trends (Chart) - TiphyNET.png\", \"Genotype Distribution (Chart) - TiphyNET.png\", \"Resistance frequencies within all genotypes (Chart) - TiphyNET.png\"]\n      domtoimage.toPng(document.getElementById(id), { quality: 0.95, bgcolor: \"white\" })\n        .then(function (dataUrl) {\n          var link = document.createElement('a');\n          link.download = names[index - 1];\n          link.href = dataUrl;\n          stopLoading(index)\n          link.click();\n        });\n    } else {\n      svgAsPngUri(document.getElementById(id), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\n        .then(async (uri) => {\n\n          let canvas = document.createElement(\"canvas\")\n          let ctx = canvas.getContext('2d');\n\n          let mapImg = document.createElement(\"img\");\n          let mapImgPromise = imgOnLoadPromise(mapImg);\n          mapImg.src = uri;\n          await mapImgPromise;\n\n          canvas.width = 3600;\n          canvas.height = 1800;\n\n          ctx.fillStyle = \"white\";\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n          ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\n\n          let typhinetLogo = document.createElement(\"img\");\n          let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\n          typhinetLogo.src = typhinetLogoImg;\n          await typhinetLogoPromise;\n\n          const typhinetLogoWidth = typhinetLogo.width * 0.5\n          const typhinetLogoHeight = typhinetLogo.height * 0.5\n\n          ctx.drawImage(typhinetLogo, 26, canvas.height - typhinetLogoHeight - 16, typhinetLogoWidth, typhinetLogoHeight);\n\n          const base64 = canvas.toDataURL();\n          stopLoading(index)\n          download(base64, 'Genome Samples (World Map) - TyphiNET.png');\n        });\n    }\n  }\n\n  const dowloadBaseSpreadsheet = () => {\n    axios.get(`${API_ENDPOINT}file/download`)\n      .then((res) => {\n        download(res.data, 'TyphiNET Database.csv');\n      })\n  }\n\n  const generateMapLegendOptions = () => {\n    let percentageSteps = ['1', '25', '50', '75', '100']\n\n    switch (mapView) {\n      case 'No. Samples':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0</span>\n            </div>\n            {[...Array(6).keys()].map((n) => {\n              const samplesLegend = n !== 0 ? n * (samplesQty / 5) : 1\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapSamplesColorScale(samplesLegend) }} />\n                  <span>{samplesLegend}</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'AMR Profiles':\n        let amrProfiles = ['MDR_DCS', 'MDR', 'DCS', 'AzithR_MDR', 'AzithR_DCS', 'AzithR_DCS_MDR', 'XDR', 'AMR', 'AMR_DCS'].sort((a, b) => a.localeCompare(b));\n        amrProfiles.push('No AMR detected')\n        return (\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\n            {amrProfiles.map((a, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: getColorForAMR(a) }} />\n                  <span>{a}</span>\n                </div>\n              )\n            })}\n          </div>\n        )\n      case 'Dominant Genotype':\n        return (\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\n            {genotypes.map((g, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: getColorForGenotype(g) }} />\n                  <span>{g}</span>\n                </div>\n              )\n            })}\n          </div>\n        )\n      case 'H58 / Non-H58':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"darkgrey\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((g, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(g) }} />\n                  <span>{g}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'MDR':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'XDR':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'DCS':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'Azith':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'CipI':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'CipR':\n        return (\n          <>\n            <div className=\"samples-info\">\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\n              <span>0%</span>\n            </div>\n            {percentageSteps.map((n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\n                  <span>{n}%</span>\n                </div>\n              )\n            })}\n          </>\n        )\n      case 'Resistance to Drug':\n        let drugs = [\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (DCS)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"]\n        return (\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\n            {drugs.map((d, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: getColorForDrug(d) }} />\n                  <span>{d}</span>\n                </div>\n              )\n            })}\n          </div>\n        )\n      case 'Plasmid Incompatibility Type':\n        let incTypes = [\"IncX1\", \"IncFIA(HI1)\", \"IncFIB(pHCM2)\", \"IncA/C2\", \"IncP1\", \"IncFIA(HI1)/IncHI1A/IncHI1B(R27)\", \"Col(BS512)\", \"IncHI1A/IncHI1B(R27)\", \"IncN\", \"IncHI1B(R27)\", \"p0111\", \"IncHI1A\", \"IncI1\", \"IncY\", \"IncFIB(AP001918)\", \"IncFIB(K)\", \"IncHI2/IncHI2A\", \"Col440I\", \"Col440I\", \"Col156\", \"Col440II/Col440II\", \"IncFIA(HI1)/IncHI1A\", \"ColRNAI\", \"ColpVC\", \"IncX3\"].sort((a, b) => a.localeCompare(b));\n        return (\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\n            {incTypes.map((d, n) => {\n              return (\n                <div key={n} className=\"samples-info\">\n                  <div className=\"color\" style={{ backgroundColor: getColorForIncType(d) }} />\n                  <span>{d}</span>\n                </div>\n              )\n            })}\n          </div>\n        )\n      default:\n        return null\n    }\n  }\n\n  const renderMapLegend = () => {\n    return (\n      <div className=\"map-legend\">\n        <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 12, marginTop: 2 }}>\n          <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\" }}>Select map view</InputLabel>\n          <Select\n            value={mapView}\n            onChange={evt => setMapView(evt.target.value)}\n            fullWidth\n            style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }}\n          >\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Dominant Genotype'}>\n              Dominant Genotype\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'No. Samples'}>\n              No. Samples\n          </MenuItem>\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'AMR Profiles'}>\n              AMR Profiles\n          </MenuItem> */}\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'H58 / Non-H58'}>\n              H58\n          </MenuItem>\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Plasmid Incompatibility Type'}>\n              Plasmid Incompatibility Type\n          </MenuItem> */}\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'MDR'}>\n              MDR\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'XDR'}>\n              XDR\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'DCS'}>\n              DCS\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Azith'}>\n              AzithR\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'CipI'}>\n              CipI\n          </MenuItem>\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'CipR'}>\n              CipR\n          </MenuItem>\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Resistance to Drug'}>\n              Resistance to Drug\n          </MenuItem> */}\n          </Select>\n        </FormControl>\n        {generateMapLegendOptions()}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"info-wrapper\">\n        {isDesktop && (\n          <>\n            <div style={{ display: \"flex\", flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n              <img style={{ height: 90, marginBottom: -10 }} src={typhinetLogoImg} alt=\"TyphiNET\" />\n            </div>\n            <div style={{ width: 16 }} />\n          </>\n        )}\n        <div className=\"card\">\n          <span>Total Genomes</span>\n          {totalGenomes.length === actualGenomes.length ? (\n            <span className=\"value\">{totalGenomes.length}</span>\n          ) : (\n            <span className=\"value\">\n              {actualGenomes.length}\n              <span className=\"value-total\">/{totalGenomes.length}</span>\n            </span>\n          )}\n        </div>\n        <div style={{ width: 16 }} />\n        <div className=\"card\">\n          <span>Total Genotypes</span>\n          {totalGenotypes.length === actualGenotypes.length ? (\n            <span className=\"value\">{totalGenotypes.length === 67 ? 72 : totalGenotypes.length}</span>\n          ) : (\n            <span className=\"value\">\n              {actualGenotypes.length}\n              <span className=\"value-total\">/{totalGenotypes.length === 67 ? 72 : totalGenotypes.length}</span>\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"map-filters-wrapper\" style={{ flexDirection: 'column' }}>\n        <h2 style={{ textAlign: \"center\" }}>Global Overview of Salmonella Typhi</h2>\n        <div className=\"map-filters-wrapper-inside\" style={{ flexDirection: isDesktop ? 'row' : 'column' }}>\n          <div className=\"map-wrapper\">\n            <ComposableMap\n              id=\"control-map\"\n              data-tip=\"\"\n              projectionConfig={{\n                rotate: [-10, 0, 0],\n                scale: 210,\n              }}\n              style={{ height: \"100%\", width: \"100%\" }}\n            >\n              <ZoomableGroup\n                zoom={controlMapPosition.zoom}\n                center={controlMapPosition.coordinates}\n                onMoveEnd={(position) => {\n                  setControlMapPosition(position);\n                }}\n              >\n                <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\n                <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n                <Geographies\n                  geography={geography}>\n                  {({ geographies }) =>\n                    geographies.map((geo) => {\n                      const sample = worldMapSamplesData.find(s => s.displayName === geo.properties.NAME)\n                      const d = worldMapComplementaryData[geo.properties.NAME]; /* .NAME || .NAME_LONG */\n                      let country\n\n                      let fill = \"#F5F4F6\"\n\n                      switch (mapView) {\n                        case 'No. Samples':\n                          if (sample && sample.count !== 0)\n                            fill = mapSamplesColorScale(sample.count);\n                          break;\n                        case 'AMR Profiles':\n                          country = worldMapAmrProfilesData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.amrProfiles.length > 0)\n                            fill = getColorForAMR(country.amrProfiles[0].name);\n                          break;\n                        case 'Dominant Genotype':\n                          country = worldMapGenotypesData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined) {\n                            const temp = country.genotypes\n                            temp.sort((a, b) => a.lineage < b.lineage ? 1 : -1)\n                            fill = getColorForGenotype(temp[0].lineage)\n                          }\n                          break;\n                        case 'H58 / Non-H58':\n                          country = worldMapH58Data.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.genotypes[0]) {\n                            const temp = country.genotypes.find(g => g.type === 'H58')\n                            switch (temp === undefined) {\n                              case false:\n                                fill = mapRedColorScale(temp.percentage)\n                                break;\n                              case 'Non-H58':\n                                fill = \"darkgrey\"\n                                break;\n                              default:\n                                break;\n                            }\n                          }\n                          break;\n                        case 'MDR':\n                          country = worldMapMDRData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'XDR':\n                          country = worldMapXDRData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'DCS':\n                          country = worldMapDCSData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'Azith':\n                          country = worldMapAZITHData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'CipI':\n                          country = worldMapCIPIData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'CipR':\n                          country = worldMapCIPRData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.percentage)\n                            fill = mapRedColorScale(country.percentage);\n                          break;\n                        case 'Resistance to Drug':\n                          country = worldMapDrugsData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.drugs.length > 0)\n                            fill = getColorForDrug(country.drugs[0].name);\n                          break;\n                        case 'Plasmid Incompatibility Type':\n                          country = worldMapPlasmidIncompatibilityTypeData.find(s => s.displayName === geo.properties.NAME)\n                          if (country !== undefined && country.incTypes.length > 0)\n                            fill = getColorForIncType(country.incTypes[0].type);\n                          break;\n                        default:\n                          break;\n                      }\n\n                      return (\n                        <Geography\n                          key={geo.rsmKey}\n                          geography={geo}\n                          cursor=\"pointer\"\n                          fill={fill}\n                          onClick={() => {\n                            if (d !== undefined && sample !== undefined)\n                              setActualCountry(sample.name)\n                          }}\n                          onMouseEnter={() => {\n                            const { NAME } = geo.properties;\n                            switch (mapView) {\n                              case 'No. Samples':\n                                if (sample !== undefined && d !== undefined) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    additionalInfo: {\n                                      samples: sample.count,\n                                      genotypes: d.GENOTYPES.TOTAL,\n                                      H58: Math.round(d.H58) !== d.H58 ? d.H58.toFixed(2) : d.H58,\n                                      MDR: Math.round(d.MDR) !== d.MDR ? d.MDR.toFixed(2) : d.MDR,\n                                      DCS: Math.round(d.DCS) !== d.DCS ? d.DCS.toFixed(2) : d.DCS,\n                                      CipI: Math.round(d.CipI) !== d.CipI ? d.CipI.toFixed(2) : d.CipI,\n                                      CipR: Math.round(d.CipR) !== d.CipR ? d.CipR.toFixed(2) : d.CipR,\n                                      AzithR: Math.round(d.AzithR) !== d.AzithR ? d.AzithR.toFixed(2) : d.AzithR\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'AMR Profiles':\n                                if (country !== undefined) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    amrProfilesInfo: country.amrProfiles\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'Dominant Genotype':\n                                if (country !== undefined) {\n                                  let temp = country.genotypes\n                                  temp.sort((a, b) => a.lineage < b.lineage ? 1 : -1)\n                                  setTooltipContent({\n                                    name: NAME,\n                                    genotypeInfo: temp\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'H58 / Non-H58':\n                                if (country !== undefined && country.genotypes.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    simpleGenotypeInfo: country.genotypes\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'MDR':\n                                if (country !== undefined && country.MDRs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    mdrInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'XDR':\n                                if (country !== undefined && country.XDRs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    xdrInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'DCS':\n                                if (country !== undefined && country.DCSs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    dcsInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'Azith':\n                                if (country !== undefined && country.AZs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    azInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'CipI':\n                                if (country !== undefined && country.CipIs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    cipIInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'CipR':\n                                if (country !== undefined && country.CipRs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    cipRInfo: {\n                                      count: country.count,\n                                      percentage: country.percentage,\n                                    }\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'Resistance to Drug':\n                                if (country !== undefined && country.drugs.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    drugsInfo: country.drugs\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              case 'Plasmid Incompatibility Type':\n                                if (country !== undefined && country.incTypes.length > 0) {\n                                  setTooltipContent({\n                                    name: NAME,\n                                    incTypesInfo: country.incTypes\n                                  });\n                                } else {\n                                  setTooltipContent({\n                                    name: NAME\n                                  })\n                                }\n                                break;\n                              default:\n                                break;\n                            }\n                          }}\n                          onMouseLeave={() => {\n                            setTooltipContent(null);\n                          }}\n                          style={{\n                            default: {\n                              outline: \"none\",\n                            },\n                            hover: {\n                              fill: \"#CFD8DC\",\n                              stroke: \"#607D8B\",\n                              strokeWidth: 1,\n                              outline: \"none\",\n                            },\n                            pressed: {\n                              fill: \"#FF5722\",\n                              stroke: \"#607D8B\",\n                              strokeWidth: 1,\n                              outline: \"none\",\n                            }\n                          }}\n                        />\n                      );\n                    })\n                  }\n                </Geographies>\n              </ZoomableGroup>\n\n            </ComposableMap>\n            {(samplesQty > 0 && isDesktop) && (\n              <div className=\"map-upper-right-buttons\">\n                {renderMapLegend()}\n              </div>\n            )}\n            {(samplesQty > 0 && isDesktop) && (\n              <div className=\"map-upper-left-buttons \">\n                <div className=\"map-filters\" style={{ width: isDesktop ? 200 : \"-webkit-fill-available\" }}>\n                  <span style={{ fontWeight: 600, fontSize: 20, marginBottom: 20 }}>Filters</span>\n                  <div style={{ marginBottom: 16 }}>\n                    <Typography style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\n                      Select dataset\n                    </Typography>\n                    <ToggleButtonGroup\n                      value={dataset}\n                      exclusive\n                      size=\"small\"\n                      style={{ marginTop: 5 }}\n                      onChange={(evt, newDataset) => {\n                        if (newDataset !== null)\n                          setDataset(newDataset)\n                      }}\n                    >\n                      <CustomToggleButton value=\"full\">\n                        All\n                      </CustomToggleButton>\n                      <CustomToggleButton value=\"global\">\n                        Local\n                      </CustomToggleButton>\n                      <CustomToggleButton value=\"local\">\n                        Travel\n                      </CustomToggleButton>\n                    </ToggleButtonGroup>\n                  </div>\n                  <div style={{ marginTop: 4 }}>\n                    <Typography gutterBottom style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\n                      Select time period\n                    </Typography>\n                    <CustomSlider\n                      value={actualTimePeriodRange}\n                      min={timePeriodRange[0]}\n                      max={timePeriodRange[1]}\n                      marks\n                      step={10}\n                      onChange={(evt, value) => {\n                        setActualTimePeriodRange(value)\n                      }}\n                      valueLabelDisplay=\"auto\"\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\"map-lower-left-buttons\">\n              <Zoom in={controlMapPosition.zoom !== 1 || controlMapPosition.coordinates.some(c => c !== 0)}>\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Recenter Map</span>} placement=\"right\">\n                  <div\n                    className=\"button\"\n                    onClick={() => setControlMapPosition({ coordinates: [0, 0], zoom: 1 })}\n                  >\n                    <FontAwesomeIcon icon={faCrosshairs} />\n                  </div>\n                </TooltipMaterialUI>\n              </Zoom>\n              <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom In</span>} placement=\"right\">\n                <div\n                  className=\"button\"\n                  onClick={() => {\n                    if (controlMapPosition.zoom >= 4) return;\n                    setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\n                  }}\n                >\n                  <FontAwesomeIcon icon={faPlus} />\n                </div>\n              </TooltipMaterialUI>\n              <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom Out</span>} placement=\"right\">\n                <div\n                  className=\"button\"\n                  onClick={() => {\n                    if (controlMapPosition.zoom <= 1) return;\n                    if (controlMapPosition.zoom / 2 === 1) {\n                      setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\n                    } else {\n                      setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\n                    }\n                  }}\n                >\n                  <FontAwesomeIcon icon={faMinus} />\n                </div>\n              </TooltipMaterialUI>\n            </div>\n            <div className=\"map-lower-right-buttons\">\n              <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Map as PNG</span>} placement=\"left\">\n                <div\n                  className={`button ${captureControlMapInProgress && \"disabled\"}`}\n                  onClick={() => {\n                    if (!captureControlMapInProgress)\n                      capturePicture('control-map', 0)\n                  }}\n                >\n                  <FontAwesomeIcon icon={faCamera} />\n                </div>\n              </TooltipMaterialUI>\n              {captureControlMapInProgress && (\n                <CustomCircularProgress\n                  size={54}\n                  thickness={4}\n                  style={{ position: \"absolute\", top: 5, left: -7 }} />\n              )}\n            </div>\n          </div>\n          {(samplesQty > 0 && !isDesktop) && (\n            <div style={{ marginTop: 16, marginBottom: 8 }}>\n              {renderMapLegend()}\n            </div>\n          )}\n          <ReactTooltip>\n            {tooltipContent && (\n              <div className=\"tooltip-map\">\n                <span className=\"country\">{tooltipContent.name}</span>\n                {tooltipContent.additionalInfo && (\n                  <div className=\"additional-info\">\n                    <span>Samples: {tooltipContent.additionalInfo.samples}</span>\n                    <span>Genotypes: {tooltipContent.additionalInfo.genotypes}</span>\n                    <span>H58: {tooltipContent.additionalInfo.H58}%</span>\n                    <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\n                    <span>DCS: {tooltipContent.additionalInfo.DCS}%</span>\n                    <span>AzithR: {tooltipContent.additionalInfo.AzithR}%</span>\n                    <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\n                    <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\n                  </div>\n                )}\n                {tooltipContent.genotypeInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.genotypeInfo.map((genotype, index) => {\n                      if (index < 5) {\n                        return (\n                          <div key={index} className=\"genotype\">\n                            <div className=\"color\" style={{ backgroundColor: getColorForGenotype(genotype.lineage) }} />\n                            <span>{genotype.lineage}: {genotype.count}</span>\n                          </div>\n                        )\n                      } else\n                        return null;\n                    })}\n                  </div>\n                )}\n                {tooltipContent.simpleGenotypeInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\n                      <span>{tooltipContent.simpleGenotypeInfo[0].type}: {tooltipContent.simpleGenotypeInfo[0].count} ({tooltipContent.simpleGenotypeInfo[0].percentage}%)</span>\n                    ) : tooltipContent.simpleGenotypeInfo.length > 1 && tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\n                      <span>{tooltipContent.simpleGenotypeInfo[1].type}: {tooltipContent.simpleGenotypeInfo[1].count} ({tooltipContent.simpleGenotypeInfo[1].percentage}%)</span>\n                    ) : (\n                      <span>H58: 0 (0%)</span>\n                    )}\n                  </div>\n                )}\n                {tooltipContent.mdrInfo && (\n                  <div className=\"additional-info\">\n                    <span>MDR: {tooltipContent.mdrInfo.count} ({tooltipContent.mdrInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.xdrInfo && (\n                  <div className=\"additional-info\">\n                    <span>XDR: {tooltipContent.xdrInfo.count} ({tooltipContent.xdrInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.dcsInfo && (\n                  <div className=\"additional-info\">\n                    <span>DCS: {tooltipContent.dcsInfo.count} ({tooltipContent.dcsInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.azInfo && (\n                  <div className=\"additional-info\">\n                    <span>AzithR: {tooltipContent.azInfo.count} ({tooltipContent.azInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.cipIInfo && (\n                  <div className=\"additional-info\">\n                    <span>CipI: {tooltipContent.cipIInfo.count} ({tooltipContent.cipIInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.cipRInfo && (\n                  <div className=\"additional-info\">\n                    <span>CipR: {tooltipContent.cipRInfo.count} ({tooltipContent.cipRInfo.percentage}%)</span>\n                  </div>\n                )}\n                {tooltipContent.drugsInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.drugsInfo.map((drug, index) => {\n                      if (index < 5) {\n                        return (\n                          <div key={index} className=\"genotype\">\n                            <div className=\"color\" style={{ backgroundColor: getColorForDrug(drug.name) }} />\n                            <span>{drug.name}: {drug.count}</span>\n                          </div>\n                        )\n                      } else\n                        return null;\n                    })}\n                  </div>\n                )}\n                {tooltipContent.amrProfilesInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.amrProfilesInfo.map((amr, index) => {\n                      if (index < 5) {\n                        return (\n                          <div key={index} className=\"genotype\">\n                            <div className=\"color\" style={{ backgroundColor: getColorForAMR(amr.name) }} />\n                            <span>{amr.name}: {amr.count}</span>\n                          </div>\n                        )\n                      } else\n                        return null;\n                    })}\n                  </div>\n                )}\n                {tooltipContent.incTypesInfo && (\n                  <div className=\"additional-info\" style={{ marginTop: 4 }}>\n                    {tooltipContent.incTypesInfo.map((incType, index) => {\n                      if (index < 5) {\n                        return (\n                          <div key={index} className=\"genotype\">\n                            <div className=\"color\" style={{ backgroundColor: getColorForIncType(incType.type) }} />\n                            <span>{incType.type}: {incType.count}</span>\n                          </div>\n                        )\n                      } else\n                        return null;\n                    })}\n                  </div>\n                )}\n                {(!tooltipContent.incTypesInfo && !tooltipContent.amrProfilesInfo && !tooltipContent.drugsInfo && !tooltipContent.xdrInfo && !tooltipContent.mdrInfo && !tooltipContent.dcsInfo && !tooltipContent.azInfo && !tooltipContent.cipIInfo && !tooltipContent.cipRInfo && !tooltipContent.simpleGenotypeInfo && !tooltipContent.genotypeInfo && !tooltipContent.additionalInfo) && (\n                  <div className=\"additional-info\">\n                    <span>No reported data</span>\n                  </div>\n                )}\n              </div>\n            )}\n          </ReactTooltip>\n        </div>\n      </div>\n      <div className=\"chart-wrapper\" style={{ flexDirection: 'column' }}>\n        <h2 style={{ textAlign: \"center\" }}>Now showing: {dataset === \"full\" ? \"All\" : dataset === \"global\" ? \"Local\" : \"Travel\"} dataset from {actualCountry === \"All\" ? \"all countries\" : actualCountry} from {actualTimePeriodRange.toString().substring(0, 4)} to {actualTimePeriodRange.toString().substring(5)}</h2>\n        <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 16, alignItems: \"center\", textAlign: \"center\" }}>\n          <label style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\", fontSize: 18 }}>Select country (or click map)</label>\n          <Select\n            value={actualCountry}\n            onChange={evt => setActualCountry(evt.target.value)}\n            fullWidth\n            style={{ fontWeight: 600, fontFamily: \"Montserrat\", width: 200, textAlign: \"left\" }}\n          >\n            {countriesForFilter.map((country, index) => {\n              return (\n                <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={country}>\n                  {country}\n                </MenuItem>\n              )\n            })}\n          </Select>\n        </FormControl>\n        <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n          <div style={{ display: \"flex\", flexDirection: isDesktop ? \"row\" : \"column\", marginTop: 16 }}>\n            <div style={{ display: \"flex\", flexDirection: \"column\", flex: 0.6 }}>\n              <div id=\"RFWG\" style={{ minWidth: 200, width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n                <div style={{ width: \"100%\", flexDirection: \"row\", whiteSpace: \"nowrap\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\n                  <span style={{ paddingRight: 32, marginRight: -22 }} className=\"chart-title\">Resistance Frequencies Within Genotypes</span>\n                  <div style={{ display: \"inline-block\", position: \"relative\" }}>\n                    <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\n                      <div\n                        style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\n                        className={`button ${captureControlChartRFWGInProgress && \"disabled\"}`}\n                        onClick={() => {\n                          if (!captureControlChartRFWGInProgress)\n                            capturePicture('RFWG', 1)\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faCamera} size=\"sm\" />\n                      </div>\n                    </TooltipMaterialUI>\n                    {captureControlChartRFWGInProgress && (\n                      <CustomCircularProgress\n                        size={44}\n                        thickness={4}\n                        style={{ position: \"absolute\", top: -5, left: -6 }} />\n                    )}\n                  </div>\n                </div>\n                <span className=\"chart-title\" style={{ marginRight: -22, marginBottom: -8, fontSize: 10, fontWeight: 400 }}>Top Five Genotypes</span>\n                <div style={{ height: 350, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                  <span className=\"y-axis-label-vertical\" style={{ marginRight: 8, marginBottom: isDesktop ? 84 : 154 }}>Number of occurrences</span>\n                  {plotDrugsAndGenotypesChart()}\n                </div>\n              </div>\n              <div id=\"DRT\" style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", paddingTop: 22 }}>\n                <div style={{ width: \"100%\", flexDirection: \"row\", whiteSpace: \"nowrap\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\n                  <span className=\"chart-title\" style={{ marginRight: -22, paddingRight: 32 }}>Drug Resistance Trends</span>\n                  <div style={{ display: \"inline-block\", position: \"relative\" }}>\n                    <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\n                      <div\n                        style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\n                        className={`button ${captureControlChartDRTInProgress && \"disabled\"}`}\n                        onClick={() => {\n                          if (!captureControlChartDRTInProgress)\n                            capturePicture('DRT', 2)\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faCamera} size=\"sm\" />\n                      </div>\n                    </TooltipMaterialUI>\n                    {captureControlChartDRTInProgress && (\n                      <CustomCircularProgress\n                        size={44}\n                        thickness={4}\n                        style={{ position: \"absolute\", top: -5, left: -6 }} />\n                    )}\n                  </div>\n                </div>\n                <div style={{ height: 350, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                  <span className=\"y-axis-label-vertical\" style={{ marginRight: 8, paddingBottom: isDesktop ? 84 : 124 }}>Number of occurrences</span>\n                  {plotDrugTrendsChart()}\n                </div>\n              </div>\n              <div id=\"GD\" style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", paddingTop: 22 }}>\n                <div style={{ width: \"100%\", flexDirection: \"row\", whiteSpace: \"nowrap\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\n                  <span className=\"chart-title\" style={{ marginRight: -22, paddingRight: 32 }}>Genotype Distribution</span>\n                  <div style={{ display: \"inline-block\", position: \"relative\" }}>\n                    <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\n                      <div\n                        style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\n                        className={`button ${captureControlChartGDInProgress && \"disabled\"}`}\n                        onClick={() => {\n                          if (!captureControlChartGDInProgress)\n                            capturePicture('GD', 3)\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faCamera} size=\"sm\" />\n                      </div>\n                    </TooltipMaterialUI>\n                    {captureControlChartGDInProgress && (\n                      <CustomCircularProgress\n                        size={44}\n                        thickness={4}\n                        style={{ position: \"absolute\", top: -5, left: -6 }} />\n                    )}\n                  </div>\n                </div>\n                <div style={{ width: isDesktop ? \"60%\" : \"90%\", alignSelf: \"center\", paddingRight: isDesktop && populationStructureFilter !== 1 ? \"-10%\" : 0, paddingBottom: populationStructureFilter === 1 ? -8 : 16 }}>\n                  <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 16 }}>\n                    <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Population Structure</InputLabel>\n                    <Select\n                      value={populationStructureFilter}\n                      onChange={evt => setPopulationStructureFilter(evt.target.value)}\n                      fullWidth\n                      style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\n                    >\n                      <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\n                        Genotype\n                      </MenuItem>\n                      <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\n                        H58 / Non-H58\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n                <div style={{ height: 600, minHeight: 600, display: \"flex\", flexDirection: populationStructureFilter === 1 ? \"row\" : \"column-reverse\", alignItems: \"center\", marginLeft: populationStructureFilter === 2 ? -22 : 0 }}>\n                  {getPopulationStructureChartLabel()}\n                  {plotPopulationStructureChart()}\n                </div>\n              </div>\n            </div>\n            <div id=\"RFWAG\" style={{ display: \"flex\", flexDirection: \"column\", flex: 0.4 }}>\n              <div style={{ width: \"100%\", flexDirection: \"row\", whiteSpace: \"nowrap\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\n                <span className=\"chart-title\" style={{ marginRight: -22, paddingRight: 32 }}>Resistance frequencies within all genotypes</span>\n                <div style={{ display: \"inline-block\", position: \"relative\" }}>\n                  <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\n                    <div\n                      style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\n                      className={`button ${captureControlChartRFWAGInProgress && \"disabled\"}`}\n                      onClick={() => {\n                        if (!captureControlChartRFWAGInProgress)\n                          capturePicture('RFWAG', 4)\n                      }}\n                    >\n                      <FontAwesomeIcon icon={faCamera} size=\"sm\" />\n                    </div>\n                  </TooltipMaterialUI>\n                  {captureControlChartRFWAGInProgress && (\n                    <CustomCircularProgress\n                      size={44}\n                      thickness={4}\n                      style={{ position: \"absolute\", top: -5, left: -6 }} />\n                  )}\n                </div>\n              </div>\n              <span className=\"chart-title\" style={{ fontSize: 10, fontWeight: 400, paddingBottom: 10 }}>Top Ten Genotypes</span>\n              <div style={{ width: isDesktop ? \"60%\" : \"90%\", alignSelf: \"center\", marginBottom: -4, marginRight: isDesktop ? \"-10%\" : 0 }}>\n                <FormControl fullWidth className={classes.formControlSelect} style={{ marginTop: 0 }}>\n                  <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Select Drug Class</InputLabel>\n                  <Select\n                    value={amrClassFilter}\n                    onChange={evt => setAmrClassFilter(evt.target.value)}\n                    fullWidth\n                    style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\n                  >\n                    {amrClassesForFilter.map((amrClass, index) => {\n                      return (\n                        <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={amrClass}>\n                          {amrClass}\n                        </MenuItem>\n                      )\n                    })}\n                  </Select>\n                </FormControl>\n              </div>\n              <div style={{ height: '100%', display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                <span className=\"y-axis-label-vertical\" style={{ marginRight: 8 }}>Number of occurrences</span>\n                {plotAmrClassChart()}\n              </div>\n            </div>\n          </div>\n          <div style={{ display: \"flex\", flexDirection: isDesktop ? \"row\" : \"column\", padding: 12, alignItems: \"center\", width: \"-webkit-fill-available\", justifyContent: \"center\" }}>\n            <div className=\"download-sheet-button\" onClick={() => dowloadBaseSpreadsheet()}>\n              <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\n              <span>Download TyphiNET Database</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"about-wrapper\">\n        <h2 style={{ marginBottom: 0 }}>About TyphiNET</h2>\n        <p>\n          TyphiNET is a multi-institutional global collaborative network. Our goal is to facilitate data sharing, and assist in removing barriers to the re-use of pathogen genomic data from both endemic surveillance projects, as well as those data routinely generated by public health reference laboratories, for global public health benefit.\n        </p>\n        <p>\n          The TyphiNET online platform is designed to collate all available whole genome sequence (WGS) data from the bacterial pathogen Salmonella Typhi. As bacterial WGS data is uniquely enriched with many characteristics of the infecting pathogen, we aim to provide up to date global estimates of both antimicrobial resistance and circulating genotypes for S. Typhi. We aim to improve global typhoid fever surveillance in the short term, and to provide evidence to assist in the improvement of intervention strategies and treatment guidelines for this pathogen in the long term.\n        </p>\n        <p>\n          TyphiNET is coordinated by Dr Zoe Dyson, Dr Louise Cerdeira and Prof Kat Holt. We are based at the Department of Infection Biology at the <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">London School of Hygiene and Tropical Medicine</a>, as well as the Department of Infectious Diseases at <a href=\"https://www.monash.edu/medicine/ccs/infectious-diseases/home\" target=\"_blank\" rel=\"noreferrer\">Monash University</a>. For more information about Holt lab projects and members, please visit the <a href=\"https://holtlab.net/\" target=\"_blank\" rel=\"noreferrer\">Holt Lab website</a>.\n        </p>\n        <p>\n          TyphiNET has received funding from the European Union's Horizon 2020 research and innovation programme under the Marie Skłodowska-Curie grant agreement TyphiNET No 845681. We are also grateful to the Wellcome Trust for support from their Open Research Fund programme (219692/Z/19/Z). Follow us on <a href=\"https://twitter.com/typhinet\" target=\"_blank\" rel=\"noreferrer\">Twitter</a>.\n        </p>\n        <h2 style={{ marginBottom: 0 }}>Genomic analysis framework:</h2>\n        <p>\n          TyphiNET utilises the <a href=\"https://github.com/katholt/genotyphi/\" target=\"_blank\" rel=\"noreferrer\">GenoTyphi</a> genotyping scheme, publised by <a href=\"https://www.nature.com/articles/ncomms12827\" target=\"_blank\" rel=\"noreferrer\">Wong <i>et al.</i> 2016</a>, and discussed in this <a href=\"https://holtlab.net/2016/10/12/global-picture-typhoid/\" target=\"_blank\" rel=\"noreferrer\">blog post</a>.  Data are sourced monthly from the <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">Pathogenwatch</a> online data analysis platform described in this <a href=\"https://www.biorxiv.org/content/10.1101/2020.07.03.186692v1.abstract\" target=\"_blank\" rel=\"noreferrer\">preprint</a> by Argimón <i>et al.</i> 2020.\n      </p>\n      </div>\n      <div className=\"footer-buttons-wrapper\">\n        <div\n          className=\"flex-button\"\n          onClick={() => {\n            setContactModalVisible(true)\n          }}\n        >\n          <FontAwesomeIcon icon={faEnvelope} style={{ marginRight: 8 }} />\n          <span style={{ fontWeight: 600 }}>Contact</span>\n        </div>\n        <div\n          className=\"flex-button\"\n          onClick={() => {\n            window.open('https://github.com/zadyson/TyphiNET', '_blank')\n          }}\n        >\n          <FontAwesomeIcon icon={faGithub} style={{ marginRight: 8 }} />\n          <span style={{ fontWeight: 600 }}>GitHub</span>\n        </div>\n        <div\n          className=\"flex-button\"\n          onClick={() => {\n            window.open('https://twitter.com/typhinet', '_blank')\n          }}\n        >\n          <FontAwesomeIcon icon={faTwitter} style={{ marginRight: 8 }} />\n          <span style={{ fontWeight: 600 }}>Twitter</span>\n        </div>\n      </div>\n      <div style={{ flex: 1 }} />\n      <div className=\"footer\">\n        <span>Data obtained from: <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">pathogen watch project</a> on 07/02/2021.</span>\n        <span><a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">Holt Lab</a></span>\n      </div>\n\n      <div style={{ zIndex: 1000 }}>\n        <Rodal\n          visible={contactModalVisible}\n          showCloseButton={false}\n          customStyles={{ padding: 0, overflow: \"hidden\", width: isDesktop ? \"75%\" : \"95%\", height: isDesktop ? \"75%\" : \"95%\" }}\n          onClose={() => {\n            setContactModalVisible(false);\n          }}\n        >\n          <div style={{ backgroundColor: \"transparent\", height: \"100%\", width: \"100%\", overflow: \"hidden\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", height: \"100%\" }}>\n              <div\n                className=\"modal-close-button\"\n                style={{ position: \"absolute\", right: 24, top: 24, height: 24, width: 24, zIndex: 500 }}\n                onClick={() => {\n                  setContactModalVisible(false);\n                }}\n              >\n                <FontAwesomeIcon icon={faTimes} style={{ marginRight: 8, color: \"black\", fontSize: 24 }} />\n              </div>\n              <div style={{\n                padding: 32, height: \"100%\", width: \"-webkit-fill-available\", display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\"\n              }}>\n                <span style={{ fontWeight: 600, fontSize: 20, marginBottom: 20 }}>Contact</span>\n                <ContactPage />\n              </div>\n            </div>\n          </div>\n        </Rodal>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage;","import React from 'react';\nimport './App.css';\nimport DashboardPage from './pages/dashboard'\nimport typhinetLogoImg from './assets/img/logo-typhinet.png';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        {window.innerWidth > 767 ? (\n          <DashboardPage />\n        ) : (\n            <>\n              <div className=\"menu-bar-mobile\">\n                <img className=\"logoImageMenu-mobile\" src={typhinetLogoImg} alt=\"TyphiNET\" />\n              </div>\n              <div style={{ width: \"100%\" }}>\n                <DashboardPage />\n              </div>\n            </>\n          )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}