{"version":3,"sources":["registerServiceWorker.js","reportWebVitals.js","assets/img/logo-typhinet-prod.png","components/Elements/Header/HeaderMUI.js","stores/hooks.ts","components/Elements/Header/Header.js","components/Layout/MainLayoutUI.js","components/Layout/MainLayout.js","components/Elements/Map/MapMUI.js","util/colorHelper.js","components/Elements/Map/mapColorHelper.js","components/Elements/Map/BottomLeftControls/BottomLeftControlsMUI.js","stores/slices/mapSlice.ts","components/Elements/Map/BottomLeftControls/BottomLeftControls.js","components/Elements/Map/TopRightControls/TopRightControlsMUI.js","util/genotypes.js","util/mapLegends.js","components/Elements/Map/TopRightControls/TopRightControls.js","stores/slices/dashboardSlice.ts","components/Elements/Map/TopLeftControls/TopLeftControlsMUI.js","components/Elements/Map/TopLeftControls/TopLeftControls.js","components/Elements/Map/BottomRightControls/BottomRightControlsMUI.js","util/imgOnLoadPromise.js","components/Elements/Map/BottomRightControls/BottomRightControls.js","components/Elements/Map/Map.js","components/Elements/Footer/FooterMUI.js","components/Elements/Footer/Footer.js","constants.js","components/Elements/Graphs/GraphsMUI.js","components/Elements/Graphs/DeterminantsGraph/DeterminantsGraphMUI.js","util/drugs.js","stores/slices/graphSlice.ts","components/Elements/Graphs/DeterminantsGraph/DeterminantsGraph.js","components/Elements/Graphs/FrequenciesGraph/FrequenciesGraphMUI.js","components/Elements/Graphs/graphColorHelper.js","components/Elements/Graphs/FrequenciesGraph/FrequenciesGraph.js","components/Elements/Graphs/DrugResistanceGraph/DrugResistanceGraphMUI.js","components/Elements/Graphs/DrugResistanceGraph/DrugResistanceGraph.js","components/Elements/Graphs/DistributionGraph/DistributionGraphMUI.js","components/Elements/Graphs/DistributionGraph/DistributionGraph.js","util/graphCards.js","components/Elements/SelectCountry/SelectCountryMUI.js","components/Elements/SelectCountry/SelectCountry.js","components/Elements/DownloadData/DownloadDataMUI.js","assets/img/eu_flag.jpg","util/reportInfoTexts.js","components/Elements/DownloadData/DownloadData.js","components/Elements/Graphs/Graphs.js","util/drugClassesRules.js","components/Dashboard/filters.js","components/Elements/ResetButton/ResetButtonMUI.js","components/Elements/ResetButton/ResetButton.js","components/About/AboutMUI.js","components/About/About.js","components/Dashboard/Dashboard.js","stores/store.ts","App.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","toolbar","borderRadius","display","flexDirection","gap","justifyContent","minHeight","padding","logoWrapper","width","backgroundColor","position","top","zIndex","boxShadow","logo","height","informationCards","paddingTop","card","alignItems","textAlign","cardContent","actualAndTotalValues","useAppDispatch","useDispatch","useAppSelector","useSelector","id","name","Header","classes","totalGenomes","dashboard","actualGenomes","totalGenotypes","actualGenotypes","_jsxs","Toolbar","className","children","_jsx","src","LogoImg","alt","map","index","Card","elevation","CardContent","Typography","variant","sx","fontWeight","fontSize","_Fragment","concat","mainLayout","overflowY","childrenWrapper","margin","rowGap","loading","bottom","alignSelf","paddingLeft","MainLayout","loadingData","loadingMap","Loader","type","color","mapWrapper","composableMap","tooltipMap","paddingBottom","marginRight","border","topControls","marginTop","country","tooltipInfo","info","getColorForGenotype","genotype","colorForDrugClasses","Azithromycin","Chloramphenicol","Ampicillin","Sulphonamides","Trimethoprim","Tetracyclines","Ceftriaxone","lightGrey","darkGrey","hoverColor","samplesColorScale","domain","redColorScale","percentage","sensitiveColorScale","p","parseFloat","bottomLeftControls","left","mapSlice","createSlice","initialState","coordinates","zoom","mapView","tooltipContent","dataset","mapData","reducers","setLoadingMap","action","payload","setPosition","setMapView","setTooltipContent","setDataset","setMapData","_mapSlice$actions","actions","BottomLeftControls","dispatch","Zoom","in","some","coordinate","Tooltip","title","placement","IconButton","onClick","FilterCenterFocus","_objectSpread","AddCircle","RemoveCircle","topRightControls","right","label","columnGap","labelTooltipIcon","cursor","selectInput","selectMenu","legendWrapper","maxHeight","legend","legendColorBox","legendText","bp700","genotypes","sort","a","b","localeCompare","mapLegends","value","generalSteps","sensitiveSteps","noSamplesSteps","mapViewsWithZeroPercentOption","TopRightControls","matches","useMediaQuery","getStepBoxColor","step","InfoOutlined","Select","onChange","event","target","inputProps","MenuProps","list","MenuItem","length","Box","style","includes","getSteps","dashboardSlice","canGetData","globalOverviewLabel","italicLabel","fullLabel","actualCountry","timeInitial","timeFinal","actualTimeInitial","actualTimeFinal","years","genotypesForFilter","listPMID","setCanGetData","setGlobalOverviewLabel","setLoadingData","setActualCountry","setTotalGenotypes","setTotalGenomes","setActualGenomes","setActualGenotypes","setTimeInitial","setTimeFinal","setActualTimeInitial","setActualTimeFinal","setYears","setGenotypesForFilter","setListPMID","_dashboardSlice$actio","topLeftControls","datasetWrapper","yearsWrapper","yearWrapper","menuPaper","datasetOptions","TopLeftControls","gutterBottom","ToggleButtonGroup","exclusive","size","_event","newValue","option","ToggleButton","paper","child","props","fullWidth","filter","year","Divider","orientation","flexItem","bottomRightControls","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","BottomRightControls","_handleClick","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","showAlert","setShowAlert","handleCloseAlert","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","svgAsPngUri","document","getElementById","scale","_x","_callee","uri","canvas","ctx","mapImg","mapImgPromise","legendHeight","actualMapView","legendImg","legendImgPromise","legendWidth","typhinetLogo","typhinetLogoPromise","base64","_context","createElement","getContext","cHeight","fillStyle","fillRect","font","fillText","find","x","drawImage","t0","abrupt","toDataURL","download","stop","apply","arguments","finish","disabled","CircularProgress","CameraAlt","Snackbar","open","autoHideDuration","onClose","Alert","severity","statKey","MDR","XDR","AzithR","CipNS","CipR","Map","handleOnMouseLeave","ComposableMap","projectionConfig","rotate","ZoomableGroup","center","onMoveEnd","handleOnMoveEnd","Sphere","stroke","strokeWidth","Graticule","Geographies","geography","_ref2","geographies","geo","_countryStats$statKey","countryData","item","properties","NAME","countryStats","stats","fillColor","smallerThan20","showTooltip","count","GENOTYPE","items","Geography","fill","undefined","handleOnClick","onMouseLeave","onMouseEnter","_ref$smallerThan","_ref$showTooltip","tooltip","content","Object","assign","Samples","Genotypes","H58","Susceptible","slice","forEach","handleOnMouseEnter","default","outline","hover","pressed","rsmKey","ReactTooltip","keys","key","footer","button","textTransform","text","Footer","Button","startIcon","Email","GitHub","Twitter","href","rel","API_ENDPOINT","graphsCard","gridTemplateColumns","overflow","gridColumn","cardActions","titleWrapper","downloadWrapper","determinantsGraph","maxWidth","selectsWrapper","selectWrapper","selectLabel","select","graphWrapper","graph","graphLabel","textAnchor","overflowX","flexWrap","marginLeft","legendItemWrapper","paddingRight","colorCircle","minWidth","tooltipTitle","tooltipItemWrapper","tooltipItemBox","flex","tooltipItemStats","overflowWrap","drugs","drugsForDrugResistanceGraph","_toConsumableArray","defaultDrugsForDrugResistanceGraph","drugClasses","countriesForFilter","genotypesYearData","drugsYearData","genotypesDrugsData","genotypesDrugClassesData","distributionGraphView","drugResistanceGraphView","frequenciesGraphView","frequenciesGraphSelectedGenotypes","determinantsGraphView","determinantsGraphDrugClass","graphSlice","setCountriesForFilter","setGenotypesYearData","setDrugsYearData","setDistributionGraphView","setDrugResistanceGraphView","setFrequenciesGraphView","setFrequenciesGraphSelectedGenotypes","setGenotypesDrugsData","setDeterminantsGraphView","setDeterminantsGraphDrugClass","setGenotypesDrugClassesData","_graphSlice$actions","dataViewOptions","DeterminantsGraph","plotChart","setPlotChart","matches500","getData","_genotypesDrugClasses","exclusions","genotypeDrugClassesDataPercentage","structuredClone","Number","totalCount","toFixed","useEffect","_genotypesDrugClasses2","_colorForDrugClasses$","ResponsiveContainer","BarChart","data","maxBarSize","CartesianGrid","strokeDasharray","XAxis","dataKey","interval","tick","YAxis","allowDataOverflow","allowDecimals","Label","angle","Brush","Legend","entry","ChartTooltip","y","wrapperStyle","active","tooltipData","push","getTooltipData","lineHeight","noWrap","Bar","stackId","frequenciesGraph","labelWrapper","dataViewSelectInput","dataViewSelectMenu","genotypesSelectInput","genotypesSelectButton","whiteSpace","genotypesMenuPaper","genotypesSelectMenu","getColorForDrug","drug","FrequenciesGraph","getSelectGenotypeLabel","resistantCount","genotypeDataPercentage","handleChangeSelectedGenotypes","_ref$event","_ref$all","all","multiple","displayEmpty","endAdornment","renderValue","selected","Checkbox","checked","indexOf","ListItemText","primary","drugResistanceGraph","selectButton","DrugResistanceGraph","drugDataPercentage","handleChangeDrugsView","newValues","lines","getElementsByClassName","_loop","hasValue","LineChart","tickCount","Line","connectNulls","activeDot","distributionGraph","DistributionGraph","graphCards","description","SelectCountry","downloadDataWrapper","getSalmonellaTexts","date","columnsToRemove","DownloadData","_handleClickDownloadDatabase","_handleClickDownloadPDF","loadingCSV","setLoadingCSV","loadingPDF","setLoadingPDF","_useState5","_useState6","listPIMD","formatDate","moment","format","drawFooter","pageHeight","pageWidth","setFontSize","line","align","drawLegend","_ref2$id","legendData","factor","rectY","_ref2$isGenotype","isGenotype","_ref2$isDrug","isDrug","xSpace","i","yFactor","xFactor","Math","floor","setFillColor","circle","setFont","replaceAll","LoadingButton","axios","get","res","indexes","csv","split","curr","currentIndex","reverse","newLines","j","aux","newCSV","finally","TableChart","loadingPosition","_callee3","_ref3","doc","texts","euFlag","mapLegend","drugClassesBars","drugClassesFactor","genotypesFactor","graphImg","graphImgPromise","_context3","jsPDF","unit","internal","pageSize","getWidth","getHeight","Date","Image","addImage","EUFlagImg","join","addPage","img","ceil","domtoimage","toPng","bgcolor","sent","rect","save","t1","PictureAsPdf","Graphs","_handleClickDownload","RFWG","DRT","RDWG","GD","chartLoadings","setChartLoadings","context","mobileFactor","yPosition","_ref$isGenotype","_ref$isDrug","beginPath","arc","PI","closePath","handleLoading","_defineProperty","CardActions","disableSpacing","_x2","heightFactor","logoPromise","stopPropagation","quality","handleClickDownload","component","d","drugRules","columnID","values","drugRulesForDrugResistanceGraph","drugClassesRules","susceptible","rules","filterData","newData","TRAVEL","toLowerCase","DATE","checkTime","Set","genomesCount","genotypesCount","getCountryDisplayName","COUNTRY_ONLY","PMID","getMapStatsData","columnKey","statsKey","columnData","getMapData","countries","getYearsData","_ref4","drugsData","genotypesData","yearData","response","toString","reduce","accumulator","currentValue","drugStats","rule","drugData","getGenotypesData","_ref5","genotypeData","drugClassResponse","drugClass","classRule","classRuleName","every","r","resetButton","ResetButton","Fab","RestartAlt","paragraph","About","euFlagImg","DashboardPage","_getData","setData","yearsForFilter","getInfoFromData","responseData","yearsData","filters","store","configureStore","reducer","deashboardReducer","mapReducer","graphReducer","middleware","getDefaultMiddleware","serializableCheck","createTheme","palette","main","typography","fontFamily","ReactDOM","render","React","StrictMode","HashRouter","Provider","ThemeProvider","Routes","Route","path","element","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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EAoB2DrE,SACjDC,cAACkG,IAAY,CAACrF,SAAS,kBAMnC,E,wCCrDMzD,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvC6I,iBAAkB,CAChB1I,QAAS,OACTC,cAAe,SACfQ,SAAU,WACVC,IAAK,EACLiI,MAAO,EAEP,UAAW,CACTlI,SAAU,aAGdQ,KAAM,CAAElB,aAAc,kBACtBqB,YAAa,CACXpB,QAAS,OACTC,cAAe,SACf0D,OAAQ,OAEViF,MAAO,CACL5I,QAAS,OACTC,cAAe,MACfiB,WAAY,SACZ2H,UAAW,OAEbC,iBAAkB,CAChBC,OAAQ,WAEVC,YAAa,CACX5F,SAAU,kBACVD,WAAY,iBACZhC,UAAW,SAEb8H,WAAY,CACV,sBAAuB,CACrB7F,SAAU,SAGd8F,cAAe,CACbrE,UAAW,MACXsE,UAAW,QACX3F,UAAW,QAEb4F,OAAQ,CACNpJ,QAAS,OACTkB,WAAY,UAEdmI,eAAgB,CACd9I,MAAO,OACPO,OAAQ,OACR4D,YAAa,OAEf4E,WAAY,CACVlG,SAAU,QAEZmG,MAAO,CAAC,EACT,ICxDYC,GAAY,CACvB,IACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,YACA,YACA,MACA,MACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,IACA,MACA,QACA,MACA,QACA,QACA,QACqB,QACrB,UACA,aACA,cACA,UACA,cACA,cACA,YACA,cACA,UACA,eACAC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,ICxFtBE,GAAa,CACxB,CAAEC,MAAO,MAAOlB,MAAO,6BACvB,CAAEkB,MAAO,MAAOlB,MAAO,oCACvB,CAAEkB,MAAO,SAAUlB,M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","file":"static/js/main.61a3baac.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// capture the user experience of a web page\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/logo-typhinet-prod.f503745b.png\";","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderRadius: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    justifyContent: 'space-between',\r\n    minHeight: 'unset !important',\r\n    padding: '0px !important',\r\n\r\n    '@media (max-width: 700px)': {\r\n      flexDirection: 'column'\r\n    }\r\n  },\r\n  logoWrapper: {\r\n    width: '30%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n\r\n    '@media (max-width: 700px)': {\r\n      width: '-webkit-fill-available',\r\n      backgroundColor: '#fff',\r\n      position: 'fixed',\r\n      top: 0,\r\n      zIndex: 1,\r\n      boxShadow: '3px 0 10px 0 rgba(0,0,0,.25)'\r\n    }\r\n  },\r\n  logo: {\r\n    height: '90px',\r\n\r\n    '@media (max-width: 700px)': {\r\n      height: '60px'\r\n    }\r\n  },\r\n  informationCards: {\r\n    width: '70%',\r\n    display: 'flex',\r\n    gap: '16px',\r\n\r\n    '@media (max-width: 700px)': {\r\n      width: '100%',\r\n      paddingTop: '60px'\r\n    }\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    borderRadius: '16px !important'\r\n  },\r\n  cardContent: {\r\n    padding: '12px 10px !important'\r\n  },\r\n  actualAndTotalValues: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Card, CardContent, Toolbar, Typography } from '@mui/material';\r\nimport { useStyles } from './HeaderMUI';\r\nimport LogoImg from '../../../assets/img/logo-typhinet-prod.png';\r\nimport { useAppSelector } from '../../../stores/hooks';\r\n\r\nconst informationCards = [\r\n  {\r\n    id: 'genomes',\r\n    name: 'Total Genomes'\r\n  },\r\n  {\r\n    id: 'genotypes',\r\n    name: 'Total Genotypes'\r\n  }\r\n];\r\n\r\nexport const Header = () => {\r\n  const classes = useStyles();\r\n\r\n  const totalGenomes = useAppSelector((state) => state.dashboard.totalGenomes);\r\n  const actualGenomes = useAppSelector((state) => state.dashboard.actualGenomes);\r\n  const totalGenotypes = useAppSelector((state) => state.dashboard.totalGenotypes);\r\n  const actualGenotypes = useAppSelector((state) => state.dashboard.actualGenotypes);\r\n\r\n  return (\r\n    <Toolbar className={classes.toolbar}>\r\n      <div className={classes.logoWrapper}>\r\n        <img src={LogoImg} alt=\"TyphiNET\" className={classes.logo} />\r\n      </div>\r\n\r\n      <div className={classes.informationCards}>\r\n        {informationCards.map((card, index) => {\r\n          return (\r\n            <Card key={`information-card-${index}`} elevation={2} className={classes.card}>\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography variant=\"body1\">{card.name}</Typography>\r\n                <Typography variant=\"h4\" sx={{ fontWeight: '500', fontSize: '32px' }}>\r\n                  {card.id === 'genomes' ? (\r\n                    totalGenomes === actualGenomes ? (\r\n                      <>{totalGenomes}</>\r\n                    ) : (\r\n                      <span className={classes.actualAndTotalValues}>\r\n                        {actualGenomes}\r\n                        <Typography variant=\"body1\" sx={{ fontWeight: '500' }}>\r\n                          /{totalGenomes}\r\n                        </Typography>\r\n                      </span>\r\n                    )\r\n                  ) : totalGenotypes === actualGenotypes ? (\r\n                    <>{totalGenotypes}</>\r\n                  ) : (\r\n                    <span className={classes.actualAndTotalValues}>\r\n                      {actualGenotypes}\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: '500' }}>\r\n                        /{totalGenotypes}\r\n                      </Typography>\r\n                    </span>\r\n                  )}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mainLayout: {\r\n    width: '100%',\r\n    backgroundColor: '#E5E5E5',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    overflowY: 'auto',\r\n\r\n    '& .MuiAppBar-root': {\r\n      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\r\n    }\r\n  },\r\n  childrenWrapper: {\r\n    width: '100%'\r\n  },\r\n  children: {\r\n    padding: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    rowGap: '16px',\r\n    backgroundColor: '#E5E5E5',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '8px',\r\n      rowGap: '8px'\r\n    }\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    zIndex: 9999\r\n  },\r\n  logo: {\r\n    height: '100px',\r\n    alignSelf: 'center',\r\n    paddingLeft: '20px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import Loader from 'react-loader-spinner';\r\nimport LogoImg from '../../assets/img/logo-typhinet-prod.png';\r\nimport { Header } from '../Elements/Header';\r\nimport { useStyles } from './MainLayoutUI';\r\nimport { useAppSelector } from '../../stores/hooks';\r\n\r\nexport const MainLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  const loadingData = useAppSelector((state) => state.dashboard.loadingData);\r\n  const loadingMap = useAppSelector((state) => state.map.loadingMap);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.mainLayout} id=\"main-layout\">\r\n        <div className={classes.childrenWrapper}>\r\n          <div className={classes.children}>\r\n            <Header />\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {(loadingData || loadingMap) && (\r\n        <div className={classes.loading}>\r\n          <img className={classes.logo} src={LogoImg} alt=\"TyphiNET\" />\r\n          <Loader type=\"Circles\" color=\"#D91E45\" height={70} width={70} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mapWrapper: { position: 'relative' },\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    textAlign: 'center',\r\n    position: 'relative'\r\n  },\r\n  composableMap: {\r\n    height: '500px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '300px'\r\n    }\r\n  },\r\n  tooltipMap: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingBottom: '4px',\r\n    alignItems: 'flex-start',\r\n\r\n    '& $country': {\r\n      fontWeight: 500,\r\n      fontSize: '18px'\r\n    },\r\n\r\n    '& $tooltipInfo': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n\r\n      '& $info': {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n        '& $color': {\r\n          width: '10px',\r\n          height: '10px',\r\n          marginRight: '4px',\r\n          border: '1px solid #f5f4f6'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  topControls: {\r\n    marginTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '16px'\r\n  },\r\n  country: {},\r\n  tooltipInfo: {},\r\n  info: {},\r\n  color: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","// Helper for colors\r\n\r\n// Color for Salmonella genotypes\r\nexport const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return '#808080';\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return '#ffff00';\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return '#ffd700';\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return '#32cd32';\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return '#adff2f';\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return '#98fb98';\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return '#6b8e23';\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return '#2e8b57';\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return '#006400';\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return '#0000cd';\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return '#4682b4';\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return '#00bfff';\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return '#1e90ff';\r\n    case '3.4':\r\n      return '#6a5acd';\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n    case '3.5.4.1':\r\n    case '3.5.4.2':\r\n    case '3.5.4.3':\r\n      return '#4b0082';\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return '#8b0000';\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return '#ff6347';\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return '#ff0000';\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return 'black';\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n    case '4.3.1.2.1':\r\n    case '4.3.1.2.1.1':\r\n      return '#c51b7d';\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return '#fb8072';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\n// Colors for Salmonella drug classes genes\r\nexport const colorForDrugClasses = {\r\n  Azithromycin: [\r\n    { name: 'acrB_R717L', color: '#FBCFE5' },\r\n    { name: 'acrB_R717Q', color: '#addd8e' },\r\n    { name: 'acrB_R717Q + acrB_R717L', color: '#fd8d3c' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // 'Fluoroquinolones (CipNS)': [\r\n  'Ciprofloxacin NS': [\r\n    { name: '0_QRDR + qnrB (CipNS)', color: '#0066cc' },\r\n    { name: '0_QRDR + qnrS (CipNS)', color: '#009999' },\r\n    { name: '1_QRDR (CipNS)', color: '#ffcc00' },\r\n    { name: '1_QRDR + qnrB (CipNS)', color: '#993399' },\r\n    { name: '1_QRDR + qnrS (CipNS)', color: '#660066' },\r\n    { name: '2_QRDR (CipR)', color: '#ff6600' },\r\n    { name: '2_QRDR + qnrB (CipR)', color: '#ffcccc' },\r\n    { name: '2_QRDR + qnrS (CipR)', color: '#ff6666' },\r\n    { name: '3_QRDR (CipR)', color: '#cc0000' },\r\n    { name: '3_QRDR + qnrB (CipR)', color: '#660000' },\r\n    { name: '3_QRDR + qnrS (CipR)', color: 'black' },\r\n    { name: 'None (CipS)', color: '#B9B9B9' }\r\n  ],\r\n  Chloramphenicol: [\r\n    { name: 'catA1', color: '#9e9ac8' },\r\n    { name: 'catA1 + cmlA', color: '#FFEC78' },\r\n    { name: 'cmlA', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Ampicillin: [\r\n    { name: 'blaTEM-1D', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Sulphonamides: [\r\n    { name: 'None', color: '#B9B9B9' },\r\n    { name: 'sul1', color: '#fd8d3c' },\r\n    { name: 'sul1 + sul2', color: '#B4DD70' },\r\n    { name: 'sul2', color: '#ffeda0' }\r\n  ],\r\n  Trimethoprim: [\r\n    { name: 'dfrA1', color: '#B4DD70' },\r\n    { name: 'dfrA5', color: '#D7AEF7' },\r\n    { name: 'dfrA7', color: '#FFEC78' },\r\n    { name: 'dfrA7 + dfrA14', color: '#fd8d3c' },\r\n    { name: 'dfrA14', color: '#6baed6' },\r\n    { name: 'dfrA15', color: '#FBCFE5' },\r\n    { name: 'dfrA17', color: '#FCB469' },\r\n    { name: 'dfrA18', color: '#66c2a4' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Tetracyclines: [\r\n    { name: 'tetA(A)', color: 'rgb(174,227,154)' },\r\n    { name: 'tetA(B)', color: '#D7AEF7' },\r\n    { name: 'tetA(C)', color: '#FFEC78' },\r\n    { name: 'tetA(D)', color: '#FCB469' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // ESBL: [\r\n  //   { name: 'blaCTX-M-15', color: '#6baed6' },\r\n  //   { name: 'blaCTX-M-55', color: '#FBCFE5' },\r\n  //   { name: 'blaOXA-7', color: '#9e9ac8' },\r\n  //   { name: 'blaSHV-12', color: '#addd8e' },\r\n  //   { name: 'None', color: '#B9B9B9' }\r\n  // ],\r\n  Ceftriaxone: [\r\n    { name: 'blaCTX-M-15', color: '#6baed6' },\r\n    { name: 'blaCTX-M-55', color: '#FBCFE5' },\r\n    { name: 'blaOXA-7', color: '#9e9ac8' },\r\n    { name: 'blaSHV-12', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // 'Co-trimoxazole': [\r\n  'Trimethoprim-sulfamethoxazole': [\r\n    { name: 'dfrA1 + sul1', color: '#ffeda0' },\r\n    { name: 'dfrA1 + sul2', color: '#a50f15' },\r\n    { name: 'dfrA1 + sul1 + sul2', color: '#fcc5c0' },\r\n    { name: 'dfrA5 + sul1', color: '#fd8d3c' },\r\n    { name: 'dfrA5 + sul2', color: '#6a5acd' },\r\n    { name: 'dfrA5 + sul1 + sul2', color: '#bcbddc' },\r\n    { name: 'dfrA7 + sul1', color: '#addd8e' },\r\n    { name: 'dfrA7 + sul2', color: '#f1b6da' },\r\n    { name: 'dfrA7 + sul1 + sul2', color: '#fdd0a2' },\r\n    { name: 'dfrA7 + dfrA14 + sul1 + sul2', color: '#F54CEB' },\r\n    { name: 'dfrA14 + sul1', color: '#9e9ac8' },\r\n    { name: 'dfrA14 + sul2', color: '#fb8072' },\r\n    { name: 'dfrA14 + sul1 + sul2', color: '#c994c7' },\r\n    { name: 'dfrA15 + sul1', color: '#4682b4' },\r\n    { name: 'dfrA15 + sul2', color: '#6baed6' },\r\n    { name: 'dfrA15 + sul1 + sul2', color: '#9ecae1' },\r\n    { name: 'dfrA17 + sul1', color: '#7a0177' },\r\n    { name: 'dfrA17 + sul2', color: '#2e8b57' },\r\n    { name: 'dfrA17 + sul1 + sul2', color: '#a8ddb5' },\r\n    { name: 'dfrA18 + sul1', color: '#54278f' },\r\n    { name: 'dfrA18 + sul2', color: '#98fb98' },\r\n    { name: 'dfrA18 + sul1 + sul2', color: '#fc9272' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ]\r\n};\r\n\r\n// Color variables\r\nexport const lightGrey = '#D3D3D3';\r\nexport const darkGrey = '#727272';\r\nexport const zeroPercentColor = '#A20F17';\r\nexport const zeroCountColor = '#F5F4F6';\r\nexport const hoverColor = '#D2F1F6';\r\n","// Helper for map color\r\n\r\nexport const samplesColorScale = (domain) => {\r\n  if (domain >= 1 && domain <= 9) {\r\n    return '#4575B4';\r\n  } else if (domain >= 10 && domain <= 19) {\r\n    return '#91BFDB';\r\n  } else if (domain >= 20 && domain <= 99) {\r\n    return '#ADDD8E';\r\n  } else if (domain >= 100 && domain <= 299) {\r\n    return '#FEE090';\r\n  } else if (domain >= 300) {\r\n    return '#FC8D59';\r\n  }\r\n};\r\n\r\nexport const redColorScale = (percentage) => {\r\n  const p = percentage;\r\n  if(p > 50){\r\n    return '#A20F17';\r\n  }else if (p > 10 && p <= 50) {\r\n    return '#DD2C24';\r\n  } else if (p > 2 && p <= 10) {\r\n    return '#FA694A';\r\n  } else {\r\n    return '#FAAD8F';\r\n  } \r\n};\r\n\r\nexport const sensitiveColorScale = (percentage) => {\r\n  const p = parseFloat(percentage);\r\n  if (p > 90) {\r\n    return '#727272';\r\n  } else if (p > 50) {\r\n    return '#FAAD8F';\r\n  } else if (p > 20) {\r\n    return '#FA694A';\r\n  } else if (p > 10) {\r\n    return '#DD2C24';\r\n  }\r\n  return '#A20F17';\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomLeftControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface PositionModel {\r\n  coordinates: Array<number>;\r\n  zoom: number;\r\n}\r\n\r\ninterface ItemModel {\r\n  name: string;\r\n  count: number;\r\n  percentage: number;\r\n}\r\n\r\ninterface ItemsModel {\r\n  items: Array<ItemModel>;\r\n  count: number;\r\n  percentage?: number;\r\n}\r\n\r\ninterface StatsModel {\r\n  GENOTYPE: ItemsModel;\r\n  H58: ItemsModel;\r\n  MDR: ItemsModel;\r\n  XDR: ItemsModel;\r\n  AzithR: ItemsModel;\r\n  Susceptible: ItemsModel;\r\n  CipR: ItemsModel;\r\n  CipNS: ItemsModel;\r\n}\r\n\r\ninterface MapDataModel {\r\n  name: string;\r\n  displayName: string;\r\n  count: number;\r\n  stats: StatsModel;\r\n}\r\n\r\ninterface MapState {\r\n  loadingMap: boolean;\r\n  position: PositionModel;\r\n  mapView: string;\r\n  tooltipContent: Object | null;\r\n  dataset: string;\r\n  mapData: Array<MapDataModel>;\r\n}\r\n\r\nconst initialState: MapState = {\r\n  loadingMap: false,\r\n  position: {\r\n    coordinates: [0, 0],\r\n    zoom: 1\r\n  },\r\n  mapView: 'CipNS',\r\n  tooltipContent: null,\r\n  dataset: 'All',\r\n  mapData: []\r\n};\r\n\r\nexport const mapSlice = createSlice({\r\n  name: 'map',\r\n  initialState,\r\n  reducers: {\r\n    setLoadingMap: (state, action: PayloadAction<boolean>) => {\r\n      state.loadingMap = action.payload;\r\n    },\r\n    setPosition: (state, action: PayloadAction<PositionModel>) => {\r\n      state.position = action.payload;\r\n    },\r\n    setMapView: (state, action: PayloadAction<string>) => {\r\n      state.mapView = action.payload;\r\n    },\r\n    setTooltipContent: (state, action: PayloadAction<Object | null>) => {\r\n      state.tooltipContent = action.payload;\r\n    },\r\n    setDataset: (state, action: PayloadAction<string>) => {\r\n      state.dataset = action.payload;\r\n    },\r\n    setMapData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.mapData = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setPosition, setMapView, setTooltipContent, setDataset, setLoadingMap, setMapData } = mapSlice.actions;\r\n\r\nexport default mapSlice.reducer;\r\n","import { AddCircle, FilterCenterFocus, RemoveCircle } from '@mui/icons-material';\r\nimport { IconButton, Tooltip, Zoom } from '@mui/material';\r\nimport { useStyles } from './BottomLeftControlsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setPosition } from '../../../../stores/slices/mapSlice';\r\n\r\nexport const BottomLeftControls = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const position = useAppSelector((state) => state.map.position);\r\n\r\n  function handleRecenter() {\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n  }\r\n\r\n  function handleZoomIn() {\r\n    if (position.zoom >= 4) return;\r\n\r\n    dispatch(setPosition({ ...position, zoom: position.zoom * 2 }));\r\n  }\r\n\r\n  function handleZoomOut() {\r\n    if (position.zoom <= 1) return;\r\n    if (position.zoom / 2 === 1) {\r\n      dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n    } else {\r\n      dispatch(setPosition({ ...position, coordinates: [0, 0], zoom: position.zoom / 2 }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.bottomLeftControls}>\r\n      <Zoom in={position.zoom !== 1 || position.coordinates.some((coordinate) => coordinate !== 0)}>\r\n        <Tooltip title=\"Recenter\" placement=\"right\">\r\n          <IconButton onClick={handleRecenter}>\r\n            <FilterCenterFocus fontSize=\"large\" color=\"primary\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Zoom>\r\n      <Tooltip title=\"Zoom In\" placement=\"right\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleZoomIn}>\r\n            <AddCircle fontSize=\"large\" />\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n      <Tooltip title=\"Zoom Out\" placement=\"right\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleZoomOut}>\r\n            <RemoveCircle fontSize=\"large\" />\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n\r\n    '&$bp700': {\r\n      position: 'relative'\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  legendWrapper: {\r\n    marginTop: '8px',\r\n    maxHeight: '250px',\r\n    overflowY: 'auto'\r\n  },\r\n  legend: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  legendColorBox: {\r\n    width: '10px',\r\n    height: '10px',\r\n    marginRight: '4px'\r\n  },\r\n  legendText: {\r\n    fontSize: '10px'\r\n  },\r\n  bp700: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","// List of Salmonella genotypes\r\nexport const genotypes = [\r\n  '0',\r\n  '0.0.1',\r\n  '0.0.2',\r\n  '0.0.3',\r\n  '0.1',\r\n  '0.1.1',\r\n  '0.1.2',\r\n  '0.1.3',\r\n  '1.1',\r\n  '1.1.1',\r\n  '1.1.2',\r\n  '1.1.3',\r\n  '1.1.4',\r\n  '1.2',\r\n  '1.2.1',\r\n  '2',\r\n  '2.0.1',\r\n  '2.0.2',\r\n  '2.1',\r\n  '2.1.1',\r\n  '2.1.2',\r\n  '2.1.3',\r\n  '2.1.4',\r\n  '2.1.5',\r\n  '2.1.6',\r\n  '2.1.7',\r\n  '2.1.8',\r\n  '2.1.9',\r\n  '2.1.7.1',\r\n  '2.1.7.2',\r\n  '2.2',\r\n  '2.2.1',\r\n  '2.2.2',\r\n  '2.2.3',\r\n  '2.2.4',\r\n  '2.3',\r\n  '2.3.1',\r\n  '2.3.2',\r\n  '2.3.3',\r\n  '2.3.4',\r\n  '2.3.5',\r\n  '2.4',\r\n  '2.4.1',\r\n  '2.5',\r\n  '2.5.1',\r\n  '2.5.2',\r\n  '3',\r\n  '3.0.1',\r\n  '3.0.2',\r\n  '3.1',\r\n  '3.1.1',\r\n  '3.1.2',\r\n  '3.2',\r\n  '3.2.1',\r\n  '3.2.2',\r\n  '3.3',\r\n  '3.3.1',\r\n  '3.3.2',\r\n  '3.3.2.Bd1',\r\n  '3.3.2.Bd2',\r\n  '3.4',\r\n  '3.5',\r\n  '3.5.1',\r\n  '3.5.2',\r\n  '3.5.3',\r\n  '3.5.4',\r\n  '3.5.4.1',\r\n  '3.5.4.2',\r\n  '3.5.4.3',\r\n  '4',\r\n  '4.1',\r\n  '4.1.1',\r\n  '4.2',\r\n  '4.2.1',\r\n  '4.2.2',\r\n  '4.2.3',\r\n  /*'4.3', '4.3.0', */ '4.3.1',\r\n  '4.3.1.1',\r\n  '4.3.1.1.P1',\r\n  '4.3.1.1.EA1',\r\n  '4.3.1.2',\r\n  '4.3.1.2.EA2',\r\n  '4.3.1.2.EA3',\r\n  '4.3.1.2.1',\r\n  '4.3.1.2.1.1',\r\n  '4.3.1.3',\r\n  '4.3.1.3.Bdq'\r\n].sort((a, b) => a.localeCompare(b));\r\n","// List of legends for the map and in which organisms they appear\r\nexport const mapLegends = [\r\n  { value: 'MDR', label: 'Multidrug resistant (MDR)' },\r\n  { value: 'XDR', label: 'Extensively drug resistant (XDR)' },\r\n  { value: 'AzithR', label: 'Azithromycin resistant' },\r\n  { value: 'CipNS', label: 'Ciprofloxacin nonsusceptible (CipNS)' },\r\n  { value: 'CipR', label: 'Ciprofloxacin resistant (CipR)' },\r\n  // { value: 'Sensitive to all drugs', label: 'Sensitive to all drugs' },\r\n  { value: 'Susceptible to all drugs', label: 'Susceptible to all drugs' },\r\n  { value: 'Dominant Genotype', label: 'Dominant Genotype' },\r\n  { value: 'H58 / Non-H58', label: 'H58 genotype' },\r\n  { value: 'No. Samples', label: 'No. Samples' }\r\n];\r\n","import { InfoOutlined } from '@mui/icons-material';\r\nimport { Box, Card, CardContent, MenuItem, Select, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './TopRightControlsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setMapView } from '../../../../stores/slices/mapSlice.ts';\r\nimport { darkGrey, getColorForGenotype, lightGrey } from '../../../../util/colorHelper';\r\nimport { genotypes } from '../../../../util/genotypes';\r\nimport { redColorScale, samplesColorScale, sensitiveColorScale } from '../mapColorHelper';\r\nimport { mapLegends } from '../../../../util/mapLegends';\r\n\r\nconst generalSteps = ['>0 and ≤2%', '>2% and ≤10%', '>10% and ≤50%', '>50%'];\r\nconst sensitiveSteps = ['0 - 10%', '10 - 20%', '20 - 50%', '50 - 90%', '90 - 100%'];\r\nconst noSamplesSteps = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300'];\r\nconst mapViewsWithZeroPercentOption = ['CipNS', 'CipR', 'AzithR', 'MDR', 'XDR', 'H58 / Non-H58'];\r\n\r\nexport const TopRightControls = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const mapData = useAppSelector((state) => state.map.mapData);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n\r\n  function handleChangeMapView(event) {\r\n    dispatch(setMapView(event.target.value));\r\n  }\r\n\r\n  function hasZeroPercentOption() {\r\n    return mapViewsWithZeroPercentOption.includes(mapView);\r\n  }\r\n\r\n  function getSteps() {\r\n    switch (mapView) {\r\n      // case 'Sensitive to all drugs':\r\n      case 'Susceptible to all drugs':\r\n        return sensitiveSteps;\r\n      case 'No. Samples':\r\n        return noSamplesSteps;\r\n      case 'Dominant Genotype':\r\n        return genotypes;\r\n      default:\r\n        return generalSteps;\r\n    }\r\n  }\r\n\r\n  function getStepBoxColor(step, index) {\r\n    switch (mapView) {\r\n      // case 'Sensitive to all drugs':\r\n      case 'Susceptible to all drugs':\r\n        const aux = ['10', '20', '50', '90', '100'];\r\n        return sensitiveColorScale(aux[index]);\r\n      case 'No. Samples': {\r\n        const aux = [1, 10, 20, 100, 300];\r\n        return samplesColorScale(aux[index]);\r\n      }\r\n      case 'Dominant Genotype':\r\n        return getColorForGenotype(step);\r\n      default:\r\n        const aux3 = ['0.01', '2.01', '10.01', '50.01'];\r\n        return redColorScale(aux3[index]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.topRightControls} ${matches ? classes.bp700 : ''}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <div className={classes.label}>\r\n            <Typography variant=\"caption\">Select map view</Typography>\r\n            <Tooltip\r\n              title=\"Percentage frequency data is shown only for countries with\r\n          N≥20 genomes\"\r\n              placement=\"top\"\r\n            >\r\n              <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n            </Tooltip>\r\n          </div>\r\n          <Select\r\n            variant=\"standard\"\r\n            value={mapView}\r\n            onChange={handleChangeMapView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          >\r\n            {mapLegends.map((legend, index) => {\r\n              return (\r\n                <MenuItem key={index + 'mapview'} value={legend.value}>\r\n                  {legend.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          {mapData.length > 0 && (\r\n            <div className={classes.legendWrapper}>\r\n              <div className={classes.legend}>\r\n                <Box className={classes.legendColorBox} style={{ backgroundColor: lightGrey }} />\r\n                <span className={classes.legendText}>Insufficient data</span>\r\n              </div>\r\n              {hasZeroPercentOption() && (\r\n                <div className={classes.legend}>\r\n                  <Box className={classes.legendColorBox} style={{ backgroundColor: darkGrey }} />\r\n                  <span className={classes.legendText}>0%</span>\r\n                </div>\r\n              )}\r\n              {getSteps().map((step, index) => {\r\n                return (\r\n                  <div key={`step-${index}`} className={classes.legend}>\r\n                    <Box className={classes.legendColorBox} style={{ backgroundColor: getStepBoxColor(step, index) }} />\r\n                    <span className={classes.legendText}>{step}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface GlobalOverviewModel {\r\n  italicLabel: string;\r\n  label: string;\r\n  fullLabel: string\r\n}\r\n\r\ninterface DashboardState {\r\n  canGetData: boolean;\r\n  globalOverviewLabel: GlobalOverviewModel;\r\n  loadingData: boolean;\r\n  actualCountry: string;\r\n  totalGenomes: number;\r\n  totalGenotypes: number;\r\n  actualGenomes: number;\r\n  actualGenotypes: number;\r\n  timeInitial: number;\r\n  timeFinal: number;\r\n  actualTimeInitial: number | string;\r\n  actualTimeFinal: number | string;\r\n  years: Array<number>;\r\n  genotypesForFilter: Array<string>;\r\n  listPMID: Array<string>\r\n}\r\n\r\nconst initialState: DashboardState = {\r\n  canGetData: true,\r\n  globalOverviewLabel: { italicLabel: 'Salmonella', label: 'Typhi', fullLabel: 'Salmonella Typhi' },\r\n  loadingData: false,\r\n  actualCountry: 'All',\r\n  totalGenotypes: 0,\r\n  totalGenomes: 0,\r\n  actualGenomes: 0,\r\n  actualGenotypes: 0,\r\n  timeInitial: 0,\r\n  timeFinal: 0,\r\n  actualTimeInitial: '',\r\n  actualTimeFinal: '',\r\n  years: [],\r\n  genotypesForFilter: [],\r\n  listPMID: []\r\n};\r\n\r\nexport const dashboardSlice = createSlice({\r\n  name: 'dashboard',\r\n  initialState,\r\n  reducers: {\r\n    setCanGetData: (state, action: PayloadAction<boolean>) => {\r\n      state.canGetData = action.payload;\r\n    },\r\n    setGlobalOverviewLabel: (state, action: PayloadAction<GlobalOverviewModel>) => {\r\n      state.globalOverviewLabel = action.payload;\r\n    },\r\n    setLoadingData: (state, action: PayloadAction<boolean>) => {\r\n      state.loadingData = action.payload;\r\n    },\r\n    setActualCountry: (state, action: PayloadAction<string>) => {\r\n      state.actualCountry = action.payload;\r\n    },\r\n    setTotalGenotypes: (state, action: PayloadAction<number>) => {\r\n      state.totalGenotypes = action.payload;\r\n    },\r\n    setTotalGenomes: (state, action: PayloadAction<number>) => {\r\n      state.totalGenomes = action.payload;\r\n    },\r\n    setActualGenomes: (state, action: PayloadAction<number>) => {\r\n      state.actualGenomes = action.payload;\r\n    },\r\n    setActualGenotypes: (state, action: PayloadAction<number>) => {\r\n      state.actualGenotypes = action.payload;\r\n    },\r\n    setTimeInitial: (state, action: PayloadAction<number>) => {\r\n      state.timeInitial = action.payload;\r\n    },\r\n    setTimeFinal: (state, action: PayloadAction<number>) => {\r\n      state.timeFinal = action.payload;\r\n    },\r\n    setActualTimeInitial: (state, action: PayloadAction<number>) => {\r\n      state.actualTimeInitial = action.payload;\r\n    },\r\n    setActualTimeFinal: (state, action: PayloadAction<number>) => {\r\n      state.actualTimeFinal = action.payload;\r\n    },\r\n    setYears: (state, action: PayloadAction<Array<number>>) => {\r\n      const years = action.payload\r\n\r\n      state.years = years;\r\n      state.timeInitial = years[0];\r\n      state.actualTimeInitial = years[0];\r\n      state.timeFinal = years[years.length - 1];\r\n      state.actualTimeFinal = years[years.length - 1];\r\n    },\r\n    setGenotypesForFilter: (state, action: PayloadAction<Array<string>>) => {\r\n      state.genotypesForFilter = action.payload;\r\n    },\r\n    setListPMID: (state, action: PayloadAction<Array<string>>) => {\r\n      state.listPMID = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setCanGetData,\r\n  setGlobalOverviewLabel,\r\n  setLoadingData,\r\n  setActualCountry,\r\n  setTotalGenotypes,\r\n  setTotalGenomes,\r\n  setActualGenomes,\r\n  setActualGenotypes,\r\n  setTimeInitial,\r\n  setTimeFinal,\r\n  setActualTimeInitial,\r\n  setActualTimeFinal,\r\n  setYears,\r\n  setGenotypesForFilter,\r\n  setListPMID\r\n} = dashboardSlice.actions;\r\n\r\nexport default dashboardSlice.reducer;\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topLeftControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n\r\n    '&$bp700': {\r\n      position: 'relative',\r\n\r\n      '& $yearWrapper': {\r\n        width: '100%'\r\n      },\r\n      '& $datasetWrapper .MuiToggleButton-root': {\r\n        width: '100%'\r\n      }\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px',\r\n    textAlign: 'start'\r\n  },\r\n  datasetWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  yearsWrapper: {\r\n    display: 'flex',\r\n    columnGap: '4px',\r\n    paddingTop: '8px'\r\n  },\r\n  yearWrapper: {\r\n    width: '78px'\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  bp700: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useStyles } from './TopLeftControlsMUI';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  MenuItem,\r\n  Select,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDataset } from '../../../../stores/slices/mapSlice.ts';\r\nimport { setActualTimeFinal, setActualTimeInitial } from '../../../../stores/slices/dashboardSlice';\r\n\r\nconst datasetOptions = ['All', 'Local', 'Travel'];\r\n\r\nexport const TopLeftControls = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const years = useAppSelector((state) => state.dashboard.years);\r\n\r\n  function handleChange(_event, newValue) {\r\n    if (newValue !== null) {\r\n      dispatch(setDataset(newValue));\r\n    }\r\n  }\r\n\r\n  function handleChangeInitial(_event, child) {\r\n    dispatch(setActualTimeInitial(child.props.value));\r\n  }\r\n\r\n  function handleChangeFinal(_event, child) {\r\n    dispatch(setActualTimeFinal(child.props.value));\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.topLeftControls} ${matches ? classes.bp700 : ''}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"h6\">Filters</Typography>\r\n          <div className={classes.datasetWrapper}>\r\n            <Typography gutterBottom variant=\"caption\">\r\n              Select dataset\r\n            </Typography>\r\n            <ToggleButtonGroup value={dataset} exclusive size=\"small\" onChange={handleChange}>\r\n              {datasetOptions.map((option, index) => (\r\n                <ToggleButton key={`dataset-${index}`} value={option} color=\"primary\">\r\n                  {option}\r\n                </ToggleButton>\r\n              ))}\r\n            </ToggleButtonGroup>\r\n          </div>\r\n          <div className={classes.yearsWrapper}>\r\n            <div className={classes.yearWrapper}>\r\n              <Typography gutterBottom variant=\"caption\">\r\n                Start year\r\n              </Typography>\r\n              <Select\r\n                variant=\"standard\"\r\n                inputProps={{ className: classes.selectInput }}\r\n                MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n                value={actualTimeInitial}\r\n                onChange={handleChangeInitial}\r\n                fullWidth\r\n              >\r\n                {years\r\n                  .filter((year) => year <= actualTimeFinal)\r\n                  .map((year, index) => {\r\n                    return (\r\n                      <MenuItem key={`initial-year-${index}`} value={year}>\r\n                        {year}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </div>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <div className={classes.yearWrapper}>\r\n              <Typography gutterBottom variant=\"caption\">\r\n                End year\r\n              </Typography>\r\n              <Select\r\n                variant=\"standard\"\r\n                inputProps={{ className: classes.selectInput }}\r\n                MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n                value={actualTimeFinal}\r\n                onChange={handleChangeFinal}\r\n                fullWidth\r\n              >\r\n                {years\r\n                  .filter((year) => year >= actualTimeInitial)\r\n                  .map((year, index) => {\r\n                    return (\r\n                      <MenuItem key={`final-year-${index}`} value={year}>\r\n                        {year}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","// Helper for loading images to the report\r\nexport function imgOnLoadPromise(obj) {\r\n  return new Promise((resolve, reject) => {\r\n    obj.onload = () => resolve(obj);\r\n    obj.onerror = reject;\r\n  });\r\n}\r\n","import { Alert, CircularProgress, IconButton, Snackbar, Tooltip } from '@mui/material';\r\nimport { useStyles } from './BottomRightControlsMUI';\r\nimport { CameraAlt } from '@mui/icons-material';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { useState } from 'react';\r\nimport { setPosition } from '../../../../stores/slices/mapSlice';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport { imgOnLoadPromise } from '../../../../util/imgOnLoadPromise';\r\nimport download from 'downloadjs';\r\nimport LogoImg from '../../../../assets/img/logo-typhinet-prod.png';\r\nimport { mapLegends } from '../../../../util/mapLegends';\r\n\r\nexport const BottomRightControls = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n\r\n  async function handleClick() {\r\n    setLoading(true);\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n\r\n    try {\r\n      await svgAsPngUri(document.getElementById('global-overview-map'), {\r\n        scale: 4,\r\n        backgroundColor: 'white',\r\n        width: 1200,\r\n        left: -200\r\n      }).then(async (uri) => {\r\n        let canvas = document.createElement('canvas');\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        let mapImg = document.createElement('img');\r\n        let mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        const cWidth = 3600;\r\n        const cHeight = 1800;\r\n        const textHeight = 250;\r\n        const legendHeight = 350;\r\n\r\n        canvas.width = cWidth;\r\n        canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.font = 'bolder 50px Montserrat';\r\n        ctx.fillStyle = 'black';\r\n        ctx.textAlign = 'center';\r\n        ctx.fillText(`Global Overview of ${globalOverviewLabel.fullLabel}`, canvas.width / 2, 80);\r\n        ctx.font = '35px Montserrat';\r\n        ctx.textAlign = 'center';\r\n\r\n        const actualMapView = mapLegends.find((x) => x.value === mapView).label;\r\n\r\n        ctx.fillText('Map View: ' + actualMapView, canvas.width / 2, 140);\r\n        ctx.fillText('Dataset: ' + dataset, canvas.width / 2, 190);\r\n        ctx.fillText('Time Period: ' + actualTimeInitial + ' to ' + actualTimeFinal, canvas.width / 2, 240);\r\n\r\n        ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n        const legendImg = document.createElement('img');\r\n        const legendImgPromise = imgOnLoadPromise(legendImg);\r\n        let legendWidth = 439;\r\n\r\n        switch (mapView) {\r\n          case 'Dominant Genotype':\r\n            legendWidth = 3085;\r\n            legendImg.src = `legends/MapView_DominantGenotype.png`;\r\n            break;\r\n          case 'No. Samples':\r\n            legendImg.src = 'legends/MapView_NoSamples.png';\r\n            break;\r\n          // case 'Sensitive to all drugs':\r\n          case 'Susceptible to all drugs':\r\n            legendImg.src = 'legends/MapView_Sensitive.png';\r\n            break;\r\n          default:\r\n            legendImg.src = 'legends/MapView_Others.png';\r\n            break;\r\n        }\r\n\r\n        await legendImgPromise;\r\n        ctx.drawImage(\r\n          legendImg,\r\n          canvas.width / 2 - legendWidth / 2,\r\n          canvas.height - legendHeight - 30,\r\n          legendWidth,\r\n          legendHeight\r\n        );\r\n\r\n        const typhinetLogo = document.createElement('img');\r\n        const typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n        typhinetLogo.src = LogoImg;\r\n        await typhinetLogoPromise;\r\n        ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n        const base64 = canvas.toDataURL();\r\n        await download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n      });\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.bottomRightControls}>\r\n      <Tooltip title=\"Download Map as PNG\" placement=\"left\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleClick} disabled={loading}>\r\n            {loading ? <CircularProgress color=\"primary\" size={35} /> : <CameraAlt fontSize=\"large\" />}\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Card, CardContent, Typography, useMediaQuery } from '@mui/material';\r\nimport { ComposableMap, Geographies, Geography, Graticule, Sphere, ZoomableGroup } from 'react-simple-maps';\r\nimport { useStyles } from './MapMUI';\r\nimport geography from '../../../assets/world-50m.json';\r\nimport { darkGrey, getColorForGenotype, lightGrey, zeroCountColor, zeroPercentColor } from '../../../util/colorHelper';\r\nimport { redColorScale, samplesColorScale, sensitiveColorScale } from './mapColorHelper';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { BottomLeftControls } from './BottomLeftControls';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setPosition, setTooltipContent } from '../../../stores/slices/mapSlice.ts';\r\nimport { TopRightControls } from './TopRightControls';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice.ts';\r\nimport { TopLeftControls } from './TopLeftControls';\r\nimport { BottomRightControls } from './BottomRightControls';\r\n\r\nconst statKey = {\r\n  MDR: 'MDR',\r\n  'H58 / Non-H58': 'H58',\r\n  XDR: 'XDR',\r\n  AzithR: 'AzithR',\r\n  CipNS: 'CipNS',\r\n  CipR: 'CipR',\r\n  // 'Sensitive to all drugs': 'Susceptible'\r\n  'Susceptible to all drugs': 'Susceptible'\r\n};\r\n\r\nexport const Map = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const position = useAppSelector((state) => state.map.position);\r\n  const mapData = useAppSelector((state) => state.map.mapData);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const tooltipContent = useAppSelector((state) => state.map.tooltipContent);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n\r\n  function handleOnClick(countryData) {\r\n    if (countryData !== undefined) {\r\n      dispatch(setActualCountry(countryData.name));\r\n    }\r\n  }\r\n\r\n  function handleOnMouseLeave() {\r\n    dispatch(setTooltipContent(null));\r\n  }\r\n\r\n  function handleOnMouseEnter({ geo, countryStats, countryData, smallerThan20 = false, showTooltip = false }) {\r\n    const { NAME } = geo.properties;\r\n    const tooltip = {\r\n      name: NAME,\r\n      content: {},\r\n      smallerThan20\r\n    };\r\n\r\n    if (countryData !== undefined) {\r\n      switch (mapView) {\r\n        case 'No. Samples':\r\n          Object.assign(tooltip, {\r\n            content: {\r\n              Samples: countryData.count,\r\n              Genotypes: countryStats.GENOTYPE.count,\r\n              H58: `${countryStats.H58.percentage}%`,\r\n              MDR: `${countryStats.MDR.percentage}%`,\r\n              XDR: `${countryStats.XDR.percentage}%`,\r\n              AzithR: `${countryStats.AzithR.percentage}%`,\r\n              CipR: `${countryStats.CipR.percentage}%`,\r\n              CipNS: `${countryStats.CipNS.percentage}%`,\r\n              Susceptible: `${countryStats.Susceptible.percentage}%`\r\n            }\r\n          });\r\n          break;\r\n        case 'Dominant Genotype':\r\n          const genotypes = countryStats.GENOTYPE.items.slice(0, 5);\r\n          genotypes.forEach((genotype) => {\r\n            tooltip.content[genotype.name] = genotype.count;\r\n          });\r\n          break;\r\n        case 'H58 / Non-H58':\r\n        case 'MDR':\r\n        case 'Susceptible to all drugs': // case 'Sensitive to all drugs':\r\n        case 'XDR':\r\n        case 'AzithR':\r\n        case 'CipR':\r\n        case 'CipNS':\r\n          if (showTooltip) {\r\n            tooltip.content[statKey[mapView]] = {\r\n              count: countryStats[statKey[mapView]].count,\r\n              percentage: `${countryStats[statKey[mapView]].percentage}%`\r\n            };\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    dispatch(setTooltipContent(tooltip));\r\n  }\r\n\r\n  function handleOnMoveEnd(value) {\r\n    dispatch(setPosition(value));\r\n  }\r\n\r\n  function showPercentage() {\r\n    return !['Dominant Genotype', 'No. Samples'].includes(mapView);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={2}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h5\" fontWeight={'bold'}>\r\n          Global Overview{' '}\r\n          <span>\r\n            of <i>{globalOverviewLabel.italicLabel}</i> {globalOverviewLabel.label}\r\n          </span>\r\n        </Typography>\r\n        <div className={classes.mapWrapper}>\r\n          <ComposableMap\r\n            className={classes.composableMap}\r\n            id=\"global-overview-map\"\r\n            data-tip=\"\"\r\n            projectionConfig={{\r\n              rotate: [-10, 0, 0],\r\n              scale: 210\r\n            }}\r\n          >\r\n            <ZoomableGroup\r\n              zoom={position.zoom}\r\n              center={position.coordinates}\r\n              onMoveEnd={(value) => {\r\n                handleOnMoveEnd(value);\r\n              }}\r\n            >\r\n              <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n              <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n              <Geographies geography={geography}>\r\n                {({ geographies }) => {\r\n                  return geographies.map((geo) => {\r\n                    const countryData = mapData.find((item) => item.name === geo.properties.NAME);\r\n                    const countryStats = countryData?.stats;\r\n                    let fillColor = lightGrey;\r\n                    let smallerThan20 = false;\r\n                    let showTooltip = false;\r\n\r\n                    if (countryData) {\r\n                      let count = 0;\r\n\r\n                      switch (mapView) {\r\n                        case 'No. Samples':\r\n                          if (countryData.count > 0) {\r\n                            fillColor = samplesColorScale(countryData.count);\r\n                          } else {\r\n                            fillColor = zeroCountColor;\r\n                          }\r\n                          break;\r\n                        case 'Dominant Genotype':\r\n                          const genotypes = countryStats.GENOTYPE.items;\r\n                          fillColor = getColorForGenotype(genotypes[0].name);\r\n                          break;\r\n                        case 'Susceptible to all drugs': // case 'Sensitive to all drugs':\r\n                        case 'H58 / Non-H58':\r\n                        case 'MDR':\r\n                        case 'XDR':\r\n                        case 'AzithR':\r\n                        case 'CipR':\r\n                        case 'CipNS':\r\n                          count = countryStats[statKey[mapView]]?.count;\r\n                          if (countryData.count >= 20 && count > 0) {\r\n                            if (mapView === 'Susceptible to all drugs') {\r\n                              fillColor = sensitiveColorScale(countryStats[statKey[mapView]].percentage);\r\n                            } else {\r\n                              fillColor = redColorScale(countryStats[statKey[mapView]].percentage);\r\n                            }\r\n                            showTooltip = true;\r\n                          } else if (countryData.count >= 20) {\r\n                            if (mapView === 'Susceptible to all drugs') {\r\n                              fillColor = zeroPercentColor;\r\n                            } else {\r\n                              fillColor = darkGrey;\r\n                            }\r\n                            smallerThan20 = true;\r\n                          }\r\n                          break;\r\n                        default:\r\n                          break;\r\n                      }\r\n                    }\r\n\r\n                    return (\r\n                      <Geography\r\n                        key={geo.rsmKey}\r\n                        geography={geo}\r\n                        cursor=\"pointer\"\r\n                        fill={fillColor}\r\n                        onClick={() => handleOnClick(countryData)}\r\n                        onMouseLeave={handleOnMouseLeave}\r\n                        onMouseEnter={() =>\r\n                          handleOnMouseEnter({\r\n                            geo,\r\n                            countryStats,\r\n                            countryData,\r\n                            smallerThan20,\r\n                            showTooltip\r\n                          })\r\n                        }\r\n                        style={{\r\n                          default: {\r\n                            outline: 'none'\r\n                          },\r\n                          hover: {\r\n                            stroke: '#607D8B',\r\n                            strokeWidth: 1,\r\n                            outline: 'none'\r\n                          },\r\n                          pressed: {\r\n                            fill: '#FF5722',\r\n                            stroke: '#607D8B',\r\n                            strokeWidth: 1,\r\n                            outline: 'none'\r\n                          }\r\n                        }}\r\n                      />\r\n                    );\r\n                  });\r\n                }}\r\n              </Geographies>\r\n            </ZoomableGroup>\r\n          </ComposableMap>\r\n          {!matches && (\r\n            <>\r\n              <TopLeftControls />\r\n              <TopRightControls />\r\n            </>\r\n          )}\r\n          <BottomLeftControls />\r\n          <BottomRightControls />\r\n        </div>\r\n        {matches && (\r\n          <div className={classes.topControls}>\r\n            <TopRightControls />\r\n            <TopLeftControls />\r\n          </div>\r\n        )}\r\n        <ReactTooltip>\r\n          {tooltipContent && (\r\n            <div className={classes.tooltipMap}>\r\n              <span className={classes.country}>{tooltipContent.name}</span>\r\n              <div className={classes.tooltipInfo}>\r\n                {Object.keys(tooltipContent.content).map((key, index) => {\r\n                  return (\r\n                    <div key={`tooltip-${index}`} className={classes.info}>\r\n                      {mapView === 'Dominant Genotype' && (\r\n                        <div\r\n                          className={classes.color}\r\n                          style={{\r\n                            backgroundColor: getColorForGenotype(key)\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <span key={`info-${index}`}>\r\n                        <span>{key}:</span>\r\n                        {showPercentage() ? (\r\n                          <span>{` ${tooltipContent.content[key].count} (${tooltipContent.content[key].percentage})`}</span>\r\n                        ) : (\r\n                          <span>{` ${tooltipContent.content[key]}`}</span>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n                {Object.keys(tooltipContent.content).length === 0 && (\r\n                  <span>{tooltipContent.smallerThan20 ? '0%' : 'Insufficient data'}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ReactTooltip>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  footer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '16px 0px 0px',\r\n    columnGap: '20px',\r\n    rowGap: '24px'\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    gap: '8px',\r\n    width: '100%',\r\n    justifyContent: 'space-around',\r\n\r\n    '@media (max-width: 750px)': {\r\n      flexDirection: 'column'\r\n    }\r\n  },\r\n  button: {\r\n    color: '#fff !important',\r\n    textTransform: 'none !important',\r\n    paddingTop: '8px !important',\r\n    paddingBottom: '8px !important',\r\n    borderRadius: '100px !important',\r\n    fontSize: '20px !important',\r\n    fontWeight: '600 !important',\r\n    height: '40px',\r\n\r\n    '@media (max-width: 750px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  text: {\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Button, Typography } from '@mui/material';\r\nimport { useStyles } from './FooterMUI';\r\nimport { Email, GitHub, Twitter } from '@mui/icons-material';\r\n\r\nexport const Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  function handleClickContact() {\r\n    window.open('mailto:dashboard@typhi.net', '_blank');\r\n  }\r\n\r\n  function handleClickDocumentation() {\r\n    window.open('https://github.com/zadyson/TyphiNET/wiki', '_blank');\r\n  }\r\n\r\n  function handleClickGitHub() {\r\n    window.open('https://github.com/zadyson/TyphiNET', '_blank');\r\n  }\r\n\r\n  function handleClickTwitter() {\r\n    window.open('https://twitter.com/typhinet', '_blank');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.footer}>\r\n      <div className={classes.actions}>\r\n        <Button className={classes.button} variant=\"contained\" onClick={handleClickContact} startIcon={<Email />}>\r\n          Contact\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          onClick={handleClickDocumentation}\r\n          startIcon={<GitHub />}\r\n        >\r\n          Documentation\r\n        </Button>\r\n        <Button className={classes.button} variant=\"contained\" onClick={handleClickGitHub} startIcon={<GitHub />}>\r\n          GitHub\r\n        </Button>\r\n        <Button className={classes.button} variant=\"contained\" onClick={handleClickTwitter} startIcon={<Twitter />}>\r\n          Twitter\r\n        </Button>\r\n      </div>\r\n      <Typography className={classes.text}>\r\n        Data obtained from:{' '}\r\n        <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">\r\n          pathogen watch project\r\n        </a>{' '}\r\n        on 12/09/2023.{' '}\r\n        <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">\r\n          Holt Lab\r\n        </a>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n","// Static routes to run the app. Only use one: local or heroku.\r\nexport const API_ENDPOINT = 'http://localhost:8080/api/';\r\n//export const API_ENDPOINT = 'https://typhinetdev.herokuapp.com/api/';\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  graphsCard: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexDirection: 'column',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflow: 'visible !important',\r\n\r\n    '@media (max-width: 500px)': {\r\n      rowGap: '8px',\r\n      padding: '8px'\r\n    },\r\n\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  card: {\r\n    gridColumn: 'span 6',\r\n    overflow: 'visible !important',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      gridColumn: 'span 12'\r\n    }\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    columnGap: '8px',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    padding: '16px 16px 0px !important'\r\n  },\r\n  cardContent: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  titleWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '16px',\r\n    textAlign: 'center'\r\n  },\r\n  downloadWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  determinantsGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    maxWidth: '920px',\r\n    width: '-webkit-fill-available'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px',\r\n    width: '100%',\r\n    alignItems: 'center'\r\n  },\r\n  selectLabel: {\r\n    width: '100%'\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '460px'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltip: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#fff',\r\n    padding: '16px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px',\r\n    rowGap: '16px'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    width: '450px',\r\n\r\n    '@media (max-width: 1200px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 400px)': {\r\n      width: '275px'\r\n    }\r\n  },\r\n  tooltipItemWrapper: {\r\n    gridColumn: 'span 6',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","// List of Salmonella drugs\r\nexport const drugs = [\r\n  'Ampicillin',\r\n  'Azithromycin',\r\n  'Chloramphenicol',\r\n  // 'Co-trimoxazole',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  // 'ESBL',\r\n  'Ceftriaxone',\r\n  // 'Fluoroquinolones (CipNS)',\r\n  'Ciprofloxacin NS',\r\n  // 'Fluoroquinolones (CipR)',\r\n  'Ciprofloxacin R',\r\n  'Sulphonamides',\r\n  'Susceptible',\r\n  'Tetracyclines',\r\n  'Trimethoprim'\r\n].sort((a, b) => a.localeCompare(b));\r\n\r\nexport const drugsForDrugResistanceGraph = [...drugs, 'XDR', 'MDR'].sort((a, b) => a.localeCompare(b));\r\n\r\nexport const defaultDrugsForDrugResistanceGraph = [\r\n  'Azithromycin',\r\n  'Ceftriaxone',\r\n  'Ciprofloxacin NS',\r\n  'Ciprofloxacin R',\r\n  'MDR',\r\n  'Susceptible',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  'XDR'\r\n];\r\n\r\n// List of Salmonella drug classes\r\nexport const drugClasses = [\r\n  'Ampicillin',\r\n  'Azithromycin',\r\n  'Chloramphenicol',\r\n  // 'Co-trimoxazole',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  // 'ESBL',\r\n  'Ceftriaxone',\r\n  // 'Fluoroquinolones (CipNS)',\r\n  'Ciprofloxacin NS',\r\n  'Sulphonamides',\r\n  'Tetracyclines',\r\n  'Trimethoprim'\r\n];\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\nimport { defaultDrugsForDrugResistanceGraph } from '../../util/drugs';\r\ninterface GraphState {\r\n  countriesForFilter: Array<string>;\r\n  distributionGraphView: string;\r\n  genotypesYearData: Array<any>;\r\n  drugsYearData: Array<any>;\r\n  drugResistanceGraphView: Array<string>,\r\n  frequenciesGraphView: string;\r\n  frequenciesGraphSelectedGenotypes: Array<string>;\r\n  genotypesDrugsData: Array<any>;\r\n  genotypesDrugClassesData: Array<any>;\r\n  determinantsGraphView: string;\r\n  determinantsGraphDrugClass: string;\r\n}\r\n\r\nconst initialState: GraphState = {\r\n  countriesForFilter: [],\r\n  genotypesYearData: [],\r\n  drugsYearData: [],\r\n  genotypesDrugsData: [],\r\n  genotypesDrugClassesData: [],\r\n  distributionGraphView: 'number',\r\n  drugResistanceGraphView: defaultDrugsForDrugResistanceGraph,\r\n  frequenciesGraphView: 'percentage',\r\n  frequenciesGraphSelectedGenotypes: [],\r\n  determinantsGraphView: 'percentage',\r\n  determinantsGraphDrugClass: 'Ciprofloxacin NS',\r\n};\r\n\r\nexport const graphSlice = createSlice({\r\n  name: 'graph',\r\n  initialState,\r\n  reducers: {\r\n    setCountriesForFilter: (state, action: PayloadAction<Array<string>>) => {\r\n      state.countriesForFilter = action.payload;\r\n    },\r\n    setGenotypesYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesYearData = action.payload;\r\n    },\r\n    setDrugsYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.drugsYearData = action.payload;\r\n    },\r\n    setDistributionGraphView: (state, action: PayloadAction<string>) => {\r\n      state.distributionGraphView = action.payload;\r\n    },\r\n    setDrugResistanceGraphView: (state, action: PayloadAction<Array<string>>) => {\r\n      state.drugResistanceGraphView = action.payload;\r\n    },\r\n    setFrequenciesGraphView: (state, action: PayloadAction<string>) => {\r\n      state.frequenciesGraphView = action.payload;\r\n    },\r\n    setFrequenciesGraphSelectedGenotypes: (state, action: PayloadAction<Array<string>>) => {\r\n      state.frequenciesGraphSelectedGenotypes = action.payload;\r\n    },\r\n    setGenotypesDrugsData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugsData = action.payload;\r\n    },\r\n    setDeterminantsGraphView: (state, action: PayloadAction<string>) => {\r\n      state.determinantsGraphView = action.payload;\r\n    },\r\n    setDeterminantsGraphDrugClass: (state, action: PayloadAction<string>) => {\r\n      state.determinantsGraphDrugClass = action.payload;\r\n    },\r\n    setGenotypesDrugClassesData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugClassesData = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setCountriesForFilter,\r\n  setDistributionGraphView,\r\n  setGenotypesYearData,\r\n  setDrugsYearData,\r\n  setDrugResistanceGraphView,\r\n  setFrequenciesGraphView,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n  setGenotypesDrugsData,\r\n  setDeterminantsGraphView,\r\n  setDeterminantsGraphDrugClass,\r\n  setGenotypesDrugClassesData,\r\n} = graphSlice.actions;\r\n\r\nexport default graphSlice.reducer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, CardContent, MenuItem, Select, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './DeterminantsGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Label,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Brush\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDeterminantsGraphDrugClass, setDeterminantsGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { drugClasses } from '../../../../util/drugs';\r\nimport { useEffect, useState } from 'react';\r\nimport { colorForDrugClasses, hoverColor } from '../../../../util/colorHelper';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number', graphLabel: 'Number of occurrences' },\r\n  { label: 'Percentage per genotype', value: 'percentage', graphLabel: '% Genomes' }\r\n];\r\n\r\nexport const DeterminantsGraph = () => {\r\n  const classes = useStyles();\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesDrugClassesData = useAppSelector((state) => state.graph.genotypesDrugClassesData);\r\n  const determinantsGraphView = useAppSelector((state) => state.graph.determinantsGraphView);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n\r\n  function getDomain() {\r\n    return determinantsGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (determinantsGraphView === 'number') {\r\n      return genotypesDrugClassesData[determinantsGraphDrugClass];\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let genotypeDrugClassesDataPercentage = structuredClone(genotypesDrugClassesData[determinantsGraphDrugClass] ?? []);\r\n    genotypeDrugClassesDataPercentage = genotypeDrugClassesDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDrugClassesDataPercentage;\r\n  }\r\n\r\n  function getTooltipData(label, payload) {\r\n    const data = genotypesDrugClassesData[determinantsGraphDrugClass].find((item) => item.name === label);\r\n\r\n    if (data) {\r\n      const tooltipData = [];\r\n\r\n      payload.forEach((item) => {\r\n        if (item.value === 0) {\r\n          return;\r\n        }\r\n\r\n        const count = data[item.name];\r\n        tooltipData.push({\r\n          name: item.name,\r\n          color: item.color,\r\n          count,\r\n          percentage: Number(((count / data.totalCount) * 100).toFixed(2))\r\n        });\r\n      });\r\n\r\n      tooltipData.sort((a, b) => a.name.localeCompare(b.name));\r\n      return tooltipData;\r\n    }\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setDeterminantsGraphView(event.target.value));\r\n  }\r\n\r\n  function handleChangeDrugClass(event) {\r\n    dispatch(setDeterminantsGraphDrugClass(event.target.value));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={getData()} maxBarSize={70}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDataOverflow={true} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === determinantsGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {(genotypesDrugClassesData[determinantsGraphDrugClass] ?? []).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`distribution-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                position={{ x: matches500 ? 0 : 60, y: matches500 ? 310 : 410 }}\r\n                cursor={{ fill: hoverColor }}\r\n                wrapperStyle={{ outline: 'none', zIndex: 1 }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    const data = getTooltipData(label, payload);\r\n\r\n                    return (\r\n                      <div className={classes.tooltip}>\r\n                        <div className={classes.tooltipTitle}>\r\n                          <Typography variant=\"h5\" fontWeight=\"600\">\r\n                            {label}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\">{`N = ${payload[0].payload.totalCount}`}</Typography>\r\n                        </div>\r\n                        <div className={classes.tooltipContent}>\r\n                          {data.map((item, index) => {\r\n                            return (\r\n                              <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                                <Box\r\n                                  className={classes.tooltipItemBox}\r\n                                  style={{\r\n                                    backgroundColor: item.color\r\n                                  }}\r\n                                />\r\n                                <div className={classes.tooltipItemStats}>\r\n                                  <Typography variant=\"body2\" fontWeight=\"500\" lineHeight={undefined}>\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    fontSize=\"12px\"\r\n                                    noWrap\r\n                                    lineHeight={undefined}\r\n                                  >{`N = ${item.count}`}</Typography>\r\n                                  <Typography\r\n                                    fontSize=\"10px\"\r\n                                    lineHeight={undefined}\r\n                                  >{`${item.percentage}%`}</Typography>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {colorForDrugClasses[determinantsGraphDrugClass]?.map((option, index) => (\r\n                <Bar\r\n                  key={`determinants-bar-${index}`}\r\n                  dataKey={option.name}\r\n                  name={option.name}\r\n                  stackId={0}\r\n                  fill={option.color}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesDrugClassesData, determinantsGraphView, determinantsGraphDrugClass, matches500]);\r\n\r\n  return (\r\n    <CardContent className={classes.determinantsGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\" className={classes.selectLabel}>\r\n            Select drug class\r\n          </Typography>\r\n          <Select\r\n            className={classes.select}\r\n            value={determinantsGraphDrugClass}\r\n            onChange={handleChangeDrugClass}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          >\r\n            {drugClasses.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'determinants-drug-classes'} value={option}>\r\n                  {option === 'Ciprofloxacin NS' ? 'Ciprofloxacin' : option}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\" className={classes.selectLabel}>\r\n            Data view\r\n          </Typography>\r\n          <Select\r\n            className={classes.select}\r\n            value={determinantsGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'determinants-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"RDWG\">\r\n          {plotChart}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  frequenciesGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    maxWidth: '920px',\r\n    width: '-webkit-fill-available'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px',\r\n    width: '100%',\r\n    alignItems: 'center'\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  dataViewSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  dataViewSelectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  genotypesSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  genotypesSelectButton: {\r\n    height: '20px',\r\n    fontSize: '10px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  genotypesMenuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  genotypesSelectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '460px'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltip: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#fff',\r\n    padding: '16px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px',\r\n    rowGap: '16px'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    width: '450px',\r\n\r\n    '@media (max-width: 1200px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 400px)': {\r\n      width: '275px'\r\n    }\r\n  },\r\n  tooltipItemWrapper: {\r\n    gridColumn: 'span 6',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { lightGrey } from '../../../util/colorHelper';\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Ampicillin':\r\n    case 'Aminoglycosides':\r\n      return 'rgb(129,178,210)';\r\n\r\n    case 'Azithromycin':\r\n    case 'Carbapenems':\r\n      return 'rgb(144,211,199)';\r\n\r\n    case 'Chloramphenicol':\r\n    case 'Cephalosporins (3rd gen.)':\r\n      return 'rgb(249,129,117)';\r\n\r\n    // case 'Co-trimoxazole':\r\n    case 'Trimethoprim-sulfamethoxazole':\r\n    case 'Cephalosporins (3rd gen.) + β-lactamase inhibitors':\r\n      return 'rgb(252,180,105)';\r\n\r\n    // case 'ESBL':\r\n    case 'Ceftriaxone':\r\n    case 'Colistin':\r\n      return '#DB90F0';\r\n\r\n    // case 'Fluoroquinolones (CipI)':\r\n    case 'Fosfomycin':\r\n      return '#98fb98';\r\n\r\n    // case 'Fluoroquinolones (CipNS)':\r\n    case 'Ciprofloxacin NS':\r\n    case 'Penicillins':\r\n      return 'rgb(255,236,120)';\r\n\r\n    // case 'Fluoroquinolones (CipR)':\r\n    case 'Ciprofloxacin R':\r\n    case 'Fluoroquinolones':\r\n      return '#9e9ac8';\r\n\r\n    case 'Sulphonamides':\r\n    case 'Sulfonamides':\r\n      return 'rgb(180,221,112)';\r\n\r\n    case 'Susceptible':\r\n      return lightGrey;\r\n\r\n    case 'Tetracyclines':\r\n    case 'Tetracycline':\r\n      return 'rgb(251,207,229)';\r\n\r\n    case 'Trimethoprim':\r\n      return 'rgb(102,102,255)';\r\n\r\n    case 'Penicillins + β-lactamase inhibitors':\r\n      return '#F3AAB9';\r\n\r\n    case 'Phenicols':\r\n      return '#FBCFBA';\r\n\r\n    case 'Tigecycline':\r\n      return '#54C2FF';\r\n\r\n    case 'XDR':\r\n      return '#000';\r\n\r\n    case 'MDR':\r\n      return '#B80F0F';\r\n\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CardContent,\r\n  Checkbox,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useStyles } from './FrequenciesGraphMUI';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip as ChartTooltip,\r\n  XAxis,\r\n  YAxis,\r\n  Label,\r\n  Legend,\r\n  Brush\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setFrequenciesGraphSelectedGenotypes, setFrequenciesGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { getColorForDrug } from '../graphColorHelper';\r\nimport { drugs } from '../../../../util/drugs';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage within genotype', value: 'percentage' }\r\n];\r\n\r\nexport const FrequenciesGraph = () => {\r\n  const classes = useStyles();\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesDrugsData = useAppSelector((state) => state.graph.genotypesDrugsData);\r\n  const frequenciesGraphView = useAppSelector((state) => state.graph.frequenciesGraphView);\r\n  const frequenciesGraphSelectedGenotypes = useAppSelector((state) => state.graph.frequenciesGraphSelectedGenotypes);\r\n\r\n  function getSelectGenotypeLabel(genotype) {\r\n    const percentage = Number(((genotype.resistantCount / genotype.totalCount) * 100).toFixed(2));\r\n\r\n    return `${genotype.name} (total N=${genotype.totalCount}, ${percentage}% resistant)`;\r\n  }\r\n\r\n  function getDomain() {\r\n    return frequenciesGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    const data = genotypesDrugsData.filter((genotype) => frequenciesGraphSelectedGenotypes.includes(genotype.name));\r\n\r\n    if (frequenciesGraphView === 'number') {\r\n      return data;\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let genotypeDataPercentage = structuredClone(data);\r\n    genotypeDataPercentage = genotypeDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDataPercentage;\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setFrequenciesGraphView(event.target.value));\r\n  }\r\n\r\n  function getTooltipData(label, payload) {\r\n    const data = genotypesDrugsData.find((item) => item.name === label);\r\n\r\n    if (data) {\r\n      const tooltipData = [];\r\n\r\n      payload.forEach((item) => {\r\n        if (item.value === 0) {\r\n          return;\r\n        }\r\n\r\n        const count = data[item.name];\r\n        tooltipData.push({\r\n          name: item.name,\r\n          color: item.color,\r\n          count,\r\n          percentage: Number(((count / data.totalCount) * 100).toFixed(2))\r\n        });\r\n      });\r\n\r\n      tooltipData.sort((a, b) => b.count - a.count);\r\n      return tooltipData;\r\n    }\r\n  }\r\n\r\n  function handleChangeSelectedGenotypes({ event = null, all = false }) {\r\n    if (all) {\r\n      dispatch(setFrequenciesGraphSelectedGenotypes([]));\r\n      return;\r\n    }\r\n\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n\r\n    if (frequenciesGraphSelectedGenotypes.length === 7 && value.length > 7) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(value));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={getData()}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === frequenciesGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {genotypesDrugsData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`frequencies-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                position={{ x: matches500 ? 0 : 60, y: matches500 ? 310 : 410 }}\r\n                cursor={{ fill: hoverColor }}\r\n                wrapperStyle={{ outline: 'none', zIndex: 1 }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    const data = getTooltipData(label, payload);\r\n\r\n                    return (\r\n                      <div className={classes.tooltip}>\r\n                        <div className={classes.tooltipTitle}>\r\n                          <Typography variant=\"h5\" fontWeight=\"600\">\r\n                            {label}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\">{`N = ${payload[0].payload.totalCount}`}</Typography>\r\n                        </div>\r\n                        <div className={classes.tooltipContent}>\r\n                          {data.map((item, index) => {\r\n                            return (\r\n                              <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                                <Box\r\n                                  className={classes.tooltipItemBox}\r\n                                  style={{\r\n                                    backgroundColor: item.color\r\n                                  }}\r\n                                />\r\n                                <div className={classes.tooltipItemStats}>\r\n                                  <Typography variant=\"body2\" fontWeight=\"500\" lineHeight={undefined}>\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    fontSize=\"12px\"\r\n                                    noWrap\r\n                                    lineHeight={undefined}\r\n                                  >{`N = ${item.count}`}</Typography>\r\n                                  <Typography\r\n                                    fontSize=\"10px\"\r\n                                    lineHeight={undefined}\r\n                                  >{`${item.percentage}%`}</Typography>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {drugs.map((option, index) => (\r\n                <Bar key={`frequencies-bar-${index}`} dataKey={option} fill={getColorForDrug(option)} />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesDrugsData, frequenciesGraphView, frequenciesGraphSelectedGenotypes, matches500]);\r\n\r\n  return (\r\n    <CardContent className={classes.frequenciesGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.labelWrapper}>\r\n          <Typography variant=\"caption\">Data view</Typography>\r\n          <Tooltip title=\"Select up to 7 genotypes\" placement=\"top\">\r\n            <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Select\r\n            className={classes.select}\r\n            value={frequenciesGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.dataViewSelectInput }}\r\n            MenuProps={{ classes: { list: classes.dataViewSelectMenu } }}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'frequencies-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          <Select\r\n            className={classes.select}\r\n            multiple\r\n            value={frequenciesGraphSelectedGenotypes}\r\n            onChange={(event) => handleChangeSelectedGenotypes({ event })}\r\n            displayEmpty\r\n            endAdornment={\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={classes.genotypesSelectButton}\r\n                onClick={() => handleChangeSelectedGenotypes({ all: true })}\r\n                disabled={frequenciesGraphSelectedGenotypes.length === 0}\r\n                color=\"error\"\r\n              >\r\n                Clear All\r\n              </Button>\r\n            }\r\n            inputProps={{ className: classes.genotypesSelectInput }}\r\n            MenuProps={{ classes: { paper: classes.genotypesMenuPaper, list: classes.genotypesSelectMenu } }}\r\n            renderValue={(selected) => <div>{`${selected.length} of ${genotypesDrugsData.length} selected`}</div>}\r\n          >\r\n            {genotypesDrugsData.map((genotype, index) => (\r\n              <MenuItem key={`frequencies-option-${index}`} value={genotype.name}>\r\n                <Checkbox checked={frequenciesGraphSelectedGenotypes.indexOf(genotype.name) > -1} />\r\n                <ListItemText primary={getSelectGenotypeLabel(genotype)} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"RFWG\">\r\n          {plotChart}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drugResistanceGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    height: '100%',\r\n    maxWidth: '920px',\r\n    width: '-webkit-fill-available'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '70%',\r\n    alignItems: 'center',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px',\r\n    paddingBottom: '4px',\r\n    width: '100%'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  selectButton: {\r\n    height: '20px',\r\n    fontSize: '10px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '460px'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltip: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#fff',\r\n    padding: '16px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px',\r\n    rowGap: '16px'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    width: '450px',\r\n\r\n    '@media (max-width: 1200px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 400px)': {\r\n      width: '275px'\r\n    }\r\n  },\r\n  tooltipItemWrapper: {\r\n    gridColumn: 'span 6',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CardContent,\r\n  Checkbox,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useStyles } from './DrugResistanceGraphMUI';\r\nimport {\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  LineChart,\r\n  Line,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDrugResistanceGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { drugsForDrugResistanceGraph } from '../../../../util/drugs';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { getColorForDrug } from '../graphColorHelper';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\n\r\nexport const DrugResistanceGraph = () => {\r\n  const classes = useStyles();\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const drugResistanceGraphView = useAppSelector((state) => state.graph.drugResistanceGraphView);\r\n  const drugsYearData = useAppSelector((state) => state.graph.drugsYearData);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n\r\n  function getData() {\r\n    const exclusions = ['name', 'count'];\r\n    let drugDataPercentage = structuredClone(drugsYearData);\r\n    drugDataPercentage = drugDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.count) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return drugDataPercentage;\r\n  }\r\n\r\n  function getTooltipData(label, payload) {\r\n    const data = drugsYearData.find((item) => item.name === label);\r\n\r\n    if (data) {\r\n      const tooltipData = [];\r\n\r\n      payload.forEach((item) => {\r\n        if (item.value === 0) {\r\n          return;\r\n        }\r\n\r\n        const count = data[item.name];\r\n        tooltipData.push({\r\n          name: item.name,\r\n          color: item.color,\r\n          count,\r\n          percentage: Number(((count / data.count) * 100).toFixed(2))\r\n        });\r\n      });\r\n\r\n      tooltipData.sort((a, b) => b.count - a.count);\r\n      return tooltipData;\r\n    }\r\n  }\r\n\r\n  function handleChangeDrugsView({ event = null, all = false }) {\r\n    let newValues = [];\r\n\r\n    if (all) {\r\n      if (drugResistanceGraphView.length === drugsForDrugResistanceGraph.length) {\r\n        newValues = [];\r\n      } else {\r\n        newValues = drugsForDrugResistanceGraph.slice();\r\n      }\r\n    } else {\r\n      const {\r\n        target: { value }\r\n      } = event;\r\n      newValues = value;\r\n    }\r\n\r\n    newValues.sort((a, b) => a.localeCompare(b));\r\n    dispatch(setDrugResistanceGraphView(newValues));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      const doc = document.getElementById('DRT');\r\n      const lines = doc.getElementsByClassName('recharts-line');\r\n\r\n      for (let index = 0; index < lines.length; index++) {\r\n        const hasValue = drugResistanceGraphView.some((value) => drugsForDrugResistanceGraph.indexOf(value) === index);\r\n        lines[index].style.display = hasValue ? 'block' : 'none';\r\n      }\r\n\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <LineChart data={getData()}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                tickCount={20}\r\n                allowDecimals={false}\r\n                padding={{ left: 20, right: 20 }}\r\n                dataKey=\"name\"\r\n                domain={['dataMin', 'dataMax']}\r\n                interval={'preserveStartEnd'}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis tickCount={6} padding={{ top: 20, bottom: 20 }} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Resistant (%)\r\n                </Label>\r\n              </YAxis>\r\n              {drugsYearData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`drug-resistance-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                position={{ x: matches500 ? 0 : 60, y: matches500 ? 310 : 410 }}\r\n                cursor={{ fill: hoverColor }}\r\n                wrapperStyle={{ outline: 'none', zIndex: 1 }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    const data = getTooltipData(label, payload);\r\n\r\n                    return (\r\n                      <div className={classes.tooltip}>\r\n                        <div className={classes.tooltipTitle}>\r\n                          <Typography variant=\"h5\" fontWeight=\"600\">\r\n                            {label}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\">{`N = ${payload[0].payload.count}`}</Typography>\r\n                        </div>\r\n                        <div className={classes.tooltipContent}>\r\n                          {data.map((item, index) => {\r\n                            return (\r\n                              <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                                <Box\r\n                                  className={classes.tooltipItemBox}\r\n                                  style={{\r\n                                    backgroundColor: item.color\r\n                                  }}\r\n                                />\r\n                                <div className={classes.tooltipItemStats}>\r\n                                  <Typography variant=\"body2\" fontWeight=\"500\" lineHeight={undefined}>\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    fontSize=\"12px\"\r\n                                    noWrap\r\n                                    lineHeight={undefined}\r\n                                  >{`N = ${item.count}`}</Typography>\r\n                                  <Typography\r\n                                    fontSize=\"10px\"\r\n                                    lineHeight={undefined}\r\n                                  >{`${item.percentage}%`}</Typography>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {drugsForDrugResistanceGraph.map((option, index) => (\r\n                <Line\r\n                  key={`drug-resistance-bar-${index}`}\r\n                  dataKey={option}\r\n                  strokeWidth={2}\r\n                  stroke={getColorForDrug(option)}\r\n                  connectNulls\r\n                  type=\"monotone\"\r\n                  activeDot={timeInitial === timeFinal ? true : false}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [drugsYearData, drugResistanceGraphView, matches500]);\r\n\r\n  return (\r\n    <CardContent className={classes.drugResistanceGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <div className={classes.labelWrapper}>\r\n          <Typography variant=\"caption\">Drugs view</Typography>\r\n          <Tooltip\r\n            title=\"The resistance frequencies are only shown for years with N≥10 genomes. When the data is insufficent per year to calculate annual frequencies, there are no data points to show.\"\r\n            placement=\"top\"\r\n          >\r\n            <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n          </Tooltip>\r\n        </div>\r\n        <Select\r\n          className={classes.select}\r\n          multiple\r\n          value={drugResistanceGraphView}\r\n          onChange={(event) => handleChangeDrugsView({ event })}\r\n          displayEmpty\r\n          endAdornment={\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.selectButton}\r\n              onClick={() => handleChangeDrugsView({ all: true })}\r\n              color={drugResistanceGraphView.length === drugsForDrugResistanceGraph.length ? 'error' : 'primary'}\r\n            >\r\n              {drugResistanceGraphView.length === drugsForDrugResistanceGraph.length ? 'Clear All' : 'Select All'}\r\n            </Button>\r\n          }\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n          renderValue={(selected) => (\r\n            <div>{`${selected.length} of ${drugsForDrugResistanceGraph.length} selected`}</div>\r\n          )}\r\n        >\r\n          {drugsForDrugResistanceGraph.map((drug, index) => (\r\n            <MenuItem key={`drug-resistance-option-${index}`} value={drug}>\r\n              <Checkbox checked={drugResistanceGraphView.indexOf(drug) > -1} />\r\n              <ListItemText primary={drug} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"DRT\">\r\n          {plotChart}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  distributionGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    height: '100%',\r\n    maxWidth: '920px',\r\n    width: '-webkit-fill-available'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '70%',\r\n    alignItems: 'center',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  selectLabel: {\r\n    paddingBottom: '4px',\r\n    width: '100%'\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '460px'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltip: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#fff',\r\n    padding: '16px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px',\r\n    rowGap: '16px'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(10, 1fr)',\r\n    width: '540px',\r\n\r\n    '@media (max-width: 1400px)': {\r\n      gridTemplateColumns: 'repeat(12, 1fr)',\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 1200px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 400px)': {\r\n      width: '275px'\r\n    }\r\n  },\r\n  tooltipItemWrapper: {\r\n    gridColumn: 'span 2',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n\r\n    '@media (max-width: 1400px)': {\r\n      gridColumn: 'span 3'\r\n    },\r\n\r\n    '@media (max-width: 1200px)': {\r\n      gridColumn: 'span 4'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      gridColumn: 'span 3'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      gridColumn: 'span 4'\r\n    }\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Box, CardContent, MenuItem, Select, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './DistributionGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDistributionGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { getColorForGenotype, hoverColor } from '../../../../util/colorHelper';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage per year', value: 'percentage' }\r\n];\r\n\r\nexport const DistributionGraph = () => {\r\n  const classes = useStyles();\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const distributionGraphView = useAppSelector((state) => state.graph.distributionGraphView);\r\n  const genotypesYearData = useAppSelector((state) => state.graph.genotypesYearData);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n\r\n  function getDomain() {\r\n    return distributionGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (distributionGraphView === 'number') {\r\n      return genotypesYearData;\r\n    }\r\n\r\n    const exclusions = ['name', 'count'];\r\n    let genotypeDataPercentage = structuredClone(genotypesYearData);\r\n    genotypeDataPercentage = genotypeDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.count) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDataPercentage;\r\n  }\r\n\r\n  function getTooltipData(label, payload) {\r\n    const data = genotypesYearData.find((item) => item.name === label);\r\n\r\n    if (data) {\r\n      const tooltipData = [];\r\n\r\n      payload.forEach((item) => {\r\n        if (item.value === 0) {\r\n          return;\r\n        }\r\n\r\n        const count = data[item.name];\r\n        tooltipData.push({\r\n          name: item.name,\r\n          color: item.color,\r\n          count,\r\n          percentage: Number(((count / data.count) * 100).toFixed(2))\r\n        });\r\n      });\r\n\r\n      tooltipData.sort((a, b) => b.name.localeCompare(a.name));\r\n      return tooltipData;\r\n    }\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setDistributionGraphView(event.target.value));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={getData()} maxBarSize={70}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDataOverflow={true} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === distributionGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {genotypesYearData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`distribution-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                position={{ x: matches500 ? 0 : 60, y: matches500 ? 310 : 410 }}\r\n                cursor={{ fill: hoverColor }}\r\n                wrapperStyle={{ outline: 'none', zIndex: 1 }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    const data = getTooltipData(label, payload);\r\n\r\n                    return (\r\n                      <div className={classes.tooltip}>\r\n                        <div className={classes.tooltipTitle}>\r\n                          <Typography variant=\"h5\" fontWeight=\"600\">\r\n                            {label}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\">{`N = ${payload[0].payload.count}`}</Typography>\r\n                        </div>\r\n                        <div className={classes.tooltipContent}>\r\n                          {data.map((item, index) => {\r\n                            return (\r\n                              <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                                <Box\r\n                                  className={classes.tooltipItemBox}\r\n                                  style={{\r\n                                    backgroundColor: item.color\r\n                                  }}\r\n                                />\r\n                                <div className={classes.tooltipItemStats}>\r\n                                  <Typography variant=\"body2\" fontWeight=\"500\" lineHeight={undefined}>\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    fontSize=\"12px\"\r\n                                    noWrap\r\n                                    lineHeight={undefined}\r\n                                  >{`N = ${item.count}`}</Typography>\r\n                                  <Typography\r\n                                    fontSize=\"10px\"\r\n                                    lineHeight={undefined}\r\n                                  >{`${item.percentage}%`}</Typography>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {genotypesForFilter.map((option, index) => (\r\n                <Bar\r\n                  key={`distribution-bar-${index}`}\r\n                  dataKey={option}\r\n                  name={option}\r\n                  stackId={0}\r\n                  fill={getColorForGenotype(option)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesYearData, distributionGraphView, matches500]);\r\n\r\n  return (\r\n    <CardContent className={classes.distributionGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <Typography variant=\"caption\" className={classes.selectLabel}>\r\n          Data view\r\n        </Typography>\r\n        <Select\r\n          className={classes.select}\r\n          value={distributionGraphView}\r\n          onChange={handleChangeDataView}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { list: classes.selectMenu } }}\r\n        >\r\n          {dataViewOptions.map((option, index) => {\r\n            return (\r\n              <MenuItem key={index + 'distribution-dataview'} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"GD\">\r\n          {plotChart}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","export const graphCards = [\r\n  {\r\n    title: 'Resistance frequencies within genotypes',\r\n    description: ['Top Genotypes (up to 7)'],\r\n    id: 'RFWG'\r\n  },\r\n  {\r\n    title: 'Drug resistance trends',\r\n    description: ['Data are plotted for years with N ≥ 10 genomes'],\r\n    id: 'DRT'\r\n  },\r\n  {\r\n    title: 'Resistance determinants within genotypes',\r\n    description: ['Top Genotypes (up to 10)'],\r\n    id: 'RDWG'\r\n  },\r\n  {\r\n    title: 'Genotype distribution',\r\n    description: [],\r\n    id: 'GD'\r\n  }\r\n];\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    gridColumn: 'span 12',\r\n\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    rowGap: '8px'\r\n  },\r\n  selectLabel: {\r\n    paddingTop: '16px'\r\n  },\r\n  selectInput: {\r\n    fontSize: '16px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start',\r\n    minWidth: '250px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '16px'\r\n    }\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useStyles } from './SelectCountryMUI';\r\nimport { Card, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice';\r\n\r\nexport const SelectCountry = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const countriesForFilter = useAppSelector((state) => state.graph.countriesForFilter);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n\r\n  function handleChange(event) {\r\n    dispatch(setActualCountry(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={0}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h5\" fontWeight={700} textAlign=\"center\">\r\n          {`Now showing: ${dataset} data from ${actualCountry === 'All' ? 'all countries' : actualCountry} from ${\r\n            actualTimeInitial || 'year'\r\n          } to ${actualTimeFinal || 'year'}`}\r\n        </Typography>\r\n        <Typography className={classes.selectLabel} variant=\"subtitle1\" fontWeight={500}>\r\n          Select country (or click map)\r\n        </Typography>\r\n        <Select\r\n          variant=\"standard\"\r\n          value={actualCountry}\r\n          onChange={handleChange}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n        >\r\n          <MenuItem value=\"All\">All</MenuItem>\r\n          {countriesForFilter.map((country, index) => {\r\n            return (\r\n              <MenuItem key={index + 'mapview'} value={country}>\r\n                {country}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  downloadDataWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '16px 0px',\r\n    gridColumn: 'span 12',\r\n    columnGap: '20px',\r\n\r\n    '@media (max-width: 750px)': {\r\n      flexDirection: 'column',\r\n      rowGap: '8px'\r\n    }\r\n  },\r\n  button: {\r\n    color: '#fff !important',\r\n    textTransform: 'none !important',\r\n    paddingTop: '8px !important',\r\n    paddingBottom: '8px !important',\r\n    borderRadius: '100px !important',\r\n\r\n    '@media (max-width: 750px)': {\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/eu_flag.77134ad3.jpg\";","export function getSalmonellaTexts(date) {\r\n  return [\r\n    `This report was generated at ${date}, using TyphiNET (http://typhi.net), a data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch (http://pathogen.watch).`,\r\n    'TyphiNET data were last updated on October 02 2023. For code and further details please see: https://github.com/zadyson/TyphiNET.',\r\n    'The genotypes reported here are defined in Dyson & Holt (2021), J. Infect. Dis.',\r\n    'Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, Argimón et al. 2021, Nat. Commun.',\r\n    'Travel-associated cases are attributed to the country of travel, not the country of isolation (see Ingle et al. 2019, PLoS NTDs).',\r\n    'TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (http://typhi.net).',\r\n    \"This project has received funding from the the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the  European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.\"\r\n  ];\r\n}\r\n","import { Alert, Snackbar, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './DownloadDataMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\nimport { API_ENDPOINT } from '../../../constants';\r\nimport { useState } from 'react';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { PictureAsPdf, TableChart } from '@mui/icons-material';\r\nimport { setPosition } from '../../../stores/slices/mapSlice';\r\nimport jsPDF from 'jspdf';\r\nimport LogoImg from '../../../assets/img/logo-typhinet-prod.png';\r\nimport EUFlagImg from '../../../assets/img/eu_flag.jpg';\r\nimport moment from 'moment';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport { mapLegends } from '../../../util/mapLegends';\r\nimport { imgOnLoadPromise } from '../../../util/imgOnLoadPromise';\r\nimport { graphCards } from '../../../util/graphCards';\r\nimport domtoimage from 'dom-to-image';\r\nimport { drugs } from '../../../util/drugs';\r\nimport { getColorForDrug } from '../Graphs/graphColorHelper';\r\nimport { colorForDrugClasses, getColorForGenotype } from '../../../util/colorHelper';\r\nimport { getSalmonellaTexts } from '../../../util/reportInfoTexts';\r\n\r\nconst columnsToRemove = [\r\n  'azith_pred_pheno',\r\n  'ACCESSION',\r\n  'COUNTRY_ONLY',\r\n  'REGION_IN_COUNTRY',\r\n  'LOCATION',\r\n  'ACCURACY',\r\n  'LATITUDE',\r\n  'LONGITUDE',\r\n  'REFERENCE',\r\n  'MLST ST (EnteroBase)',\r\n  'MLST PROFILE (EnteroBase)',\r\n  'GENOTYPHI SNPs CALLED',\r\n  'Genome ID',\r\n  'Version',\r\n  'Organism Name',\r\n  'Organism ID',\r\n  'Species Name',\r\n  'Species ID',\r\n  'Genus Name',\r\n  'Genus ID',\r\n  'Reference ID',\r\n  'Matching Hashes',\r\n  'p-Value',\r\n  'Mash Distance',\r\n  // 'cip_pred_pheno',\r\n  'dcs_category',\r\n  'amr_category',\r\n  'num_qrdr',\r\n  'num_acrb',\r\n  'ESBL_category',\r\n  'chloramphenicol_category',\r\n  'tetracycline_category',\r\n  'cip_pheno_qrdr_gene',\r\n  'dcs_mechanisms',\r\n  'num_amr_genes',\r\n  'dfra_any',\r\n  'sul_any',\r\n  'co_trim',\r\n  'GENOTYPE_SIMPLE',\r\n  'h58_genotypes',\r\n  'COUNTRY OF ORIGIN',\r\n  'AGE',\r\n  'TRAVEL COUNTRY',\r\n  'TRAVEL ASSOCIATED'\r\n];\r\n\r\nexport const DownloadData = () => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n  const [loadingCSV, setLoadingCSV] = useState(false);\r\n  const [loadingPDF, setLoadingPDF] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const listPIMD = useAppSelector((state) => state.dashboard.listPMID);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const actualGenomes = useAppSelector((state) => state.dashboard.actualGenomes);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  async function handleClickDownloadDatabase() {\r\n    setLoadingCSV(true);\r\n    await axios\r\n      .get(`${API_ENDPOINT}file/download`)\r\n      .then((res) => {\r\n        let indexes = [];\r\n        let csv = res.data.split('\\n');\r\n        let lines = [];\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',');\r\n          lines.push(line);\r\n        }\r\n        lines[0].forEach((curr, index) => {\r\n          if (curr === 'cip_pred_pheno') {\r\n            lines[0][index] = 'Cip';\r\n          }\r\n        });\r\n\r\n        for (let index = 0; index < columnsToRemove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(columnsToRemove[index]);\r\n          indexes.push(currentIndex);\r\n        }\r\n        indexes.sort();\r\n        indexes.reverse();\r\n\r\n        let newLines = [];\r\n        for (let j = 0; j < lines.length; j++) {\r\n          let aux = [];\r\n          for (let i = 0; i < lines[j].length; i++) {\r\n            if (!indexes.includes(i)) {\r\n              aux.push(lines[j][i]);\r\n            }\r\n          }\r\n          newLines.push(aux);\r\n        }\r\n\r\n        let newCSV = '';\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = '';\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index];\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += ',';\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += '\\n';\r\n          }\r\n          newCSV += aux;\r\n        }\r\n\r\n        download(newCSV, 'Database.csv');\r\n      })\r\n      .finally(() => {\r\n        setLoadingCSV(false);\r\n      });\r\n  }\r\n\r\n  function formatDate(date) {\r\n    return moment(date).format('ddd MMM DD YYYY HH:mm');\r\n  }\r\n\r\n  function drawFooter({ document, pageHeight, pageWidth, date }) {\r\n    document.setFontSize(10);\r\n    document.line(0, pageHeight - 26, pageWidth, pageHeight - 24);\r\n    document.text(`Source: amr.net [${date}]`, pageWidth / 2, pageHeight - 10, { align: 'center' });\r\n  }\r\n\r\n  function drawLegend({ id = null, legendData, document, factor, rectY, isGenotype = false, isDrug = false, xSpace }) {\r\n    legendData.forEach((legend, i) => {\r\n      const yFactor = (i % factor) * 10;\r\n      const xFactor = Math.floor(i / factor) * xSpace;\r\n\r\n      document.setFillColor(isGenotype ? getColorForGenotype(legend) : isDrug ? getColorForDrug(legend) : legend.color);\r\n      document.circle(50 + xFactor, rectY + 10 + yFactor, 2.5, 'F');\r\n\r\n      if (id === 'CERDT' && i < 2) {\r\n        if (i === 0) {\r\n          document.setFont(undefined, 'bold');\r\n        } else {\r\n          document.setFont(undefined, 'normal');\r\n        }\r\n      }\r\n      document.text(\r\n        isGenotype || isDrug ? legend.replaceAll('β', 'B') : legend.name,\r\n        56 + xFactor,\r\n        rectY + 12 + yFactor\r\n      );\r\n    });\r\n  }\r\n\r\n  async function handleClickDownloadPDF() {\r\n    setLoadingPDF(true);\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n\r\n    try {\r\n      const doc = new jsPDF({ unit: 'px', format: 'a4' });\r\n      const pageWidth = doc.internal.pageSize.getWidth();\r\n      const pageHeight = doc.internal.pageSize.getHeight();\r\n      const date = formatDate(new Date());\r\n\r\n      // Logo\r\n      const logo = new Image();\r\n      logo.src = LogoImg;\r\n      const logoWidth = 80;\r\n      doc.addImage(logo, 'PNG', 16, 16, logoWidth, 34);\r\n\r\n      // Title and Date\r\n      doc.setFontSize(16).setFont(undefined, 'bold');\r\n      doc.text(`TyphiNET Report - ${globalOverviewLabel.fullLabel}`, pageWidth / 2, 34, { align: 'center' });\r\n      doc.setFontSize(12).setFont(undefined, 'normal');\r\n      doc.text(date, pageWidth / 2, 48, { align: 'center' });\r\n\r\n      const texts = getSalmonellaTexts(date);\r\n\r\n      // Info\r\n      doc.text(texts[0], 16, 85, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[1], 16, 125, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[2], 16, 153, {\r\n        align: 'justify',\r\n        maxWidth: pageWidth - 36\r\n      });\r\n      doc.text(texts[3], 16, 169, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[4], 16, 197, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[5], 16, 225, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[6], 16, 277, { align: 'justify', maxWidth: pageWidth - 36 });\r\n\r\n      const euFlag = new Image();\r\n      euFlag.src = EUFlagImg;\r\n      doc.addImage(euFlag, 'JPG', 208, 290, 12, 8);\r\n\r\n      if (actualCountry !== 'All') {\r\n        doc.text(\r\n          `Studies contributing genomes representing infections originating from ${actualCountry} have the following PubMed IDs (PMIDs): ${listPIMD.join(\r\n            ', '\r\n          )}.`,\r\n          16,\r\n          317,\r\n          { align: 'justify', maxWidth: pageWidth - 36 }\r\n        );\r\n      }\r\n\r\n      drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n      // Map\r\n      doc.addPage();\r\n      drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n      doc.setFontSize(16).setFont(undefined, 'bold');\r\n      doc.text(`Global Overview of ${globalOverviewLabel.fullLabel}`, pageWidth / 2, 24, { align: 'center' });\r\n      doc.setFontSize(12).setFont(undefined, 'normal');\r\n      doc.text(`Total: ${actualGenomes} genomes`, pageWidth / 2, 40, { align: 'center' });\r\n      doc.text(`Country: ${actualCountry}`, pageWidth / 2, 52, { align: 'center' });\r\n      doc.text(`Time Period: ${actualTimeInitial} to ${actualTimeFinal}`, pageWidth / 2, 64, { align: 'center' });\r\n      doc.line(16, 76, pageWidth - 16, 76);\r\n\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text('Map Info', 16, 96);\r\n      doc.setFont(undefined, 'normal');\r\n      const actualMapView = mapLegends.find((x) => x.value === mapView).label;\r\n      doc.text(`Map View: ${actualMapView}`, 16, 108);\r\n      doc.text(`Dataset: ${dataset}${dataset === 'All' ? ' (local + travel)' : ''}`, 16, 120);\r\n\r\n      await svgAsPngUri(document.getElementById('global-overview-map'), {\r\n        scale: 4,\r\n        backgroundColor: 'white',\r\n        width: 1200,\r\n        left: -200\r\n      }).then(async (uri) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        const mapImg = document.createElement('img');\r\n        const mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        canvas.width = 4800;\r\n        canvas.height = 2400;\r\n        ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n\r\n        const img = canvas.toDataURL('image/png');\r\n        doc.addImage(img, 'PNG', 0, 128, pageWidth, 223);\r\n      });\r\n\r\n      const mapLegend = new Image();\r\n      let legendWidth = 58.85;\r\n\r\n      switch (mapView) {\r\n        case 'Dominant Genotype':\r\n          legendWidth = 414.21;\r\n          mapLegend.src = 'legends/MapView_DominantGenotype.png';\r\n          break;\r\n        case 'No. Samples':\r\n          mapLegend.src = 'legends/MapView_NoSamples.png';\r\n          break;\r\n        // case 'Sensitive to all drugs':\r\n        case 'Susceptible to all drugs':\r\n          mapLegend.src = 'legends/MapView_Sensitive.png';\r\n          break;\r\n        default:\r\n          mapLegend.src = 'legends/MapView_Others.png';\r\n          break;\r\n      }\r\n      if (mapView === 'Dominant Genotype') {\r\n        doc.addImage(mapLegend, 'PNG', pageWidth / 2 - legendWidth / 2, 351, legendWidth, 47);\r\n      } else {\r\n        doc.addImage(mapLegend, 'PNG', 16, 351, legendWidth, 47);\r\n      }\r\n\r\n      // Graphs\r\n      const drugClassesBars = colorForDrugClasses[determinantsGraphDrugClass];\r\n      const drugClassesFactor = Math.ceil(drugClassesBars.length / 3);\r\n      const genotypesFactor = Math.ceil(genotypesForFilter.length / 6);\r\n\r\n      for (let index = 0; index < graphCards.length; index++) {\r\n        doc.addPage();\r\n        drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n        const title = `${graphCards[index].title}${\r\n          graphCards[index].id === 'RDWG' ? `: ${determinantsGraphDrugClass}` : ''\r\n        }`;\r\n        doc.setFontSize(12).setFont(undefined, 'bold');\r\n        doc.text(title, 16, 24);\r\n        doc.setFont(undefined, 'normal');\r\n        doc.setFontSize(10);\r\n        doc.text(graphCards[index].description.join(' / ').replaceAll('≥', '>='), 16, 36);\r\n        doc.setFontSize(12);\r\n        doc.text(`Total: ${actualGenomes} genomes`, 16, 54);\r\n        doc.text(`Country: ${actualCountry}`, 16, 66);\r\n        doc.text(`Time Period: ${actualTimeInitial} to ${actualTimeFinal}`, 16, 78);\r\n        doc.text(`Dataset: ${dataset}${dataset === 'All' ? ' (local + travel)' : ''}`, 16, 90);\r\n\r\n        const graphImg = document.createElement('img');\r\n        const graphImgPromise = imgOnLoadPromise(graphImg);\r\n        graphImg.src = await domtoimage.toPng(document.getElementById(graphCards[index].id), { bgcolor: 'white' });\r\n        await graphImgPromise;\r\n        if (graphImg.width <= 741) {\r\n          doc.addImage(graphImg, 'PNG', 16, 110);\r\n        } else {\r\n          doc.addImage(graphImg, 'PNG', 16, 110, pageWidth - 32, 271);\r\n        }\r\n\r\n        doc.setFillColor(255, 255, 255);\r\n        const rectY = matches500 ? 300 : graphImg.width <= 741 ? 360 : 320;\r\n        doc.rect(0, rectY, pageWidth, 200, 'F');\r\n\r\n        doc.setFontSize(9);\r\n        if (['RFWG', 'DRT'].includes(graphCards[index].id)) {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: drugs,\r\n            factor: 8,\r\n            rectY,\r\n            xSpace: 190,\r\n            isDrug: true\r\n          });\r\n        } else if (graphCards[index].id === 'RDWG') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: drugClassesBars,\r\n            factor: drugClassesFactor,\r\n            rectY,\r\n            xSpace: 127\r\n          });\r\n        } else if (graphCards[index].id === 'GD') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: genotypesForFilter,\r\n            factor: genotypesFactor,\r\n            rectY,\r\n            xSpace: 65,\r\n            isGenotype: true\r\n          });\r\n        }\r\n      }\r\n\r\n      doc.save('TyphiNET - Report.pdf');\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setLoadingPDF(false);\r\n    }\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.downloadDataWrapper}>\r\n      <LoadingButton\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        onClick={handleClickDownloadDatabase}\r\n        loading={loadingCSV}\r\n        startIcon={<TableChart />}\r\n        loadingPosition=\"start\"\r\n      >\r\n        Download database (CSV format, 7.2MB)\r\n      </LoadingButton>\r\n      <LoadingButton\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        onClick={handleClickDownloadPDF}\r\n        loading={loadingPDF}\r\n        startIcon={<PictureAsPdf />}\r\n        loadingPosition=\"start\"\r\n      >\r\n        Download report from current view\r\n      </LoadingButton>\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import {\r\n  Alert,\r\n  Card,\r\n  CardActions,\r\n  CircularProgress,\r\n  IconButton,\r\n  Snackbar,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useStyles } from './GraphsMUI';\r\nimport { useAppSelector } from '../../../stores/hooks';\r\nimport { CameraAlt } from '@mui/icons-material';\r\nimport { DeterminantsGraph } from './DeterminantsGraph';\r\nimport { FrequenciesGraph } from './FrequenciesGraph';\r\nimport { DrugResistanceGraph } from './DrugResistanceGraph';\r\nimport { DistributionGraph } from './DistributionGraph';\r\nimport { useState } from 'react';\r\nimport { imgOnLoadPromise } from '../../../util/imgOnLoadPromise';\r\nimport domtoimage from 'dom-to-image';\r\nimport LogoImg from '../../../assets/img/logo-typhinet-prod.png';\r\nimport download from 'downloadjs';\r\nimport { drugs } from '../../../util/drugs';\r\nimport { getColorForDrug } from './graphColorHelper';\r\nimport { colorForDrugClasses, getColorForGenotype } from '../../../util/colorHelper';\r\nimport { graphCards } from '../../../util/graphCards';\r\nimport { SelectCountry } from '../SelectCountry';\r\nimport { DownloadData } from '../DownloadData';\r\n\r\nexport const Graphs = () => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [chartLoadings, setChartLoadings] = useState({\r\n    RFWG: false,\r\n    DRT: false,\r\n    RDWG: false,\r\n    GD: false\r\n  });\r\n\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  function drawLegend({\r\n    legendData,\r\n    context,\r\n    factor,\r\n    mobileFactor,\r\n    yPosition,\r\n    isGenotype = false,\r\n    isDrug = false,\r\n    xSpace\r\n  }) {\r\n    legendData.forEach((legend, i) => {\r\n      const yFactor = (i % factor) * 24;\r\n      const xFactor = Math.floor(i / factor) * xSpace;\r\n\r\n      context.fillStyle = isGenotype ? getColorForGenotype(legend) : isDrug ? getColorForDrug(legend) : legend.color;\r\n      context.beginPath();\r\n      context.arc(102 + xFactor, yPosition - mobileFactor + yFactor, 5, 0, 2 * Math.PI);\r\n      context.fill();\r\n      context.closePath();\r\n      context.fillStyle = 'black';\r\n      context.fillText(\r\n        isGenotype || isDrug ? legend : legend.name,\r\n        111 + xFactor,\r\n        yPosition + 4 - mobileFactor + yFactor\r\n      );\r\n    });\r\n  }\r\n\r\n  async function handleClickDownload(event, card) {\r\n    event.stopPropagation();\r\n    handleLoading(card.id, true);\r\n\r\n    try {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      const graph = document.getElementById(card.id);\r\n      const graphImg = document.createElement('img');\r\n      const graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      graphImg.src = await domtoimage.toPng(graph, { quality: 0.1, bgcolor: 'white' });\r\n      await graphImgPromise;\r\n\r\n      let heightFactor = 0,\r\n        drugClassesBars,\r\n        drugClassesFactor,\r\n        genotypesFactor;\r\n\r\n      if (['RFWG', 'DRT'].includes(card.id)) {\r\n        heightFactor = 250;\r\n      }\r\n      if (card.id === 'RDWG') {\r\n        drugClassesBars = colorForDrugClasses[determinantsGraphDrugClass];\r\n        drugClassesFactor = Math.ceil(drugClassesBars.length / 4);\r\n        heightFactor += drugClassesFactor * 22;\r\n      }\r\n      if (card.id === 'GD') {\r\n        genotypesFactor = Math.ceil(genotypesForFilter.length / 9);\r\n        heightFactor += genotypesFactor * 22;\r\n      }\r\n\r\n      canvas.width = 950;\r\n      canvas.height = graphImg.height + 220 + heightFactor;\r\n\r\n      ctx.fillStyle = 'white';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const logo = document.createElement('img');\r\n      const logoPromise = imgOnLoadPromise(logo);\r\n      logo.src = LogoImg;\r\n      await logoPromise;\r\n\r\n      ctx.drawImage(logo, 10, 10, 155, 65);\r\n      ctx.drawImage(graphImg, canvas.width / 2 - graphImg.width / 2, 220);\r\n\r\n      ctx.font = 'bold 18px Montserrat';\r\n      ctx.fillStyle = 'black';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(card.title, canvas.width / 2, 50);\r\n\r\n      ctx.font = '12px Montserrat';\r\n      ctx.fillText(card.description.join(' / '), canvas.width / 2, 72);\r\n\r\n      ctx.font = '14px Montserrat';\r\n      ctx.fillText(`Organism: ${globalOverviewLabel.fullLabel}`, canvas.width / 2, 110);\r\n      ctx.fillText(`Dataset: ${dataset}`, canvas.width / 2, 132);\r\n      ctx.fillText(`Time period: ${actualTimeInitial} to ${actualTimeFinal}`, canvas.width / 2, 154);\r\n      ctx.fillText(`Country: ${actualCountry}`, canvas.width / 2, 176);\r\n      if (card.id === 'RDWG') ctx.fillText(`Drug Class: ${determinantsGraphDrugClass}`, canvas.width / 2, 198);\r\n\r\n      ctx.fillStyle = 'white';\r\n      ctx.textAlign = 'start';\r\n      ctx.font = '12px Montserrat';\r\n\r\n      const mobileFactor = matches500 ? 100 : 0;\r\n      if (['RFWG', 'DRT'].includes(card.id)) {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: drugs,\r\n          context: ctx,\r\n          factor: 5,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 330,\r\n          isDrug: true\r\n        });\r\n      } else if (card.id === 'RDWG') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: drugClassesBars,\r\n          context: ctx,\r\n          factor: drugClassesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 208\r\n        });\r\n      } else if (card.id === 'GD') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: genotypesForFilter,\r\n          context: ctx,\r\n          factor: genotypesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          isGenotype: true,\r\n          xSpace: 87\r\n        });\r\n      }\r\n\r\n      const base64 = canvas.toDataURL();\r\n      await download(base64, `TyphiNET - ${globalOverviewLabel.fullLabel} - ${card.title}.png`);\r\n    } catch {\r\n      setShowAlert(true);\r\n    } finally {\r\n      handleLoading(card.id, false);\r\n    }\r\n  }\r\n\r\n  function handleLoading(id, value) {\r\n    setChartLoadings({ ...chartLoadings, [id]: value });\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.graphsCard} elevation={2}>\r\n      <SelectCountry />\r\n      {graphCards.map((card, index) => {\r\n        return (\r\n          <Card key={`graph-card-${index}`} className={classes.card} elevation={0}>\r\n            <CardActions disableSpacing className={classes.cardActions}>\r\n              <div className={classes.titleWrapper}>\r\n                <Typography fontSize=\"18px\" fontWeight=\"500\">\r\n                  {card.title}\r\n                </Typography>\r\n                <div className={classes.downloadWrapper}>\r\n                  <Tooltip title=\"Download Chart as PNG\" placement=\"top\">\r\n                    <span>\r\n                      <IconButton color=\"primary\" onClick={(event) => handleClickDownload(event, card)}>\r\n                        {chartLoadings[card.id] ? <CircularProgress color=\"primary\" size={24} /> : <CameraAlt />}\r\n                      </IconButton>\r\n                    </span>\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n              <Typography fontSize=\"10px\" component=\"span\">\r\n                {card.description.map((d, i) => (\r\n                  <div key={`description-${i}`}>{d}</div>\r\n                ))}\r\n              </Typography>\r\n            </CardActions>\r\n            <div className={classes.cardContent}>\r\n              {card.id === 'RFWG' && <FrequenciesGraph />}\r\n              {card.id === 'DRT' && <DrugResistanceGraph />}\r\n              {card.id === 'RDWG' && <DeterminantsGraph />}\r\n              {card.id === 'GD' && <DistributionGraph />}\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n      <DownloadData />\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </Card>\r\n  );\r\n};\r\n","// Drug rules for Salmonella, where the column has to have one of the values to validate the rule. For frequencies and\r\n// drug resistance graphs\r\nexport const drugRules = [\r\n  { key: 'Ampicillin', columnID: 'blaTEM-1D', values: ['1'] },\r\n  { key: 'Azithromycin', columnID: 'azith_pred_pheno', values: ['AzithR'] },\r\n  { key: 'Chloramphenicol', columnID: 'chloramphenicol_category', values: ['ChlR'] },\r\n  // { key: 'Co-trimoxazole', columnID: 'co_trim', values: ['1'] },\r\n  { key: 'Trimethoprim-sulfamethoxazole', columnID: 'co_trim', values: ['1'] },\r\n  // { key: 'ESBL', columnID: 'ESBL_category', values: ['ESBL'] },\r\n  { key: 'Ceftriaxone', columnID: 'ESBL_category', values: ['ESBL'] },\r\n  // { key: 'Fluoroquinolones (CipNS)', columnID: 'cip_pred_pheno', values: ['CipR', 'CipI'] },\r\n  { key: 'Ciprofloxacin NS', columnID: 'cip_pred_pheno', values: ['CipNS'] },\r\n  { key: 'Sulphonamides', columnID: 'sul_any', values: ['1'] },\r\n  { key: 'Susceptible', columnID: 'amr_category', values: ['No AMR detected'] },\r\n  { key: 'Tetracyclines', columnID: 'tetracycline_category', values: ['TetR'] },\r\n  { key: 'Trimethoprim', columnID: 'dfra_any', values: ['1'] }\r\n];\r\n\r\nexport const drugRulesForDrugResistanceGraph = [\r\n  { key: 'MDR', columnID: 'MDR', values: ['MDR'] },\r\n  { key: 'XDR', columnID: 'XDR', values: ['XDR'] }\r\n];\r\n\r\n// Salmonella drug classes rules for determinants graph\r\nexport const drugClassesRules = {\r\n  Ampicillin: [\r\n    {\r\n      name: 'blaTEM-1D',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'blaTEM-1D', value: '1' }]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'blaTEM-1D', value: '0' }]\r\n    }\r\n  ],\r\n  Azithromycin: [\r\n    {\r\n      name: 'acrB_R717Q + acrB_R717L',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717Q', value: '1' },\r\n        { columnID: 'acrB_R717L', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'acrB_R717Q',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717Q', value: '1' },\r\n        { columnID: 'acrB_R717L', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'acrB_R717L',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717L', value: '1' },\r\n        { columnID: 'acrB_R717Q', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'azith_pred_pheno', value: 'AzithS' }]\r\n    }\r\n  ],\r\n  Chloramphenicol: [\r\n    {\r\n      name: 'catA1 + cmlA',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'catA1', value: '1' },\r\n        { columnID: 'cmlA', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'catA1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'catA1', value: '1' },\r\n        { columnID: 'cmlA', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'cmlA',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'cmlA', value: '1' },\r\n        { columnID: 'catA1', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'chloramphenicol_category', value: 'ChlS' }]\r\n    }\r\n  ],\r\n  // 'Co-trimoxazole': [\r\n  'Trimethoprim-sulfamethoxazole': [\r\n    {\r\n      name: 'dfrA7 + dfrA14 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'co_trim', value: '0' }]\r\n    }\r\n  ],\r\n  // ESBL: [\r\n  Ceftriaxone: [\r\n    {\r\n      name: 'blaCTX-M-15',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-15_23', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaOXA-7',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaOXA-7', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaSHV-12',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaSHV-12', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaCTX-M-55',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-55', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'ESBL_category', value: 'Non-ESBL' }]\r\n    }\r\n  ],\r\n  // 'Fluoroquinolones (CipNS)': [\r\n  'Ciprofloxacin NS': [\r\n    {\r\n      name: '3_QRDR + qnrS (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '3_QRDR + qnrB (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '3_QRDR (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR' }]\r\n    },\r\n    {\r\n      name: '2_QRDR + qnrS (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '2_QRDR + qnrB (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '2_QRDR (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR' }]\r\n    },\r\n    {\r\n      name: '1_QRDR + qnrS (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '1_QRDR + qnrB (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '1_QRDR (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrS (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrB (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: 'None (CipS)',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR' }]\r\n    }\r\n  ],\r\n  Sulphonamides: [\r\n    {\r\n      name: 'sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul2', value: '1' },\r\n        { columnID: 'sul1', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'sul_any', value: '0' }]\r\n    }\r\n  ],\r\n  Tetracyclines: [\r\n    {\r\n      name: 'tetA(A)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(A)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(B)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(B)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(C)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(C)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(D)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(D)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'tetracycline_category', value: 'TetS' }]\r\n    }\r\n  ],\r\n  Trimethoprim: [\r\n    {\r\n      name: 'dfrA7 + dfrA14',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'dfra_any', value: '0' }]\r\n    }\r\n  ]\r\n};\r\n","// This filter is called after either dataset, initialYear, finalYear or country changes and if reset button is pressed.\r\n// And it returns the data filtered by the variables said before, also the list of unique genotypes, count of genotypes\r\n\r\nimport { drugClassesRules, drugRules, drugRulesForDrugResistanceGraph } from '../../util/drugClassesRules';\r\n\r\n// and count of genomes.\r\nexport function filterData({ data, dataset, actualTimeInitial, actualTimeFinal, actualCountry }) {\r\n  const checkDataset = (item) => dataset === 'All' || item.TRAVEL === dataset.toLowerCase();\r\n  const checkTime = (item) => {\r\n    return item.DATE >= actualTimeInitial && item.DATE <= actualTimeFinal;\r\n  };\r\n\r\n  const newData = data.filter((x) => checkDataset(x) && checkTime(x));\r\n  const genotypes = [...new Set(newData.map((x) => x.GENOTYPE))];\r\n  genotypes.sort((a, b) => a.localeCompare(b));\r\n\r\n  let genomesCount = newData.length;\r\n  let genotypesCount = genotypes.length;\r\n  let listPMID = [];\r\n\r\n  if (actualCountry !== 'All') {\r\n    const countryData = newData.filter((x) => getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry);\r\n    genomesCount = countryData.length;\r\n    listPMID = [...new Set(countryData.map((x) => x.PMID))];\r\n\r\n    const countryGenotypes = [...new Set(countryData.map((x) => x.GENOTYPE))];\r\n    genotypesCount = countryGenotypes.length;\r\n  }\r\n\r\n  return {\r\n    data: newData,\r\n    genotypes,\r\n    genomesCount,\r\n    genotypesCount,\r\n    listPMID\r\n  };\r\n}\r\n\r\n// Adjust the country names to its correct name\r\nexport function getCountryDisplayName(country) {\r\n  switch (country) {\r\n    case 'Democratic Republic of the Congo':\r\n      return 'Dem. Rep. Congo';\r\n    case 'Central African Republic':\r\n      return 'Central African Rep.';\r\n    case 'Ivory Coast':\r\n    case \"Cote d'Ivoire\":\r\n      return \"Côte d'Ivoire\";\r\n    case 'East Timor':\r\n      return 'Timor-Leste';\r\n    case 'State of Palestine':\r\n      return 'Palestine';\r\n    case 'Dominican Republic':\r\n      return 'Dominican Rep.';\r\n    case 'Viet Nam':\r\n      return 'Vietnam';\r\n    case 'USA':\r\n      return 'United States of America';\r\n    case 'Cape Verde':\r\n      return 'Cabo Verde';\r\n    case 'Turks and Caicos Islands':\r\n      return 'Turks and Caicos Is.';\r\n    case 'United Kingdom (England/Wales/N. Ireland)':\r\n    case 'United Kingdom (Scotland)':\r\n    case 'UK':\r\n      return 'United Kingdom';\r\n    case 'The Gambia':\r\n      return 'Gambia';\r\n    default:\r\n      return country;\r\n  }\r\n}\r\n\r\n// Get specific drug count, percentage and al its types for the map component\r\nfunction getMapStatsData({ countryData, columnKey, statsKey }) {\r\n  const data = {\r\n    items: [],\r\n    percentage: 0,\r\n    count: 0\r\n  };\r\n\r\n  const columnData = [...new Set(countryData.map((x) => x[columnKey]))];\r\n  data.items = columnData.map((name) => {\r\n    const count = countryData.filter((x) => x[columnKey] === name).length;\r\n    const percentage = Number(((count / countryData.length) * 100).toFixed(2));\r\n\r\n    if (name === statsKey) {\r\n      data.count = count;\r\n      data.percentage = percentage;\r\n    }\r\n    return { name, count, percentage };\r\n  });\r\n\r\n  if (statsKey === '-') {\r\n    data.count = countryData.length - data.count;\r\n    data.percentage = Number(((data.count / countryData.length) * 100).toFixed(2));\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// Get country data for map component, the data includes the name, count and drug stats\r\nexport function getMapData({ data, countries }) {\r\n  const mapData = countries.map((country) => {\r\n    const stats = {\r\n      GENOTYPE: {\r\n        items: [],\r\n        count: 0\r\n      }\r\n    };\r\n\r\n    const countryData = data.filter((x) => getCountryDisplayName(x.COUNTRY_ONLY) === country);\r\n\r\n    if (countryData.length === 0) {\r\n      return {};\r\n    }\r\n\r\n    const genotypes = [...new Set(countryData.map((x) => x.GENOTYPE))];\r\n    stats.GENOTYPE.count = genotypes.length;\r\n    stats.GENOTYPE.items = genotypes.map((genotype) => {\r\n      return {\r\n        name: genotype,\r\n        count: countryData.filter((x) => x.GENOTYPE === genotype).length\r\n      };\r\n    });\r\n    stats.GENOTYPE.items.sort((a, b) => (a.count <= b.count ? 1 : -1));\r\n\r\n    stats.H58 = getMapStatsData({ countryData, columnKey: 'GENOTYPE_SIMPLE', statsKey: 'H58' });\r\n    stats.MDR = getMapStatsData({ countryData, columnKey: 'MDR', statsKey: 'MDR' });\r\n    stats.XDR = getMapStatsData({ countryData, columnKey: 'XDR', statsKey: 'XDR' });\r\n    stats.AzithR = getMapStatsData({ countryData, columnKey: 'azith_pred_pheno', statsKey: 'AzithR' });\r\n    stats.Susceptible = getMapStatsData({ countryData, columnKey: 'amr_category', statsKey: 'No AMR detected' });\r\n    stats.CipR = getMapStatsData({ countryData, columnKey: 'cip_pred_pheno', statsKey: 'CipR' });\r\n    stats.CipNS = getMapStatsData({ countryData, columnKey: 'cip_pred_pheno', statsKey: 'CipNS' });\r\n\r\n    return {\r\n      name: country,\r\n      count: countryData.length,\r\n      stats\r\n    };\r\n  });\r\n\r\n  return mapData;\r\n}\r\n\r\n// Get data for distribution and drug resistance graphs\r\nexport function getYearsData({ data, years, actualCountry }) {\r\n  const drugsData = [];\r\n\r\n  const genotypesData = years.map((year) => {\r\n    const yearData = data.filter(\r\n      (x) => x.DATE === year && (actualCountry === 'All' || getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry)\r\n    );\r\n    const response = {\r\n      name: year.toString(),\r\n      count: yearData.length\r\n    };\r\n    let stats = {};\r\n\r\n    if (yearData.length > 0) {\r\n      const genotypes = [...new Set(yearData.map((x) => x.GENOTYPE))];\r\n\r\n      stats = genotypes.reduce((accumulator, currentValue) => {\r\n        const count = yearData.filter((x) => x.GENOTYPE === currentValue).length;\r\n        accumulator[currentValue] = count;\r\n\r\n        return accumulator;\r\n      }, {});\r\n\r\n      if (yearData.length >= 10) {\r\n        const drugStats = {};\r\n\r\n        drugRules.forEach((rule) => {\r\n          const drugData = yearData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n          drugStats[rule.key] = drugData.length;\r\n\r\n          if (rule.key === 'Ciprofloxacin NS') {\r\n            drugStats['Ciprofloxacin R'] = yearData.filter((x) => x[rule.columnID] === 'CipR').length;\r\n          }\r\n        });\r\n\r\n        drugRulesForDrugResistanceGraph.forEach((rule) => {\r\n          const drugData = yearData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n          drugStats[rule.key] = drugData.length;\r\n        });\r\n\r\n        drugsData.push({ ...response, ...drugStats });\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...response,\r\n      ...stats\r\n    };\r\n  });\r\n\r\n  return { genotypesData: genotypesData.filter((x) => x.count > 0), drugsData };\r\n}\r\n\r\n// Get data for frequencies and determinants graphs\r\nexport function getGenotypesData({ data, genotypes, actualCountry }) {\r\n  const genotypesDrugClassesData = {};\r\n\r\n  drugRules.forEach((drug) => {\r\n    if (drug.key !== 'Susceptible') {\r\n      genotypesDrugClassesData[drug.key] = [];\r\n    }\r\n  });\r\n\r\n  const genotypesDrugsData = genotypes.map((genotype) => {\r\n    const genotypeData = data.filter(\r\n      (x) =>\r\n        x.GENOTYPE === genotype && (actualCountry === 'All' || getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry)\r\n    );\r\n\r\n    const response = {\r\n      name: genotype,\r\n      totalCount: genotypeData.length,\r\n      resistantCount: 0\r\n    };\r\n\r\n    const drugClassResponse = {\r\n      name: genotype,\r\n      totalCount: genotypeData.length,\r\n      resistantCount: 0\r\n    };\r\n\r\n    drugRules.forEach((rule) => {\r\n      const drugData = genotypeData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n      response[rule.key] = drugData.length;\r\n\r\n      if (rule.key === 'Ciprofloxacin NS') {\r\n        response['Ciprofloxacin R'] = genotypeData.filter((x) => x[rule.columnID] === 'CipR').length;\r\n      }\r\n\r\n      if (rule.key !== 'Susceptible') {\r\n        const drugClass = { ...drugClassResponse };\r\n\r\n        drugClassesRules[rule.key].forEach((classRule) => {\r\n          const classRuleName = classRule.name;\r\n\r\n          drugClass[classRuleName] = genotypeData.filter((x) => {\r\n            return classRule.rules.every((r) => x[r.columnID] === r.value);\r\n          }).length;\r\n\r\n          if (classRule.susceptible) {\r\n            drugClass.resistantCount = drugClass.totalCount - drugClass[classRuleName];\r\n          }\r\n        });\r\n\r\n        genotypesDrugClassesData[rule.key].push(drugClass);\r\n      }\r\n    });\r\n\r\n    response.resistantCount = response.totalCount - response['Susceptible'];\r\n    return response;\r\n  });\r\n\r\n  genotypesDrugsData.sort((a, b) => b.resistantCount - a.resistantCount);\r\n  Object.keys(genotypesDrugClassesData).forEach((key) => {\r\n    genotypesDrugClassesData[key].sort((a, b) => b.resistantCount - a.resistantCount);\r\n    genotypesDrugClassesData[key] = genotypesDrugClassesData[key].slice(0, 10);\r\n  });\r\n\r\n  return { genotypesDrugsData, genotypesDrugClassesData };\r\n}\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  resetButton: {\r\n    position: 'fixed',\r\n    right: 16,\r\n    bottom: 0,\r\n    padding: '16px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      right: 8,\r\n      padding: '8px'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { RestartAlt } from '@mui/icons-material';\r\nimport { useStyles } from './ResetButtonMUI';\r\nimport { Fab, Tooltip, useMediaQuery } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setActualTimeFinal, setActualTimeInitial, setCanGetData } from '../../../stores/slices/dashboardSlice';\r\nimport { setDataset, setMapView, setPosition } from '../../../stores/slices/mapSlice';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice';\r\nimport {\r\n  setDeterminantsGraphDrugClass,\r\n  setDeterminantsGraphView,\r\n  setDistributionGraphView,\r\n  setDrugResistanceGraphView,\r\n  setFrequenciesGraphView\r\n} from '../../../stores/slices/graphSlice';\r\nimport { defaultDrugsForDrugResistanceGraph } from '../../../util/drugs';\r\n\r\nexport const ResetButton = () => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width: 500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n\r\n  function handleClick() {\r\n    dispatch(setCanGetData(false));\r\n    dispatch(setDataset('All'));\r\n    dispatch(setActualTimeInitial(timeInitial));\r\n    dispatch(setActualTimeFinal(timeFinal));\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n    dispatch(setActualCountry('All'));\r\n\r\n    dispatch(setMapView('CipNS'));\r\n    dispatch(setDrugResistanceGraphView(defaultDrugsForDrugResistanceGraph));\r\n    dispatch(setDeterminantsGraphDrugClass('Ciprofloxacin NS'));\r\n\r\n    dispatch(setFrequenciesGraphView('percentage'));\r\n    dispatch(setDeterminantsGraphView('percentage'));\r\n    dispatch(setDistributionGraphView('number'));\r\n    dispatch(setCanGetData(true));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.resetButton}>\r\n      <Tooltip title=\"Reset Configurations\" placement=\"left\">\r\n        <span>\r\n          <Fab color=\"primary\" size={matches500 ? 'medium' : 'large'} onClick={handleClick}>\r\n            <RestartAlt sx={{ color: '#fff' }} />\r\n          </Fab>\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    padding: '24px !important',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '16px !important'\r\n    }\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify',\r\n    margin: '16px 0px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { useStyles } from './AboutMUI';\r\nimport euFlagImg from '../../assets/img/eu_flag.jpg';\r\n\r\nexport const About = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={2}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h5\" fontWeight={700}>\r\n          About TyphiNET\r\n        </Typography>\r\n\r\n        <div className={classes.paragraph}>\r\n          The TyphiNET dashboard collates antimicrobial resistance (AMR) and genotype (lineage) information extracted\r\n          from whole genome sequence (WGS) data from the bacterial pathogen <i> Salmonella</i> Typhi, the agent of\r\n          typhoid fever.\r\n        </div>\r\n\r\n        <div className={classes.paragraph}>\r\n          AMR determinants identified in the genome assemblies using Pathogenwatch are used to define drug resistance\r\n          variables as follows.Multidrug resistance(MDR): resistance determinants for chloramphenicol (<i>catA1</i> or{' '}\r\n          <i>cmlA</i>), ampicillin (<i>bla</i>TEM-1D, <i>bla</i>OXA-7), and co-trimoxazole (at least one <i>dfrA</i>{' '}\r\n          gene and at least one <i>sul</i> gene). Ciprofloxacin non-susceptible (CipI/R): one or more of the quinolone\r\n          resistance determining region(QRDR) mutations at <i>gyrA</i>-83, <i>gyrA</i>\r\n          -87, <i>parC</i>-80, <i>parC</i>-84, <i>gyrB</i>-464 or presence of a plasmid - mediated quinolone\r\n          resistance(PMQR) gene(<i>qnrB</i>, <i>qnrD</i> , <i>qnrS</i>). Ciprofloxacin resistant (CipR): QRDR triple\r\n          mutant (<i>gyrA</i>-83 and <i>gyrA</i>-87, together with either <i>parC</i>-80 or <i>parC</i>-84), or plasmid\r\n          - mediated quinolone resistance(PMQR) together with <i>gyrA</i>-83, <i>gyrA</i>\r\n          -87 and/or <i>gyrB</i>-464. Third - generation cephalosporin resistance (3 GCR): presence of an extended -\r\n          spectrum beta-lactamase(ESBL) (<i>bla</i>CTX-M-12, <i>bla</i>CTX-M-15, <i>bla</i>CTX-M-23, <i>bla</i>CTX-M-55,{' '}\r\n          <i>bla</i>SHV-12) or <i>ampC</i> gene.Extreme drug resistance(XDR): MDR plus CipR plus 3 GCR. Azithromycin\r\n          resistance(AziR): mutation at <i>acrB</i>-717 and/or gene <i>ereA</i>. See{' '}\r\n          <a href=\"https://www.nature.com/articles/s41467-021-23091-2\" target=\"_blank\" rel=\"noreferrer\">\r\n            Argimon et al, 2021\r\n          </a>{' '}\r\n          for details.\r\n        </div>\r\n\r\n        <div className={classes.paragraph}>\r\n          <b>Data:</b> Data are sourced regularly from Typhi{' '}\r\n          <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Pathogenwatch\r\n          </a>\r\n          , and filtered to include only genomes from unbiased sampling frames (e.g. routine or project - based enteric\r\n          fever surveillance, as opposed to AMR - focused sampling), based on curation by the{' '}\r\n          <a href=\"https://www.typhoidgenomics.org/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Global Typhoid Genomics Consortium\r\n          </a>\r\n          . The database can be downloaded using the button below.\r\n          <p>\r\n            <b>Documentation:</b> Full documentation for the dashboard is available{' '}\r\n            <a href=\"https://github.com/zadyson/TyphiNET/wiki\" target=\"_blank\" rel=\"noreferrer\">\r\n              here\r\n            </a>\r\n            .\r\n          </p>\r\n          Information on genotype definitions can be found in{' '}\r\n          <a\r\n            href=\"https://academic.oup.com/jid/article/224/Supplement_7/S775/6358992?login=true\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Dyson & Holt, 2021\r\n          </a>\r\n          .\r\n        </div>\r\n\r\n        <div className={classes.paragraph}>\r\n          <b>Team:</b> The TyphiNET dashboard is coordinated by{' '}\r\n          <a href=\"https://scholar.google.com.au/citations?hl=en&user=klhFnE0AAAAJ\" target=\"_blank\" rel=\"noreferrer\">\r\n            Dr Zoe Dyson\r\n          </a>\r\n          ,{' '}\r\n          <a href=\"https://scholar.google.com.au/citations?hl=en&user=O2dcz5MAAAAJ\" target=\"_blank\" rel=\"noreferrer\">\r\n            Dr Louise Cerdeira\r\n          </a>\r\n          &amp;{' '}\r\n          <a href=\"https://holtlab.net/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Prof Kat Holt\r\n          </a>\r\n          , with support from the Wellcome Trust (Open Research Fund, 219692/Z/19/Z), the European Union's Horizon 2020\r\n          research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.\r\n          <img className=\"euFlagImage\" src={euFlagImg} alt=\"EU_FLAG\" height=\"20\" />, the{' '}\r\n          <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">\r\n            London School of Hygiene and Tropical Medicine\r\n          </a>{' '}\r\n          &amp;{' '}\r\n          <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Monash University\r\n          </a>\r\n          .\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { MainLayout } from '../Layout';\r\nimport { Map } from '../Elements/Map';\r\nimport { Footer } from '../Elements/Footer';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useAppDispatch, useAppSelector } from '../../stores/hooks';\r\nimport {\r\n  setActualGenomes,\r\n  setActualGenotypes,\r\n  setGenotypesForFilter,\r\n  setListPMID,\r\n  setLoadingData,\r\n  setTotalGenomes,\r\n  setTotalGenotypes,\r\n  setYears\r\n} from '../../stores/slices/dashboardSlice.ts';\r\nimport { setMapData } from '../../stores/slices/mapSlice.ts';\r\nimport { Graphs } from '../Elements/Graphs';\r\nimport {\r\n  setCountriesForFilter,\r\n  setDrugsYearData,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n  setGenotypesDrugClassesData,\r\n  setGenotypesDrugsData,\r\n  setGenotypesYearData\r\n} from '../../stores/slices/graphSlice.ts';\r\nimport { filterData, getYearsData, getMapData, getGenotypesData, getCountryDisplayName } from './filters';\r\nimport { ResetButton } from '../Elements/ResetButton/ResetButton';\r\nimport { About } from '../About';\r\n\r\nexport const DashboardPage = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const countriesForFilter = useAppSelector((state) => state.graph.countriesForFilter);\r\n  const yearsForFilter = useAppSelector((state) => state.dashboard.years);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  // This function is only called once, after the csv is read. It gets all the static and dynamic data\r\n  // that came from the csv file and sets all the data the organism needs to show\r\n  function getInfoFromData(response) {\r\n    const responseData = response.data;\r\n    dispatch(setTotalGenomes(responseData.length));\r\n    dispatch(setActualGenomes(responseData.length));\r\n\r\n    const genotypes = [...new Set(responseData.map((x) => x.GENOTYPE))];\r\n    genotypes.sort((a, b) => a.localeCompare(b));\r\n    dispatch(setGenotypesForFilter(genotypes));\r\n\r\n    const years = [...new Set(responseData.map((x) => x.DATE))];\r\n    const countries = [...new Set(responseData.map((x) => getCountryDisplayName(x.COUNTRY_ONLY)))];\r\n\r\n    years.sort();\r\n    countries.sort();\r\n\r\n    dispatch(setTotalGenotypes(genotypes.length));\r\n    dispatch(setActualGenotypes(genotypes.length));\r\n    dispatch(setYears(years));\r\n    // dispatch(setTimeInitial(years[0]));\r\n    // dispatch(setActualTimeInitial(years[0]));\r\n    // dispatch(setTimeFinal(years[years.length - 1]));\r\n    // dispatch(setActualTimeFinal(years[years.length - 1]));\r\n    dispatch(setCountriesForFilter(countries));\r\n\r\n    dispatch(setMapData(getMapData({ data: responseData, countries })));\r\n\r\n    const genotypesData = getGenotypesData({ data: responseData, genotypes, actualCountry });\r\n    dispatch(setGenotypesDrugsData(genotypesData.genotypesDrugsData));\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n    dispatch(setGenotypesDrugClassesData(genotypesData.genotypesDrugClassesData));\r\n\r\n    const yearsData = getYearsData({\r\n      data: responseData,\r\n      years,\r\n      actualCountry\r\n    });\r\n\r\n    dispatch(setGenotypesYearData(yearsData.genotypesData));\r\n    dispatch(setDrugsYearData(yearsData.drugsData));\r\n\r\n    return responseData;\r\n  }\r\n\r\n  // This function reads the csv file\r\n  async function getData() {\r\n    dispatch(setLoadingData(true));\r\n\r\n    await axios\r\n      .get(`${API_ENDPOINT}filters/getDataFromCSV`)\r\n      .then((response) => {\r\n        const newData = getInfoFromData(response);\r\n        setData(newData);\r\n      })\r\n      .finally(() => {\r\n        dispatch(setLoadingData(false));\r\n      });\r\n  }\r\n\r\n  // This useEffect is called once when the website starts to get info for the dashboard\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // This useEffect is called everytime the main filters are changed, it does not need to read the csv file again.\r\n  // It filters accordingly to the filters give. Is also called when the reset button is pressed.\r\n  useEffect(() => {\r\n    if (data.length > 0 && canGetData) {\r\n      const filters = filterData({ data, dataset, actualTimeInitial, actualTimeFinal, actualCountry });\r\n      dispatch(setActualGenomes(filters.genomesCount));\r\n      dispatch(setActualGenotypes(filters.genotypesCount));\r\n      dispatch(setListPMID(filters.listPMID));\r\n\r\n      dispatch(setMapData(getMapData({ data: filters.data, countries: countriesForFilter })));\r\n\r\n      const genotypesData = getGenotypesData({\r\n        data: filters.data,\r\n        genotypes: genotypesForFilter,\r\n        actualCountry\r\n      });\r\n      dispatch(setGenotypesDrugsData(genotypesData.genotypesDrugsData));\r\n      dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n      dispatch(setGenotypesDrugClassesData(genotypesData.genotypesDrugClassesData));\r\n\r\n      const yearsData = getYearsData({\r\n        data: filters.data,\r\n        years: yearsForFilter,\r\n        actualCountry\r\n      });\r\n      dispatch(setGenotypesYearData(yearsData.genotypesData));\r\n      dispatch(setDrugsYearData(yearsData.drugsData));\r\n    }\r\n  }, [canGetData, dataset, actualTimeInitial, actualTimeFinal, actualCountry]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Map />\r\n      <Graphs />\r\n      <About />\r\n      <Footer />\r\n      <ResetButton />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport deashboardReducer from './slices/dashboardSlice';\r\nimport mapReducer from './slices/mapSlice';\r\nimport graphReducer from './slices/graphSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    dashboard: deashboardReducer,\r\n    map: mapReducer,\r\n    graph: graphReducer\r\n  },\r\n  middleware: (getDefaultMiddleware) => {\r\n    return getDefaultMiddleware({\r\n      serializableCheck: false\r\n    });\r\n  }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from '@mui/material';\r\nimport { Provider } from 'react-redux';\r\nimport { DashboardPage } from './components/Dashboard';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport { store } from './stores/store.ts';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Montserrat',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      '\"Roboto\"',\r\n      '\"Oxygen\"',\r\n      '\"Ubuntu\"',\r\n      '\"Cantarell\"',\r\n      '\"Fira Sans\"',\r\n      '\"Droid Sans\"',\r\n      '\"Helvetica Neue\"',\r\n      'sans-serif'\r\n    ].join(',')\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <div className=\"App\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<DashboardPage />} />\r\n            </Routes>\r\n          </div>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}