{"version":3,"sources":["assets/img/logo-typhinet.png","assets/img/logo-typhinet-prod.png","constants.js","util/colorHelper.js","pages/dashboard/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForAMR","amr","getColorForDrug","drug","getColorForIncType","incType","getColorForTetracyclines","tetA","useStyles","makeStyles","theme","formControlSelect","marginTop","spacing","marginBottom","minWidth","color","borderBottomColor","CustomSlider","withStyles","root","thumb","boxShadow","valueLabel","fontFamily","fontWeight","Slider","CustomCircularProgress","CircularProgress","CustomToggleButton","padding","selected","backgroundColor","ToggleButton","DashboardPage","classes","useState","coordinates","zoom","controlMapPosition","setControlMapPosition","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapSTADData","setWorldMapSTADData","worldMapXDRData","setWorldMapXDRData","worldMapDCSData","setWorldMapDCSData","worldMapAZITHData","setWorldMapAZITHData","worldMapCIPIData","setWorldMapCIPIData","worldMapCIPRData","setWorldMapCIPRData","worldMapDrugsData","setWorldMapDrugsData","worldMapAmrProfilesData","setWorldMapAmrProfilesData","worldMapPlasmidIncompatibilityTypeData","setWorldMapPlasmidIncompatibilityTypeData","plotAmrClassChart","setPlotAmrClassChart","plotDrugsAndGenotypesChart","setPlotDrugsAndGenotypesChart","plotPopulationStructureChart","setPlotPopulationStructureChart","plotDrugTrendsChart","setPlotDrugTrendsChart","captureControlMapInProgress","setCaptureControlMapInProgress","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","captureReportInProgress","setCaptureReportInProgress","tooltipContent","setTooltipContent","allCountries","setAllCountries","React","timePeriodRange","setTimePeriodRange","actualTimePeriodRange","setActualTimePeriodRange","countriesForFilter","setCountriesForFilter","actualCountry","setActualCountry","populationStructureFilter","setPopulationStructureFilter","RFWGFilter","setRFWGFilter","amrClassesForFilter","drtClassesForFilter","amrClassFilter","setAmrClassFilter","RDWAGDataviewFilter","setRDWAGDataviewFilter","drugTrendsChartData","setDrugTrendsChartData","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","chartMaxHeight","setChartMaxHeight","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","dataset","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","appLoading","setAppLoading","allGenotypes","setAllGenotypes","open","setOpen","open2","setOpen2","handleClose","handleClose2","desktop","mobile","middle","hoverColor","height","window","innerHeight","width","innerWidth","dimensions","setDimensions","useEffect","document","getElementsByClassName","style","overflow","remove","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","sort","a","b","localeCompare","genotypes","arraysEqual","a1","a2","JSON","stringify","axios","get","then","res","limits","data","min","max","countries","value","timeOutId","response","parseDataForGenotypeChart","finalPopulationStructureChartData","genomes","forEach","entry","some","g","GENOTYPE","push","e","name","YEAR","year","find","yearIndex","findIndex","undefined","length","sum","Object","entries","total","populationStructureChartSums","_year","highestSum","Math","ceil","parseDataForCountryMap","genotypesData","drugsData","amrData","finalCountries","samplesData","h58Data","mdrData","stadData","xdrData","incTypesData","dcsData","azithData","cipIData","cipRData","countData","array","elementToCount","parentName","childName","temp","country","countryIndex","parent","index","count","displayName","congoCountryIndex","centralAfricanRepublicCountryIndex","ivoryCoastCountryIndex","timorLesteCountryIndex","unshift","includes","percentage","round","toFixed","STADs","stad","type","parseFloat","MDRs","mdr","XDRs","xdr","DCSs","dcs","AZs","az","CipIs","cipIs","CipRs","cipRs","dataForCountingDrugs","DRUGS","DRUG","incTypes","filter","parseDataForAmrClassChart","finalChartData","maxSum","totalSum","genotypeIndex","GENE","element","keys","slice","key","obj","errorMargin","lowerValue","total2","toString","top10","parseDataForDrugTrendsChart","finalDrugTrendsChartData","finalDrugsAndGenotypesChartData","allDrugs","maxValue","drugsPercentage","aux","higherPercentage","item","genotypeChartResponse","drugTrendsChartResponse","classChartResponse","mapSamplesColorScale","domain","scaleLinear","range","mapRedColorScale","tooltip","useCallback","positionY","width1","width2","wrapperS","stroke","chart","position","y","x","wrapperStyle","cursor","fill","content","active","payload","label","reverse","border","display","flexDirection","fontSize","flexWrap","map","dataKey","alignItems","flex","marginLeft","wordWrap","quantities","imgOnLoadPromise","Promise","resolve","reject","onload","onerror","maxH","margin","top","bottom","right","strokeDasharray","left","interval","tick","allowDataOverflow","allowDecimals","angle","textAnchor","offset","props","overflowX","justifyContent","marginRight","borderRadius","flexShrink","paddingLeft","zIndex","stackId","teste","parse","barCategoryGap","amrClassChartTooltip","allowEscapeViewBox","armClassFilterComponent","info","dataAMR","layout","bars","barSize","fontsize","strokeWidth","cotrim","colors1","colors2","colors3","dot","connectNulls","stopLoading","id","names","brokenNames","ids","doc","jsPDF","unit","format","orientation","typhinetLogo","Image","src","typhinetLogoImg2","addImage","setFontSize","paragraph1","paragraph2","text","align","maxWidth","addPage","svgAsPngUri","getElementById","scale","uri","canvas","createElement","ctx","getContext","mapImg","mapImgPromise","drawImage","img","toDataURL","actualMapView","img2","img3","names2","legend","brush","graph","url","domtoimage","toPng","quality","bgcolor","dataUrl","subtitleH","imgWidth","API","getImageProperties","floor","texts","spaceBetween","img4","img5","save","graphImg","graphImgPromise","cHeight","logoHeight","legendHeight","filterHeight","subtitleHeight","imgHeight","DRTHeight","fillStyle","fillRect","font","textAlign","fillText","legendImg","legendImgPromise","typhinetLogoPromise","base64","download","textHeight","legendImgoPromise","centerWidth","h","w","capturePicture","cols_to_remove","indexes","csv","split","lines","line","currentIndex","indexOf","newLines","i","newCSV","dowloadBaseSpreadsheet","generateMapLegendOptions","percentageSteps","legends","className","Array","n","maxHeight","overflowY","renderMapLegend","FormControl","fullWidth","InputLabel","whiteSpace","Select","onChange","evt","target","MenuItem","typhinetLogoImg","alt","icon","faInfoCircle","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","data-tip","projectionConfig","rotate","center","onMoveEnd","geography","geographies","geo","sample","s","properties","NAME","d","darkGray","lineage","onMouseEnter","additionalInfo","samples","GENOTYPES","TOTAL","H58","MDR","DCS","CipI","CipR","AzithR","STAD","genotypeInfo","smallerThan20","isBiggerThan20","simpleGenotypeInfo","mdrInfo","stadInfo","xdrInfo","azInfo","cipIInfo","cipRInfo","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","size","newDataset","gutterBottom","valueLabelDisplay","Zoom","in","c","Tooltip","title","placement","faCrosshairs","pos","faPlus","faMinus","faCamera","thickness","dcsInfo","drugsInfo","amrProfilesInfo","incTypesInfo","substring","paddingBottom","paddingRight","paddingTop","alignSelf","amrClass","faTable","faFilePdf","href","rel","faEnvelope","faGithub","faTwitter","Fab","aria-label","faUndoAlt","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","URL","process","origin","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"q3xIAAe,MAA0B,0CCA1B,MAA0B,+C,SCA5BA,EAAe,6BCAfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACH,MAAO,UACT,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,UACL,IAAK,cACL,IAAK,aACH,MAAO,UACT,IAAK,UACL,IAAK,cACL,IAAK,cACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,QACE,MAAO,YAIAC,EAAiB,SAACC,GAC7B,OAAQA,GACN,IAAK,kBACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,MACH,MAAO,MACT,IAAK,MACH,MAAO,UACT,IAAK,aACH,MAAO,UACT,IAAK,aACH,MAAO,UACT,IAAK,iBACH,MAAO,UACT,IAAK,MACH,MAAO,QACT,IAAK,MACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,QACE,MAAO,YAeAC,EAAkB,SAACC,GAC9B,OAAQA,GACN,IAAK,eACH,MAAO,mBACT,IAAK,4BACH,MAAO,mBACT,IAAK,OACH,MAAO,UACT,IAAK,kBACH,MAAO,mBACT,IAAK,aACH,MAAO,mBACT,IAAK,iBACH,MAAO,mBACT,IAAK,gBACH,MAAO,mBACT,IAAK,eACH,MAAO,mBACT,IAAK,gBACH,MAAO,mBACT,IAAK,cACH,MAAO,YACT,QACE,MAAO,YAIAC,EAAqB,SAACC,GACjC,OAAQA,GACN,IAAK,QACH,MAAO,mBACT,IAAK,cACH,MAAO,kBACT,IAAK,gBACH,MAAO,kBACT,IAAK,UACH,MAAO,iBACT,IAAK,QACH,MAAO,mBACT,IAAK,mCACH,MAAO,gBACT,IAAK,aACH,MAAO,mBACT,IAAK,uBACH,MAAO,iBACT,IAAK,OACH,MAAO,kBACT,IAAK,eACH,MAAO,kBACT,IAAK,QACH,MAAO,iBACT,IAAK,UACH,MAAO,mBACT,IAAK,QACH,MAAO,iBACT,IAAK,OACH,MAAO,mBACT,IAAK,mBACH,MAAO,gBACT,IAAK,YACH,MAAO,kBACT,IAAK,iBACH,MAAO,kBACT,IAAK,UACH,MAAO,iBACT,IAAK,SACH,MAAO,iBACT,IAAK,oBACH,MAAO,kBACT,IAAK,sBACH,MAAO,kBACT,IAAK,UACH,MAAO,gBACT,IAAK,SACH,MAAO,mBACT,IAAK,QACH,MAAO,mBACT,QACE,MAAO,YAIAC,EAA2B,SAACC,GACvC,OAAQA,GACN,IAAK,UACH,MAAO,mBACT,IAAK,UACH,MAAO,UACT,IAAK,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","file":"static/js/main.33cce6c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet.791189fb.png\";","export default __webpack_public_path__ + \"static/media/logo-typhinet-prod.f503745b.png\";","export const API_ENDPOINT = \"http://localhost:8080/api/\";\r\n// export const API_ENDPOINT = \"https://typhinet.herokuapp.com/api/\";","export const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n      return \"#000000\";\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n      return \"#000000\";\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return \"#808080\";\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return \"#ffff00\";\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return \"#ffd700\";\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return \"#32cd32\";\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return \"#adff2f\";\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return \"#98fb98\";\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return \"#6b8e23\";\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return \"#2e8b57\";\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return \"#006400\";\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return \"#0000cd\";\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return \"#4682b4\";\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return \"#00bfff\";\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return \"#1e90ff\";\r\n    case '3.4':\r\n      return \"#6a5acd\";\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n      return \"#4b0082\";\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return \"#8b0000\";\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return \"#ff6347\";\r\n    case '4.3':\r\n    case '4.3.0':\r\n    case '4.3.1':\r\n      return \"#ff0000\";\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n    case '4.3.1.1.P1':\r\n      return \"#f1b6da\";\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n      return \"#c51b7d\";\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return \"#fb8072\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForAMR = (amr) => {\r\n  switch (amr) {\r\n    case 'No AMR detected':\r\n      return \"#addd8e\";\r\n    case 'MDR_DCS':\r\n      return \"#9e9ac8\"\r\n    case 'MDR':\r\n      return \"red\"\r\n    case 'DCS':\r\n      return \"#6baed6\"\r\n    case 'AzithR_MDR':\r\n      return \"#a50f15\"\r\n    case 'AzithR_DCS':\r\n      return \"#7a0177\"\r\n    case 'AzithR_DCS_MDR':\r\n      return \"#54278f\"\r\n    case 'XDR':\r\n      return \"black\"\r\n    case 'AMR':\r\n      return \"#ffeda0\"\r\n    case 'AMR_DCS':\r\n      return \"#fd8d3c\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForSimpleGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case 'H58':\r\n      return \"green\";\r\n    case 'Non-H58':\r\n      return \"red\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Azithromycin':\r\n      return \"rgb(144,211,199)\";\r\n    case 'Fluoroquinolones (CipI/R)':\r\n      return \"rgb(255,236,120)\";\r\n    case 'ESBL':\r\n      return \"#DB90F0\";\r\n    case 'Chloramphenicol':\r\n      return \"rgb(249,129,117)\";\r\n    case 'Ampicillin':\r\n      return \"rgb(129,178,210)\";\r\n    case 'Co-trimoxazole':\r\n      return \"rgb(252,180,105)\";\r\n    case 'Sulphonamides':\r\n      return \"rgb(180,221,112)\";\r\n    case 'Trimethoprim':\r\n      return \"rgb(102,102,255)\";\r\n    case 'Tetracyclines':\r\n      return \"rgb(251,207,229)\";\r\n    case 'Susceptible':\r\n      return \"lightGray\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForIncType = (incType) => {\r\n  switch (incType) {\r\n    case 'IncX1':\r\n      return 'rgb(174,227,154)'\r\n    case 'IncFIA(HI1)':\r\n      return 'rgb(138,35,139)'\r\n    case 'IncFIB(pHCM2)':\r\n      return 'rgb(163,215,30)'\r\n    case 'IncA/C2':\r\n      return 'rgb(69,51,214)'\r\n    case 'IncP1':\r\n      return 'rgb(223,207,231)'\r\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(66,69,94)'\r\n    case 'Col(BS512)':\r\n      return 'rgb(251,172,246)'\r\n    case 'IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(34,151,67)'\r\n    case 'IncN':\r\n      return 'rgb(238,83,190)'\r\n    case 'IncHI1B(R27)':\r\n      return 'rgb(68,242,112)'\r\n    case 'p0111':\r\n      return 'rgb(251,45,76)'\r\n    case 'IncHI1A':\r\n      return 'rgb(101,230,249)'\r\n    case 'IncI1':\r\n      return 'rgb(123,44,49)'\r\n    case 'IncY':\r\n      return 'rgb(231,173,121)'\r\n    case 'IncFIB(AP001918)':\r\n      return 'rgb(32,80,46)'\r\n    case 'IncFIB(K)':\r\n      return 'rgb(53,136,209)'\r\n    case 'IncHI2/IncHI2A':\r\n      return 'rgb(115,140,78)'\r\n    case 'Col440I':\r\n      return 'rgb(159,4,252)'\r\n    case 'Col156':\r\n      return 'rgb(244,212,3)'\r\n    case 'Col440II/Col440II':\r\n      return 'rgb(17,160,170)'\r\n    case 'IncFIA(HI1)/IncHI1A':\r\n      return 'rgb(251,120,16)'\r\n    case 'ColRNAI':\r\n      return 'rgb(91,67,11)'\r\n    case 'ColpVC':\r\n      return 'rgb(248,117,116)'\r\n    case 'IncX3':\r\n      return 'rgb(190,177,231)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForTetracyclines = (tetA) => {\r\n  switch (tetA) {\r\n    case 'tetA(A)':\r\n      return 'rgb(174,227,154)'\r\n    case 'tetA(B)':\r\n      return '#D7AEF7'\r\n    case 'tetA(C)':\r\n      return '#FFEC78'\r\n    case 'tetA(D)':\r\n      return '#FCB469'\r\n    case 'tetA(AB)':\r\n      return 'rgb(223,207,231)'\r\n    case 'tetA(ABC)':\r\n      return 'rgb(66,69,94)'\r\n    case 'tetA(ABD)':\r\n      return 'rgb(251,172,246)'\r\n    case 'tetA(ABCD)':\r\n      return 'rgb(34,151,67)'\r\n    case 'tetA(AC)':\r\n      return 'rgb(238,83,190)'\r\n    case 'tetA(ACD)':\r\n      return 'rgb(68,242,112)'\r\n    case 'tetA(AD)':\r\n      return 'rgb(251,45,76)'\r\n    case 'tetA(BC)':\r\n      return 'rgb(101,230,249)'\r\n    case 'tetA(BD)':\r\n      return 'rgb(123,44,49)'\r\n    case 'tetA(BCD)':\r\n      return 'rgb(231,173,121)'\r\n    case 'tetA(CD)':\r\n      return 'rgb(32,80,46)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}","import './index.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule, ZoomableGroup } from \"react-simple-maps\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TooltipMaterialUI from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { BarChart, Bar, XAxis, Label, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Brush, LineChart, Line, Legend } from 'recharts';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faMinus, faCrosshairs, faCamera, faTable, faFilePdf, faInfoCircle, faUndoAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport download from 'downloadjs';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport typhinetLogoImg from '../../assets/img/logo-typhinet.png';\r\nimport typhinetLogoImg2 from '../../assets/img/logo-typhinet-prod.png';\r\nimport geography from '../../assets/world-110m.json'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { getColorForGenotype, getColorForAMR, getColorForDrug, getColorForIncType, getColorForTetracyclines } from '../../util/colorHelper';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\n// import Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\n// import ContactPage from '../contact';\r\nimport domtoimage from 'dom-to-image';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { jsPDF } from \"jspdf\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControlSelect: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    minWidth: 120,\r\n    '& label.Mui-focused': {\r\n      color: \"rgb(31, 187, 211)\",\r\n    },\r\n    '& :not(.Mui-error).MuiInput-underline:after': {\r\n      borderBottomColor: \"rgb(31, 187, 211)\",\r\n    },\r\n  }\r\n}));\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: \"rgb(31, 187, 211)\"\r\n  },\r\n  thumb: {\r\n    \"&.MuiSlider-thumb\": {\r\n      \"&:not(.MuiSlider-active):focus\": {\r\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n      \"&:not(.MuiSlider-active):hover\": {\r\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n      \"&.MuiSlider-active\": {\r\n        boxShadow: \"0px 0px 0px 14px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n    },\r\n  },\r\n  valueLabel: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: 500\r\n  }\r\n})(Slider);\r\n\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n    color: \"rgb(31, 187, 211)\",\r\n  }\r\n})(CircularProgress);\r\n\r\nconst CustomToggleButton = withStyles({\r\n  root: {\r\n    padding: \"2px 8px\",\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: 600\r\n  },\r\n  selected: {\r\n    backgroundColor: 'rgb(31, 187, 211) !important',\r\n    color: \"white !important\"\r\n  }\r\n})(ToggleButton);\r\n\r\nconst DashboardPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [controlMapPosition, setControlMapPosition] = useState({ coordinates: [0, 0], zoom: 1 });\r\n  // const [samplesQty, setSamplesQty] = useState(0);\r\n\r\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\r\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState({});\r\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\r\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\r\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\r\n  const [worldMapSTADData, setWorldMapSTADData] = useState([]);\r\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\r\n  const [worldMapDCSData, setWorldMapDCSData] = useState([]);\r\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\r\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\r\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\r\n  const [worldMapDrugsData, setWorldMapDrugsData] = useState([]);\r\n  const [worldMapAmrProfilesData, setWorldMapAmrProfilesData] = useState([]);\r\n  const [worldMapPlasmidIncompatibilityTypeData, setWorldMapPlasmidIncompatibilityTypeData] = useState([]);\r\n\r\n  const [plotAmrClassChart, setPlotAmrClassChart] = useState(function () { })\r\n  const [plotDrugsAndGenotypesChart, setPlotDrugsAndGenotypesChart] = useState(function () { })\r\n  const [plotPopulationStructureChart, setPlotPopulationStructureChart] = useState(function () { })\r\n  const [plotDrugTrendsChart, setPlotDrugTrendsChart] = useState(function () { })\r\n\r\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] = useState(false)\r\n  const [captureControlChartRFWGInProgress, setCaptureControlChartRFWGInProgress] = useState(false)\r\n  const [captureControlChartDRTInProgress, setCaptureControlChartDRTInProgress] = useState(false)\r\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] = useState(false)\r\n  const [captureControlChartRFWAGInProgress, setCaptureControlChartRFWAGInProgress] = useState(false)\r\n  const [captureReportInProgress, setCaptureReportInProgress] = useState(false)\r\n  const [tooltipContent, setTooltipContent] = useState(null);\r\n\r\n  const [allCountries, setAllCountries] = useState([]);\r\n\r\n  const [timePeriodRange, setTimePeriodRange] = React.useState([1905, 2019]);\r\n  const [actualTimePeriodRange, setActualTimePeriodRange] = React.useState([1905, 2019]);\r\n  const [countriesForFilter, setCountriesForFilter] = React.useState(['All']);\r\n  const [actualCountry, setActualCountry] = useState(\"All\");\r\n  const [populationStructureFilter, setPopulationStructureFilter] = React.useState(1);\r\n  const [RFWGFilter, setRFWGFilter] = React.useState(1);\r\n  const [amrClassesForFilter] = useState([/*\"AMR Profiles\", */\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [drtClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [amrClassFilter, setAmrClassFilter] = React.useState(amrClassesForFilter[5])\r\n  const [RDWAGDataviewFilter, setRDWAGDataviewFilter] = React.useState(1)\r\n\r\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([])\r\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState([])\r\n  const [chartMaxHeight, setChartMaxHeight] = useState(0)\r\n  // const [chartMaxWidth, setChartMaxWidth] = useState(0)\r\n  const [populationStructureChartData, setPopulationStructureChartData] = useState([])\r\n  const [amrClassChartData, setAmrClassChartData] = useState([])\r\n\r\n  const [mapView, setMapView] = React.useState('CipI');\r\n  const [dataset, setDataset] = React.useState('full');\r\n  const [totalGenomes, setTotalGenomes] = useState([])\r\n  const [actualGenomes, setActualGenomes] = useState([])\r\n  const [totalGenotypes, setTotalGenotypes] = useState([])\r\n  const [actualGenotypes, setActualGenotypes] = useState([])\r\n  const [appLoading, setAppLoading] = useState(0)\r\n\r\n  const [allGenotypes, setAllGenotypes] = useState({})\r\n\r\n  // const [contactModalVisible, setContactModalVisible] = useState(false)\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen2 = () => {\r\n    setOpen2(true);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setOpen2(false);\r\n  };\r\n\r\n  // const [dimensions.width > desktop, setdimensions.width > desktop] = useState(window.innerWidth > 767)\r\n  const [desktop] = useState(767)\r\n  const [mobile] = useState(500)\r\n  const [middle] = useState(1300)\r\n\r\n  const [hoverColor] = useState(\"#D2F1F6\")\r\n\r\n  const [dimensions, setDimensions] = React.useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n\r\n  function debounce(fn, ms) {\r\n    let timer\r\n    return _ => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(_ => {\r\n        timer = null\r\n        fn.apply(this, arguments)\r\n      }, ms)\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (appLoading === 0) {\r\n      document.getElementsByClassName('App')[0].style.overflow = 'hidden'\r\n    } else if (appLoading === 2) {\r\n      document.getElementsByClassName('App')[0].style.overflow = 'visible'\r\n      document.getElementsByClassName('loading')[0].remove()\r\n    }\r\n  }, [appLoading])\r\n\r\n  // useEffect(() => {\r\n  //   const timeOutId = setTimeout(() => {\r\n  //     setAppLoading(false)\r\n  //   }, 8000)\r\n  //   return () => clearTimeout(timeOutId);\r\n  // }, [appLoading])\r\n\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }, 1000)\r\n\r\n    window.addEventListener('resize', debouncedHandleResize)\r\n\r\n    return _ => {\r\n      window.removeEventListener('resize', debouncedHandleResize)\r\n    }\r\n  })\r\n\r\n  const [genotypes] = useState([\r\n    '0','0.0.1', '0.0.2', '0.0.3', '0.1.0', '0.1',\r\n    '0.1.1', '0.1.2', '0.1.3', '1.1', '1.1.1',\r\n    '1.1.2', '1.1.3', '1.1.4', '1.2', '1.2.1',\r\n    '2', '2.0.0', '2.0.1', '2.0.2', '2.1.0', '2.1',\r\n    '2.1.1', '2.1.2', '2.1.3', '2.1.4', '2.1.5', '2.1.6',\r\n    '2.1.7', '2.1.8', '2.1.9', '2.1.7.1', '2.1.7.2', '2.2',\r\n    '2.2.0', '2.2.1', '2.2.2', '2.2.3', '2.2.4',\r\n    '2.3', '2.3.1', '2.3.2', '2.3.3', '2.3.4',\r\n    '2.3.5', '2.4.0', '2.4', '2.4.1', '2.5.0', '2.5',\r\n    '2.5.1', '2.5.2', '3.0.0', '3', '3.0.1', '3.0.2',\r\n    '3.1.0', '3.1', '3.1.1', '3.1.2', '3.2',\r\n    '3.2.1', '3.2.2', '3.3.0', '3.3', '3.3.1',\r\n    '3.3.2', '3.3.2.Bd1', '3.3.2.Bd2', '3.4',\r\n    '3.5', '3.5.1', '3.5.2', '3.5.3',\r\n    '3.5.4', '4', '4.1.0', '4.1', '4.1.1', '4.2', '4.2.1',\r\n    '4.2.2', '4.2.3', '4.3', '4.3.0', '4.3.1', '4.3.1.1',\r\n    '4.3.1.1.P1', '4.3.1.1.EA1', '4.3.1.2', '4.3.1.2.EA2',\r\n    '4.3.1.2.EA3', '4.3.1.3', '4.3.1.3.Bdq'].sort((a, b) => a.localeCompare(b)));\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}filters/getYearLimits`)\r\n      .then((res) => {\r\n        let limits = res.data\r\n        setTimePeriodRange([limits.min, limits.max])\r\n        setActualTimePeriodRange([limits.min, limits.max])\r\n        setAllCountries(limits.countries)\r\n        setAllGenotypes(limits.allGenotypes)\r\n        setTotalGenotypes(limits.totalGenotypes)\r\n        setAppLoading((value) => value + 1)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const timeOutId = setTimeout(() => {\r\n      axios.get(`${API_ENDPOINT}filters/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n        .then((res) => {\r\n          var response = res.data\r\n\r\n          response['Dem. Rep. Congo'] = response['Democratic Republic of Congo']\r\n          delete response['Democratic Republic of Congo']\r\n          response['Central African Rep.'] = response['Central African Republic']\r\n          delete response['Central African Republic']\r\n          response[\"Côte d'Ivoire\"] = response['Ivory Coast']\r\n          delete response['Ivory Coast']\r\n          response[\"Timor-Leste\"] = response['East Timor']\r\n          delete response['East Timor']\r\n\r\n          setWorldMapComplementaryData(response)\r\n        })\r\n    }, 500)\r\n    return () => clearTimeout(timeOutId);\r\n  }, [actualTimePeriodRange, dataset])\r\n\r\n  useEffect(() => {\r\n    const parseDataForGenotypeChart = (data) => {\r\n      var finalPopulationStructureChartData = [];\r\n\r\n      var genomes = data;\r\n      var genotypes = [];\r\n\r\n      data.forEach((entry) => {\r\n        if (!genotypes.some(g => g === entry.GENOTYPE)) {\r\n          genotypes.push(entry.GENOTYPE)\r\n        }\r\n\r\n        /* POPULATION STRUCTURE CHART GENERATION */\r\n        // if (populationStructureFilter === 1) { /* Genotype */\r\n        if (!finalPopulationStructureChartData.some(e => e.name === entry.YEAR)) {\r\n          finalPopulationStructureChartData.push({\r\n            name: entry.YEAR,\r\n            [entry.GENOTYPE]: 1\r\n          })\r\n        } else {\r\n          let year = finalPopulationStructureChartData.find(e => e.name === entry.YEAR);\r\n          let yearIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry.YEAR);\r\n\r\n          if (year[entry.GENOTYPE] === undefined) {\r\n            year[entry.GENOTYPE] = 1\r\n          } else {\r\n            year[entry.GENOTYPE] = year[entry.GENOTYPE] + 1\r\n          }\r\n          finalPopulationStructureChartData[yearIndex] = year;\r\n        }\r\n        // } \r\n        // else { /* H58 / Non-H58 */\r\n        //   if (entry['GENOTYPE_SIMPLE'] === 'H58' || entry['GENOTYPE_SIMPLE'] === 'Non-H58')\r\n        //     if (!finalPopulationStructureChartData.some(e => e.name === entry['GENOTYPE_SIMPLE'])) {\r\n        //       finalPopulationStructureChartData.push({\r\n        //         name: entry['GENOTYPE_SIMPLE'],\r\n        //         [entry.GENOTYPE]: 1\r\n        //       })\r\n        //     } else {\r\n        //       let genotypeSimple = finalPopulationStructureChartData.find(e => e.name === entry['GENOTYPE_SIMPLE']);\r\n        //       let genotypeSimpleIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry['GENOTYPE_SIMPLE']);\r\n\r\n        //       if (genotypeSimple[entry.GENOTYPE] === undefined) {\r\n        //         genotypeSimple[entry.GENOTYPE] = 1\r\n        //       } else {\r\n        //         genotypeSimple[entry.GENOTYPE] = genotypeSimple[entry.GENOTYPE] + 1\r\n        //       }\r\n        //       finalPopulationStructureChartData[genotypeSimpleIndex] = genotypeSimple;\r\n        //     }\r\n        // }\r\n      })\r\n\r\n      if (totalGenomes.length === 0)\r\n        setTotalGenomes(genomes)\r\n\r\n      setActualGenomes(genomes)\r\n      setActualGenotypes(genotypes)\r\n\r\n      finalPopulationStructureChartData.forEach((data) => {\r\n        let sum = 0;\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] !== \"name\")\r\n            sum += entry[1];\r\n        })\r\n        data.total = sum;\r\n      })\r\n\r\n      if (!arraysEqual(finalPopulationStructureChartData, populationStructureChartData))\r\n        setPopulationStructureChartData(finalPopulationStructureChartData)\r\n\r\n      let populationStructureChartSums = []\r\n      finalPopulationStructureChartData.forEach((year) => {\r\n        let sum = 0\r\n        let yearArray = Object.entries(year)\r\n        yearArray.forEach((_year) => {\r\n          if (_year[0] !== \"name\" && _year[0] !== \"total\")\r\n            sum += _year[1]\r\n        })\r\n        populationStructureChartSums.push({\r\n          year: year.name,\r\n          sum\r\n        })\r\n      })\r\n\r\n      if (populationStructureChartSums.length > 0) {\r\n        let highestSum = populationStructureChartSums.sort((a, b) => b.sum - a.sum)[0].sum;\r\n\r\n        // if (populationStructureFilter === 1) {\r\n        //   if (highestSum > chartMaxHeight)\r\n        //     setChartMaxHeight(Math.ceil(highestSum / 100) * 100)\r\n        // } else {\r\n        //   if (highestSum > chartMaxWidth)\r\n        //     setChartMaxWidth(Math.ceil(highestSum / 100) * 100)\r\n        // }\r\n        if (highestSum > chartMaxHeight)\r\n          setChartMaxHeight(Math.ceil(highestSum / 100) * 100)\r\n      }\r\n    }\r\n\r\n    const parseDataForCountryMap = (data) => {\r\n      let finalCountries = [];\r\n\r\n      let samplesData = [], genotypesData = [], h58Data = [], mdrData = [], stadData = [], xdrData = [], drugsData = [], amrData = [], incTypesData = [], dcsData = [], azithData = [], cipIData = [], cipRData = [];\r\n\r\n      const countData = (array, elementToCount, parentName, childName) => {\r\n        let temp = []\r\n        array.forEach(entry => {\r\n          if (!temp.some(e => e.name === entry['COUNTRY_ONLY'])) {\r\n            temp.push({\r\n              name: entry['COUNTRY_ONLY'],\r\n              displayName: entry['COUNTRY_ONLY'],\r\n              total: 1,\r\n              [parentName]: [{\r\n                [childName]: entry[elementToCount],\r\n                count: 1\r\n              }]\r\n            })\r\n          } else {\r\n            let country = temp.find(e => e.name === entry['COUNTRY_ONLY']);\r\n            let countryIndex = temp.findIndex(e => e.name === entry['COUNTRY_ONLY']);\r\n\r\n            if (!country[parentName].some(e => e[childName] === entry[elementToCount])) {\r\n              country[parentName].push({\r\n                [childName]: entry[elementToCount],\r\n                count: 1\r\n              })\r\n            } else {\r\n              let parent = country[parentName].find(e => e[childName] === entry[elementToCount]);\r\n              let index = country[parentName].findIndex(e => e[childName] === entry[elementToCount]);\r\n              parent.count = parent.count + 1\r\n              country[parentName][index] = parent\r\n            }\r\n            country.total = country.total + 1\r\n\r\n            temp[countryIndex] = country;\r\n          }\r\n        })\r\n\r\n        let congoCountryIndex = temp.findIndex(e => e.name === 'Democratic Republic of Congo');\r\n        if (congoCountryIndex !== -1)\r\n          temp[congoCountryIndex].displayName = 'Dem. Rep. Congo'\r\n\r\n        let centralAfricanRepublicCountryIndex = temp.findIndex(e => e.name === 'Central African Republic');\r\n        if (centralAfricanRepublicCountryIndex !== -1)\r\n          temp[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\r\n\r\n        let ivoryCoastCountryIndex = temp.findIndex(e => e.name === \"Ivory Coast\");\r\n        if (ivoryCoastCountryIndex !== -1)\r\n          temp[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\r\n\r\n        let timorLesteCountryIndex = temp.findIndex(e => e.name === \"East Timor\");\r\n        if (timorLesteCountryIndex !== -1)\r\n          temp[timorLesteCountryIndex].displayName = \"Timor-Leste\"\r\n\r\n        temp.forEach((country) => {\r\n          country[parentName].sort((a, b) => b.count - a.count);\r\n        })\r\n        temp.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n        return temp\r\n      }\r\n\r\n      data.forEach((entry) => {\r\n        if (!finalCountries.some(e => e === entry['COUNTRY_ONLY']) && entry['COUNTRY_ONLY'] !== \"-\" && entry['COUNTRY_ONLY'] !== \"\")\r\n          finalCountries.push(entry['COUNTRY_ONLY'])\r\n\r\n        if (!samplesData.some(e => e.name === entry['COUNTRY_ONLY'])) {\r\n          samplesData.push({\r\n            name: entry['COUNTRY_ONLY'],\r\n            displayName: entry['COUNTRY_ONLY'],\r\n            count: 1\r\n          })\r\n        } else {\r\n          let country = samplesData.find(e => e.name === entry['COUNTRY_ONLY']);\r\n          let countryIndex = samplesData.findIndex(e => e.name === entry['COUNTRY_ONLY']);\r\n          country.count = country.count + 1\r\n          samplesData[countryIndex] = country;\r\n        }\r\n      })\r\n\r\n      if (!arraysEqual(samplesData, worldMapSamplesData)) {\r\n        let congoCountryIndex = samplesData.findIndex(e => e.name === 'Democratic Republic of Congo');\r\n        if (congoCountryIndex !== -1)\r\n          samplesData[congoCountryIndex].displayName = 'Dem. Rep. Congo'\r\n\r\n        let centralAfricanRepublicCountryIndex = samplesData.findIndex(e => e.name === 'Central African Republic');\r\n        if (centralAfricanRepublicCountryIndex !== -1)\r\n          samplesData[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\r\n\r\n        let ivoryCoastCountryIndex = samplesData.findIndex(e => e.name === \"Ivory Coast\");\r\n        if (ivoryCoastCountryIndex !== -1)\r\n          samplesData[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\r\n\r\n        let timorLesteCountryIndex = samplesData.findIndex(e => e.name === \"East Timor\");\r\n        if (timorLesteCountryIndex !== -1)\r\n          samplesData[timorLesteCountryIndex].displayName = \"Timor-Leste\"\r\n\r\n        setWorldMapSamplesData(samplesData)\r\n        // setSamplesQty(\r\n        //   Math.ceil((\r\n        //     samplesData.length > 0 ? samplesData.sort((a, b) => b.count - a.count)[0].count : 0\r\n        //   ) / 50) * 50\r\n        // )\r\n      }\r\n\r\n      finalCountries.sort((a, b) => a.localeCompare(b));\r\n      finalCountries.unshift(\"All\");\r\n      setCountriesForFilter(finalCountries)\r\n\r\n      if (!finalCountries.includes(actualCountry))\r\n        setActualCountry(\"All\")\r\n\r\n      genotypesData = countData(data, \"GENOTYPE\", \"genotypes\", \"lineage\")\r\n      if (!arraysEqual(genotypesData, worldMapGenotypesData))\r\n        setWorldMapGenotypesData(genotypesData)\r\n\r\n      h58Data = countData(data, \"GENOTYPE_SIMPLE\", \"genotypes\", \"type\")\r\n      h58Data.forEach(country => {\r\n        country.genotypes.forEach((g, index) => {\r\n          let percentage = ((g.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage) {\r\n            percentage = percentage.toFixed(2)\r\n          }\r\n          g.percentage = percentage\r\n        })\r\n      })\r\n      if (!arraysEqual(h58Data, worldMapH58Data))\r\n        setWorldMapH58Data(h58Data)\r\n\r\n      stadData = countData(data, \"STAD\", \"STADs\", \"type\")\r\n      stadData.forEach(country => {\r\n        country.STADs.forEach((stad, index) => {\r\n          if (stad.type === \"No AMR detected\") {\r\n            let percentage = ((stad.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = stad.count;\r\n          }\r\n        })\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n      if (!arraysEqual(stadData, worldMapSTADData))\r\n        setWorldMapSTADData(stadData)\r\n\r\n      mdrData = countData(data, \"MDR\", \"MDRs\", \"type\")\r\n      mdrData.forEach(country => {\r\n        country.MDRs.forEach((mdr, index) => {\r\n          if (mdr.type === \"MDR\") {\r\n            let percentage = ((mdr.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = mdr.count;\r\n          }\r\n        })\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n      if (!arraysEqual(mdrData, worldMapMDRData))\r\n        setWorldMapMDRData(mdrData)\r\n\r\n      xdrData = countData(data, \"XDR\", \"XDRs\", \"type\")\r\n      xdrData.forEach(country => {\r\n        country.XDRs.forEach((xdr, index) => {\r\n          if (xdr.type === \"XDR\") {\r\n            let percentage = ((xdr.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = xdr.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(xdrData, worldMapXDRData))\r\n        setWorldMapXDRData(xdrData)\r\n\r\n      dcsData = countData(data, \"DCS\", \"DCSs\", \"type\")\r\n      dcsData.forEach(country => {\r\n        country.DCSs.forEach((dcs, index) => {\r\n          if (dcs.type === \"DCS\") {\r\n            let percentage = ((dcs.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = dcs.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(dcsData, worldMapDCSData))\r\n        setWorldMapDCSData(dcsData)\r\n\r\n      azithData = countData(data, \"Azith\", \"AZs\", \"type\")\r\n      azithData.forEach(country => {\r\n        country.AZs.forEach((az, index) => {\r\n          if (az.type === \"AzithR\") {\r\n            let percentage = ((az.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = az.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(azithData, worldMapAZITHData))\r\n        setWorldMapAZITHData(azithData)\r\n\r\n      cipIData = countData(data, \"CipI\", \"CipIs\", \"type\")\r\n      cipIData.forEach(country => {\r\n        country.CipIs.forEach((cipIs, index) => {\r\n          if (cipIs.type === \"CipI\") {\r\n            let percentage = ((cipIs.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = cipIs.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(cipIData, worldMapCIPIData))\r\n        setWorldMapCIPIData(cipIData)\r\n\r\n      cipRData = countData(data, \"CipR\", \"CipRs\", \"type\")\r\n      cipRData.forEach(country => {\r\n        country.CipRs.forEach((cipRs, index) => {\r\n          if (cipRs.type === \"CipR\") {\r\n            let percentage = ((cipRs.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = cipRs.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(cipRData, worldMapCIPRData))\r\n        setWorldMapCIPRData(cipRData)\r\n\r\n      let dataForCountingDrugs = []\r\n      data.forEach(entry => {\r\n        entry.DRUGS.forEach(drug => {\r\n          dataForCountingDrugs.push({\r\n            ...entry,\r\n            DRUG: drug,\r\n          })\r\n        })\r\n      })\r\n      drugsData = countData(dataForCountingDrugs, \"DRUG\", \"drugs\", \"name\");\r\n      if (!arraysEqual(drugsData, worldMapDrugsData))\r\n        setWorldMapDrugsData(drugsData)\r\n\r\n      amrData = countData(data, \"AMR\", \"amrProfiles\", \"name\")\r\n      if (!arraysEqual(amrData, worldMapAmrProfilesData))\r\n        setWorldMapAmrProfilesData(amrData)\r\n\r\n      incTypesData = countData(data, \"IncTypes\", \"incTypes\", \"type\")\r\n      incTypesData.forEach(country => {\r\n        country.incTypes = country.incTypes.filter(g => g.type !== \"\")\r\n      })\r\n      if (!arraysEqual(incTypesData, worldMapPlasmidIncompatibilityTypeData))\r\n        setWorldMapPlasmidIncompatibilityTypeData(incTypesData)\r\n    }\r\n\r\n    const parseDataForAmrClassChart = (data) => {\r\n      let finalChartData = []\r\n      let maxSum = 0\r\n      let totalSum = {}\r\n      data.forEach((entry) => {\r\n        if (!finalChartData.some(e => e.genotype === entry.GENOTYPE)) {\r\n          finalChartData.push({\r\n            genotype: entry.GENOTYPE,\r\n            [entry.GENE]: 1\r\n          })\r\n        } else {\r\n          let genotype = finalChartData.find(e => e.genotype === entry.GENOTYPE);\r\n          let genotypeIndex = finalChartData.findIndex(e => e.genotype === entry.GENOTYPE);\r\n\r\n          if (genotype[entry.GENE] === undefined) {\r\n            genotype[entry.GENE] = 1\r\n          } else {\r\n            genotype[entry.GENE] = genotype[entry.GENE] + 1\r\n          }\r\n          finalChartData[genotypeIndex] = genotype;\r\n        }\r\n\r\n        if (entry.GENOTYPE !== \"\") {\r\n          if (!(entry.GENE in totalSum)) {\r\n            totalSum[entry.GENE] = 1\r\n          } else {\r\n            totalSum[entry.GENE] = totalSum[entry.GENE] + 1\r\n          }\r\n        }\r\n      })\r\n      delete totalSum[\"\"]\r\n\r\n      finalChartData.sort((a, b) => a.genotype.localeCompare(b.genotype));\r\n\r\n      let genotypes = []\r\n      finalChartData.forEach(element => {\r\n        let keys = Object.keys(element).slice(1)\r\n        let filteredData = keys.filter((key) => { return !(key.includes('No')) && !(key.includes('0_')) })\r\n        if (filteredData.length === 0) {\r\n          genotypes.push(element.genotype)\r\n        }\r\n      });\r\n\r\n      for (const genotype in genotypes) {\r\n        finalChartData = finalChartData.filter((obj) => {\r\n          return obj.genotype !== genotypes[genotype]\r\n        })\r\n      }\r\n\r\n      finalChartData.forEach((data) => {\r\n        let sum = 0;\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] !== \"genotype\" && entry[0] !== \"undefined\") {\r\n            let errorMargin = Math.ceil(entry[1] * 0.2) // 20%\r\n            let lowerValue = errorMargin > entry[1] ? entry[1] : errorMargin;\r\n\r\n            if (entry[1] === 1)\r\n              lowerValue = 1\r\n\r\n            if (entry[1] === 0)\r\n              lowerValue = 0\r\n\r\n            data[`error-${entry[0]}`] = [lowerValue, errorMargin]\r\n\r\n            if (!(entry[0].includes('No')) && !(entry[0].includes('0_'))) {\r\n              sum += entry[1];\r\n              if (entry[1] > maxSum) {\r\n                maxSum = entry[1]\r\n              }\r\n            }\r\n\r\n          }\r\n          if (entry[0] === \"genotype\") {\r\n            data.total2 = allGenotypes[entry[1].toString()];\r\n          }\r\n        })\r\n        data.total = sum;\r\n      })\r\n      finalChartData = finalChartData.filter(g => g.genotype !== undefined && g.genotype !== \"0\")\r\n      let top10 = []\r\n      finalChartData.forEach(element => {\r\n        if (top10.length < 10) {\r\n          top10.push(element)\r\n        } else {\r\n          top10.sort(function (a, b) {\r\n            if (a.total === b.total && a.genotype > b.genotype)\r\n              return -1\r\n            return a.total > b.total ? -1 : 1\r\n          })\r\n          if (element.total === top10[9].total) {\r\n            if (element.genotype > top10[9].genotype) {\r\n              top10[9] = element\r\n            }\r\n          }\r\n          if (element.total > top10[9].total) {\r\n            top10[9] = element\r\n          }\r\n        }\r\n      })\r\n\r\n      top10.sort(function (a, b) {\r\n        if (a.total === b.total && a.genotype > b.genotype)\r\n          return -1\r\n        return a.total > b.total ? -1 : 1\r\n      })\r\n\r\n      top10.push({ maxSum: top10.length === 0 ? 0 : Math.ceil(top10[0].total2 / 50) * 50, totalSum: totalSum })\r\n      if (amrClassFilter !== \"Co-trimoxazole\") {\r\n        if (!arraysEqual(amrClassChartData, top10))\r\n          setAmrClassChartData(top10)\r\n      } else {\r\n        if (!arraysEqual(amrClassChartData, top10))\r\n          setAmrClassChartData(top10)\r\n      }\r\n    }\r\n\r\n    const parseDataForDrugTrendsChart = (data) => {\r\n      let finalDrugTrendsChartData = []\r\n      let finalDrugsAndGenotypesChartData = []\r\n      let totalSum = {}\r\n      // let noAMRGenomes = data[data.length - 1][0]\r\n      let allDrugs = data[data.length - 2][0]\r\n      data = data.slice(0, data.length - 2)\r\n\r\n      data.forEach((entry) => {\r\n        if (!finalDrugTrendsChartData.some(e => e.name === entry.YEAR)) {\r\n          finalDrugTrendsChartData.push({\r\n            name: entry.YEAR,\r\n            [entry.DRUG]: 1\r\n          })\r\n        } else {\r\n          let year = finalDrugTrendsChartData.find(e => e.name === entry.YEAR);\r\n          let yearIndex = finalDrugTrendsChartData.findIndex(e => e.name === entry.YEAR);\r\n\r\n          if (year[entry.DRUG] === undefined) {\r\n            year[entry.DRUG] = 1\r\n          } else {\r\n            year[entry.DRUG] = year[entry.DRUG] + 1\r\n          }\r\n          finalDrugTrendsChartData[yearIndex] = year;\r\n        }\r\n\r\n        if (!finalDrugsAndGenotypesChartData.some(e => e.name === entry.GENOTYPE)) {\r\n          finalDrugsAndGenotypesChartData.push({\r\n            name: entry.GENOTYPE,\r\n            [entry.DRUG]: 1\r\n          })\r\n        } else {\r\n          let genotype = finalDrugsAndGenotypesChartData.find(e => e.name === entry.GENOTYPE);\r\n          let genotypeIndex = finalDrugsAndGenotypesChartData.findIndex(e => e.name === entry.GENOTYPE);\r\n\r\n          if (genotype[entry.DRUG] === undefined) {\r\n            genotype[entry.DRUG] = 1\r\n          } else {\r\n            genotype[entry.DRUG] = genotype[entry.DRUG] + 1\r\n          }\r\n          finalDrugsAndGenotypesChartData[genotypeIndex] = genotype;\r\n        }\r\n\r\n        if (!(entry.GENOTYPE in totalSum)) {\r\n          totalSum[entry.GENOTYPE] = 1\r\n        } else {\r\n          totalSum[entry.GENOTYPE] = totalSum[entry.GENOTYPE] + 1\r\n        }\r\n      })\r\n      finalDrugTrendsChartData.forEach((data) => {\r\n        data.total = allDrugs[data[\"name\"]];\r\n        let maxValue = 0;\r\n        const drugsPercentage = {}\r\n        for (const key in data) {\r\n          if (key !== 'name' && key !== 'total') {\r\n            if (data[key] > maxValue) {\r\n              maxValue = data[key]\r\n            }\r\n            const aux = (data[key] * 100) / data.total\r\n            drugsPercentage[key] = data[key]\r\n            data[key] = aux\r\n          }\r\n        }\r\n        data.higherPercentage = Math.round((maxValue * 100) / data.total)\r\n        data.drugsPercentage = drugsPercentage\r\n      })\r\n\r\n      finalDrugsAndGenotypesChartData.forEach((data) => {\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] === \"name\")\r\n            data.total = allGenotypes[entry[1]]\r\n        })\r\n      })\r\n\r\n      finalDrugTrendsChartData = finalDrugTrendsChartData.filter(item => item.total === 10 || item.total > 10)\r\n\r\n      finalDrugTrendsChartData.sort((a, b) => a.name.localeCompare(b.name))\r\n      finalDrugTrendsChartData.push({ totalSum: allDrugs})\r\n\r\n      finalDrugsAndGenotypesChartData.sort((a, b) => b.total - a.total)\r\n      finalDrugsAndGenotypesChartData = finalDrugsAndGenotypesChartData.slice(0, finalDrugsAndGenotypesChartData.length >= 5 ? 5 : finalDrugsAndGenotypesChartData.length)\r\n      finalDrugsAndGenotypesChartData.push({ totalSum: totalSum})\r\n\r\n      if (!arraysEqual(finalDrugTrendsChartData, drugTrendsChartData))\r\n        setDrugTrendsChartData(finalDrugTrendsChartData)\r\n      if (!arraysEqual(finalDrugsAndGenotypesChartData, drugsAndGenotypesChartData)) {\r\n        setDrugsAndGenotypesChartData(finalDrugsAndGenotypesChartData)\r\n      }\r\n    }\r\n\r\n    const timeOutId = setTimeout(async () => {\r\n      let filter;\r\n\r\n      filter = 2\r\n      // if (populationStructureFilter === 1) {\r\n      //   filter = 2\r\n      // } else {\r\n      //   filter = 3 /* H58 and Non-H58 */\r\n      // }\r\n\r\n      let genotypeChartResponse = await axios.get(`${API_ENDPOINT}filters/${filter}/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n      parseDataForGenotypeChart(genotypeChartResponse.data)\r\n\r\n      if (actualCountry === \"All\") {\r\n        parseDataForCountryMap(genotypeChartResponse.data)\r\n      }\r\n      else {\r\n        let response = await axios.get(`${API_ENDPOINT}filters/${filter}/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n        parseDataForCountryMap(response.data)\r\n      }\r\n\r\n      let drugTrendsChartResponse = await axios.get(`${API_ENDPOINT}filters/drugTrendsChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n      parseDataForDrugTrendsChart(drugTrendsChartResponse.data)\r\n\r\n      let classChartResponse\r\n      if (amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n        classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${\"Fluoroquinolones (CipI-R)\"}/${dataset}`)\r\n      } else {\r\n        classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${amrClassFilter}/${dataset}`)\r\n      }\r\n      parseDataForAmrClassChart(classChartResponse.data)\r\n\r\n      setAppLoading((value) => { if (value < 2) return value + 1 })\r\n\r\n    }, 500);\r\n    return () => clearTimeout(timeOutId);\r\n  }, [populationStructureFilter, actualTimePeriodRange, actualCountry, dataset, amrClassFilter, allGenotypes]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function arraysEqual(a1, a2) {\r\n    return JSON.stringify(a1) === JSON.stringify(a2);\r\n  }\r\n\r\n  // const mapSamplesColorScale = scaleLinear()\r\n  //   .domain([1, samplesQty / 5, 2 * (samplesQty / 5), 3 * (samplesQty / 5), 4 * (samplesQty / 5), samplesQty])\r\n  //   .range([\"#4575b4\", \"#91bfdb\", \"#e0f3f8\", \"#fee090\", \"#fc8d59\", \"#d73027\"]);\r\n\r\n  const mapSamplesColorScale = (domain) => {\r\n    if (domain >= 1 && domain <= 9) {\r\n      return '#4575b4'\r\n    } else if (domain >= 10 && domain <= 19) {\r\n      return '#91bfdb'\r\n    } else if (domain >= 20 && domain <= 99) {\r\n      return '#addd8e'\r\n    } else if (domain >= 100 && domain <= 299) {\r\n      return '#fee090'\r\n    } else if (domain >= 300) {\r\n      return '#fc8d59'\r\n    }\r\n  }\r\n\r\n  const [mapRedColorScale] = useState(() => scaleLinear()\r\n    .domain([0, 50, 100])\r\n    .range([\"#ffebee\", \"#f44336\", \"#b71c1c\"]));\r\n\r\n  const tooltip = React.useCallback((positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\r\n    return (\r\n      <Tooltip\r\n        position={{ y: positionY, x: dimensions.width < mobile ? -20 : 0 }}\r\n        wrapperStyle={wrapperS}\r\n        cursor={{ fill: hoverColor }}\r\n        content={({ active, payload, label }) => {\r\n          if (payload !== null) {\r\n            if (sort) {\r\n              payload.sort((a, b) => b.value - a.value)\r\n              payload = payload.reverse()\r\n            }\r\n            if (active) {\r\n              return (\r\n                <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\r\n                  <div style={{ height: 14 }} />\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\", width: width1, flexDirection: \"\" }}>\r\n                    {payload.reverse().map((item, index) => {\r\n                      let percentage = ((item.value / item.payload.total) * 100)\r\n                      if (chart === 1) {\r\n                        percentage = ((item.payload.drugsPercentage[item.dataKey] / item.payload.total) * 100)\r\n                      }\r\n                      percentage = Math.round(percentage * 100) / 100\r\n                      if ((populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4)) {\r\n                        percentage = Math.round(item.value * 100) / 100\r\n                      }\r\n                      return (\r\n                        <div key={index + item} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: width2, marginBottom: 8 }}>\r\n                          <div style={{ backgroundColor: stroke ? item.stroke : item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\r\n                          <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8, width: \"95%\" }}>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14, wordWrap: 'break-word', width: dimensions.width < mobile ? '80%' : '100%' }}>{item.name}</span>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {(populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4) ? item.payload.quantities[item.name] : chart === 1 ? item.payload.drugsPercentage[item.dataKey] : item.value}</span>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n          return null;\r\n        }}\r\n      />\r\n    )\r\n  }, [dimensions, mobile, populationStructureFilter, RFWGFilter, hoverColor])\r\n\r\n  useEffect(() => {\r\n    const plotPopulationStructureChart = () => {\r\n\r\n      if (populationStructureFilter === 1) { /* QUANTITY */\r\n        let maxH = 0\r\n        for (let index = 0; index < populationStructureChartData.length; index++) {\r\n          if (populationStructureChartData[index].total > maxH) {\r\n            maxH = populationStructureChartData[index].total\r\n          }\r\n        }\r\n        maxH = Math.ceil(maxH / 50) * 50\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={populationStructureChartData}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 20, right: 20 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle', fontSize: '' }} offset={6}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {populationStructureChartData.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", height: 180 }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflowX: 'scroll', height: 180, marginLeft: 68, justifyContent: \"space-between\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", marginBottom: 4, marginLeft: 3, marginRight: 10 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip(300, dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false)}\r\n              {genotypes.map((item) => <Bar dataKey={item} stackId={0} fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else { /* PERCENTAGE */\r\n        let maxH = 100\r\n\r\n        let teste = JSON.parse(JSON.stringify(populationStructureChartData))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (keys[key] !== 'name' && keys[key] !== 'total' && keys[key] !== 'quantities') {\r\n              let aux = keys[key]\r\n              element.quantities[aux] = element[aux]\r\n              element[aux] = (element[aux] * 100) / element.total\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={teste}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n              barCategoryGap={'10%'}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 20, right: 20 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={6}>\r\n                  % Genomes per year\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", height: 180 }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflowX: 'scroll', height: 180, marginLeft: 68, justifyContent: \"space-between\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", marginBottom: 4, marginLeft: 3, marginRight: 10 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip(300, dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false, 3)}\r\n              {genotypes.map((item) => <Bar dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotPopulationStructureChart(plotPopulationStructureChart)\r\n  }, [dimensions, genotypes, populationStructureChartData, populationStructureFilter, tooltip])\r\n\r\n  useEffect(() => {\r\n    const amrClassChartTooltip = () => {\r\n      return (\r\n        <Tooltip\r\n          position={{ x: 0 }}\r\n          wrapperStyle={{ zIndex: 100, top: 50 }}\r\n          allowEscapeViewBox={{ x: true, y: true }}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (active) {\r\n                return (\r\n                  <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\r\n                    <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\r\n                    <div style={{ height: 14 }} />\r\n                    <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", width: 250 }}>\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage\r\n                        if (RDWAGDataviewFilter === 1) {\r\n                          percentage = ((item.value / item.payload.total2) * 100)\r\n                        } else {\r\n                          percentage = item.value\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100\r\n                        return (\r\n                          <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: \"33.33%\", marginBottom: 8 }}>\r\n                            <div style={{ backgroundColor: item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\r\n                            <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8, wordWrap: \"break-word\", overflowX: \"hidden\" }}>\r\n                              <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14 }}>{item.name}</span>\r\n                              <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {RDWAGDataviewFilter === 2 ? item.payload.percentage[item.name] : item.value}</span>\r\n                              <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }}\r\n        />\r\n      )\r\n    }\r\n\r\n    const armClassFilterComponent = (info) => {\r\n      let maxSum = 0\r\n      if (amrClassChartData[amrClassChartData.length - 1] !== undefined) {\r\n        maxSum = amrClassChartData[amrClassChartData.length - 1].maxSum\r\n      }\r\n\r\n      const dataAMR = amrClassChartData.slice(0, amrClassChartData.length - 1)\r\n\r\n      if (RDWAGDataviewFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={dataAMR}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 20, right: 20 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < middle ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxSum]} type={\"number\"} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={6}>\r\n                  Number of occurrences\r\n                </Label>\r\n              </YAxis>\r\n              {dataAMR.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n  \r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", height: 180 }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflowX: 'scroll', height: 180, marginLeft: 68, justifyContent: amrClassFilter === \"Ampicillin\" ? \"\" : \"space-between\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", marginBottom: 4, marginLeft: 3, marginRight: 10 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n  \r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item) => {\r\n                return (\r\n                  <Bar dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else if (RDWAGDataviewFilter === 2){\r\n        let temp = JSON.parse(JSON.stringify(dataAMR))\r\n\r\n        temp.forEach(element => {\r\n          element.percentage = {}\r\n          for (const key in element) {\r\n            if (![\"genotype\", \"total\", \"total2\", \"percentage\"].includes(key) && !key.includes(\"error\")) {\r\n              const aux = (element[key] * 100) / element.total2\r\n              element.percentage[key] = element[key]\r\n              element[key] = aux\r\n            }\r\n          }\r\n        })\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={temp}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 20, right: 20 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < middle ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} type={\"number\"} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={6}>\r\n                  % Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {temp.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n              \r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", height: 180 }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflowX: 'scroll', height: 180, marginLeft: 68, justifyContent: amrClassFilter === \"Ampicillin\" ? \"\" : \"space-between\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", marginBottom: 4, marginLeft: 3, marginRight: 10 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n  \r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item) => {\r\n                return (\r\n                  <Bar dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n\r\n    const plotAmrClassChart = () => {\r\n      switch (amrClassFilter) {\r\n        case 'Azithromycin':\r\n          return (armClassFilterComponent({\r\n            left: -5, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['ereA', \"#9e9ac8\", \"error-ereA\"],\r\n              ['acrB_R717Q', \"#addd8e\", \"error-acrB_R717Q\"],\r\n              ['acrB_R717L', \"#FBCFE5\", \"error-acrB_R717L\"],\r\n              ['ereA-acrB_R717Q', \"#FFEC78\", \"error-ereA-acrB_R717Q\"],\r\n              ['ereA-acrB_R717L', \"#66c2a4\", \"error-ereA-acrB_R717L\"],\r\n              ['acrB_R717Q-acrB_R717L', \"#fd8d3c\", \"error-acrB_R717Q-acrB_R717L\"],\r\n              ['ereA-acrB_R717Q-acrB_R717L', \"#6baed6\", \"error-ereA-acrB_R717Q-acrB_R717L\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n          }))\r\n        case 'Fluoroquinolones (CipI/R)':\r\n          return (armClassFilterComponent({\r\n            left: 10, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['3_QRDR', \"#6baed6\", \"error-3_QRDR\"],\r\n              ['2_QRDR', \"#FFEC78\", \"error-2_QRDR\"],\r\n              ['1_QRDR + qnrS', \"#66c2a4\", \"error-1_QRDR + qnrS\"],\r\n              ['1_QRDR', \"#FBCFE5\", \"error-1_QRDR\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"],\r\n              ['0_QRDR + qnrS', \"#8D8D8D\", \"error-0_QRDR + qnrS\"]]\r\n          }))\r\n        case 'Chloramphenicol':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['cmlA', \"#addd8e\", \"error-cmlA\"],\r\n              ['catA1', \"#9e9ac8\", \"error-catA1\"],\r\n              [\"catA1-cmlA\", \"#FFEC78\", \"error-catA1-cmlA\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n          }))\r\n        case 'Ampicillin':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaTEM-1D', \"#addd8e\", \"error-blaTEM-1D\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Sulphonamides':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['sul2', \"#ffeda0\", \"error-sul2\"],\r\n              ['sul1', \"#fd8d3c\", \"error-sul1\"],\r\n              ['sul1-sul2', \"#B4DD70\", \"error-sul1-sul2\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Trimethoprim':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['dfrA7', \"#FFEC78\", \"error-dfrA7\"],\r\n              ['dfrA5', \"#D7AEF7\", \"error-dfrA5\"],\r\n              ['dfrA18', \"#66c2a4\", \"error-dfrA18\"],\r\n              ['dfrA17', \"#FCB469\", \"error-dfrA17\"],\r\n              ['dfrA15', \"#FBCFE5\", \"error-dfrA15\"],\r\n              ['dfrA14', \"#6baed6\", \"error-dfrA14\"],\r\n              ['dfrA1', \"#B4DD70\", \"error-dfrA1\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Co-trimoxazole':\r\n          let cotrim = [\"dfrA1\", \"dfrA5\", \"dfrA7\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\"];\r\n          let colors1 = [\"#ffeda0\", \"#fd8d3c\", \"#addd8e\", \"#9e9ac8\", \"#6baed6\", \"#7a0177\", \"#54278f\"]\r\n          let colors2 = [\"#a50f15\", \"#6a5acd\", \"#f1b6da\", \"#fb8072\", \"#4682b4\", \"#2e8b57\", \"#98fb98\"]\r\n          let colors3 = [\"#fcc5c0\", \"#bcbddc\", \"#fdd0a2\", \"#c994c7\", \"#9ecae1\", \"#a8ddb5\", \"#fc9272\"]\r\n          let bars = [['None', \"#B9B9B9\", \"error-None\"]]\r\n\r\n          for (const index in cotrim) {\r\n            bars.push([cotrim[index] + \"-sul1\", colors1[index], \"error-\" + cotrim[index] + \"-sul1\"])\r\n            bars.push([cotrim[index] + \"-sul2\", colors2[index], \"error-\" + cotrim[index] + \"-sul2\"])\r\n            bars.push([cotrim[index] + \"-sul1-sul2\", colors3[index], \"error-\" + cotrim[index] + \"-sul1-sul2\"])\r\n          }\r\n\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: bars\r\n          }))\r\n        case 'Tetracyclines':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['tetA(D)', getColorForTetracyclines('tetA(D)'), \"error-tetA(D)\"],\r\n              ['tetA(C)', getColorForTetracyclines('tetA(C)'), \"error-tetA(C)\"],\r\n              ['tetA(B)', getColorForTetracyclines('tetA(B)'), \"error-tetA(B)\"],\r\n              ['tetA(A)', getColorForTetracyclines('tetA(A)'), \"error-tetA(A)\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n            // ['tetA(AB)', getColorForTetracyclines('tetA(AB)'), \"error-tetA(AB)\"],\r\n            // ['tetA(ABC)', getColorForTetracyclines('tetA(ABC)'), \"error-tetA(ABC)\"],\r\n            // ['tetA(ABCD)', getColorForTetracyclines('tetA(ABCD)'), \"error-tetA(ABCD)\"],\r\n            // ['tetA(ABD)', getColorForTetracyclines('tetA(ABD)'), \"error-tetA(ABD)\"],\r\n            // ['tetA(AC)', getColorForTetracyclines('tetA(AC)'), \"error-tetA(AC)\"],\r\n            // ['tetA(AD)', getColorForTetracyclines('tetA(AD)'), \"error-tetA(AD)\"],\r\n            // ['tetA(ACD)', getColorForTetracyclines('tetA(ACD)'), \"error-tetA(ACD)\"],\r\n            // ['tetA(BC)', getColorForTetracyclines('tetA(BC)'), \"error-tetA(BC)\"],\r\n            // ['tetA(BD)', getColorForTetracyclines('tetA(BD)'), \"error-tetA(BD)\"],\r\n            // ['tetA(BCD)', getColorForTetracyclines('tetA(BCD)'), \"error-tetA(BCD)\"],\r\n            // ['tetA(CD)', getColorForTetracyclines('tetA(CD)'), \"error-tetA(CD)\"]]\r\n          }))\r\n        // case 'AMR Profiles':\r\n        //   return (armClassFilterComponent({\r\n        //     left: dimensions.width > desktop ? 12 : -30, fontsize: dimensions.width > desktop ? 14 : 5, strokeWidth: 0.5, width: 3, bars: [\r\n        //       ['No AMR detected', getColorForAMR('No AMR detected'), \"error-No AMR detected\"],\r\n        //       ['MDR_DCS', getColorForAMR('MDR_DCS'), \"error-MDR_DCS\"],\r\n        //       ['MDR', getColorForAMR('MDR'), \"error-MDR\"],\r\n        //       ['DCS', getColorForAMR('DCS'), \"error-DCS\"],\r\n        //       ['AzithR_MDR', getColorForAMR('AzithR_MDR'), \"error-AzithR_MDR\"],\r\n        //       ['AzithR_DCS', getColorForAMR('AzithR_DCS'), \"error-AzithR_DCS\"],\r\n        //       ['AzithR_DCS_MDR', getColorForAMR('AzithR_DCS_MDR'), \"error-AzithR_DCS_MDR\"],\r\n        //       ['XDR', getColorForAMR('XDR'), \"error-XDR\"],\r\n        //       ['AMR', getColorForAMR('AMR'), \"error-AMR\"],\r\n        //       ['AMR_DCS', getColorForAMR('AMR_DCS'), \"error-AMR_DCS\"]]\r\n        //   }))\r\n        case 'ESBL':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaSHV-12', \"#addd8e\", \"error-blaSHV-12\"],\r\n              ['blaOXA-7', \"#9e9ac8\", \"error-blaOXA-7\"],\r\n              ['blaCTX-M-15_23', \"#6baed6\", \"error-blaCTX-M-15_23\"],\r\n              ['blaCTX-M-55', \"#FBCFE5\", \"error-blaCTX-M-55\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    setPlotAmrClassChart(plotAmrClassChart)\r\n  }, [hoverColor, RDWAGDataviewFilter, amrClassFilter, dimensions, amrClassChartData, desktop, middle])\r\n\r\n  useEffect(() => {\r\n    // const CustomizedDot = (props) => {\r\n    //   const { cx, cy, stroke, payload, value, dataKey } = props;\r\n\r\n    //   if (value !== undefined) {\r\n    //     switch (dataKey) {\r\n    //       case \"Azithromycin\":\r\n    //         return (\r\n    //           <svg x={cx - 6} y={cy - 7} width={120} height={120} fill={getColorForDrug(dataKey)} viewBox=\"0 0 1024 1024\">\r\n    //             <path d=\"M 50,5 95,97.5 5,97.5 Z\"/>\r\n    //           </svg>\r\n    //         );\r\n    //       case \"Chloramphenicol\":\r\n    //         return (\r\n    //           <svg x={cx - 7} y={cy - 7} width={160} height={160} fill={getColorForDrug(dataKey)} viewBox=\"0 0 1024 1024\">\r\n    //             <path d=\"M 25, 50 a 25,25 0 1,1 50,0 a 25,25 0 1,1 -50,0\"/>\r\n    //           </svg>\r\n    //         );\r\n    //       case \"Fluoroquinolones (CipI/R)\":\r\n    //         return (\r\n    //           <svg x={cx - 7} y={cy - 7} width={160} height={160} fill=\"black\" viewBox=\"0 0 1024 1024\">\r\n    //             {/* <path d=\"M0,0 150,0 150,50 0,50\" /> */}\r\n    //           </svg>\r\n    //         );\r\n    //       default:\r\n    //         return (\r\n    //           <svg x={cx - 7} y={cy - 5} width={1} height={1} fill=\"transparent\" viewBox=\"0 0 1024 1024\"></svg>\r\n    //         );\r\n    //     }\r\n    //   }\r\n    //   return (\r\n    //     <svg x={cx - 7} y={cy - 5} width={1} height={1} fill=\"transparent\" viewBox=\"0 0 1024 1024\"></svg>\r\n    //   );\r\n    // };\r\n\r\n    const plotDrugTrendsChart = () => {\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <LineChart\r\n            height={500}\r\n            data={drugTrendsChartData.slice(0, drugTrendsChartData.length - 1)}\r\n            margin={{\r\n              top: 20, bottom: 5, right: 0, left: -5\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis padding={{ left: 20, right: 20 }} dataKey=\"name\" interval={\"preserveStartEnd\"} tick={{ fontSize: 14 }} />\r\n            <YAxis allowDecimals={false} width={70}>\r\n              <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={12}>\r\n                Resistant (%)\r\n              </Label>\r\n            </YAxis>\r\n            {drugTrendsChartData.slice(0, drugTrendsChartData.length - 1).length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n            <Legend\r\n              content={(props) => {\r\n                const { payload } = props;\r\n                return (\r\n                  <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'flex-end' }}>\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\", paddingLeft: 68, marginTop: 10 }}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry\r\n                        return (\r\n                          <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", width: dimensions.width < 1585 ? 120: '19%', marginBottom: 4, marginLeft: 3, marginRight: 3 }}>\r\n                            <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                            <span style={{ fontSize: 12, paddingLeft: 4, fontFamily: 'Montserrat' }}>{dataKey}</span>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n            {tooltip(310, dimensions.width < mobile ? 250 : 325, \"50%\", true, { zIndex: 100, top: 175, right: 0 }, true, 1)}\r\n            {drtClassesForFilter.slice(1).map((item) => (<Line dot={true} dataKey={item} strokeWidth={2} stroke={getColorForDrug(item)} connectNulls type=\"monotone\" />))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n    setPlotDrugTrendsChart(plotDrugTrendsChart)\r\n  }, [drtClassesForFilter, dimensions, drugTrendsChartData, tooltip, mobile])\r\n\r\n  useEffect(() => {\r\n    const plotDrugsAndGenotypesChart = () => {\r\n      if (RFWGFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={500}\r\n              data={drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1)}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 20, right: 20 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis allowDecimals={false} width={75}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={12}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1).length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'flex-end' }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", paddingLeft: 73, marginTop: 10, justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", width: dimensions.width < 1585 ? 120: '19%', marginBottom: 4, marginLeft: 3, marginRight: 3 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip(350, dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 0)}\r\n              {drtClassesForFilter.slice(1).map((item) => (<Bar dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else {\r\n        let teste = JSON.parse(JSON.stringify(drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1)))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (keys[key] !== 'name' && keys[key] !== 'total' && keys[key] !== 'quantities') {\r\n              let aux = keys[key]\r\n              element.quantities[aux] = element[aux]\r\n              element[aux] = (element[aux] * 100) / element.total\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={500}\r\n              data={teste}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 20, right: 20 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={12}>\r\n                  Percentage within genotype (%)\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'flex-end' }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", paddingLeft: 68, justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", width: dimensions.width < 1585 ? 120: '19%', marginBottom: 4, marginLeft: 3, marginRight: 3 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip(150, dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 4)}\r\n              {drtClassesForFilter.slice(1).map((item) => (<Bar dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotDrugsAndGenotypesChart(plotDrugsAndGenotypesChart)\r\n  }, [drtClassesForFilter, dimensions, drugsAndGenotypesChartData, tooltip, mobile, RFWGFilter])\r\n\r\n  function imgOnLoadPromise(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      obj.onload = () => resolve(obj);\r\n      obj.onerror = reject;\r\n    });\r\n  }\r\n\r\n  const [stopLoading] = useState(() => (index) => {\r\n    switch (index) {\r\n      case 0: setCaptureControlMapInProgress(false)\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(false)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(false)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(false)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(false)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  })\r\n\r\n  const [capturePicture] = useState(() => async (id, index, info={}) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(true)\r\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(true)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(true)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(true)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(true)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (info.dataset === \"full\") {\r\n      info.dataset = \"All\"\r\n    } else if (info.dataset === \"local\") {\r\n      info.dataset = \"Travel\"\r\n    } else {\r\n      info.dataset = \"Local\"\r\n    }\r\n\r\n    const names = [\"Resistance frequencies within genotypes\", \"Drug resistance trends\", \"Genotype distribution\", \"Resistance determinants within all genotypes\"]\r\n    const brokenNames = [[\"Resistance frequencies\", \"within genotypes\"], [\"Resistance determinants\", \"within all genotypes\"]]\r\n    \r\n    if (index === 5) {\r\n      let ids = [\"RFWG\", \"RFWAG\", \"DRT\", \"GD\"]\r\n\r\n      var doc = new jsPDF({unit: 'mm', format: 'a4', orientation: 'l'});\r\n\r\n      let typhinetLogo = new Image();\r\n      typhinetLogo.src = typhinetLogoImg2;\r\n      doc.addImage(typhinetLogo, 'PNG', 115, 0, 80, 34)\r\n      doc.setFontSize(16);\r\n      const paragraph1 = \"Nunc ultrices blandit urna mollis porttitor. Vivamus viverra imperdiet justo, vitae fermentum elit accumsan placerat. Maecenas malesuada tincidunt rhoncus. Sed quam mauris, lacinia ac nisi consectetur, tincidunt pulvinar mauris. Proin ultricies quam sit amet dolor faucibus, at aliquam leo porttitor. Morbi at molestie nulla. Mauris porta lacus at augue facilisis volutpat. Suspendisse justo odio, congue nec diam ut, pretium blandit arcu. Duis vel leo euismod, pretium ante sit amet, viverra nibh.\"\r\n      const paragraph2 = \"Quisque in tortor dignissim, mollis augue ac, sollicitudin ex. Quisque quis accumsan erat. Suspendisse sed nulla id ante fringilla sodales. Etiam sed pulvinar ex. Integer rutrum dolor a lobortis semper. Praesent fermentum feugiat justo ultrices facilisis. Etiam non sem ac ante rhoncus pretium eget eget dui. Duis non mollis nisl. Nullam id elementum augue, eget feugiat felis. Integer posuere nec sapien quis scelerisque. Etiam ut tortor dignissim, bibendum metus a, varius lectus. Nunc sollicitudin fringilla enim nec auctor. In vel rhoncus arcu. Morbi sed blandit libero.\"\r\n      doc.text(paragraph1, 10, 50, {align: 'justify', maxWidth: 130})\r\n      doc.text(paragraph2, 155, 50, {align: 'justify', maxWidth: 130})\r\n\r\n      doc.addPage('a4', 'l')\r\n      doc.setFontSize(25);\r\n      doc.text(\"Global overview Salmonella Typhi\", 80, 15);\r\n      \r\n      await svgAsPngUri(document.getElementById('control-map'), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200} )\r\n        .then(async (uri) => {\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          canvas.width = 1400;\r\n          canvas.height = 700;\r\n          ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n          var img = canvas.toDataURL(\"image/png\")\r\n          doc.addImage(img, \"PNG\", 0, 18, 298, 155);\r\n        })\r\n      \r\n      let actualMapView = info.mapView\r\n      switch (actualMapView) {\r\n        case \"MDR\":\r\n          actualMapView = \"Multidrug resistant (MDR)\"\r\n          break;\r\n        case \"XDR\":\r\n          actualMapView = \"Extremely drug resistant (XDR)\"\r\n          break;\r\n        case \"Azith\":\r\n          actualMapView = \"Azithromycin resistant\"\r\n          break;\r\n        case \"CipI\":\r\n          actualMapView = \"Ciprofloxacin insusceptible (CipI)\"\r\n          break;\r\n        case \"CipR\":\r\n          actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n          break;\r\n        case \"H58 / Non-H58\":\r\n          actualMapView = \"H58 genotype\"\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      \r\n      doc.setFontSize(14);\r\n      doc.text(\"Map view: \" + actualMapView, 10, 180);\r\n      doc.text(\"Dataset: \" + info.dataset, 10, 187);\r\n      doc.text(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 10, 194);\r\n      doc.text(\"Country: \" + info.country, 10, 201);\r\n      \r\n      if (info.mapView === 'Dominant Genotype') {\r\n        var img = new Image()\r\n        img.src = \"legends/MV_DG.png\"\r\n        doc.addImage(img, 'PNG', 90, 175, 160, 33)\r\n      } else if (info.mapView === 'No. Samples') {\r\n        var img2 = new Image()\r\n        img2.src = \"legends/MV_NS.png\"\r\n        doc.addImage(img2, 'PNG', 260, 170, 28, 35)\r\n      } else {\r\n        var img3 = new Image()\r\n        img3.src = \"legends/MV_outros.png\"\r\n        doc.addImage(img3, 'PNG', 260, 155, 30, 50)\r\n      }\r\n      \r\n      doc.addPage('a4', 'l')\r\n      const names2 = [\"Resistance frequencies within genotypes\", \"Resistance determinants within all genotypes\", \"Drug resistance trends\", \"Genotype distribution\"]\r\n      for (let index = 0; index < ids.length; index++) {\r\n        let legend\r\n        let brush\r\n        const graph = document.getElementById(ids[index])\r\n        if (index === 1 || index === 3) {\r\n          legend = graph.getElementsByClassName('recharts-legend-wrapper')[0];\r\n          legend.style.display = 'none'\r\n        }\r\n        brush = graph.getElementsByClassName('recharts-brush')[0];\r\n        if (brush !== undefined) {\r\n          brush.style.display = 'none'\r\n        }\r\n\r\n        let url\r\n        await domtoimage.toPng(document.getElementById(ids[index]), { quality: 1, bgcolor: \"white\" })\r\n          .then(function (dataUrl) {\r\n            url = dataUrl\r\n          });\r\n\r\n        if (index === 1 || index === 3) {\r\n          legend.style.display = 'block'\r\n        }\r\n        if (brush !== undefined) {\r\n          brush.style.display = 'block'\r\n        }\r\n\r\n        let subtitleH = 0\r\n        if (index === 0) {\r\n          subtitleH = 3\r\n        }\r\n        if (index === 3) {\r\n          subtitleH = 3\r\n        }\r\n\r\n        if (index === 2 && dimensions.width >= desktop) {\r\n          doc.addImage(url, \"PNG\", 5, 15 + subtitleH - 21);\r\n        } else {\r\n          doc.addImage(url, \"PNG\", 5, 15 + subtitleH);\r\n        }\r\n\r\n        let imgWidth = jsPDF.API.getImageProperties(url).width\r\n        imgWidth = Math.floor(imgWidth * 0.264583)\r\n        doc.setFontSize(11)\r\n        const texts = [\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec dictum lorem sit amet auctor hendrerit. Morbi ut pulvinar leo, et dignissim tortor. Cras eget diam dignissim leo volutpat pharetra. Proin blandit consequat eleifend. Pellentesque imperdiet luctus aliquet. Sed vel tortor eros. Praesent interdum, tellus sit amet accumsan tincidunt, nisi magna interdum lorem, quis rhoncus eros massa ac risus.\",\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec dictum lorem sit amet auctor hendrerit. Morbi ut pulvinar leo, et dignissim tortor. Cras eget diam dignissim leo volutpat pharetra. Proin blandit consequat eleifend. Pellentesque imperdiet luctus aliquet. Sed vel tortor eros. Praesent interdum, tellus sit amet accumsan tincidunt, nisi magna interdum lorem, quis rhoncus eros massa ac risus.\",\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec dictum lorem sit amet auctor hendrerit. Morbi ut pulvinar leo, et dignissim tortor. Cras eget diam dignissim leo volutpat pharetra. Proin blandit consequat eleifend. Pellentesque imperdiet luctus aliquet. Sed vel tortor eros. Praesent interdum, tellus sit amet accumsan tincidunt, nisi magna interdum lorem, quis rhoncus eros massa ac risus.\",\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec dictum lorem sit amet auctor hendrerit. Morbi ut pulvinar leo, et dignissim tortor. Cras eget diam dignissim leo volutpat pharetra. Proin blandit consequat eleifend. Pellentesque imperdiet luctus aliquet. Sed vel tortor eros. Praesent interdum, tellus sit amet accumsan tincidunt, nisi magna interdum lorem, quis rhoncus eros massa ac risus.\"\r\n        ]\r\n        let spaceBetween = -4\r\n        if (dimensions.width < 1750) {\r\n          spaceBetween = 13\r\n        }\r\n        doc.text(texts[index], imgWidth + spaceBetween, 23 + subtitleH, {align: 'justify', maxWidth: 50})\r\n\r\n\r\n        doc.setFontSize(14)\r\n        doc.text(names2[index], 27, 10)\r\n        doc.setFontSize(9)\r\n\r\n        if (index === 0) {\r\n          doc.text(\"Top Genotypes (up to 5)\", 27, 15)\r\n        }\r\n        if (index === 3) {\r\n          doc.text(\"Top Genotypes (up to 10)\", 27, 15)\r\n        }\r\n\r\n        if (index === 1) {\r\n          var img4 = new Image()\r\n          if (amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            img4.src = \"legends/Fluoroquinolones (CipI-R).png\"\r\n          } else {\r\n            img4.src = \"legends/\" + info.amrClassFilter + \".png\"\r\n          }\r\n          doc.addImage(img4, 'PNG', 26, 105 + subtitleH)\r\n        } else if (index === 3) {\r\n          var img5 = new Image()\r\n          img5.src = \"legends/GD.png\"\r\n          doc.addImage(img5, 'PNG', 26, 105 + subtitleH)\r\n        }\r\n        if (index < ids.length - 1) {\r\n          doc.addPage('a4', 'l')\r\n        }\r\n      }\r\n\r\n      doc.save(\"TyphiNET - Global Overview.pdf\");\r\n      setCaptureReportInProgress(false);\r\n\r\n    } else if (index !== 0) {\r\n\r\n      let graph = document.getElementById(id)\r\n      let canvas = document.createElement(\"canvas\")\r\n      let ctx = canvas.getContext('2d');\r\n      let graphImg = document.createElement(\"img\");\r\n      let graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      var legend = graph.getElementsByClassName('recharts-legend-wrapper')[0];\r\n      var brush = graph.getElementsByClassName('recharts-brush')[0];\r\n  \r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        legend.style.display = 'none'\r\n      }\r\n      brush.style.display = 'none'\r\n\r\n      await domtoimage.toPng(graph, { quality: 0.1, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          graphImg.src = dataUrl;\r\n          legend.style.display = 'block'\r\n          brush.style.display = 'block'\r\n        });\r\n      \r\n      let cHeight = 20\r\n      let logoHeight = 50\r\n      let legendHeight = 0\r\n      let filterHeight = 80\r\n      let subtitleHeight = 0\r\n      if (id === \"RFWG\" || id === \"RFWAG\") {\r\n        cHeight += 20\r\n        subtitleHeight = 20\r\n      }\r\n      let imgHeight = graphImg.height\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        imgHeight -= 180\r\n      }\r\n      if (id === \"GD\") {\r\n        legendHeight = 40\r\n      }\r\n      let imgWidth = graphImg.width\r\n      if (id === \"RFWAG\") {\r\n        imgWidth += 130\r\n        if (info.amrClassFilter === \"Co-trimoxazole\") {\r\n          imgWidth += 120\r\n        }\r\n      } else if (id === \"GD\") {\r\n        imgWidth += 370\r\n      }\r\n\r\n      await graphImgPromise;\r\n      canvas.width = imgWidth;\r\n\r\n      let DRTHeight = 0\r\n      if (id === \"DRT\" && dimensions.width >= desktop) {\r\n        DRTHeight = 76\r\n      }\r\n      canvas.height = imgHeight + cHeight + logoHeight + legendHeight + filterHeight + subtitleHeight + 20 - DRTHeight;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"18px Montserrat\"\r\n      ctx.fillStyle = \"black\";\r\n      ctx.textAlign = \"center\";\r\n\r\n      if (id === \"DRT\" && dimensions.width >= desktop) {\r\n        ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight - DRTHeight);\r\n      } else {\r\n        ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight);\r\n      }\r\n\r\n      if (id === \"RFWG\") {\r\n        ctx.fillText(brokenNames[0][0], canvas.width/2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[0][1], canvas.width/2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Top Genotypes (up to 5)\", canvas.width/2, 32 + logoHeight + subtitleHeight)\r\n      } else if (id === \"RFWAG\") {\r\n        ctx.fillText(brokenNames[1][0], canvas.width/2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[1][1], canvas.width/2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Top Genotypes (up to 10)\", canvas.width/2, 32 + logoHeight + subtitleHeight)\r\n      }else{\r\n        ctx.fillText(names[index - 1], canvas.width/2, 10 + logoHeight)\r\n      }\r\n\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        let legendImg = document.createElement(\"img\")\r\n        let legendImgPromise = imgOnLoadPromise(legendImg)\r\n        if (id === \"RFWAG\") {\r\n          if (amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            legendImg.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            legendImg.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n          \r\n        } else {\r\n          legendImg.src = \"legends/GD2.png\";\r\n        }\r\n        await legendImgPromise;\r\n\r\n        if (id === \"DRT\" && dimensions.width >= desktop) {\r\n          ctx.drawImage(legendImg, graphImg.width, logoHeight + subtitleHeight + 12 + cHeight - DRTHeight);\r\n        } else {\r\n          ctx.drawImage(legendImg, graphImg.width, logoHeight + subtitleHeight + 12 + cHeight);\r\n        }\r\n      }\r\n\r\n      let typhinetLogo = document.createElement(\"img\");\r\n      let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n      typhinetLogo.src = typhinetLogoImg2;\r\n      await typhinetLogoPromise;\r\n      ctx.drawImage(typhinetLogo, 0, 0, 120, 50);\r\n\r\n      ctx.fillStyle = \"black\"\r\n      ctx.font = \"14px Montserrat\"\r\n      ctx.textAlign = \"start\"\r\n      ctx.fillText(\"Dataset: \" + info.dataset, 10, canvas.height - 70)\r\n      ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 10, canvas.height - 50)\r\n      ctx.fillText(\"Country: \" + info.country, 10, canvas.height - 30)\r\n\r\n      const base64 = canvas.toDataURL();\r\n      stopLoading(index)\r\n      download(base64, \"TiphyNET - \" + names[index - 1] + \".png\");\r\n    } else {\r\n      svgAsPngUri(document.getElementById(id), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          let cWidth = 3600\r\n          let cHeight = 1800\r\n          let textHeight = 240\r\n          let legendHeight = 0\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendHeight = 440\r\n          }\r\n\r\n          canvas.width = cWidth;\r\n          canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n          ctx.fillStyle = \"white\";\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n          ctx.font = \"bolder 50px Montserrat\"\r\n          ctx.fillStyle = \"black\";\r\n          ctx.textAlign = \"center\";\r\n          ctx.fillText(\"Global overview Salmonella Typhi\", canvas.width/2, 80)\r\n          ctx.font = \"35px Montserrat\"\r\n          ctx.textAlign = \"center\";\r\n\r\n          let actualMapView = info.mapView\r\n          switch (actualMapView) {\r\n            case \"MDR\":\r\n              actualMapView = \"Multidrug resistant (MDR)\"\r\n              break;\r\n            case \"XDR\":\r\n              actualMapView = \"Extremely drug resistant (XDR)\"\r\n              break;\r\n            case \"Azith\":\r\n              actualMapView = \"Azithromycin resistant\"\r\n              break;\r\n            case \"CipI\":\r\n              actualMapView = \"Ciprofloxacin insusceptible (CipI)\"\r\n              break;\r\n            case \"CipR\":\r\n              actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n              break;\r\n            case \"H58 / Non-H58\":\r\n              actualMapView = \"H58 genotype\"\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          ctx.fillText(\"Map view: \" + actualMapView, canvas.width/2, 140)\r\n          ctx.fillText(\"Dataset: \" + info.dataset, canvas.width/2, 190)\r\n          ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], canvas.width/2, 240)\r\n\r\n          ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n          let legendImg = document.createElement(\"img\");\r\n          let legendImgoPromise = imgOnLoadPromise(legendImg);\r\n          let h\r\n          let w\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendImg.src = \"legends/MV_DG.png\";\r\n            await legendImgoPromise;\r\n            let centerWidth = (canvas.width - 1731)/2\r\n            ctx.drawImage(legendImg, centerWidth, canvas.height - legendHeight, 1731, 400);\r\n          } else if (info.mapView === 'No. Samples') {\r\n            legendImg.src = \"legends/MV_NS.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 300\r\n            ctx.drawImage(legendImg, canvas.width - w, canvas.height - h, w, h);\r\n          } else {\r\n            legendImg.src = \"legends/MV_outros.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 230\r\n            ctx.drawImage(legendImg, canvas.width - w, canvas.height - h, w, h);\r\n          }\r\n\r\n          let typhinetLogo = document.createElement(\"img\");\r\n          let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n          typhinetLogo.src = typhinetLogoImg2;\r\n          await typhinetLogoPromise;\r\n          ctx.drawImage(typhinetLogo, 0, 0, 600, 252);\r\n\r\n          const base64 = canvas.toDataURL();\r\n          stopLoading(index)\r\n          download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n        });\r\n    }\r\n\r\n  })\r\n\r\n  const [dowloadBaseSpreadsheet] = useState(() => () => {\r\n    axios.get(`${API_ENDPOINT}file/download`)\r\n      .then((res) => {\r\n        let cols_to_remove = ['azith_pred_pheno', 'cip_pred_pheno', 'dcs_category', 'amr_category', 'num_qrdr', 'num_acrb', 'ESBL_category', 'chloramphenicol_category', 'tetracycline_category', 'cip_pheno_qrdr_gene', 'dcs_mechanisms', 'num_amr_genes', 'dfra_any', 'sul_any', 'co_trim', 'GENOTYPE_SIMPLE', 'h58_genotypes']\r\n        let indexes = []\r\n        let csv = res.data.split('\\n')\r\n        let lines = []\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',')\r\n          if (line[1] !== '-' && line[2] !== '-') {\r\n            lines.push(line)\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < cols_to_remove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(cols_to_remove[index])\r\n          indexes.push(currentIndex)\r\n        }\r\n\r\n        let newLines = []\r\n        for (let i = 0; i < lines.length; i++) {\r\n          let aux = []\r\n          for (let index = 0; index < lines[i].length; index++) {\r\n            if (!indexes.includes(index)) {\r\n              aux.push(lines[i][index])\r\n            }\r\n          }\r\n          newLines.push(aux)\r\n        }\r\n        let newCSV = \"\"\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = \"\"\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index]\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += \",\"\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += \"\\n\"\r\n          }\r\n          newCSV += aux\r\n        }\r\n\r\n        download(newCSV, 'TyphiNET_Database.csv');\r\n      })\r\n  })\r\n\r\n  const generateMapLegendOptions = () => {\r\n    let percentageSteps = ['1', '25', '50', '75', '100']\r\n\r\n    switch (mapView) {\r\n      case 'No. Samples':\r\n        let legends = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300']\r\n        let aux = [1, 10, 20, 100, 300]\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0</span>\r\n            </div>\r\n            {[...Array(5).keys()].map((n) => {\r\n              // const samplesLegend = n !== 0 ? n * (samplesQty / 5) : 1\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapSamplesColorScale(aux[n]) }} />\r\n                  <span>{legends[n]}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      // case 'AMR Profiles':\r\n      //   let amrProfiles = ['MDR_DCS', 'MDR', 'DCS', 'AzithR_MDR', 'AzithR_DCS', 'AzithR_DCS_MDR', 'XDR', 'AMR', 'AMR_DCS'].sort((a, b) => a.localeCompare(b));\r\n      //   amrProfiles.push('No AMR detected')\r\n      //   return (\r\n      //     <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n      //       {amrProfiles.map((a, n) => {\r\n      //         return (\r\n      //           <div key={n} className=\"samples-info\">\r\n      //             <div className=\"color\" style={{ backgroundColor: getColorForAMR(a) }} />\r\n      //             <span>{a}</span>\r\n      //           </div>\r\n      //         )\r\n      //       })}\r\n      //     </div>\r\n      //   )\r\n      case 'Sensitive to all drugs':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'Dominant Genotype':\r\n        return (\r\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n            {genotypes.map((g, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForGenotype(g) }} />\r\n                  <span>{g}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      case 'H58 / Non-H58':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((g, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(g) }} />\r\n                  <span>{g}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'MDR':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'XDR':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'DCS':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'Azith':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'CipI':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'CipR':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      // case 'Resistance to Drug':\r\n      //   let drugs = [\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"]\r\n      //   return (\r\n      //     <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n      //       {drugs.map((d, n) => {\r\n      //         return (\r\n      //           <div key={n} className=\"samples-info\">\r\n      //             <div className=\"color\" style={{ backgroundColor: getColorForDrug(d) }} />\r\n      //             <span>{d}</span>\r\n      //           </div>\r\n      //         )\r\n      //       })}\r\n      //     </div>\r\n      //   )\r\n      // case 'Plasmid Incompatibility Type':\r\n      //   let incTypes = [\"IncX1\", \"IncFIA(HI1)\", \"IncFIB(pHCM2)\", \"IncA/C2\", \"IncP1\", \"IncFIA(HI1)/IncHI1A/IncHI1B(R27)\", \"Col(BS512)\", \"IncHI1A/IncHI1B(R27)\", \"IncN\", \"IncHI1B(R27)\", \"p0111\", \"IncHI1A\", \"IncI1\", \"IncY\", \"IncFIB(AP001918)\", \"IncFIB(K)\", \"IncHI2/IncHI2A\", \"Col440I\", \"Col440I\", \"Col156\", \"Col440II/Col440II\", \"IncFIA(HI1)/IncHI1A\", \"ColRNAI\", \"ColpVC\", \"IncX3\"].sort((a, b) => a.localeCompare(b));\r\n      //   return (\r\n      //     <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n      //       {incTypes.map((d, n) => {\r\n      //         return (\r\n      //           <div key={n} className=\"samples-info\">\r\n      //             <div className=\"color\" style={{ backgroundColor: getColorForIncType(d) }} />\r\n      //             <span>{d}</span>\r\n      //           </div>\r\n      //         )\r\n      //       })}\r\n      //     </div>\r\n      //   )\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const renderMapLegend = () => {\r\n    return (\r\n      <div className=\"map-legend\">\r\n        <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 12, marginTop: 2 }}>\r\n          <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\" }}>Select map view</InputLabel>\r\n          <Select\r\n            value={mapView}\r\n            onChange={evt => setMapView(evt.target.value)}\r\n            fullWidth\r\n            style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }}\r\n          >\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'MDR'}>\r\n              Multidrug resistant (MDR)\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'XDR'}>\r\n              Extremely drug resistant (XDR)\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Azith'}>\r\n              Azithromycin resistant\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'CipI'}>\r\n              Ciprofloxacin insusceptible (CipI)\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'CipR'}>\r\n              Ciprofloxacin resistant (CipR)\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Dominant Genotype'}>\r\n              Dominant Genotype\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'H58 / Non-H58'}>\r\n              H58 genotype\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Sensitive to all drugs'}>\r\n              Sensitive to all drugs\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'No. Samples'}>\r\n              No. Samples\r\n            </MenuItem>\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'AMR Profiles'}>\r\n              AMR Profiles\r\n            </MenuItem> */}\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Plasmid Incompatibility Type'}>\r\n              Plasmid Incompatibility Type\r\n            </MenuItem> */}\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'DCS'}>\r\n              DCS\r\n            </MenuItem> */}\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Resistance to Drug'}>\r\n              Resistance to Drug\r\n            </MenuItem> */}\r\n          </Select>\r\n        </FormControl>\r\n        {generateMapLegendOptions()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"menu-bar-mobile\">\r\n        <img className=\"logoImageMenu-mobile\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n      </div>\r\n      <div style={{ padding: dimensions.width > 770 ? '16px 16px 0px 16px' : '16px 0px 0px 0px' }}>\r\n        <div className=\"info-wrapper\">\r\n          {dimensions.width > desktop && (\r\n            <>\r\n              <div style={{ display: \"flex\", flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <img style={{ height: 90, marginBottom: -10 }} src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n              </div>\r\n              <div style={{ width: 16 }} />\r\n            </>\r\n          )}\r\n          <div className=\"card\">\r\n            <span>\r\n              Total Genomes\r\n              <FontAwesomeIcon icon={faInfoCircle} onClick={handleClickOpen2} className=\"icon-info\" />\r\n              <Dialog\r\n                open={open2}\r\n                onClose={handleClose2}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Information\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    155 genome samples absent from TyphiNET DB\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose2} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </span>\r\n            {totalGenomes.length === actualGenomes.length ? (\r\n              <span className=\"value\">{totalGenomes.length}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenomes.length}\r\n                <span className=\"value-total\">/{totalGenomes.length}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ width: 16 }} />\r\n          <div className=\"card\">\r\n            <span>\r\n              Total Genotypes\r\n              <FontAwesomeIcon icon={faInfoCircle} onClick={handleClickOpen} className=\"icon-info\" />\r\n              <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Information\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    Total genotypes present in TyphiNET database / Total genotypes worldwide published\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </span>\r\n            {totalGenotypes.length === actualGenotypes.length ? (\r\n              <span className=\"value\">{totalGenotypes.length}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenotypes.length}\r\n                <span className=\"value-total\">/{totalGenotypes.length}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"map-filters-wrapper\" style={{ flexDirection: 'column' }}>\r\n          <h2 style={{ textAlign: \"center\" }}>Global Overview of <i>Salmonella</i> Typhi</h2>\r\n          <div className=\"map-filters-wrapper-inside\" style={{ flexDirection: dimensions.width > desktop ? 'row' : 'column' }}>\r\n            <div className=\"map-wrapper\">\r\n              <ComposableMap\r\n                id=\"control-map\"\r\n                data-tip=\"\"\r\n                projectionConfig={{\r\n                  rotate: [-10, 0, 0],\r\n                  scale: 210,\r\n                }}\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n              >\r\n                <ZoomableGroup\r\n                  zoom={controlMapPosition.zoom}\r\n                  center={controlMapPosition.coordinates}\r\n                  onMoveEnd={(position) => {\r\n                    setControlMapPosition(position);\r\n                  }}\r\n                >\r\n                  <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Geographies\r\n                    geography={geography}>\r\n                    {({ geographies }) =>\r\n                      geographies.map((geo) => {\r\n                        const sample = worldMapSamplesData.find(s => s.displayName === geo.properties.NAME)\r\n                        \r\n                        const d = worldMapComplementaryData[geo.properties.NAME]; /* .NAME || .NAME_LONG */\r\n                        let country\r\n\r\n                        let fill = \"lightgrey\"\r\n                        let darkGray = \"#727272\"\r\n\r\n                        switch (mapView) {\r\n                          case 'No. Samples':\r\n                            if (sample && sample.count !== 0) {\r\n                              fill = mapSamplesColorScale(sample.count);\r\n                            } else if (sample && sample.count === 0) {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          // case 'AMR Profiles':\r\n                          //   country = worldMapAmrProfilesData.find(s => s.displayName === geo.properties.NAME)\r\n                          //   if (country !== undefined)\r\n                          //     if (country.amrProfiles.length > 0)\r\n                          //       fill = getColorForAMR(country.amrProfiles[0].name);\r\n                          //   break;\r\n                          case 'Dominant Genotype':\r\n                            country = worldMapGenotypesData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              const temp = country.genotypes\r\n                              temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                              if (sample && sample.count >= 20) {\r\n                                fill = getColorForGenotype(temp[0].lineage)\r\n                              } else {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'H58 / Non-H58':\r\n                            country = worldMapH58Data.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.genotypes[0]) {\r\n                              const temp = country.genotypes.find(g => g.type === 'H58')\r\n\r\n                              if (temp === undefined || (temp !== undefined && temp.count < 20)) {\r\n                                fill = darkGray\r\n                              } else if (temp !== undefined && temp.count >= 20) {\r\n                                fill = mapRedColorScale(temp.percentage)\r\n                              } else {\r\n                                fill = '#F5F4F6'\r\n                              }\r\n\r\n                              // switch (temp === undefined) {\r\n                              //   case false:\r\n                              //     fill = mapRedColorScale(temp.percentage)\r\n                              //     break;\r\n                              //   // case 'Non-H58':\r\n                              //   //   fill = '#F5F4F6'\r\n                              //   //   break;\r\n                              //   default:\r\n                              //     fill = '#F5F4F6'\r\n                              //     break;\r\n                              // }\r\n                            }\r\n                            break;\r\n                          case 'MDR':\r\n                            country = worldMapMDRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.count >= 20) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else {\r\n                                fill = darkGray\r\n                              }\r\n                              \r\n                            } else if (country !== undefined) {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'Sensitive to all drugs':\r\n                            country = worldMapSTADData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.count >= 20) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else {\r\n                                fill = darkGray\r\n                              }\r\n                            } else {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'XDR':\r\n                            country = worldMapXDRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.count >= 20) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else {\r\n                                fill = darkGray\r\n                              }\r\n                            } else {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          // case 'DCS':\r\n                          //   country = worldMapDCSData.find(s => s.displayName === geo.properties.NAME)\r\n                          //   if (country !== undefined && country.percentage) {\r\n                          //     fill = mapRedColorScale(country.percentage);\r\n                          //   } else if (country !== undefined) {\r\n                          //     fill = '#F5F4F6'\r\n                          //   }\r\n                          //   break;\r\n                          case 'Azith':\r\n                            country = worldMapAZITHData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.count >= 20) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else {\r\n                                fill = darkGray\r\n                              }\r\n                            } else {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'CipI':\r\n                            country = worldMapCIPIData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.count >= 20) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else {\r\n                                fill = darkGray\r\n                              }\r\n                            } else {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'CipR':\r\n                            country = worldMapCIPRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.count >= 20) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else {\r\n                                fill = darkGray\r\n                              }\r\n                            } else {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          // case 'Resistance to Drug':\r\n                          //   country = worldMapDrugsData.find(s => s.displayName === geo.properties.NAME)\r\n                          //   if (country !== undefined && country.drugs.length > 0) {\r\n                          //     fill = getColorForDrug(country.drugs[0].name);\r\n                          //   } else if (country !== undefined) {\r\n                          //     fill = '#F5F4F6'\r\n                          //   }\r\n                          //   break;\r\n                          // case 'Plasmid Incompatibility Type':\r\n                          //   country = worldMapPlasmidIncompatibilityTypeData.find(s => s.displayName === geo.properties.NAME)\r\n                          //   if (country !== undefined && country.incTypes.length > 0) {\r\n                          //     fill = getColorForIncType(country.incTypes[0].type);\r\n                          //   } else if (country !== undefined) {\r\n                          //     fill = '#F5F4F6'\r\n                          //   }\r\n                          //   break;\r\n                          default:\r\n                            break;\r\n                        }\r\n\r\n                        return (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            cursor=\"pointer\"\r\n                            fill={fill}\r\n                            onClick={() => {\r\n                              if (d !== undefined && sample !== undefined)\r\n                                setActualCountry(sample.name)\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              const { NAME } = geo.properties;\r\n                              switch (mapView) {\r\n                                case 'No. Samples':\r\n                                  if (sample !== undefined && d !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      additionalInfo: {\r\n                                        samples: sample.count,\r\n                                        genotypes: d.GENOTYPES.TOTAL,\r\n                                        H58: Math.round(d.H58) !== d.H58 ? d.H58.toFixed(2) : d.H58,\r\n                                        MDR: Math.round(d.MDR) !== d.MDR ? d.MDR.toFixed(2) : d.MDR,\r\n                                        DCS: Math.round(d.DCS) !== d.DCS ? d.DCS.toFixed(2) : d.DCS,\r\n                                        CipI: Math.round(d.CipI) !== d.CipI ? d.CipI.toFixed(2) : d.CipI,\r\n                                        CipR: Math.round(d.CipR) !== d.CipR ? d.CipR.toFixed(2) : d.CipR,\r\n                                        AzithR: Math.round(d.AzithR) !== d.AzithR ? d.AzithR.toFixed(2) : d.AzithR,\r\n                                        STAD: Math.round(d.STAD) !== d.STAD ? d.STAD.toFixed(2) : d.STAD\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                // case 'AMR Profiles':\r\n                                //   if (country !== undefined) {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME,\r\n                                //       amrProfilesInfo: country.amrProfiles\r\n                                //     });\r\n                                //   } else {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME\r\n                                //     })\r\n                                //   }\r\n                                //   break;\r\n                                case 'Dominant Genotype':\r\n                                  if (country !== undefined && country.total >= 20) {\r\n                                    let temp = country.genotypes\r\n                                    temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      genotypeInfo: temp\r\n                                    });\r\n                                  } else if (country !== undefined && country.total < 20) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      smallerThan20: true\r\n                                    })\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'H58 / Non-H58':\r\n                                  if (country !== undefined && country.genotypes.length > 0) {\r\n                                    const isBiggerThan20 = country.genotypes.find(g => g.type === \"H58\" && g.count >= 20) !== undefined\r\n                                    if (isBiggerThan20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        simpleGenotypeInfo: country.genotypes\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'MDR':\r\n                                  if (country !== undefined && country.MDRs.length > 0) {\r\n                                    if (country.count >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        mdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Sensitive to all drugs':\r\n                                  if (country !== undefined && country.STADs.length > 0) {\r\n                                    if (country.count >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        stadInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'XDR':\r\n                                  if (country !== undefined && country.XDRs.length > 0) {\r\n                                    if (country.count >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        xdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                // case 'DCS':\r\n                                //   if (country !== undefined && country.DCSs.length > 0) {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME,\r\n                                //       dcsInfo: {\r\n                                //         count: country.count,\r\n                                //         percentage: country.percentage,\r\n                                //       }\r\n                                //     });\r\n                                //   } else {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME\r\n                                //     })\r\n                                //   }\r\n                                //   break;\r\n                                case 'Azith':\r\n                                  if (country !== undefined && country.AZs.length > 0) {\r\n                                    if (country.count >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        azInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipI':\r\n                                  if (country !== undefined && country.CipIs.length > 0) {\r\n                                    if (country.count >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipIInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipR':\r\n                                  if (country !== undefined && country.CipRs.length > 0) {\r\n                                    if (country.count >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                // case 'Resistance to Drug':\r\n                                //   if (country !== undefined && country.drugs.length > 0) {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME,\r\n                                //       drugsInfo: country.drugs\r\n                                //     });\r\n                                //   } else {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME\r\n                                //     })\r\n                                //   }\r\n                                //   break;\r\n                                // case 'Plasmid Incompatibility Type':\r\n                                //   if (country !== undefined && country.incTypes.length > 0) {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME,\r\n                                //       incTypesInfo: country.incTypes\r\n                                //     });\r\n                                //   } else {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME\r\n                                //     })\r\n                                //   }\r\n                                //   break;\r\n                                default:\r\n                                  break;\r\n                              }\r\n                            }}\r\n                            style={{\r\n                              default: {\r\n                                outline: \"none\",\r\n                              },\r\n                              hover: {\r\n                                fill: \"#CFD8DC\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                              pressed: {\r\n                                fill: \"#FF5722\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              }\r\n                            }}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n                  </Geographies>\r\n                </ZoomableGroup>\r\n\r\n              </ComposableMap>\r\n              {(dimensions.width > desktop) && (\r\n                <div className=\"map-upper-right-buttons\">\r\n                  {renderMapLegend()}\r\n                </div>\r\n              )}\r\n              {(\r\n                <div className=\"map-upper-left-buttons \">\r\n                  <div className=\"map-filters\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span style={{ fontWeight: 600, fontSize: 20, marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        style={{ marginTop: 5 }}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"full\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"global\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"local\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div style={{ marginTop: 4 }}>\r\n                      <Typography gutterBottom style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\r\n                        Select time period\r\n                      </Typography>\r\n                      <CustomSlider\r\n                        style={{ marginTop: dimensions.width > desktop ? '' : -5, marginBottom: dimensions.width > desktop ? '' : -5 }}\r\n                        value={actualTimePeriodRange}\r\n                        min={timePeriodRange[0]}\r\n                        max={timePeriodRange[1]}\r\n                        onChange={(evt, value) => {\r\n                          setActualTimePeriodRange(value)\r\n                        }}\r\n                        valueLabelDisplay=\"auto\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"map-lower-left-buttons\">\r\n                <Zoom in={controlMapPosition.zoom !== 1 || controlMapPosition.coordinates.some(c => c !== 0)}>\r\n                  <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Recenter Map</span>} placement=\"right\">\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() => setControlMapPosition({ coordinates: [0, 0], zoom: 1 })}\r\n                    >\r\n                      <FontAwesomeIcon icon={faCrosshairs} />\r\n                    </div>\r\n                  </TooltipMaterialUI>\r\n                </Zoom>\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom In</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom >= 4) return;\r\n                      setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom Out</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom <= 1) return;\r\n                      if (controlMapPosition.zoom / 2 === 1) {\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                      } else {\r\n                        setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n              </div>\r\n              <div className=\"map-lower-right-buttons\">\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Map as PNG</span>} placement=\"left\">\r\n                  <div\r\n                    className={`button ${captureControlMapInProgress && \"disabled\"}`}\r\n                    onClick={() => {\r\n                      if (!captureControlMapInProgress)\r\n                      capturePicture('control-map', 0, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange})\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCamera} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                {captureControlMapInProgress && (\r\n                  <CustomCircularProgress\r\n                    size={54}\r\n                    thickness={4}\r\n                    style={{ position: \"absolute\", top: 5, left: -7 }} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {!(dimensions.width > desktop) && (\r\n              <div style={{ marginTop: 16, marginBottom: 8 }}>\r\n                {renderMapLegend()}\r\n              </div>\r\n            )}\r\n            <ReactTooltip>\r\n              {tooltipContent && (\r\n                <div className=\"tooltip-map\">\r\n                  <span className=\"country\">{tooltipContent.name}</span>\r\n                  {tooltipContent.additionalInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Samples: {tooltipContent.additionalInfo.samples}</span>\r\n                      <span>Genotypes: {tooltipContent.additionalInfo.genotypes}</span>\r\n                      <span>H58: {tooltipContent.additionalInfo.H58}%</span>\r\n                      <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\r\n                      <span>DCS: {tooltipContent.additionalInfo.DCS}%</span>\r\n                      <span>AzithR: {tooltipContent.additionalInfo.AzithR}%</span>\r\n                      <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\r\n                      <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\r\n                      <span>Susceptible: {tooltipContent.additionalInfo.STAD}%</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.genotypeInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.genotypeInfo.map((genotype, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForGenotype(genotype.lineage) }} />\r\n                              <span>{genotype.lineage}: {genotype.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.simpleGenotypeInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[0].type}: {tooltipContent.simpleGenotypeInfo[0].count} ({tooltipContent.simpleGenotypeInfo[0].percentage}%)</span>\r\n                      ) : tooltipContent.simpleGenotypeInfo.length > 1 && tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[1].type}: {tooltipContent.simpleGenotypeInfo[1].count} ({tooltipContent.simpleGenotypeInfo[1].percentage}%)</span>\r\n                      ) : (\r\n                        <span>H58: 0 (0%)</span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.mdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>MDR: {tooltipContent.mdrInfo.count} ({tooltipContent.mdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.stadInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Susceptible: {tooltipContent.stadInfo.count} ({tooltipContent.stadInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.xdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>XDR: {tooltipContent.xdrInfo.count} ({tooltipContent.xdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.dcsInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>DCS: {tooltipContent.dcsInfo.count} ({tooltipContent.dcsInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.azInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>AzithR: {tooltipContent.azInfo.count} ({tooltipContent.azInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipIInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipI: {tooltipContent.cipIInfo.count} ({tooltipContent.cipIInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipRInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipR: {tooltipContent.cipRInfo.count} ({tooltipContent.cipRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.drugsInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.drugsInfo.map((drug, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForDrug(drug.name) }} />\r\n                              <span>{drug.name}: {drug.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.amrProfilesInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.amrProfilesInfo.map((amr, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForAMR(amr.name) }} />\r\n                              <span>{amr.name}: {amr.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.incTypesInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.incTypesInfo.map((incType, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForIncType(incType.type) }} />\r\n                              <span>{incType.type}: {incType.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {(!tooltipContent.incTypesInfo && !tooltipContent.amrProfilesInfo && !tooltipContent.drugsInfo && !tooltipContent.xdrInfo && !tooltipContent.mdrInfo && !tooltipContent.stadInfo && !tooltipContent.dcsInfo && !tooltipContent.azInfo && !tooltipContent.cipIInfo && !tooltipContent.cipRInfo && !tooltipContent.simpleGenotypeInfo && !tooltipContent.genotypeInfo && !tooltipContent.additionalInfo) && (\r\n                    <div className=\"additional-info\">\r\n                      <span>{tooltipContent.smallerThan20 ? \"Not known\" : !allCountries.includes(tooltipContent.name) || dataset === 'full' ? 'No reported data' : dataset === 'local' ? 'No travel reported' : 'No travel information'}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n        <div className=\"chart-wrapper\" style={{ flexDirection: 'column' }}>\r\n          <h2 style={{ textAlign: \"center\" }}>Now showing: {dataset === \"full\" ? \"All\" : dataset === \"global\" ? \"Local\" : \"Travel\"} data from {actualCountry === \"All\" ? \"all countries\" : actualCountry} from {actualTimePeriodRange.toString().substring(0, 4)} to {actualTimePeriodRange.toString().substring(5)}</h2>\r\n          <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 16, alignItems: \"center\", textAlign: \"center\" }}>\r\n            <label style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\", fontSize: 18 }}>Select country (or click map)</label>\r\n            <Select\r\n              value={actualCountry}\r\n              onChange={evt => setActualCountry(evt.target.value)}\r\n              fullWidth\r\n              style={{ fontWeight: 600, fontFamily: \"Montserrat\", width: 200, textAlign: \"left\" }}\r\n            >\r\n              {countriesForFilter.map((country, index) => {\r\n                return (\r\n                  <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={country}>\r\n                    {country}\r\n                  </MenuItem>\r\n                )\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: dimensions.width > desktop ? \"row\" : \"column\", marginTop: 16, paddingBottom: 20 }}>\r\n              <div style={{ alignItems: 'center', display: \"flex\", flexDirection: \"column\", flex: 0.5, paddingRight: dimensions.width < mobile ? 0 : 10 }}>\r\n                <div style={{ height: 717, width: '100%', maxWidth: 920, display: \"flex\", flexDirection: \"column\" }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span style={{ paddingRight: 32, marginRight: -22, paddingLeft: 35 }} className=\"chart-title\">Resistance frequencies within genotypes</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartRFWGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWGInProgress)\r\n                            capturePicture('RFWG', 1, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title\" style={{ marginLeft: 45, marginBottom: -8, marginTop: dimensions.width > 1010 ? 5 : dimensions.width > desktop ? 10 : 10, fontSize: 10, fontWeight: 400 }}>Top Genotypes (up to 5)</span>\r\n                  <div style={{ paddingTop: '0px', height: '74px', width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\", paddingBottom: -8 }}>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 5, marginTop: 23 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Data view</InputLabel>\r\n                      <Select\r\n                        value={RFWGFilter}\r\n                        onChange={evt => setRFWGFilter(evt.target.value)}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      >\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\r\n                          Number of genomes\r\n                        </MenuItem>\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\r\n                          Percentage within genotype\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWG\" style={{ height: 687, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {/* <span className=\"y-axis-label-vertical\" style={{ paddingRight: 8, marginBottom: 100 }}>{RFWGFilter === 1 ? 'Number of genomes' : 'Percentage within genotype (%)'}</span> */}\r\n                    {plotDrugsAndGenotypesChart}\r\n                  </div>\r\n                </div>\r\n                <div style={{ width: \"100%\", maxWidth: 920, display: \"flex\", flexDirection: \"column\", paddingTop: 50 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span className=\"chart-title\" style={{ paddingLeft: 50, marginRight: -22, paddingRight: 32 }}>Resistance determinants within all genotypes</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartRFWAGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWAGInProgress)\r\n                            capturePicture('RFWAG', 4, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry, amrClassFilter: amrClassFilter})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWAGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title\" style={{ fontSize: 10, fontWeight: 400, paddingBottom: 10, marginTop: dimensions.width > 1120 ? 5 : dimensions.width < desktop ? 10 : 10, paddingLeft: 50 }}>Top Genotypes (up to 10)</span>\r\n                  <div style={{ width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\", marginBottom: -4, marginRight: dimensions.width > desktop ? \"-10%\" : 0 }}>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginTop: 0 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Select Drug Class</InputLabel>\r\n                      <Select\r\n                        value={amrClassFilter}\r\n                        onChange={evt => setAmrClassFilter(evt.target.value)}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      >\r\n                        {amrClassesForFilter.map((amrClass, index) => {\r\n                          return (\r\n                            <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={amrClass}>\r\n                              {amrClass}\r\n                            </MenuItem>\r\n                          )\r\n                        })}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginTop: 0 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Data view</InputLabel>\r\n                      <Select\r\n                        value={RDWAGDataviewFilter}\r\n                        onChange={evt => setRDWAGDataviewFilter(evt.target.value)}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      > \r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\r\n                          Number of genomes\r\n                        </MenuItem>\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\r\n                          Percentage per year\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWAG\" style={{ height: 513, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {/* <span className=\"y-axis-label-vertical\" style={{ paddingRight: 8, paddingTop: 190 }}>Number of occurrences</span> */}\r\n                    {plotAmrClassChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style={{ alignItems: 'center', display: \"flex\", flexDirection: \"column\", flex: 0.5, paddingLeft: dimensions.width < mobile ? 0 : 10, marginTop: dimensions.width < mobile ? 25 : 0 }}>\r\n                <div style={{ width: \"100%\", maxWidth: 920, display: \"flex\", flexDirection: \"column\", paddingTop: dimensions.width < desktop ? 50 : dimensions.width < 930 ? 0 : 0 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\", paddingBottom: dimensions.width < desktop ? 0 : dimensions.width < 1010 ? 24 : 8 }}>\r\n                    <span className=\"chart-title\" style={{ paddingRight: 32, marginRight: -22 }}>Drug resistance trends</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartDRTInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartDRTInProgress)\r\n                            capturePicture('DRT', 2, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartDRTInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div id=\"DRT\" style={{ paddingTop: dimensions.width < desktop ? '10px' : '76px', height: 600, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {/* <span className=\"y-axis-label-vertical\" style={{ paddingTop: 80 }}>Resistant (%)</span> */}\r\n                    {plotDrugTrendsChart}\r\n                  </div>\r\n                </div>\r\n                <div style={{ width: \"100%\", maxWidth: 920, display: \"flex\", flexDirection: \"column\", paddingTop: dimensions.width < desktop ? 50 : dimensions.width < 1010 ? 29 : 45 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span className=\"chart-title\" style={{ marginRight: -22, paddingRight: 32 }}>Genotype distribution</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartGDInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartGDInProgress)\r\n                            capturePicture('GD', 3, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartGDInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ paddingTop: dimensions.width < desktop ? '0px' : dimensions.width > 1120 ? '65px' : '86px', height: dimensions.width > 1120 ? '78px' : '74px', width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\", paddingBottom: -8 }}>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 5, marginTop: 23 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Data view</InputLabel>\r\n                      <Select\r\n                        value={populationStructureFilter}\r\n                        onChange={evt => setPopulationStructureFilter(evt.target.value)}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      >\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\r\n                          Number of genomes\r\n                        </MenuItem>\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\r\n                          Percentage per year\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"GD\" style={{ width: '100%', height: 511, display: \"flex\", flexDirection: /*populationStructureFilter === 1 ? \"row\" : \"column-reverse\"*/\"row\", alignItems: \"center\" }}>\r\n                    {/* {getPopulationStructureChartLabel()} */}\r\n                    {/* <span className=\"y-axis-label-vertical\" style={{ paddingTop: 190 }}>{populationStructureFilter === 1 ? 'Number of genomes' : '% Genomes per year'}</span> */}\r\n                    {plotPopulationStructureChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: dimensions.width > desktop ? \"row\" : \"column\", padding: 12, alignItems: \"center\", width: \"-webkit-fill-available\", justifyContent: \"center\" }}>\r\n              <div className=\"download-sheet-button\" onClick={() => dowloadBaseSpreadsheet()}>\r\n                <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\r\n                <span>Download database</span>\r\n              </div>\r\n              <div style={{ marginTop: dimensions.width > desktop ? 0 : 20, marginLeft: dimensions.width > desktop ? 20 : 0}} className={`download-sheet-button`} onClick={() => {\r\n                if (!captureReportInProgress) {\r\n                  setCaptureReportInProgress(true);\r\n                  capturePicture('', 5, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry, amrClassFilter: amrClassFilter});\r\n                }\r\n              }}>\r\n                <FontAwesomeIcon icon={faFilePdf} style={{ marginRight: 8 }} />\r\n                <span>Download report from current view</span>\r\n                {captureReportInProgress && (<div style={{position: 'absolute', paddingBottom: 32, paddingRight: 20 }}>\r\n                  <CustomCircularProgress\r\n                    size={44}\r\n                    thickness={4}\r\n                    style={{ position: \"absolute\", top: -5, left: -6, color: \"white\" }} />\r\n                </div>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"about-wrapper\" style={{ paddingBottom: '15px' }}>\r\n          <h2 style={{ marginBottom: 0 }}>About TyphiNET</h2>\r\n          <p>\r\n            The TyphiNET dashboard collates antimicrobial resistance (AMR) and genotype (lineage) information extracted from whole genome sequence (WGS) data from the bacterial pathogen <i>Salmonella</i> Typhi, the agent of typhoid fever. Data are sourced monthly from Typhoid <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">Pathogenwatch</a>. Information on genotype definitions and population structure can be found in <a href=\"https://www.nature.com/articles/ncomms12827\" target=\"_blank\" rel=\"noreferrer\">Wong et al, 2016</a>, and details of AMR determinants in <a href=\"https://www.nature.com/articles/s41467-021-23091-2\" target=\"_blank\" rel=\"noreferrer\">Argimon et al, 2021</a>. (CipI-R = decreased ciprofloxacin susceptibility).\r\n          </p>\r\n          <p>\r\n            The TyphiNET dashboard is coordinated by Dr Zoe Dyson, Dr Louise Cerdeira &amp; Prof Kat Holt at the <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">London School of Hygiene and Tropical Medicine</a> &amp; <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">Monash University</a>, supported by the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the EU Horizon 2020 research and innovation programme (Marie Skłodowska-Curie grant #845681).\r\n          </p>\r\n          <p>\r\n            <b>Note: This is a beta version, data are incomplete</b>.\r\n          </p>\r\n        </div>\r\n        <div className=\"footer-buttons-wrapper\">\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('mailto:dashboard@typhi.net', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>Contact</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://github.com/zadyson/TyphiNET', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>GitHub</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://twitter.com/typhinet', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>Twitter</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }} />\r\n        <div className=\"footer\">\r\n          <span>Data obtained from: <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">pathogen watch project</a> on 15/06/2021. <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">Holt Lab</a></span>\r\n        </div>\r\n        <div className=\"fab-button\" style={{ marginTop: -80 }}>\r\n          <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Reset Configurations</span>} placement=\"left\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size={dimensions.width < mobile ? 'medium' : ''}\r\n              onClick={() => {\r\n                setMapView('CipI');\r\n                setDataset('full');\r\n                setActualTimePeriodRange(timePeriodRange);\r\n                setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                setActualCountry('All');\r\n                setPopulationStructureFilter(1);\r\n                setAmrClassFilter(amrClassesForFilter[5]);\r\n                setRDWAGDataviewFilter(1)\r\n                setRFWGFilter(1)\r\n\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faUndoAlt} size=\"lg\" color=\"white\" />\r\n            </Fab>\r\n          </TooltipMaterialUI>\r\n        </div>\r\n      </div>\r\n      <div className=\"loading\">\r\n        {dimensions.width > desktop && (\r\n          <img className=\"logoImageMenu-loading\" src={typhinetLogoImg} alt=\"TyphiNET\" style={{ paddingLeft: '20px' }} />\r\n        )}\r\n        <Loader\r\n          style={{ paddingLeft: '10px' }}\r\n          type=\"Circles\"\r\n          color=\"#D91E45\"\r\n          height={70}\r\n          width={70}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","import React from 'react';\r\nimport './App.css';\r\nimport DashboardPage from './pages/dashboard'\r\n// import typhinetLogoImg from './assets/img/logo-typhinet.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"content\">\r\n        <DashboardPage/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}