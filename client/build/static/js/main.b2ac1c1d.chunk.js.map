{"version":3,"sources":["assets/img/logo-typhinet-prod.png","assets/img/eu_flag.jpg","constants.js","util/colorHelper.js","pages/dashboard/materialUI.js","pages/dashboard/filters.js","pages/dashboard/index.js","pages/admin/materialUI.js","pages/admin/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForDrug","drug","getColorForTetracyclines","tetA","useStyles","makeStyles","theme","formControlSelect","marginBottom","marginTop","minWidth","color","borderBottomColor","formControlSelectCountryRegion","alignItems","select","fontWeight","fontFamily","fontSize","selectYear","width","borderColor","selectCountry","textAlign","selectCountryValues","typography","typographyEndYear","tbg","inputLabel","paddingBottom","tooltipButton","height","marginLeft","tooltipTitle","tooltipIcon","backgroundColor","borderWidth","borderRadius","CustomCircularProgress","withStyles","root","position","top","left","CircularProgress","CustomToggleButton","padding","selected","ToggleButton","Buttons","styled","div","_templateObject","_taggedTemplateLiteral","ButtonClearSelect","button","_templateObject2","WMCDTemplate","GENOTYPES","GENOTYPES_LIST","TOTAL","H58","MDR","XDR","DCS","AzithR","CipI","CipR","CipI_R","STAD","TOTAL_OCCURRENCE","WMCountData","currentData","data","displayName","elementToCount","parentName","childName","h58","arguments","length","undefined","other","cipI","JSON","parse","some","e","name","COUNTRY_ONLY","country","find","countryIndex","findIndex","parent","index","count","_country$parentName$p","push","_defineProperty","total","forEach","g","percentage","Math","round","toFixed","item","parseFloat","aux","CipIs","filter","x","type","aux2","_ref","WMCountDataResults","worldMapCurrent","sort","a","b","localeCompare","filterForComponents","_ref2","minYear","maxYear","dataset","region","results","amr","genotypes","worldMapResults","PMIDResults","auxWM","worldMapComplementaryResults","worldMapG","worldMapH58","worldMapSTAD","worldMapMDR","worldMapXDR","worldMapAZITH","worldMapCIPR","worldMapCIPI","RFWGResults","DRTResults","AMRResults","GDResults","Ampicillin","Azithromycin","Chloramphenicol","ESBL","Sulphonamides","Tetracyclines","Trimethoprim","DRTData","empty","DATE","TRAVEL","toLowerCase","includes","REGION_IN_COUNTRY","indexOf","WMCDAux","stringify","GENOTYPE","chartData","RFWGData","totalS","index2","drugsPercentage","Susceptible","currentRFWG","currentDRT","ChartData","fluoroR","fluoroI","cotrim","trime","Object","keys","key","total2","AZITH","CHLO","COTRIM","genes","i","join","SULPH","TRIM","TETRA","AMRData","_currentData$push2","GDData","PMID","WMCDResults","element","top10","maxSum","ceil","AMRDataResults","DashboardPage","classes","_useState","useState","coordinates","zoom","_useState2","_slicedToArray","controlMapPosition","setControlMapPosition","_useState3","_useState4","worldMapSamplesData","setWorldMapSamplesData","_useState5","_useState6","worldMapComplementaryData","setWorldMapComplementaryData","_useState7","_useState8","worldMapGenotypesData","setWorldMapGenotypesData","_useState9","_useState10","worldMapH58Data","setWorldMapH58Data","_useState11","_useState12","worldMapMDRData","setWorldMapMDRData","_useState13","_useState14","worldMapSTADData","setWorldMapSTADData","_useState15","_useState16","worldMapXDRData","setWorldMapXDRData","_useState17","_useState18","worldMapAZITHData","setWorldMapAZITHData","_useState19","_useState20","worldMapCIPIData","setWorldMapCIPIData","_useState21","_useState22","worldMapCIPRData","setWorldMapCIPRData","_useState23","_useState24","plotAmrClassChart","setPlotAmrClassChart","_useState25","_useState26","plotDrugsAndGenotypesChart","setPlotDrugsAndGenotypesChart","_useState27","_useState28","plotPopulationStructureChart","setPlotPopulationStructureChart","_useState29","_useState30","plotDrugTrendsChart","setPlotDrugTrendsChart","_useState31","_useState32","captureControlMapInProgress","setCaptureControlMapInProgress","_useState33","_useState34","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","_useState35","_useState36","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","_useState37","_useState38","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","_useState39","_useState40","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","_useState41","_useState42","captureReportInProgress","setCaptureReportInProgress","_useState43","_useState44","tooltipContent","setTooltipContent","_React$useState","React","_React$useState2","timeInitial","setTimeInitial","_React$useState3","_React$useState4","timeFinal","setTimeFinal","_React$useState5","_React$useState6","actualTimeInitial","setActualTimeInitial","_React$useState7","_React$useState8","actualTimeFinal","setActualTimeFinal","_useState45","_useState46","years","setYears","_React$useState9","_React$useState10","countriesForFilter","setCountriesForFilter","_React$useState11","_React$useState12","setRegionsForFilter","_useState47","_useState48","actualCountry","setActualCountry","_useState49","_useState50","actualRegion","setActualRegion","_React$useState13","_React$useState14","populationStructureFilter","setPopulationStructureFilter","_useState51","value","id","populationStructureFilterOptions","_useState53","RFWGFilterOptions","_useState55","amrClassFilterOptions","_useState57","amrClassFilterforFilterOptions","_React$useState15","_React$useState16","RFWGFilter","setRFWGFilter","_useState59","amrClassesForFilter","_useState61","drtClassesForFilter","_useState63","trendClassesForFilter","_useState65","trendDropdownOptions","_useState67","_useState68","RFWGDropdownOptions","setRFWGDropdownOptions","_React$useState17","_React$useState18","amrClassFilter","setAmrClassFilter","_React$useState19","_React$useState20","RDWAGDataviewFilter","setRDWAGDataviewFilter","_useState69","_useState70","drugTrendsChartData","setDrugTrendsChartData","_useState71","_useState72","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","_useState73","_useState74","populationStructureChartData","setPopulationStructureChartData","_useState75","_useState76","amrClassChartData","setAmrClassChartData","_React$useState21","_React$useState22","mapView","setMapView","_React$useState23","_React$useState24","setDataset","_useState77","_useState78","totalGenomes","setTotalGenomes","_useState79","_useState80","actualGenomes","setActualGenomes","_useState81","_useState82","totalGenotypes","setTotalGenotypes","_useState83","_useState84","actualGenotypes","setActualGenotypes","_useState85","_useState86","appLoading","setAppLoading","_useState87","_useState88","setLastUpdated","_useState89","_useState90","countryPMID","setCountryPMID","_React$useState25","_React$useState26","trendValues","setTrendValues","_React$useState27","_React$useState28","RFWGValues","setRFWGValues","_useState91","desktop","_useState93","mobile","_useState95","hoverColor","_React$useState29","window","innerHeight","innerWidth","_React$useState30","dimensions","setDimensions","formatDate","date","moment","format","useEffect","debouncedHandleResize","fn","ms","timer","_arguments","_this","_","clearTimeout","setTimeout","apply","debounce","addEventListener","removeEventListener","_useState97","axios","get","concat","then","res","Date","mapSamplesColorScale","domain","mapRedColorScale","p","parseInt","mapRedColorScaleForSensitive","tooltip","useCallback","positionY","width1","width2","wrapperS","stroke","chart","_jsx","Tooltip","y","wrapperStyle","cursor","fill","content","active","payload","label","_payload$","reverse","_jsxs","className","children","quantities","style","map","dataKey","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","maxH","ResponsiveContainer","BarChart","margin","bottom","right","maxBarSize","CartesianGrid","strokeDasharray","XAxis","interval","tick","YAxis","allowDataOverflow","allowDecimals","Label","angle","offset","Brush","Legend","props","entry","zIndex","Bar","stackId","teste","barCategoryGap","amrClassChartTooltip","allowEscapeViewBox","armClassFilterComponent","info","dataAMR","slice","layout","justifyContent","bars","barSize","temp","fontsize","strokeWidth","colors1","colors2","colors3","dataDRT","TCFF","toString","LineChart","tickCount","Line","connectNulls","activeDot","values","aux3","_useState99","stopLoading","_useState101","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","names","brokenNames","ids","doc","IPW","typhinetLogo","euFlag","paragraph1","paragraph7","actualMapView","_dataset","img","img2","img3","names2","_loop","_index","img4","img5","graph","canvas","ctx","graphImg","graphImgPromise","cHeight","logoHeight","legendHeight","filterHeight","subtitleHeight","imgHeight","imgWidth","legendImg","legendImgPromise","_typhinetLogo","typhinetLogoPromise","base64","_args4","wrap","_context4","prev","next","t0","abrupt","jsPDF","unit","orientation","internal","pageSize","getWidth","Image","src","typhinetLogoImg","addImage","euFlagImg","setFontSize","setTextColor","setFont","text","align","maxWidth","line","addPage","svgAsPngUri","document","getElementById","scale","_ref4","_callee","uri","mapImg","mapImgPromise","_context","createElement","getContext","drawImage","toDataURL","stop","_x3","t1","actualTimePeriodRange","url","subtitleH","texts","spaceBetween","drugs","_context2","domtoimage","toJpeg","quality","bgcolor","dataUrl","API","getImageProperties","floor","RFWGCount","setFillColor","rect","delegateYield","save","toPng","fillStyle","fillRect","font","fillText","download","_ref5","_callee2","textHeight","legendImgoPromise","h","w","centerWidth","_context3","_x4","_x","_x2","capturePicture","_useState103","cols_to_remove","indexes","csv","split","lines","currentIndex","newLines","j","newCSV","dowloadBaseSpreadsheet","_useState105","generateMapLegendOptions","percentageSteps","_Fragment","n","legends","_toConsumableArray","Array","renderMapLegend","FormControl","fullWidth","IconTooltip","title","placement","IconButton","FontAwesomeIcon","icon","faInfoCircle","size","Select","onChange","evt","target","MenuItem","_useState107","_useState108","setData","_useState109","_useState110","setCurrentData","_useState111","_useState112","init","setInit","_useState113","_useState114","allCountryRegions","setAllCountryRegions","_useState115","_useState116","loading","setLoading","auxTGenotypes","auxYears","auxCountries","auxRegions","unshift","update","alt","display","flexDirection","ComposableMap","projectionConfig","rotate","ZoomableGroup","center","onMoveEnd","Sphere","Graticule","Geographies","geography","_ref6","geographies","geo","sample","s","properties","NAME","d","darkGray","lineage","countH58","isH58","Geography","onClick","onMouseLeave","onMouseEnter","additionalInfo","samples","genotypeInfo","simpleGenotypeInfo","smallerThan20","MDRs","mdrInfo","STADs","stadInfo","XDRs","xdrInfo","AZs","azInfo","cipR","cipIInfo","cipRInfo2","cipIRInfo","CipRs","cipRInfo","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","newDataset","gutterBottom","Zoom","in","c","TooltipMaterialUI","faCrosshairs","pos","_objectSpread","faPlus","faMinus","faCamera","thickness","ReactTooltip","paddingRight","DropDownSelect","options","searchable","labelField","multi","clearable","separator","contentRenderer","_ref7","state","itemRenderer","_ref8","itemIndex","methods","isSelected","addItem","checked","valueField","clearRenderer","_ref9","clearAll","selectAll","InputLabel","o","paddingLeft","_ref10","_ref11","_ref12","areAllSelected","getElementsByClassName","_loop2","isValue","paddingTop","faTable","marginRight","faFilePdf","href","rel","open","faEnvelope","faGithub","faTwitter","flex","Fab","innerText","click","text2","faUndoAlt","Loader","cellON","off","tableID","tablePadding","actionsCell","borderLeft","stickyCell","actionsHeaderCell","stickyHeaderCell","changesTable","maxHeight","viewButton","resetButton","uploadButton","checkChangesButton","dialog","flexWrap","input","input2","whiteSpace","toolbar","borderBottom","deleteSelected","checkboxCell","checkbox","tableRowRoot","tableRowSelected","box","textAlignLast","userSelect","letterSpacing","choosePage","opacity","selectFilter","header","headerTitle","rowHeader","deleteChangeButton","border","ColorButton","Button","ColorButton3","ColorButton4","ColorButton5","StyledHeaderCell","head","palette","common","black","white","body","TableCell","CustomTableContainer","TableContainer","CustomTableSortLabel","TableSortLabel","createData","changes","AdminPage","rows","setRows","originalData","setOriginalData","tableKeys","setTableKeys","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","currentRow","setCurrentRow","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","open7","setOpen7","open8","setOpen8","resultMessage","setResultMessage","setSelected","search","setSearch","_React$useState31","_React$useState32","filters","setFilters","_React$useState33","_React$useState34","filterOptions","setFilterOptions","_React$useState35","_React$useState36","filteredData","setFilteredData","_React$useState37","_React$useState38","isLoading","setIsLoading","_React$useState39","_React$useState40","startProgress","setStartProgress","_React$useState41","_React$useState42","loadingMessage","setLoadingMessage","_React$useState43","_React$useState44","currentChange","setCurrentChange","_React$useState45","exceptions","descendingComparator","changeView","resetChanges","added","genome","gIndex","splice","deleted","updated","old","betterChanges","entries","updates","point","new","handleUpload","handleCheckChanges","message","_deleteChange","post","getChangeData","finally","checkChanges","_checkChanges","_callee4","showPopup","Status","getData","catch","error","sent","_resetChanges","_callee5","_context5","changeData","updatedAt","toLocaleString","_getData","_callee6","_context6","aux4","aux5","response","pass","EnhancedTableToolbar","numSelected","Toolbar","sx","variant","component","SearchBar","placeholder","onCancelSearch","onRequestSearch","faTrashAlt","EnhancedTableHead","onRequestSort","onSelectAllClick","rowCount","TableHead","TableRow","Checkbox","indeterminate","headCell","sortDirection","direction","property","event","stopPropagation","displayEmpty","onOpen","onClose","option","Paper","Table","stickyHeader","TableBody","row","r","t","newSelecteds","array","comparator","stabilizedThis","el","stableSort","getComparator","isItemSelected","dataRow","role","selectedIndex","newSelected","handleClick","cell","random","handleEdit","faEdit","handleDelete","disableUnderline","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","ActionsComponent","useTheme","Box","flexShrink","ml","disabled","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","max","Dialog","dialogTransition","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteRow","autoFocus","TextField","defaultValue","rowIndex","inputs","editRow","addRow","times","parts","LZString","compress","current","uploadChanges","deleteRows","deleteChange","App","Router","Link","to","Switch","Route","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","ReactDOM","render","StrictMode","ThemeProvider","URL","process","origin","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"w/qiDAAe,MAA0B,+CCA1B,MAA0B,oC,SCE5BA,EAAe,yCCDfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UAGT,IAAK,QACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,IAAK,aACH,MAAO,QACT,IAAK,UACL,IAAK,cACL,I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","file":"static/js/main.b2ac1c1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet-prod.f503745b.png\";","export default __webpack_public_path__ + \"static/media/eu_flag.77134ad3.jpg\";","// Static routes to run the app. Only use one: local or heroku.\r\n//export const API_ENDPOINT = \"http://localhost:8080/api/\";\r\nexport const API_ENDPOINT = \"https://typhinetdev.herokuapp.com/api/\";","// Helper for genotype color\r\nexport const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return '#808080';\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return '#ffff00';\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return '#ffd700';\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return '#32cd32';\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return '#adff2f';\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return '#98fb98';\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return '#6b8e23';\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return '#2e8b57';\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return '#006400';\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return '#0000cd';\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return '#4682b4';\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return '#00bfff';\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return '#1e90ff';\r\n    case '3.4':\r\n      return '#6a5acd';\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n    case '3.5.4.1':\r\n    case '3.5.4.2':\r\n    case '3.5.4.3':\r\n      return '#4b0082';\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return '#8b0000';\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return '#ff6347';\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return '#ff0000';\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return 'black';\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n    case '4.3.1.2.1':\r\n    case '4.3.1.2.1.1':\r\n      return '#c51b7d';\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return '#fb8072';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\nexport const getColorForAMR = (amr) => {\r\n  switch (amr) {\r\n    case 'No AMR detected':\r\n      return '#addd8e';\r\n    case 'MDR_DCS':\r\n      return '#9e9ac8';\r\n    case 'MDR':\r\n      return 'red';\r\n    case 'DCS':\r\n      return '#6baed6';\r\n    case 'AzithR_MDR':\r\n      return '#a50f15';\r\n    case 'AzithR_DCS':\r\n      return '#7a0177';\r\n    case 'AzithR_DCS_MDR':\r\n      return '#54278f';\r\n    case 'XDR':\r\n      return 'black';\r\n    case 'AMR':\r\n      return '#ffeda0';\r\n    case 'AMR_DCS':\r\n      return '#fd8d3c';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\nexport const getColorForSimpleGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case 'H58':\r\n      return 'green';\r\n    case 'Non-H58':\r\n      return 'red';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Azithromycin':\r\n      return 'rgb(144,211,199)';\r\n    case 'Fluoroquinolones (CipNS)':\r\n      return 'rgb(255,236,120)';\r\n    case 'ESBL':\r\n      return '#DB90F0';\r\n    case 'Chloramphenicol':\r\n      return 'rgb(249,129,117)';\r\n    case 'Ampicillin':\r\n      return 'rgb(129,178,210)';\r\n    case 'Co-trimoxazole':\r\n      return 'rgb(252,180,105)';\r\n    case 'Sulphonamides':\r\n      return 'rgb(180,221,112)';\r\n    case 'Trimethoprim':\r\n      return 'rgb(102,102,255)';\r\n    case 'Tetracyclines':\r\n      return 'rgb(251,207,229)';\r\n    case 'Susceptible':\r\n      return 'lightGray';\r\n    case 'Fluoroquinolones (CipI)':\r\n      return '#98fb98';\r\n    case 'Fluoroquinolones (CipR)':\r\n      return '#9e9ac8';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\nexport const getColorForIncType = (incType) => {\r\n  switch (incType) {\r\n    case 'IncX1':\r\n      return 'rgb(174,227,154)';\r\n    case 'IncFIA(HI1)':\r\n      return 'rgb(138,35,139)';\r\n    case 'IncFIB(pHCM2)':\r\n      return 'rgb(163,215,30)';\r\n    case 'IncA/C2':\r\n      return 'rgb(69,51,214)';\r\n    case 'IncP1':\r\n      return 'rgb(223,207,231)';\r\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(66,69,94)';\r\n    case 'Col(BS512)':\r\n      return 'rgb(251,172,246)';\r\n    case 'IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(34,151,67)';\r\n    case 'IncN':\r\n      return 'rgb(238,83,190)';\r\n    case 'IncHI1B(R27)':\r\n      return 'rgb(68,242,112)';\r\n    case 'p0111':\r\n      return 'rgb(251,45,76)';\r\n    case 'IncHI1A':\r\n      return 'rgb(101,230,249)';\r\n    case 'IncI1':\r\n      return 'rgb(123,44,49)';\r\n    case 'IncY':\r\n      return 'rgb(231,173,121)';\r\n    case 'IncFIB(AP001918)':\r\n      return 'rgb(32,80,46)';\r\n    case 'IncFIB(K)':\r\n      return 'rgb(53,136,209)';\r\n    case 'IncHI2/IncHI2A':\r\n      return 'rgb(115,140,78)';\r\n    case 'Col440I':\r\n      return 'rgb(159,4,252)';\r\n    case 'Col156':\r\n      return 'rgb(244,212,3)';\r\n    case 'Col440II/Col440II':\r\n      return 'rgb(17,160,170)';\r\n    case 'IncFIA(HI1)/IncHI1A':\r\n      return 'rgb(251,120,16)';\r\n    case 'ColRNAI':\r\n      return 'rgb(91,67,11)';\r\n    case 'ColpVC':\r\n      return 'rgb(248,117,116)';\r\n    case 'IncX3':\r\n      return 'rgb(190,177,231)';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\nexport const getColorForTetracyclines = (tetA) => {\r\n  switch (tetA) {\r\n    case 'tetA(A)':\r\n      return 'rgb(174,227,154)';\r\n    case 'tetA(B)':\r\n      return '#D7AEF7';\r\n    case 'tetA(C)':\r\n      return '#FFEC78';\r\n    case 'tetA(D)':\r\n      return '#FCB469';\r\n    case 'tetA(AB)':\r\n      return 'rgb(223,207,231)';\r\n    case 'tetA(ABC)':\r\n      return 'rgb(66,69,94)';\r\n    case 'tetA(ABD)':\r\n      return 'rgb(251,172,246)';\r\n    case 'tetA(ABCD)':\r\n      return 'rgb(34,151,67)';\r\n    case 'tetA(AC)':\r\n      return 'rgb(238,83,190)';\r\n    case 'tetA(ACD)':\r\n      return 'rgb(68,242,112)';\r\n    case 'tetA(AD)':\r\n      return 'rgb(251,45,76)';\r\n    case 'tetA(BC)':\r\n      return 'rgb(101,230,249)';\r\n    case 'tetA(BD)':\r\n      return 'rgb(123,44,49)';\r\n    case 'tetA(BCD)':\r\n      return 'rgb(231,173,121)';\r\n    case 'tetA(CD)':\r\n      return 'rgb(32,80,46)';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n","import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport styled from \"@emotion/styled\";\r\n\r\n// CSS like classes\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControlSelect: {\r\n        marginBottom: 12,\r\n        marginTop: 2,\r\n        minWidth: 120,\r\n        '&.label.Mui-focused': {\r\n            color: \"rgb(31, 187, 211)\",\r\n        },\r\n        '&:not(.Mui-error).MuiInput-underline:after': {\r\n            borderBottomColor: \"rgb(31, 187, 211)\",\r\n        },\r\n    },\r\n    formControlSelectCountryRegion: {\r\n        marginBottom: 16,\r\n        marginTop: 2,\r\n        minWidth: 120,\r\n        '&.label.Mui-focused': {\r\n            color: \"rgb(31, 187, 211)\",\r\n        },\r\n        '&:not(.Mui-error).MuiInput-underline:after': {\r\n            borderBottomColor: \"rgb(31, 187, 211)\",\r\n        },\r\n        alignItems: \"center\"\r\n    },\r\n    select: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14\r\n    },\r\n    selectYear: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14,\r\n        width: '85px',\r\n        '&:before': {\r\n            borderColor: 'rgba(0, 0, 0, 0.12)',\r\n        }\r\n    },\r\n    selectCountry: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        width: 200,\r\n        textAlign: \"left\"\r\n    },\r\n    selectCountryValues: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\"\r\n    },\r\n    typography: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    typographyEndYear: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    tbg: {\r\n        marginTop: 5\r\n    },\r\n    inputLabel: {\r\n        fontSize: 12,\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        paddingBottom: 5\r\n    },\r\n    tooltipButton: {\r\n        height: 15.5,\r\n        width: 15.5,\r\n        marginLeft: 5\r\n    },\r\n    tooltipTitle: {\r\n        fontSize: 12\r\n    },\r\n    tooltipIcon: {\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"black\",\r\n        borderWidth: 1,\r\n        borderRadius: \"50%\"\r\n    }\r\n}));\r\n\r\n// Loading circular progress for the map and charts download buttons\r\nconst CustomCircularProgress = withStyles({\r\n    root: {\r\n        color: \"rgb(31, 187, 211)\",\r\n        position: \"absolute\",\r\n        top: -5,\r\n        left: -6\r\n    }\r\n})(CircularProgress);\r\n\r\n// Options for dataset ToggleButtonGroup\r\nconst CustomToggleButton = withStyles({\r\n    root: {\r\n        padding: \"2px 8px\",\r\n        fontFamily: \"Montserrat\",\r\n        fontWeight: 600\r\n    },\r\n    selected: {\r\n        backgroundColor: 'rgb(31, 187, 211) !important',\r\n        color: \"white !important\"\r\n    }\r\n})(ToggleButton);\r\n\r\n// Wrapper for the ButtonClearSelect component (below)\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n\r\n  & div {\r\n    margin: 0 0 0 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\n// 'Clear all' and 'reset' buttons from the dropdowns on RFWG and DRT charts\r\nconst ButtonClearSelect = styled.button`\r\n  background: none;\r\n  border: 1px solid #555;\r\n  color: #555;\r\n  border-radius: 3px;\r\n  margin: 0 10px 0;\r\n  padding: 3px 5px;\r\n  font-size: 10px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &.clear {\r\n    color: tomato;\r\n    border: 1px solid tomato;\r\n  }\r\n\r\n  :hover {\r\n    border: 1px solid deepskyblue;\r\n    color: deepskyblue;\r\n  }\r\n`;\r\n\r\nexport { useStyles, CustomCircularProgress, CustomToggleButton, Buttons, ButtonClearSelect };","const WMCDTemplate = {\r\n  GENOTYPES: {\r\n    GENOTYPES_LIST: [],\r\n    TOTAL: 0\r\n  },\r\n  H58: 0,\r\n  MDR: 0,\r\n  XDR: 0,\r\n  DCS: 0,\r\n  AzithR: 0,\r\n  CipI: 0,\r\n  CipR: 0,\r\n  CipI_R: 0,\r\n  STAD: 0,\r\n  TOTAL_OCCURRENCE: 0\r\n};\r\n\r\nfunction WMCDAux(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  currentData['TOTAL_OCCURRENCE']++;\r\n  if (\r\n    currentData['GENOTYPES']['GENOTYPES_LIST'].indexOf(data['GENOTYPE']) === -1\r\n  ) {\r\n    currentData['GENOTYPES']['GENOTYPES_LIST'].push(data['GENOTYPE']);\r\n    currentData['GENOTYPES']['TOTAL']++;\r\n  }\r\n\r\n  if (data['GENOTYPE_SIMPLE'] === 'H58') {\r\n    currentData['H58']++;\r\n  }\r\n  if (data['MDR'] === 'MDR') {\r\n    currentData['MDR']++;\r\n  }\r\n  if (data['XDR'] === 'XDR') {\r\n    currentData['XDR']++;\r\n  }\r\n  if (data['dcs_category'] === 'DCS') {\r\n    currentData['DCS']++;\r\n  }\r\n  if (data['azith_pred_pheno'] === 'AzithR') {\r\n    currentData['AzithR']++;\r\n  }\r\n  if (data['cip_pred_pheno'] === 'CipI') {\r\n    currentData['CipI']++;\r\n    currentData['CipI_R']++;\r\n  }\r\n  if (data['cip_pred_pheno'] === 'CipR') {\r\n    currentData['CipR']++;\r\n    currentData['CipI_R']++;\r\n  }\r\n  if (data['amr_category'] === 'No AMR detected') {\r\n    currentData['STAD']++;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction WMCDResults(worldMapComplementaryResults) {\r\n  worldMapComplementaryResults = JSON.parse(worldMapComplementaryResults);\r\n\r\n  for (let data in worldMapComplementaryResults) {\r\n    worldMapComplementaryResults[data]['H58'] =\r\n      (worldMapComplementaryResults[data]['H58'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    worldMapComplementaryResults[data]['MDR'] =\r\n      (worldMapComplementaryResults[data]['MDR'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    worldMapComplementaryResults[data]['XDR'] =\r\n      (worldMapComplementaryResults[data]['XDR'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    worldMapComplementaryResults[data]['DCS'] =\r\n      (worldMapComplementaryResults[data]['DCS'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    worldMapComplementaryResults[data]['AzithR'] =\r\n      (worldMapComplementaryResults[data]['AzithR'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    worldMapComplementaryResults[data]['CipI'] =\r\n      (worldMapComplementaryResults[data]['CipI'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    worldMapComplementaryResults[data]['CipR'] =\r\n      (worldMapComplementaryResults[data]['CipR'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    worldMapComplementaryResults[data]['CipI_R'] =\r\n      (worldMapComplementaryResults[data]['CipI_R'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    worldMapComplementaryResults[data]['STAD'] =\r\n      (worldMapComplementaryResults[data]['STAD'] /\r\n        worldMapComplementaryResults[data]['TOTAL_OCCURRENCE']) *\r\n      100;\r\n    delete worldMapComplementaryResults[data].TOTAL_OCCURRENCE;\r\n  }\r\n  return worldMapComplementaryResults;\r\n}\r\n\r\nfunction WMCountData(\r\n  currentData,\r\n  data,\r\n  displayName,\r\n  elementToCount,\r\n  parentName,\r\n  childName,\r\n  h58 = false,\r\n  other = '',\r\n  cipI = false\r\n) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  if (!currentData.some((e) => e.name === data.COUNTRY_ONLY)) {\r\n    currentData.push({\r\n      name: data.COUNTRY_ONLY,\r\n      displayName: displayName,\r\n      total: 1,\r\n      [parentName]: [{ [childName]: data[elementToCount], count: 1 }]\r\n    });\r\n    if (elementToCount !== 'GENOTYPE')\r\n      currentData[currentData.length - 1].percentage = 0;\r\n    if (!h58 && elementToCount !== 'GENOTYPE')\r\n      currentData[currentData.length - 1].count = 0;\r\n  } else {\r\n    const country = currentData.find((e) => e.name === data['COUNTRY_ONLY']);\r\n    const countryIndex = currentData.findIndex(\r\n      (e) => e.name === data['COUNTRY_ONLY']\r\n    );\r\n\r\n    if (\r\n      !country[parentName].some((e) => e[childName] === data[elementToCount])\r\n    ) {\r\n      country[parentName].push({\r\n        [childName]: data[elementToCount],\r\n        count: 1\r\n      });\r\n    } else {\r\n      let parent = country[parentName].find(\r\n        (e) => e[childName] === data[elementToCount]\r\n      );\r\n      let index = country[parentName].findIndex(\r\n        (e) => e[childName] === data[elementToCount]\r\n      );\r\n      parent.count = parent.count + 1;\r\n      country[parentName][index] = parent;\r\n    }\r\n    country.total = country.total + 1;\r\n\r\n    if (h58) {\r\n      country[parentName].forEach((g, index) => {\r\n        let percentage = (g.count / country.total) * 100;\r\n        if (Math.round(percentage) !== percentage) {\r\n          percentage = percentage.toFixed(2);\r\n        }\r\n        g.percentage = percentage;\r\n      });\r\n    } else if (other !== '') {\r\n      country[parentName].forEach((item, index) => {\r\n        if (item[childName] === other) {\r\n          let percentage = (item.count / country.total) * 100;\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2);\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = item.count;\r\n        }\r\n      });\r\n      if (country.percentage === undefined) {\r\n        country.percentage = parseFloat(0);\r\n      }\r\n      if (country.count === undefined) {\r\n        country.count = 0;\r\n      }\r\n    } else if (cipI) {\r\n      let aux = country.CipIs.filter((x) => x.type === 'CipI');\r\n      let aux2 = country.CipIs.filter((x) => x.type === 'CipR');\r\n      if (aux.length) {\r\n        aux[0].percentage = (aux[0].count / country.total) * 100;\r\n        aux = aux[0].count;\r\n      } else aux = 0;\r\n      if (aux2.length) {\r\n        aux2[0].percentage = (aux2[0].count / country.total) * 100;\r\n        aux2 = aux2[0].count;\r\n      } else aux2 = 0;\r\n\r\n      let percentage = ((aux + aux2) / country.total) * 100;\r\n      if (Math.round(percentage) !== percentage)\r\n        percentage = percentage.toFixed(2);\r\n      percentage = parseFloat(percentage);\r\n      country.percentage = percentage;\r\n      country.count = aux + aux2;\r\n      if (country.percentage === undefined) country.percentage = parseFloat(0);\r\n      if (country.count === undefined) country.count = 0;\r\n    }\r\n\r\n    currentData[countryIndex] = country;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction WMCountDataResults(worldMapCurrent, parentName) {\r\n  worldMapCurrent = JSON.parse(worldMapCurrent);\r\n  worldMapCurrent.forEach((country) => {\r\n    country[parentName].sort((a, b) => b.count - a.count);\r\n  });\r\n  worldMapCurrent.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  return worldMapCurrent;\r\n}\r\n\r\nfunction ChartData(RFWGData, DRTData, data) {\r\n  RFWGData = JSON.parse(RFWGData);\r\n  DRTData = JSON.parse(DRTData);\r\n\r\n  let index = RFWGData.findIndex((x) => x.name === data.GENOTYPE);\r\n  if (index === -1) {\r\n    RFWGData.push({ name: data.GENOTYPE, total: 0, totalS: 0 });\r\n    index = RFWGData.length - 1;\r\n  }\r\n  RFWGData[index].totalS += 1;\r\n\r\n  let index2 = DRTData.findIndex((x) => x.name === data.DATE);\r\n  if (index2 === -1) {\r\n    DRTData.push({\r\n      name: data.DATE,\r\n      total: 0,\r\n      drugsPercentage: {},\r\n      Azithromycin: 0,\r\n      'Fluoroquinolones (CipNS)': 0,\r\n      ESBL: 0,\r\n      Chloramphenicol: 0,\r\n      Ampicillin: 0,\r\n      'Co-trimoxazole': 0,\r\n      Sulphonamides: 0,\r\n      Trimethoprim: 0,\r\n      Tetracyclines: 0,\r\n      Susceptible: 0,\r\n      'Fluoroquinolones (CipR)': 0\r\n    });\r\n    index2 = DRTData.length - 1;\r\n  }\r\n  DRTData[index2].total += 1;\r\n\r\n  const currentRFWG = RFWGData[index];\r\n  const currentDRT = DRTData[index2];\r\n\r\n  if (data['azith_pred_pheno'] === 'AzithR') {\r\n    if (currentRFWG['Azithromycin'] === undefined)\r\n      currentRFWG['Azithromycin'] = 1;\r\n    else currentRFWG['Azithromycin'] += 1;\r\n    currentDRT['Azithromycin'] += 1;\r\n  }\r\n  if (data['cip_pred_pheno'] === 'CipR' || data['cip_pred_pheno'] === 'CipI') {\r\n    if (currentRFWG['Fluoroquinolones (CipNS)'] === undefined)\r\n      currentRFWG['Fluoroquinolones (CipNS)'] = 1;\r\n    else currentRFWG['Fluoroquinolones (CipNS)'] += 1;\r\n    currentDRT['Fluoroquinolones (CipNS)'] += 1;\r\n  }\r\n  if (data['ESBL_category'] === 'ESBL') {\r\n    if (currentRFWG['ESBL'] === undefined) currentRFWG['ESBL'] = 1;\r\n    else currentRFWG['ESBL'] += 1;\r\n    currentDRT['ESBL'] += 1;\r\n  }\r\n  if (data['chloramphenicol_category'] === 'ChlR') {\r\n    if (currentRFWG['Chloramphenicol'] === undefined)\r\n      currentRFWG['Chloramphenicol'] = 1;\r\n    else currentRFWG['Chloramphenicol'] += 1;\r\n    currentDRT['Chloramphenicol'] += 1;\r\n  }\r\n  if (data['blaTEM-1D'] === '1') {\r\n    if (currentRFWG['Ampicillin'] === undefined) currentRFWG['Ampicillin'] = 1;\r\n    else currentRFWG['Ampicillin'] += 1;\r\n    currentDRT['Ampicillin'] += 1;\r\n  }\r\n  if (data['co_trim'] === '1') {\r\n    if (currentRFWG['Co-trimoxazole'] === undefined)\r\n      currentRFWG['Co-trimoxazole'] = 1;\r\n    else currentRFWG['Co-trimoxazole'] += 1;\r\n    currentDRT['Co-trimoxazole'] += 1;\r\n  }\r\n  if (data['sul_any'] === '1') {\r\n    if (currentRFWG['Sulphonamides'] === undefined)\r\n      currentRFWG['Sulphonamides'] = 1;\r\n    else currentRFWG['Sulphonamides'] += 1;\r\n    currentDRT['Sulphonamides'] += 1;\r\n  }\r\n  if (data['dfra_any'] === '1') {\r\n    if (currentRFWG['Trimethoprim'] === undefined)\r\n      currentRFWG['Trimethoprim'] = 1;\r\n    else currentRFWG['Trimethoprim'] += 1;\r\n    currentDRT['Trimethoprim'] += 1;\r\n  }\r\n  if (data['tetracycline_category'] === 'TetR') {\r\n    if (currentRFWG['Tetracyclines'] === undefined)\r\n      currentRFWG['Tetracyclines'] = 1;\r\n    else currentRFWG['Tetracyclines'] += 1;\r\n    currentDRT['Tetracyclines'] += 1;\r\n  }\r\n  if (data['amr_category'] === 'No AMR detected') {\r\n    if (currentRFWG['Susceptible'] === undefined)\r\n      currentRFWG['Susceptible'] = 1;\r\n    else currentRFWG['Susceptible'] += 1;\r\n    currentDRT['Susceptible'] += 1;\r\n  } else {\r\n    currentRFWG.total += 1;\r\n  }\r\n  if (data['cip_pred_pheno'] === 'CipR') {\r\n    if (currentRFWG['Fluoroquinolones (CipR)'] === undefined)\r\n      currentRFWG['Fluoroquinolones (CipR)'] = 1;\r\n    else currentRFWG['Fluoroquinolones (CipR)'] += 1;\r\n    currentDRT['Fluoroquinolones (CipR)'] += 1;\r\n  }\r\n\r\n  return [RFWGData, DRTData];\r\n}\r\n\r\nfunction DRTDataResults(DRTData) {\r\n  DRTData = JSON.parse(DRTData);\r\n  DRTData.forEach((element) => {\r\n    const drugsPercentage = {};\r\n    for (const key in element) {\r\n      if (key !== 'name' && key !== 'total') {\r\n        const aux = (element[key] * 100) / element.total;\r\n        drugsPercentage[key] = element[key];\r\n        element[key] = aux;\r\n      }\r\n    }\r\n    element.drugsPercentage = drugsPercentage;\r\n  });\r\n  return DRTData;\r\n}\r\n\r\nfunction AMRData(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n  const fluoroR = [\r\n    '3_QRDR + qnrS',\r\n    '3_QRDR + qnrB',\r\n    '3_QRDR',\r\n    '2_QRDR + qnrS',\r\n    '2_QRDR + qnrB',\r\n    '1_QRDR + qnrS',\r\n    '1_QRDR + qnrB'\r\n  ];\r\n  const fluoroI = ['2_QRDR', '1_QRDR', '0_QRDR + qnrS', '0_QRDR + qnrB'];\r\n  const cotrim = [\r\n    'dfrA1',\r\n    'dfrA5',\r\n    'dfrA7',\r\n    'dfrA14',\r\n    'dfrA15',\r\n    'dfrA17',\r\n    'dfrA18'\r\n  ];\r\n  const trime = [\r\n    'dfrA1',\r\n    'dfrA14',\r\n    'dfrA15',\r\n    'dfrA17',\r\n    'dfrA18',\r\n    'dfrA5',\r\n    'dfrA7'\r\n  ];\r\n\r\n  Object.keys(currentData).forEach((key) => {\r\n    let index = currentData[key].findIndex((x) => x.genotype === data.GENOTYPE);\r\n    if (index === -1) {\r\n      currentData[key].push({ genotype: data.GENOTYPE, total: 0, total2: 0 });\r\n      index = currentData[key].length - 1;\r\n    }\r\n    if (key === 'Azithromycin') {\r\n      const AZITH = data['azith_pred_pheno'];\r\n      if (AZITH === 'AzithR') {\r\n        currentData[key][index].total += 1;\r\n        currentData[key][index].total2 += 1;\r\n        // if (\r\n        //   data['ereA'] === '1' &&\r\n        //   data['acrB_R717Q'] === '1' &&\r\n        //   data['acrB_R717L' == '1']\r\n        // ) {\r\n        //   const name = 'ereA + acrB_R717Q + acrB_R717L';\r\n        //   if (currentData[key][index][name] === undefined) {\r\n        //     currentData[key][index][name] = 1;\r\n        //   } else {\r\n        //     currentData[key][index][name] += 1;\r\n        //   }\r\n        // } else {\r\n        // if (data['ereA'] === '1' && data['acrB_R717Q'] === '1') {\r\n        //   const name = 'ereA + acrB_R717Q';\r\n        //   if (currentData[key][index][name] === undefined) {\r\n        //     currentData[key][index][name] = 1;\r\n        //   } else {\r\n        //     currentData[key][index][name] += 1;\r\n        //   }\r\n        // }\r\n        // else if (data['ereA'] === '1' && data['acrB_R717L'] === '1') {\r\n        //   const name = 'ereA + acrB_R717L';\r\n        //   if (currentData[key][index][name] === undefined) {\r\n        //     currentData[key][index][name] = 1;\r\n        //   } else {\r\n        //     currentData[key][index][name] += 1;\r\n        //   }\r\n        // } else\r\n        if (data['acrB_R717Q'] === '1' && data['acrB_R717L'] === '1') {\r\n          const name = 'acrB_R717Q + acrB_R717L';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        // else if (data['ereA'] === '1') {\r\n        //   const name = 'ereA';\r\n        //   if (currentData[key][index][name] === undefined) {\r\n        //     currentData[key][index][name] = 1;\r\n        //   } else {\r\n        //     currentData[key][index][name] += 1;\r\n        //   }\r\n        // }\r\n        else if (data['acrB_R717Q'] === '1') {\r\n          const name = 'acrB_R717Q';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else if (data['acrB_R717L'] === '1') {\r\n          const name = 'acrB_R717L';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        // }\r\n      } else if (AZITH === 'AzithS') {\r\n        currentData[key][index].total2 += 1;\r\n        const name = 'None';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === 'Fluoroquinolones (CipNS)') {\r\n      const DCS = data['dcs_mechanisms'];\r\n      if (DCS === '0_QRDR') {\r\n        currentData[key][index].total2 += 1;\r\n        const name = 'None (CipS)';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (fluoroR.includes(DCS)) {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        const name = DCS + ' (CipR)';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (fluoroI.includes(DCS)) {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        const name = DCS + ' (CipI)';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === 'ESBL') {\r\n      const ESBL = data['ESBL_category'];\r\n      if (ESBL === 'ESBL') {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        // if (data[\"blaCTX-M-12\"] === \"1\") {\r\n        //   const name = \"blaCTX-M-12\";\r\n        //   if (currentData[key][index][name] === undefined) {\r\n        //     currentData[key][index][name] = 1;\r\n        //   } else {\r\n        //     currentData[key][index][name] += 1;\r\n        //   }\r\n        // }\r\n        if (data['blaCTX-M-15_23'] === '1') {\r\n          const name = 'blaCTX-M-15';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data['blaOXA-7'] === '1') {\r\n          const name = 'blaOXA-7';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data['blaSHV-12'] === '1') {\r\n          const name = 'blaSHV-12';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data['blaCTX-M-55'] === '1') {\r\n          const name = 'blaCTX-M-55';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (ESBL === 'Non-ESBL') {\r\n        currentData[key][index].total2 += 1;\r\n        const name = 'None';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === 'Chloramphenicol') {\r\n      const CHLO = data['chloramphenicol_category'];\r\n      if (CHLO === 'ChlR') {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data['catA1'] === '1' && data['cmlA'] === '1') {\r\n          const name = 'catA1 + cmlA';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else {\r\n          if (data['catA1'] === '1') {\r\n            const name = 'catA1';\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          }\r\n          if (data['cmlA'] === '1') {\r\n            const name = 'cmlA';\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          }\r\n        }\r\n      } else if (CHLO === 'ChlS') {\r\n        currentData[key][index].total2 += 1;\r\n        const name = 'None';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === 'Ampicillin') {\r\n      currentData[key][index].total2 += 1;\r\n      //   if (data[\"blaTEM-1D\"] === \"1\" && data[\"blaOXA-1\"] === \"1\") {\r\n      //     currentData[key][index].total += 1;\r\n      //     const name = \"blaTEM-1D + blaOXA-1\";\r\n      //     if (currentData[key][index][name] === undefined) {\r\n      //       currentData[key][index][name] = 1;\r\n      //     } else {\r\n      //       currentData[key][index][name] += 1;\r\n      //     }\r\n      //   } else\r\n\r\n      if (data['blaTEM-1D'] === '1') {\r\n        currentData[key][index].total += 1;\r\n        const name = 'blaTEM-1D';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n      //   else if (data[\"blaOXA-1\"] === \"1\") {\r\n      //     currentData[key][index].total += 1;\r\n      //     const name = \"blaOXA-1\";\r\n      //     if (currentData[key][index][name] === undefined) {\r\n      //       currentData[key][index][name] = 1;\r\n      //     } else {\r\n      //       currentData[key][index][name] += 1;\r\n      //     }\r\n      //   }\r\n      else {\r\n        const name = 'None';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === 'Co-trimoxazole') {\r\n      const COTRIM = data['co_trim'];\r\n      if (COTRIM === '1') {\r\n        const genes = [];\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        for (const i in cotrim) {\r\n          if (data[cotrim[i]] === '1') {\r\n            genes.push(cotrim[i]);\r\n          }\r\n        }\r\n        if (data['sul1'] === '1') {\r\n          genes.push('sul1');\r\n        }\r\n        if (data['sul2'] === '1') {\r\n          genes.push('sul2');\r\n        }\r\n        const name = genes.join(' + ');\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (COTRIM === '0') {\r\n        currentData[key][index].total2 += 1;\r\n        const name = 'None';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === 'Sulphonamides') {\r\n      const SULPH = data['sul_any'];\r\n      if (SULPH === '1') {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data['sul1'] === '1' && data['sul2'] === '1') {\r\n          const name = 'sul1 + sul2';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else if (data['sul1'] === '1') {\r\n          const name = 'sul1';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else if (data['sul2'] === '1') {\r\n          const name = 'sul2';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (SULPH === '0') {\r\n        currentData[key][index].total2 += 1;\r\n        const name = 'None';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === 'Trimethoprim') {\r\n      const TRIM = data['dfra_any'];\r\n      if (TRIM === '1') {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data['dfrA7'] === '1' && data['dfrA14'] === '1') {\r\n          const name = 'dfrA7 + dfrA14';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else {\r\n          for (const i in trime) {\r\n            if (data[trime[i]] === '1') {\r\n              const name = trime[i];\r\n              if (currentData[key][index][name] === undefined) {\r\n                currentData[key][index][name] = 1;\r\n              } else {\r\n                currentData[key][index][name] += 1;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } else if (TRIM === '0') {\r\n        currentData[key][index].total2 += 1;\r\n        const name = 'None';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === 'Tetracyclines') {\r\n      const TETRA = data['tetracycline_category'];\r\n      if (TETRA === 'TetR') {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data['tetA(A)'] === '1') {\r\n          const name = 'tetA(A)';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data['tetA(B)'] === '1') {\r\n          const name = 'tetA(B)';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data['tetA(C)'] === '1') {\r\n          const name = 'tetA(C)';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data['tetA(D)'] === '1') {\r\n          const name = 'tetA(D)';\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (TETRA === 'TetS') {\r\n        currentData[key][index].total2 += 1;\r\n        const name = 'None';\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction AMRDataResults(AMRData) {\r\n  AMRData = JSON.parse(AMRData);\r\n\r\n  Object.keys(AMRData).forEach((key) => {\r\n    const data = AMRData[key];\r\n\r\n    const top10 = [];\r\n    data.forEach((element) => {\r\n      if (top10.length < 10) {\r\n        top10.push(element);\r\n      } else {\r\n        top10.sort(function (a, b) {\r\n          if (a.total === b.total && a.genotype > b.genotype) return -1;\r\n          return a.total > b.total ? -1 : 1;\r\n        });\r\n        if (element.total === top10[9].total) {\r\n          if (element.genotype > top10[9].genotype) top10[9] = element;\r\n        }\r\n        if (element.total > top10[9].total) top10[9] = element;\r\n      }\r\n    });\r\n    top10.sort(function (a, b) {\r\n      if (a.total === b.total && a.genotype > b.genotype) return -1;\r\n      return a.total > b.total ? -1 : 1;\r\n    });\r\n    top10.push({\r\n      maxSum: data.length === 0 ? 0 : Math.ceil(data[0].total2 / 50) * 50\r\n    });\r\n\r\n    AMRData[key] = top10;\r\n  });\r\n\r\n  return AMRData;\r\n}\r\n\r\nfunction GDData(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  const index = currentData.findIndex((x) => x.name === data.DATE);\r\n  if (index === -1) {\r\n    currentData.push({\r\n      name: data.DATE,\r\n      [data.GENOTYPE]: 1,\r\n      total: 1\r\n    });\r\n  } else {\r\n    currentData[index].total += 1;\r\n    if (currentData[index][data.GENOTYPE] === undefined)\r\n      currentData[index][data.GENOTYPE] = 1;\r\n    else currentData[index][data.GENOTYPE] += 1;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nexport function filterForComponents({\r\n  country,\r\n  minYear,\r\n  maxYear,\r\n  dataset,\r\n  region,\r\n  data,\r\n  amr\r\n}) {\r\n  const [results, genotypes, worldMapResults, PMIDResults] = [[], [], [], []];\r\n  let [\r\n    aux,\r\n    auxWM,\r\n    worldMapComplementaryResults,\r\n    worldMapG,\r\n    worldMapH58,\r\n    worldMapSTAD,\r\n    worldMapMDR,\r\n    worldMapXDR,\r\n    worldMapAZITH,\r\n    worldMapCIPR,\r\n    worldMapCIPI,\r\n    RFWGResults,\r\n    DRTResults,\r\n    AMRResults,\r\n    GDResults\r\n  ] = [null, null, {}, [], [], [], [], [], [], [], [], [], [], {}, []];\r\n  AMRResults = {\r\n    Ampicillin: [],\r\n    Azithromycin: [],\r\n    Chloramphenicol: [],\r\n    'Co-trimoxazole': [],\r\n    ESBL: [],\r\n    'Fluoroquinolones (CipNS)': [],\r\n    Sulphonamides: [],\r\n    Tetracyclines: [],\r\n    Trimethoprim: []\r\n  };\r\n\r\n  const empty = ['', '-'];\r\n  data.forEach((x) => {\r\n    aux = true;\r\n    auxWM = true; // WM = World Map\r\n\r\n    // Validation if row will be used, this will allways happen\r\n    if (country !== 'All' && x.COUNTRY_ONLY !== country) auxWM = false;\r\n    if (x.DATE < minYear || x.DATE > maxYear) aux = false;\r\n    if (dataset !== 'All' && x.TRAVEL !== dataset.toLowerCase()) aux = false;\r\n    if (\r\n      country !== 'All' &&\r\n      region !== 'All' &&\r\n      (empty.includes(x.REGION_IN_COUNTRY) || region !== x.REGION_IN_COUNTRY)\r\n    )\r\n      auxWM = false;\r\n\r\n    // If this passes than it's data for the map\r\n    if (aux && !empty.includes(x.COUNTRY_ONLY)) {\r\n      let displayName = x.COUNTRY_ONLY;\r\n      if (x.COUNTRY_ONLY === 'Democratic Republic of the Congo')\r\n        displayName = 'Dem. Rep. Congo';\r\n      else if (x.COUNTRY_ONLY === 'Central African Republic')\r\n        displayName = 'Central African Rep.';\r\n      else if (\r\n        x.COUNTRY_ONLY === 'Ivory Coast' ||\r\n        x.COUNTRY_ONLY === \"Cote d'Ivoire\"\r\n      )\r\n        displayName = \"Côte d'Ivoire\";\r\n      else if (x.COUNTRY_ONLY === 'East Timor') displayName = 'Timor-Leste';\r\n      else if (x.COUNTRY_ONLY === 'State of Palestine')\r\n        displayName = 'Palestine';\r\n      else if (x.COUNTRY_ONLY === 'Dominican Republic')\r\n        displayName = 'Dominican Rep.';\r\n      else if (x.COUNTRY_ONLY === 'Viet Nam') displayName = 'Vietnam';\r\n      else if (x.COUNTRY_ONLY === 'USA')\r\n        displayName = 'United States of America';\r\n      else if (x.COUNTRY_ONLY === 'Cape Verde') displayName = 'Cabo Verde';\r\n      else if (x.COUNTRY_ONLY === 'Turks and Caicos Islands')\r\n        displayName = 'Turks and Caicos Is.';\r\n\r\n      // WORLD MAP\r\n      if (!worldMapResults.some((e) => e.name === x.COUNTRY_ONLY)) {\r\n        worldMapResults.push({\r\n          name: x.COUNTRY_ONLY,\r\n          displayName: displayName,\r\n          count: 1\r\n        });\r\n      } else {\r\n        let aux2 = worldMapResults.find((e) => e.name === x.COUNTRY_ONLY);\r\n        let countryIndex = worldMapResults.findIndex(\r\n          (e) => e.name === x.COUNTRY_ONLY\r\n        );\r\n        aux2.count += 1;\r\n        worldMapResults[countryIndex] = aux2;\r\n      }\r\n\r\n      // WORLD MAP COMPLEMENTARY DATA FOR WORLD MAP (lines 572-583)\r\n      if (worldMapComplementaryResults[displayName] === undefined)\r\n        worldMapComplementaryResults[displayName] = WMCDTemplate;\r\n      worldMapComplementaryResults[displayName] = WMCDAux(\r\n        JSON.stringify(worldMapComplementaryResults[displayName]),\r\n        x\r\n      );\r\n\r\n      // WORLD MAP DATA FOR EACH MAPVIEW\r\n      worldMapG = WMCountData(\r\n        JSON.stringify(worldMapG),\r\n        x,\r\n        displayName,\r\n        'GENOTYPE',\r\n        'genotypes',\r\n        'lineage'\r\n      );\r\n      worldMapH58 = WMCountData(\r\n        JSON.stringify(worldMapH58),\r\n        x,\r\n        displayName,\r\n        'GENOTYPE_SIMPLE',\r\n        'genotypes',\r\n        'type',\r\n        true\r\n      );\r\n      worldMapSTAD = WMCountData(\r\n        JSON.stringify(worldMapSTAD),\r\n        x,\r\n        displayName,\r\n        'amr_category',\r\n        'STADs',\r\n        'type',\r\n        false,\r\n        'No AMR detected'\r\n      );\r\n      worldMapMDR = WMCountData(\r\n        JSON.stringify(worldMapMDR),\r\n        x,\r\n        displayName,\r\n        'MDR',\r\n        'MDRs',\r\n        'type',\r\n        false,\r\n        'MDR'\r\n      );\r\n      worldMapXDR = WMCountData(\r\n        JSON.stringify(worldMapXDR),\r\n        x,\r\n        displayName,\r\n        'XDR',\r\n        'XDRs',\r\n        'type',\r\n        false,\r\n        'XDR'\r\n      );\r\n      worldMapAZITH = WMCountData(\r\n        JSON.stringify(worldMapAZITH),\r\n        x,\r\n        displayName,\r\n        'azith_pred_pheno',\r\n        'AZs',\r\n        'type',\r\n        false,\r\n        'AzithR'\r\n      );\r\n      worldMapCIPR = WMCountData(\r\n        JSON.stringify(worldMapCIPR),\r\n        x,\r\n        displayName,\r\n        'cip_pred_pheno',\r\n        'CipRs',\r\n        'type',\r\n        false,\r\n        'CipR'\r\n      );\r\n      worldMapCIPI = WMCountData(\r\n        JSON.stringify(worldMapCIPI),\r\n        x,\r\n        displayName,\r\n        'cip_pred_pheno',\r\n        'CipIs',\r\n        'type',\r\n        false,\r\n        '',\r\n        true\r\n      );\r\n    }\r\n\r\n    // If this passes than it's data for the graphs\r\n    if (aux && auxWM) {\r\n      results.push(x);\r\n      if (!genotypes.includes(x.GENOTYPE)) genotypes.push(x.GENOTYPE);\r\n\r\n      let chartData = ChartData(\r\n        JSON.stringify(RFWGResults),\r\n        JSON.stringify(DRTResults),\r\n        x\r\n      );\r\n      RFWGResults = chartData[0];\r\n      DRTResults = chartData[1];\r\n      AMRResults = AMRData(JSON.stringify(AMRResults), x);\r\n      GDResults = GDData(JSON.stringify(GDResults), x);\r\n\r\n      if (x.COUNTRY_ONLY === country) {\r\n        if (!PMIDResults.includes(x.PMID)) {\r\n          PMIDResults.push(x.PMID);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  // Here are some ordenations and filters for the information before it is returned to the dashboard. IT IS IMPORTANT FOR THE CODE\r\n  worldMapComplementaryResults = WMCDResults(\r\n    JSON.stringify(worldMapComplementaryResults)\r\n  );\r\n  worldMapG = WMCountDataResults(JSON.stringify(worldMapG), 'genotypes');\r\n  worldMapH58 = WMCountDataResults(JSON.stringify(worldMapH58), 'genotypes');\r\n  worldMapSTAD = WMCountDataResults(JSON.stringify(worldMapSTAD), 'STADs');\r\n  worldMapMDR = WMCountDataResults(JSON.stringify(worldMapMDR), 'MDRs');\r\n  worldMapXDR = WMCountDataResults(JSON.stringify(worldMapXDR), 'XDRs');\r\n  worldMapAZITH = WMCountDataResults(JSON.stringify(worldMapAZITH), 'AZs');\r\n  worldMapCIPR = WMCountDataResults(JSON.stringify(worldMapCIPR), 'CipRs');\r\n  worldMapCIPI = WMCountDataResults(JSON.stringify(worldMapCIPI), 'CipIs');\r\n  RFWGResults.sort((a, b) => b.total - a.total);\r\n  DRTResults = DRTResults.filter((item) => item.total >= 10);\r\n  DRTResults.sort((a, b) => a.name.localeCompare(b.name));\r\n  DRTResults = DRTDataResults(JSON.stringify(DRTResults));\r\n  AMRResults = AMRDataResults(JSON.stringify(AMRResults));\r\n  GDResults.sort((a, b) => a.name - b.name);\r\n\r\n  return [\r\n    results, // ALL ROWS\r\n    genotypes.length, // Number of genotypes\r\n    worldMapResults, // Data for World Map Samples\r\n    worldMapComplementaryResults, // Data for World Map Complementary Data\r\n    worldMapG, // World Map Genotypes data\r\n    worldMapH58, // WM H58 data\r\n    worldMapSTAD, // WM Sensitive to all drugs data\r\n    worldMapMDR, // WM MDR data\r\n    worldMapXDR, // WM XDR data\r\n    worldMapAZITH, // WM AzithR data\r\n    worldMapCIPR, // WM CipR data\r\n    worldMapCIPI, // WM CipI data\r\n    PMIDResults, // PMID data\r\n    RFWGResults, // Data for Resistance frequencies within genotypes graph\r\n    DRTResults, // Data for Drug resistance trends graph\r\n    AMRResults, // Data for Resistance determinants within genotypes graph\r\n    GDResults // DATA for Genotype distribution graph\r\n  ];\r\n}\r\n","import \"./index.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Tooltip as IconTooltip } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TooltipMaterialUI from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  Label,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Brush,\r\n  LineChart,\r\n  Line,\r\n  Legend,\r\n} from \"recharts\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlus,\r\n  faMinus,\r\n  faCrosshairs,\r\n  faCamera,\r\n  faTable,\r\n  faFilePdf,\r\n  faInfoCircle,\r\n  faUndoAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport download from \"downloadjs\";\r\nimport { svgAsPngUri } from \"save-svg-as-png\";\r\nimport typhinetLogoImg from \"../../assets/img/logo-typhinet-prod.png\";\r\nimport euFlagImg from \"../../assets/img/eu_flag.jpg\";\r\nimport geography from \"../../assets/world-50m.json\";\r\nimport { API_ENDPOINT } from \"../../constants\";\r\nimport {\r\n  getColorForGenotype,\r\n  getColorForDrug,\r\n  getColorForTetracyclines,\r\n} from \"../../util/colorHelper\";\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Select as DropDownSelect } from \"react-dropdown-select\";\r\nimport \"rodal/lib/rodal.css\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport {\r\n  useStyles,\r\n  CustomCircularProgress,\r\n  CustomToggleButton,\r\n  Buttons,\r\n  ButtonClearSelect,\r\n} from \"./materialUI\";\r\nimport moment from \"moment\";\r\nimport { filterForComponents } from \"./filters\";\r\n\r\nconst DashboardPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [controlMapPosition, setControlMapPosition] = useState({\r\n    coordinates: [0, 0],\r\n    zoom: 1,\r\n  });\r\n\r\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\r\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState(\r\n    {}\r\n  );\r\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\r\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\r\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\r\n  const [worldMapSTADData, setWorldMapSTADData] = useState([]);\r\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\r\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\r\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\r\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\r\n\r\n  const [plotAmrClassChart, setPlotAmrClassChart] = useState(function () { });\r\n  const [plotDrugsAndGenotypesChart, setPlotDrugsAndGenotypesChart] = useState(\r\n    function () { }\r\n  );\r\n  const [plotPopulationStructureChart, setPlotPopulationStructureChart] =\r\n    useState(function () { });\r\n  const [plotDrugTrendsChart, setPlotDrugTrendsChart] = useState(\r\n    function () { }\r\n  );\r\n\r\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] =\r\n    useState(false);\r\n  const [\r\n    captureControlChartRFWGInProgress,\r\n    setCaptureControlChartRFWGInProgress,\r\n  ] = useState(false);\r\n  const [\r\n    captureControlChartDRTInProgress,\r\n    setCaptureControlChartDRTInProgress,\r\n  ] = useState(false);\r\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] =\r\n    useState(false);\r\n  const [\r\n    captureControlChartRFWAGInProgress,\r\n    setCaptureControlChartRFWAGInProgress,\r\n  ] = useState(false);\r\n  const [captureReportInProgress, setCaptureReportInProgress] = useState(false);\r\n  const [tooltipContent, setTooltipContent] = useState(null);\r\n\r\n  const [timeInitial, setTimeInitial] = React.useState(0);\r\n  const [timeFinal, setTimeFinal] = React.useState(0);\r\n  const [actualTimeInitial, setActualTimeInitial] = React.useState(0);\r\n  const [actualTimeFinal, setActualTimeFinal] = React.useState(0);\r\n  const [years, setYears] = useState([0, 0]);\r\n\r\n  const [countriesForFilter, setCountriesForFilter] = React.useState([\"All\"]);\r\n  const [regionsForFilter, setRegionsForFilter] = React.useState([\"All\"]);\r\n  const [actualCountry, setActualCountry] = useState(\"All\");\r\n  const [actualRegion, setActualRegion] = useState(\"All\");\r\n\r\n  // const [actualContinent, setActualContinent] = useState(\"All\");\r\n  // const [continentOptions] = useState(['All', 'Africa', 'Asia', 'Central America', 'Europe', 'North America', 'Oceania', 'South America'])\r\n\r\n  const [populationStructureFilter, setPopulationStructureFilter] =\r\n    React.useState(1);\r\n  const [populationStructureFilterOptions] = useState([\r\n    { value: \"Number of genomes\", id: 1 },\r\n    { value: \"Percentage per year\", id: 2 },\r\n  ]);\r\n  const [RFWGFilterOptions] = useState([\r\n    { value: \"Number of genomes\", id: 1 },\r\n    { value: \"Percentage within genotype\", id: 2 },\r\n  ]);\r\n  const [amrClassFilterOptions] = useState([\r\n    { value: \"Number of genomes\", id: 1 },\r\n    { value: \"Percentage per genotype\", id: 2 },\r\n  ]);\r\n  const [amrClassFilterforFilterOptions] = useState([\r\n    { value: \"Ampicillin\", id: 0 },\r\n    { value: \"Azithromycin\", id: 1 },\r\n    { value: \"Chloramphenicol\", id: 2 },\r\n    { value: \"Co-trimoxazole\", id: 3 },\r\n    { value: \"ESBL\", id: 4 },\r\n    { value: \"Fluoroquinolones (CipNS)\", id: 5 },\r\n    { value: \"Sulphonamides\", id: 6 },\r\n    { value: \"Tetracyclines\", id: 7 },\r\n    { value: \"Trimethoprim\", id: 8 },\r\n  ]);\r\n\r\n  const [RFWGFilter, setRFWGFilter] = React.useState(2);\r\n  const [amrClassesForFilter] = useState([\r\n    \"Ampicillin\",\r\n    \"Azithromycin\",\r\n    \"Chloramphenicol\",\r\n    \"Co-trimoxazole\",\r\n    \"ESBL\",\r\n    \"Fluoroquinolones (CipNS)\",\r\n    \"Sulphonamides\",\r\n    \"Tetracyclines\",\r\n    \"Trimethoprim\",\r\n  ]);\r\n  const [drtClassesForFilter] = useState([\r\n    \"Ampicillin\",\r\n    \"Azithromycin\",\r\n    \"Chloramphenicol\",\r\n    \"Co-trimoxazole\",\r\n    \"ESBL\",\r\n    \"Fluoroquinolones (CipNS)\",\r\n    \"Susceptible\",\r\n    \"Sulphonamides\",\r\n    \"Tetracyclines\",\r\n    \"Trimethoprim\",\r\n  ]);\r\n  const [trendClassesForFilter] = useState([\r\n    \"Ampicillin\",\r\n    \"Azithromycin\",\r\n    \"Chloramphenicol\",\r\n    /*\"Fluoroquinolone (CipI)\",*/ \"Fluoroquinolones (CipR)\",\r\n    \"Co-trimoxazole\",\r\n    \"ESBL\",\r\n    \"Fluoroquinolones (CipNS)\",\r\n    \"Susceptible\",\r\n    \"Sulphonamides\",\r\n    \"Tetracyclines\",\r\n    \"Trimethoprim\",\r\n  ]);\r\n  const [trendDropdownOptions] = useState([\r\n    { value: \"Ampicillin\", id: 0 },\r\n    { value: \"Azithromycin\", id: 1 },\r\n    { value: \"Chloramphenicol\", id: 2 },\r\n    /*{value: \"Fluoroquinolone (CipI)\", id: 3},*/ {\r\n      value: \"Fluoroquinolones (CipR)\",\r\n      id: 3,\r\n    },\r\n    { value: \"Co-trimoxazole\", id: 4 },\r\n    { value: \"ESBL\", id: 5 },\r\n    { value: \"Fluoroquinolones (CipNS)\", id: 6 },\r\n    { value: \"Susceptible\", id: 7 },\r\n    { value: \"Sulphonamides\", id: 8 },\r\n    { value: \"Tetracyclines\", id: 9 },\r\n    { value: \"Trimethoprim\", id: 10 },\r\n  ]);\r\n  const [RFWGDropdownOptions, setRFWGDropdownOptions] = useState([]);\r\n  const [amrClassFilter, setAmrClassFilter] = React.useState(\r\n    amrClassesForFilter[5]\r\n  );\r\n  const [RDWAGDataviewFilter, setRDWAGDataviewFilter] = React.useState(2);\r\n\r\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([]);\r\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState(\r\n    []\r\n  );\r\n  const [populationStructureChartData, setPopulationStructureChartData] =\r\n    useState([]);\r\n  const [amrClassChartData, setAmrClassChartData] = useState({});\r\n\r\n  const [mapView, setMapView] = React.useState(\"CipI\");\r\n  const [dataset, setDataset] = React.useState(\"All\");\r\n  const [totalGenomes, setTotalGenomes] = useState(0);\r\n  const [actualGenomes, setActualGenomes] = useState(0);\r\n  const [totalGenotypes, setTotalGenotypes] = useState(0);\r\n  const [actualGenotypes, setActualGenotypes] = useState(0);\r\n  const [appLoading, setAppLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(\"\");\r\n  const [countryPMID, setCountryPMID] = useState([]);\r\n\r\n  const [trendValues, setTrendValues] = React.useState(trendDropdownOptions);\r\n  const [RFWGValues, setRFWGValues] = React.useState([]);\r\n\r\n  const [desktop] = useState(767);\r\n  const [mobile] = useState(500);\r\n\r\n  const [hoverColor] = useState(\"#D2F1F6\");\r\n\r\n  const [dimensions, setDimensions] = React.useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  // Helper function for getting height and width of window\r\n  function debounce(fn, ms) {\r\n    let timer;\r\n    return (_) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout((_) => {\r\n        timer = null;\r\n        fn.apply(this, arguments);\r\n      }, ms);\r\n    };\r\n  }\r\n\r\n  // Format selected date\r\n  function formatDate(date) {\r\n    return moment(date).format(\"ddd MMM DD YYYY HH:mm:ss\");\r\n  }\r\n\r\n  // Watcher for window resize\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n      });\r\n    }, 1000);\r\n\r\n    window.addEventListener(\"resize\", debouncedHandleResize);\r\n\r\n    return (_) => {\r\n      window.removeEventListener(\"resize\", debouncedHandleResize);\r\n    };\r\n  });\r\n\r\n  const [genotypes] = useState(\r\n    [\r\n      \"0\",\r\n      \"0.0.1\",\r\n      \"0.0.2\",\r\n      \"0.0.3\",\r\n      \"0.1\",\r\n      \"0.1.1\",\r\n      \"0.1.2\",\r\n      \"0.1.3\",\r\n      \"1.1\",\r\n      \"1.1.1\",\r\n      \"1.1.2\",\r\n      \"1.1.3\",\r\n      \"1.1.4\",\r\n      \"1.2\",\r\n      \"1.2.1\",\r\n      \"2\",\r\n      \"2.0.1\",\r\n      \"2.0.2\",\r\n      \"2.1\",\r\n      \"2.1.1\",\r\n      \"2.1.2\",\r\n      \"2.1.3\",\r\n      \"2.1.4\",\r\n      \"2.1.5\",\r\n      \"2.1.6\",\r\n      \"2.1.7\",\r\n      \"2.1.8\",\r\n      \"2.1.9\",\r\n      \"2.1.7.1\",\r\n      \"2.1.7.2\",\r\n      \"2.2\",\r\n      \"2.2.1\",\r\n      \"2.2.2\",\r\n      \"2.2.3\",\r\n      \"2.2.4\",\r\n      \"2.3\",\r\n      \"2.3.1\",\r\n      \"2.3.2\",\r\n      \"2.3.3\",\r\n      \"2.3.4\",\r\n      \"2.3.5\",\r\n      \"2.4\",\r\n      \"2.4.1\",\r\n      \"2.5\",\r\n      \"2.5.1\",\r\n      \"2.5.2\",\r\n      \"3\",\r\n      \"3.0.1\",\r\n      \"3.0.2\",\r\n      \"3.1\",\r\n      \"3.1.1\",\r\n      \"3.1.2\",\r\n      \"3.2\",\r\n      \"3.2.1\",\r\n      \"3.2.2\",\r\n      \"3.3\",\r\n      \"3.3.1\",\r\n      \"3.3.2\",\r\n      \"3.3.2.Bd1\",\r\n      \"3.3.2.Bd2\",\r\n      \"3.4\",\r\n      \"3.5\",\r\n      \"3.5.1\",\r\n      \"3.5.2\",\r\n      \"3.5.3\",\r\n      \"3.5.4\",\r\n      \"3.5.4.1\",\r\n      \"3.5.4.2\",\r\n      \"3.5.4.3\",\r\n      \"4\",\r\n      \"4.1\",\r\n      \"4.1.1\",\r\n      \"4.2\",\r\n      \"4.2.1\",\r\n      \"4.2.2\",\r\n      \"4.2.3\",\r\n      /*'4.3', '4.3.0', */ \"4.3.1\",\r\n      \"4.3.1.1\",\r\n      \"4.3.1.1.P1\",\r\n      \"4.3.1.1.EA1\",\r\n      \"4.3.1.2\",\r\n      \"4.3.1.2.EA2\",\r\n      \"4.3.1.2.EA3\",\r\n      \"4.3.1.2.1\",\r\n      \"4.3.1.2.1.1\",\r\n      \"4.3.1.3\",\r\n      \"4.3.1.3.Bdq\",\r\n    ].sort((a, b) => a.localeCompare(b))\r\n  );\r\n\r\n  // Get date from the las update on the table from admin page\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}mongo/lastUpdated`).then((res) => {\r\n      setLastUpdated(new Date(res.data));\r\n    });\r\n  }, []);\r\n\r\n  // Colors for the No. Samples label\r\n  const mapSamplesColorScale = (domain) => {\r\n    if (domain >= 1 && domain <= 9) {\r\n      return \"#4575b4\";\r\n    } else if (domain >= 10 && domain <= 19) {\r\n      return \"#91bfdb\";\r\n    } else if (domain >= 20 && domain <= 99) {\r\n      return \"#addd8e\";\r\n    } else if (domain >= 100 && domain <= 299) {\r\n      return \"#fee090\";\r\n    } else if (domain >= 300) {\r\n      return \"#fc8d59\";\r\n    }\r\n  };\r\n\r\n  const mapRedColorScale = (percentage) => {\r\n    const p = parseInt(percentage);\r\n    if (p >= 51) {\r\n      return \"#A20F17\";\r\n    } else if (p >= 11) {\r\n      return \"#DD2C24\";\r\n    } else if (p >= 3) {\r\n      return \"#FA694A\";\r\n    } else {\r\n      return \"#FAAD8F\";\r\n    }\r\n  };\r\n\r\n  const mapRedColorScaleForSensitive = (percentage) => {\r\n    const p = parseFloat(percentage);\r\n    if (p > 90) {\r\n      return \"#727272\";\r\n    } else if (p > 50) {\r\n      return \"#FAAD8F\";\r\n    } else if (p > 20) {\r\n      return \"#FA694A\";\r\n    } else if (p > 10) {\r\n      return \"#DD2C24\";\r\n    }\r\n    return \"#A20F17\";\r\n  };\r\n\r\n  // Tooltip for all graphs but the Resistance determinants within genotypes\r\n  const tooltip = React.useCallback(\r\n    (positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\r\n      return (\r\n        <Tooltip\r\n          position={{\r\n            y:\r\n              dimensions.width < mobile\r\n                ? positionY[0]\r\n                : dimensions.width < desktop\r\n                  ? positionY[1]\r\n                  : positionY[2],\r\n            x: dimensions.width < mobile ? -10 : 0,\r\n          }}\r\n          wrapperStyle={wrapperS}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (payload[0]?.payload.name === \"\") {\r\n                return null;\r\n              }\r\n\r\n              if (sort) {\r\n                payload.sort((a, b) => b.value - a.value);\r\n                payload = payload.reverse();\r\n              }\r\n              if (active) {\r\n                return (\r\n                  <div className=\"my-tooltip\">\r\n                    <div className=\"my-tooltip-title\">\r\n                      <span className=\"my-tooltip-title-label\">{label}</span>\r\n                      {chart === 0 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.totalS}\r\n                        </span>\r\n                      )}\r\n                      {chart === 4 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.quantities.totalS}\r\n                        </span>\r\n                      )}\r\n                      {chart === 1 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.total}\r\n                        </span>\r\n                      )}\r\n                      {chart === 2 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.total}\r\n                        </span>\r\n                      )}\r\n                      {chart === 3 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.total}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"my-tooltip-content\"\r\n                      style={{ width: width1 }}\r\n                    >\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage =\r\n                          (item.value / item.payload.total) * 100;\r\n                        if (chart === 1) {\r\n                          percentage =\r\n                            (item.payload.drugsPercentage[item.dataKey] /\r\n                              item.payload.total) *\r\n                            100;\r\n                        }\r\n                        if (chart === 0) {\r\n                          percentage = (item.value / item.payload.totalS) * 100;\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100;\r\n                        if (\r\n                          (populationStructureFilter === 2 && chart === 3) ||\r\n                          (RFWGFilter === 2 && chart === 4)\r\n                        ) {\r\n                          percentage = Math.round(item.value * 100) / 100;\r\n                        }\r\n                        if (\r\n                          chart === 1 &&\r\n                          item.payload.drugsPercentage[item.dataKey] === 0\r\n                        ) {\r\n                          return null;\r\n                        }\r\n                        return (\r\n                          <div\r\n                            key={index + item}\r\n                            className=\"my-tooltip-content-individual\"\r\n                            style={{ width: width2 }}\r\n                          >\r\n                            <div\r\n                              className=\"my-tooltip-content-square\"\r\n                              style={{\r\n                                backgroundColor: stroke\r\n                                  ? item.stroke\r\n                                  : item.fill,\r\n                              }}\r\n                            />\r\n                            <div className=\"my-tooltip-content-info\">\r\n                              <span\r\n                                className=\"my-tooltip-content-name\"\r\n                                style={{\r\n                                  width:\r\n                                    dimensions.width < mobile ? \"80%\" : \"100%\",\r\n                                }}\r\n                              >\r\n                                {item.name}\r\n                              </span>\r\n                              <span className=\"my-tooltip-content-count\">\r\n                                N ={\" \"}\r\n                                {(populationStructureFilter === 2 &&\r\n                                  chart === 3) ||\r\n                                  (RFWGFilter === 2 && chart === 4)\r\n                                  ? item.payload.quantities[item.name]\r\n                                  : chart === 1\r\n                                    ? item.payload.drugsPercentage[item.dataKey]\r\n                                    : item.value}\r\n                              </span>\r\n                              <span className=\"my-tooltip-content-percent\">\r\n                                {percentage}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n      );\r\n    },\r\n    [\r\n      desktop,\r\n      dimensions,\r\n      mobile,\r\n      populationStructureFilter,\r\n      RFWGFilter,\r\n      hoverColor,\r\n    ]\r\n  );\r\n\r\n  // Genotype Distribution graph\r\n  useEffect(() => {\r\n    const plotPopulationStructureChart = () => {\r\n      if (populationStructureFilter === 1) {\r\n        /* QUANTITY */\r\n        let maxH = 0;\r\n        for (\r\n          let index = 0;\r\n          index < populationStructureChartData.length;\r\n          index++\r\n        ) {\r\n          if (populationStructureChartData[index].total > maxH) {\r\n            maxH = populationStructureChartData[index].total;\r\n          }\r\n        }\r\n        maxH = Math.ceil(maxH / 50) * 50;\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={populationStructureChartData}\r\n              margin={{\r\n                top: 20,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              maxBarSize={62}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"name\"\r\n                interval=\"preserveStartEnd\"\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                domain={[0, maxH]}\r\n                allowDataOverflow={true}\r\n                allowDecimals={false}\r\n                width={70}\r\n              >\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"PSC-label\"\r\n                  offset={6}\r\n                >\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {populationStructureChartData.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"name\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"PSC_2\"}\r\n                              className=\"PSC-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"PSC-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"PSC-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip(\r\n                [290, 290, 260],\r\n                dimensions.width < 620 ? 250 : 530,\r\n                dimensions.width > 620 ? \"20%\" : \"50%\",\r\n                false,\r\n                { zIndex: 100, top: 20, right: -20 },\r\n                false,\r\n                2\r\n              )}\r\n              {genotypes.map((item, i) => (\r\n                <Bar\r\n                  key={i + \"PSC_Q\"}\r\n                  dataKey={item}\r\n                  stackId={0}\r\n                  fill={getColorForGenotype(item)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      } else {\r\n        /* PERCENTAGE */\r\n        let maxH = 100;\r\n\r\n        let teste = JSON.parse(JSON.stringify(populationStructureChartData));\r\n        teste.forEach((element) => {\r\n          element[\"quantities\"] = {};\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (\r\n              keys[key] !== \"name\" &&\r\n              keys[key] !== \"total\" &&\r\n              keys[key] !== \"quantities\"\r\n            ) {\r\n              let aux = keys[key];\r\n              element.quantities[aux] = element[aux];\r\n              element[aux] = (element[aux] * 100) / element.total;\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={teste}\r\n              margin={{\r\n                top: 20,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              maxBarSize={62}\r\n              barCategoryGap={\"10%\"}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"name\"\r\n                interval=\"preserveStartEnd\"\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                domain={[0, maxH]}\r\n                allowDataOverflow={true}\r\n                allowDecimals={false}\r\n                width={70}\r\n              >\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"PSC-label\"\r\n                  offset={6}\r\n                >\r\n                  % Genomes per year\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"name\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"PSC\"}\r\n                              className=\"PSC-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"PSC-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"PSC-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip(\r\n                [290, 290, 260],\r\n                dimensions.width < 620 ? 250 : 530,\r\n                dimensions.width > 620 ? \"20%\" : \"50%\",\r\n                false,\r\n                { zIndex: 100, top: 20, right: -20 },\r\n                false,\r\n                3\r\n              )}\r\n              {genotypes.map((item, i) => (\r\n                <Bar\r\n                  key={i + \"PSC_P\"}\r\n                  dataKey={item}\r\n                  stackId=\"a\"\r\n                  fill={getColorForGenotype(item)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      }\r\n    };\r\n    setPlotPopulationStructureChart(plotPopulationStructureChart);\r\n  }, [\r\n    dimensions.width,\r\n    genotypes,\r\n    populationStructureChartData,\r\n    populationStructureFilter,\r\n    tooltip,\r\n  ]);\r\n\r\n  // Resistance determinants within genotypes graph and tooltip\r\n  useEffect(() => {\r\n    const amrClassChartTooltip = () => {\r\n      return (\r\n        <Tooltip\r\n          position={{ x: 0, y: 230 }}\r\n          wrapperStyle={{ zIndex: 100, top: 50 }}\r\n          allowEscapeViewBox={{ x: true, y: true }}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (active) {\r\n                return (\r\n                  <div className=\"my-tooltip\">\r\n                    <div className=\"my-tooltip-title\">\r\n                      <span className=\"my-tooltip-title-label\">{label}</span>\r\n                      <span className=\"my-tooltip-title-total\">\r\n                        {\"N = \" + payload[0].payload.total2}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"my-tooltip-content amr-tooltip-content\">\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage;\r\n                        if (RDWAGDataviewFilter === 1) {\r\n                          percentage = (item.value / item.payload.total2) * 100;\r\n                        } else {\r\n                          percentage = item.value;\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100;\r\n                        return (\r\n                          <div\r\n                            key={index + \"tooltip\"}\r\n                            className=\"amr-tooltip-content-individual\"\r\n                          >\r\n                            <div\r\n                              className=\"my-tooltip-content-square\"\r\n                              style={{ backgroundColor: item.fill }}\r\n                            />\r\n                            <div className=\"amr-tooltip-content-info\">\r\n                              <span className=\"amr-tooltip-content-name\">\r\n                                {item.name}\r\n                              </span>\r\n                              <span className=\"my-tooltip-content-count\">\r\n                                N ={\" \"}\r\n                                {RDWAGDataviewFilter === 2\r\n                                  ? item.payload.percentage[item.name]\r\n                                  : item.value}\r\n                              </span>\r\n                              <span className=\"my-tooltip-content-percent\">\r\n                                {percentage}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }}\r\n        />\r\n      );\r\n    };\r\n\r\n    const armClassFilterComponent = (info) => {\r\n      let maxSum = 0;\r\n      const amr = amrClassChartData[amrClassFilter];\r\n      if (amr && amr[amr.length - 1] !== undefined) {\r\n        maxSum = amr[amr.length - 1].maxSum;\r\n      }\r\n\r\n      let dataAMR = amr?.slice(0, amr.length - 1);\r\n      if (dataAMR === undefined) dataAMR = [];\r\n\r\n      if (RDWAGDataviewFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={dataAMR}\r\n              margin={{\r\n                top: 20,\r\n                left: 0,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"genotype\"\r\n                type={\"category\"}\r\n                interval={dimensions.width < 1700 ? 1 : 0}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                domain={[0, maxSum]}\r\n                type={\"number\"}\r\n                allowDecimals={false}\r\n                width={70}\r\n              >\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"RDWAG-label\"\r\n                  offset={6}\r\n                >\r\n                  Number of occurrences\r\n                </Label>\r\n              </YAxis>\r\n              {dataAMR.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"genotype\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div\r\n                        className=\"RDWAG-legend-div\"\r\n                        style={{\r\n                          justifyContent:\r\n                            amrClassFilter === \"Ampicillin\" ||\r\n                              amrClassFilter === \"Fluoroquinolones (CipNS)\"\r\n                              ? \"\"\r\n                              : \"space-between\",\r\n                        }}\r\n                      >\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"RDWAG-legend\"}\r\n                              className=\"RDWAG-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"RDWAG-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"RDWAG-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar\r\n                    key={i + \"RDWAG_Q\"}\r\n                    dataKey={item[0]}\r\n                    fill={item[1]}\r\n                    stackId=\"a\"\r\n                    barSize={30}\r\n                  />\r\n                );\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      } else if (RDWAGDataviewFilter === 2) {\r\n        let temp = JSON.parse(JSON.stringify(dataAMR));\r\n\r\n        temp.forEach((element) => {\r\n          element.percentage = {};\r\n          for (const key in element) {\r\n            if (\r\n              ![\"genotype\", \"total\", \"total2\", \"percentage\"].includes(key) &&\r\n              !key.includes(\"error\")\r\n            ) {\r\n              const aux = (element[key] * 100) / element.total2;\r\n              element.percentage[key] = element[key];\r\n              element[key] = aux;\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={temp}\r\n              margin={{\r\n                top: 20,\r\n                left: 0,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"genotype\"\r\n                type={\"category\"}\r\n                interval={dimensions.width < 1700 ? 1 : 0}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                domain={[0, 100]}\r\n                type={\"number\"}\r\n                allowDecimals={false}\r\n                width={70}\r\n                allowDataOverflow={true}\r\n              >\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"RDWAG-label\"\r\n                  offset={6}\r\n                >\r\n                  % Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {temp.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"genotype\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div\r\n                        className=\"RDWAG-legend-div\"\r\n                        style={{\r\n                          justifyContent:\r\n                            amrClassFilter === \"Ampicillin\" ||\r\n                              amrClassFilter === \"Fluoroquinolones (CipNS)\"\r\n                              ? \"\"\r\n                              : \"space-between\",\r\n                        }}\r\n                      >\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"RDWAG-legend-2\"}\r\n                              className=\"RDWAG-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"RDWAG-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"RDWAG-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar\r\n                    key={i + \"RDWAG_P\"}\r\n                    dataKey={item[0]}\r\n                    fill={item[1]}\r\n                    stackId=\"a\"\r\n                    barSize={30}\r\n                  />\r\n                );\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      }\r\n    };\r\n\r\n    const plotAmrClassChart = () => {\r\n      switch (amrClassFilter) {\r\n        case \"Azithromycin\":\r\n          return armClassFilterComponent({\r\n            left: -5,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              // [\"ereA\", \"#9e9ac8\"],\r\n              [\"acrB_R717Q\", \"#addd8e\"],\r\n              [\"acrB_R717L\", \"#FBCFE5\"],\r\n              // [\"ereA + acrB_R717Q\", \"#FFEC78\"],\r\n              // [\"ereA + acrB_R717L\", \"#66c2a4\"],\r\n              [\"acrB_R717Q + acrB_R717L\", \"#fd8d3c\"],\r\n              // [\"ereA + acrB_R717Q + acrB_R717L\", \"#6baed6\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Fluoroquinolones (CipNS)\":\r\n          return armClassFilterComponent({\r\n            left: 10,\r\n            fontsize: 14,\r\n            strokeWidth: 0.5,\r\n            width: 3,\r\n            bars: [\r\n              [\"3_QRDR + qnrS (CipR)\", \"black\"],\r\n              [\"3_QRDR + qnrB (CipR)\", \"#660000\"],\r\n              [\"3_QRDR (CipR)\", \"#cc0000\"],\r\n              [\"2_QRDR + qnrS (CipR)\", \"#ff6666\"],\r\n              [\"2_QRDR + qnrB (CipR)\", \"#ffcccc\"],\r\n              [\"2_QRDR (CipI)\", \"#ff6600\"],\r\n              [\"1_QRDR + qnrS (CipR)\", \"#660066\"],\r\n              [\"1_QRDR + qnrB (CipR)\", \"#993399\"],\r\n              [\"1_QRDR (CipI)\", \"#ffcc00\"],\r\n              [\"0_QRDR + qnrS (CipI)\", \"#009999\"],\r\n              [\"0_QRDR + qnrB (CipI)\", \"#0066cc\"],\r\n              [\"None (CipS)\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Chloramphenicol\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"cmlA\", \"#addd8e\"],\r\n              [\"catA1\", \"#9e9ac8\"],\r\n              [\"catA1 + cmlA\", \"#FFEC78\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Ampicillin\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"blaTEM-1D\", \"#addd8e\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Sulphonamides\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"sul2\", \"#ffeda0\"],\r\n              [\"sul1\", \"#fd8d3c\"],\r\n              [\"sul1 + sul2\", \"#B4DD70\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Trimethoprim\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 0.5,\r\n            width: 3,\r\n            bars: [\r\n              [\"dfrA1\", \"#B4DD70\"],\r\n              [\"dfrA5\", \"#D7AEF7\"],\r\n              [\"dfrA7\", \"#FFEC78\"],\r\n              [\"dfrA14\", \"#6baed6\"],\r\n              [\"dfrA7 + dfrA14\", \"#fd8d3c\"],\r\n              [\"dfrA15\", \"#FBCFE5\"],\r\n              [\"dfrA17\", \"#FCB469\"],\r\n              [\"dfrA18\", \"#66c2a4\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Co-trimoxazole\":\r\n          let cotrim = [\r\n            \"dfrA1\",\r\n            \"dfrA5\",\r\n            \"dfrA7\",\r\n            \"dfrA14\",\r\n            \"dfrA15\",\r\n            \"dfrA17\",\r\n            \"dfrA18\",\r\n          ];\r\n          let colors1 = [\r\n            \"#ffeda0\",\r\n            \"#fd8d3c\",\r\n            \"#addd8e\",\r\n            \"#9e9ac8\",\r\n            \"#6baed6\",\r\n            \"#7a0177\",\r\n            \"#54278f\",\r\n          ];\r\n          let colors2 = [\r\n            \"#a50f15\",\r\n            \"#6a5acd\",\r\n            \"#f1b6da\",\r\n            \"#fb8072\",\r\n            \"#4682b4\",\r\n            \"#2e8b57\",\r\n            \"#98fb98\",\r\n          ];\r\n          let colors3 = [\r\n            \"#fcc5c0\",\r\n            \"#bcbddc\",\r\n            \"#fdd0a2\",\r\n            \"#c994c7\",\r\n            \"#9ecae1\",\r\n            \"#a8ddb5\",\r\n            \"#fc9272\",\r\n          ];\r\n          let bars = [[\"None\", \"#B9B9B9\"]];\r\n\r\n          for (const index in cotrim) {\r\n            bars.push([cotrim[index] + \" + sul1\", colors1[index]]);\r\n            bars.push([cotrim[index] + \" + sul2\", colors2[index]]);\r\n            bars.push([cotrim[index] + \" + sul1 + sul2\", colors3[index]]);\r\n          }\r\n          bars.push([\"dfrA7 + dfrA14 + sul1 + sul2\", \"#F54CEB\"]);\r\n\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 0.5,\r\n            width: 3,\r\n            bars: bars,\r\n          });\r\n        case \"Tetracyclines\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"tetA(D)\", getColorForTetracyclines(\"tetA(D)\")],\r\n              [\"tetA(C)\", getColorForTetracyclines(\"tetA(C)\")],\r\n              [\"tetA(B)\", getColorForTetracyclines(\"tetA(B)\")],\r\n              [\"tetA(A)\", getColorForTetracyclines(\"tetA(A)\")],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"ESBL\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"blaSHV-12\", \"#addd8e\"],\r\n              [\"blaOXA-7\", \"#9e9ac8\"],\r\n              [\"blaCTX-M-15\", \"#6baed6\"],\r\n              [\"blaCTX-M-55\", \"#FBCFE5\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n    setPlotAmrClassChart(plotAmrClassChart);\r\n  }, [\r\n    RDWAGDataviewFilter,\r\n    amrClassChartData,\r\n    amrClassFilter,\r\n    dimensions.width,\r\n    hoverColor,\r\n  ]);\r\n\r\n  // Drug Resistance Trends graph\r\n  useEffect(() => {\r\n    const plotDrugTrendsChart = () => {\r\n      let dataDRT = drugTrendsChartData;\r\n      for (const index in dataDRT) {\r\n        for (const i in trendClassesForFilter) {\r\n          const TCFF = trendClassesForFilter[i];\r\n          if (!(TCFF.toString() in dataDRT[index])) {\r\n            dataDRT[index][TCFF] = 0;\r\n            dataDRT[index].drugsPercentage[TCFF] = 0;\r\n          }\r\n        }\r\n      }\r\n\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <LineChart\r\n            data={dataDRT}\r\n            margin={{\r\n              top: 20,\r\n              bottom: 5,\r\n              right: 0,\r\n              left: -5,\r\n            }}\r\n            height={582}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              tickCount={20}\r\n              allowDecimals={false}\r\n              type=\"number\"\r\n              padding={{ left: 20, right: 20 }}\r\n              dataKey=\"name\"\r\n              domain={[\"dataMin\", \"dataMax\"]}\r\n              interval={\"preserveStartEnd\"}\r\n              tick={{ fontSize: 14 }}\r\n            />\r\n            <YAxis\r\n              tickCount={6}\r\n              padding={{ top: 20, bottom: 20 }}\r\n              allowDecimals={false}\r\n              width={70}\r\n            >\r\n              <Label\r\n                angle={-90}\r\n                position=\"insideLeft\"\r\n                className=\"DRT-label\"\r\n                offset={12}\r\n              >\r\n                Resistant (%)\r\n              </Label>\r\n            </YAxis>\r\n            {drugTrendsChartData.length > 0 && (\r\n              <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n            )}\r\n\r\n            <Legend\r\n              content={(props) => {\r\n                const { payload } = props;\r\n                return (\r\n                  <div className=\"DRT-legend\">\r\n                    <div\r\n                      className=\"DRT-legend-div\"\r\n                      style={{\r\n                        justifyContent:\r\n                          dimensions.width < 1585 ? \"space-between\" : \"\",\r\n                      }}\r\n                    >\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div\r\n                            key={index + \"DRT-legend\"}\r\n                            className=\"DRT-legend-info\"\r\n                          >\r\n                            <div\r\n                              className=\"DRT-legend-info-circle\"\r\n                              style={{ backgroundColor: color }}\r\n                            />\r\n                            <span className=\"DRT-legend-info-name\">\r\n                              {dataKey}\r\n                            </span>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n            {tooltip(\r\n              [160, 275, 255],\r\n              dimensions.width < mobile ? 250 : 325,\r\n              \"50%\",\r\n              true,\r\n              { zIndex: 100, top: 175, right: 0 },\r\n              true,\r\n              1\r\n            )}\r\n            {trendClassesForFilter.map((item, i) => (\r\n              <Line\r\n                key={i + \"DRTLine\"}\r\n                dataKey={item}\r\n                strokeWidth={2}\r\n                stroke={getColorForDrug(item)}\r\n                connectNulls\r\n                type=\"monotone\"\r\n                activeDot={timeInitial === timeFinal ? true : false}\r\n              />\r\n            ))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    };\r\n\r\n    setPlotDrugTrendsChart(plotDrugTrendsChart);\r\n  }, [\r\n    dimensions.width,\r\n    drugTrendsChartData,\r\n    mobile,\r\n    timeFinal,\r\n    timeInitial,\r\n    tooltip,\r\n    trendClassesForFilter,\r\n  ]);\r\n\r\n  // Resistance frequencies within genotypes graph\r\n  useEffect(() => {\r\n    const plotDrugsAndGenotypesChart = () => {\r\n      let aux = JSON.parse(JSON.stringify(drugsAndGenotypesChartData));\r\n\r\n      const aux2 = [];\r\n      for (let index = 0; index < aux.length; index++) {\r\n        const percentage = (aux[index].total / aux[index].totalS) * 100;\r\n        aux2.push({\r\n          value: aux[index].name,\r\n          label:\r\n            aux[index].name +\r\n            ` (total N=${aux[index].totalS}, ${Math.round(percentage * 100) / 100\r\n            }% resistant)`,\r\n          id: index,\r\n        });\r\n      }\r\n      setRFWGDropdownOptions(aux2);\r\n\r\n      const values = RFWGValues.map((x) => x.value);\r\n      aux = aux.filter((x) => values.includes(x.name));\r\n\r\n      if (RFWGFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              data={aux}\r\n              margin={{\r\n                top: 20,\r\n                left: -5,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              height={582}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"name\"\r\n                interval={dimensions.width < mobile ? 1 : 0}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis allowDecimals={false} width={71}>\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"RFWG-label\"\r\n                  offset={12}\r\n                >\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {drugsAndGenotypesChartData.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"name\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div\r\n                        className=\"RFWG-legend-div\"\r\n                        style={{\r\n                          justifyContent:\r\n                            dimensions.width < 1585 ? \"space-between\" : \"\",\r\n                        }}\r\n                      >\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"RFWG-legend\"}\r\n                              className=\"RFWG-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"RFWG-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"RFWG-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip(\r\n                [155, 270, 270],\r\n                dimensions.width < mobile ? 250 : 325,\r\n                \"50%\",\r\n                false,\r\n                { zIndex: 100, top: 160 },\r\n                false,\r\n                0\r\n              )}\r\n              {drtClassesForFilter.map((item, i) => (\r\n                <Bar\r\n                  key={i + \"DRT_Q\"}\r\n                  dataKey={item}\r\n                  fill={getColorForDrug(item)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      } else {\r\n        const teste = JSON.parse(JSON.stringify(aux));\r\n        teste.forEach((element) => {\r\n          element[\"quantities\"] = {};\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (\r\n              ![\"name\", \"total\", \"quantities\", \"totalS\"].includes(keys[key])\r\n            ) {\r\n              let aux3 = keys[key];\r\n              element.quantities[aux3] = element[aux3];\r\n              element[aux3] = (element[aux3] * 100) / element.totalS;\r\n            }\r\n            element.quantities[\"totalS\"] = element.totalS;\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\" height=\"100%\">\r\n            <BarChart\r\n              data={teste}\r\n              margin={{\r\n                top: 20,\r\n                left: -5,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"name\"\r\n                interval={dimensions.width < mobile ? 1 : 0}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis domain={[0, 100]} allowDecimals={false} width={70}>\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"RFWG-label\"\r\n                  offset={12}\r\n                >\r\n                  Percentage within genotype (%)\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"name\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div\r\n                        className=\"RFWG-legend-div\"\r\n                        style={{\r\n                          justifyContent:\r\n                            dimensions.width < 1585 ? \"space-between\" : \"\",\r\n                        }}\r\n                      >\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"RFWG-legend-2\"}\r\n                              className=\"RFWG-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"RFWG-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"RFWG-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip(\r\n                [155, 270, 270],\r\n                dimensions.width < mobile ? 250 : 325,\r\n                \"50%\",\r\n                false,\r\n                { zIndex: 100, top: 160 },\r\n                false,\r\n                4\r\n              )}\r\n              {drtClassesForFilter.map((item, i) => (\r\n                <Bar\r\n                  key={i + \"DRT_P\"}\r\n                  dataKey={item}\r\n                  fill={getColorForDrug(item)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      }\r\n    };\r\n    setPlotDrugsAndGenotypesChart(plotDrugsAndGenotypesChart);\r\n  }, [\r\n    RFWGFilter,\r\n    RFWGValues,\r\n    dimensions.width,\r\n    drtClassesForFilter,\r\n    drugsAndGenotypesChartData,\r\n    mobile,\r\n    tooltip,\r\n  ]);\r\n\r\n  // Helper for loading images to the report\r\n  function imgOnLoadPromise(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      obj.onload = () => resolve(obj);\r\n      obj.onerror = reject;\r\n    });\r\n  }\r\n\r\n  // Stop loadings\r\n  const [stopLoading] = useState(() => (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(false);\r\n        break;\r\n      case 1:\r\n        setCaptureControlChartRFWGInProgress(false);\r\n        break;\r\n      case 2:\r\n        setCaptureControlChartDRTInProgress(false);\r\n        break;\r\n      case 3:\r\n        setCaptureControlChartGDInProgress(false);\r\n        break;\r\n      case 4:\r\n        setCaptureControlChartRFWAGInProgress(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  // Start loadings\r\n  const [capturePicture] = useState(() => async (id, index, info = {}) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(true);\r\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n        break;\r\n      case 1:\r\n        setCaptureControlChartRFWGInProgress(true);\r\n        break;\r\n      case 2:\r\n        setCaptureControlChartDRTInProgress(true);\r\n        break;\r\n      case 3:\r\n        setCaptureControlChartGDInProgress(true);\r\n        break;\r\n      case 4:\r\n        setCaptureControlChartRFWAGInProgress(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const names = [\r\n      \"Resistance frequencies within genotypes\",\r\n      \"Drug resistance trends\",\r\n      \"Genotype distribution\",\r\n      \"Resistance determinants within genotypes\",\r\n    ];\r\n    const brokenNames = [\r\n      [\"Resistance frequencies\", \"within genotypes\"],\r\n      [\"Resistance determinants\", \"within all genotypes\"],\r\n    ];\r\n\r\n    if (index === 5) {\r\n      let ids = [\"RFWG\", \"RFWAG\", \"DRT\", \"GD\"];\r\n\r\n      var doc = new jsPDF({ unit: \"mm\", format: \"a4\", orientation: \"l\" });\r\n\r\n      const IPW = doc.internal.pageSize.getWidth() / 2;\r\n\r\n      let typhinetLogo = new Image();\r\n      typhinetLogo.src = typhinetLogoImg;\r\n      doc.addImage(typhinetLogo, \"PNG\", 110, 8, 80, 26);\r\n\r\n      let euFlag = new Image();\r\n      euFlag.src = euFlagImg;\r\n      doc.addImage(euFlag, \"JPG\", 237, 148.2, 6, 4);\r\n\r\n      let date = new Date();\r\n      date = moment(date).format(\"ddd MMM DD YYYY HH:mm:ss\");\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor(0, 0, 0);\r\n\r\n      const paragraph1 = `This report was generated at [${formatDate(\r\n        new Date()\r\n      )}] using TyphiNET (http://typhi.net), a data data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch (http://pathogen.watch).`;\r\n      const paragraph2 = `TyphiNET data were last updated on October 02 2023. For code and further details please see: https://github.com/zadyson/TyphiNET.`;\r\n      const paragraph3 = `The genotypes reported here are defined in Dyson & Holt (2021), J. Infect. Dis.`;\r\n      const paragraph4 = `Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, Argimón et al. 2021, Nat. Commun.`;\r\n      const paragraph5 = `Travel-associated cases are attributed to the country of travel, not the country of isolation (see Ingle et al. 2019, PLoS NTDs).`;\r\n      const paragraph6 = `TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (http://typhi.net).`;\r\n      const paragraph7 = `Studies contributing genomes representing infections originating from ${info.country\r\n        } have the following PubMed IDs (PMIDs): ${info.PMID.join(\", \")}.`;\r\n      const paragraph8 = `This project has received funding from the the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the  European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.`;\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.text(`TyphiNET report [${formatDate(new Date())}]`, 20, 50, {\r\n        align: \"justify\",\r\n        maxWidth: 255,\r\n      });\r\n      doc.setFont(undefined, \"normal\");\r\n      doc.text(paragraph1, 20, 65, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph2, 20, 82, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph3, 20, 99, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph4, 20, 106, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph5, 20, 113, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph6, 20, 125, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph8, 20, 147, { align: \"justify\", maxWidth: 255 });\r\n      if (info.country !== \"All\") {\r\n        doc.text(paragraph7, 20, 164, { align: \"justify\", maxWidth: 255 });\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200);\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" });\r\n\r\n      doc.addPage(\"a4\", \"l\");\r\n      doc.setFontSize(25);\r\n      doc.text(\"Global Overview of\", 77, 12);\r\n      doc.setFont(undefined, \"italic\");\r\n      doc.text(\"Salmonella\", 154, 12);\r\n      doc.setFont(undefined, \"normal\");\r\n      doc.text(\"Typhi\", 200, 12);\r\n\r\n      await svgAsPngUri(document.getElementById(\"control-map\"), {\r\n        scale: 4,\r\n        backgroundColor: \"white\",\r\n        width: 1200,\r\n        left: -200,\r\n      }).then(async (uri) => {\r\n        let canvas = document.createElement(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        let mapImg = document.createElement(\"img\");\r\n        let mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        canvas.width = 1400;\r\n        canvas.height = 700;\r\n        ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n        var img = canvas.toDataURL(\"image/png\");\r\n        doc.addImage(img, \"PNG\", 0, 45, 298, 155);\r\n      });\r\n\r\n      let actualMapView = info.mapView;\r\n      switch (actualMapView) {\r\n        case \"MDR\":\r\n          actualMapView = \"Multidrug resistant (MDR)\";\r\n          break;\r\n        case \"XDR\":\r\n          actualMapView = \"Extensively drug resistant (XDR)\";\r\n          break;\r\n        case \"Azith\":\r\n          actualMapView = \"Azithromycin resistant\";\r\n          break;\r\n        case \"CipI\":\r\n          actualMapView = \"Ciprofloxacin nonsusceptible (CipNS)\";\r\n          break;\r\n        case \"CipR\":\r\n          actualMapView = \"Ciprofloxacin resistant (CipR)\";\r\n          break;\r\n        case \"H58 / Non-H58\":\r\n          actualMapView = \"H58 genotype\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      doc.setFontSize(12);\r\n      const dataset =\r\n        info.dataset === \"All\"\r\n          ? \"All (local + travel)\"\r\n          : info.dataset === \"Local\"\r\n            ? \"Locally isolated\"\r\n            : \"Travel isolates\";\r\n\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.text(info.mapView, 8, 20);\r\n      doc.setFont(undefined, \"normal\");\r\n      doc.text(`Total ${info.actualGenomes} genomes`, 8, 25);\r\n      doc.text(\"Dataset: \" + dataset, 8, 30);\r\n      doc.text(\r\n        \"Time period: \" +\r\n        info.actualTimePeriodRange[0] +\r\n        \" to \" +\r\n        info.actualTimePeriodRange[1],\r\n        8,\r\n        35\r\n      );\r\n      doc.text(\"Country: \" + info.country, 8, 40);\r\n      // doc.text(\"Region: \" + info.region, 8, 45);\r\n\r\n      if (info.mapView === \"Dominant Genotype\") {\r\n        var img = new Image();\r\n        img.src = \"legends/MapView_DominantGenotype.png\";\r\n        doc.addImage(img, \"PNG\", 68, 19, 219, 27);\r\n      } else if (info.mapView === \"No. Samples\") {\r\n        var img2 = new Image();\r\n        img2.src = \"legends/MapView_NoSamples.png\";\r\n        doc.addImage(img2, \"PNG\", 250, 15, 35, 35);\r\n      } else {\r\n        var img3 = new Image();\r\n        img3.src = \"legends/MapView_Others.png\";\r\n        doc.addImage(img3, \"PNG\", 250, 15, 35, 35);\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200);\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" });\r\n\r\n      doc.addPage(\"a4\", \"l\");\r\n      const names2 = [\r\n        \"Resistance frequencies within genotypes\",\r\n        \"Resistance determinants within genotypes\",\r\n        \"Drug resistance trends\",\r\n        \"Genotype distribution\",\r\n      ];\r\n      for (let index = 0; index < ids.length; index++) {\r\n        let url;\r\n        await domtoimage\r\n          .toJpeg(document.getElementById(ids[index]), {\r\n            quality: 1,\r\n            bgcolor: \"white\",\r\n          })\r\n          .then(function (dataUrl) {\r\n            url = dataUrl;\r\n          });\r\n\r\n        let subtitleH = 0;\r\n        if (index === 0 || index === 1 || index === 2) {\r\n          subtitleH = 3;\r\n        }\r\n        subtitleH += 3;\r\n\r\n        doc.addImage(url, \"PNG\", 5, 15 + subtitleH);\r\n\r\n        let imgWidth = jsPDF.API.getImageProperties(url).width;\r\n        imgWidth = Math.floor(imgWidth * 0.264583);\r\n        doc.setFontSize(11);\r\n        const texts = [\" \", \" \", \" \", \" \"];\r\n        let spaceBetween = -4;\r\n        if (dimensions.width < 1750) {\r\n          spaceBetween = 13;\r\n        }\r\n\r\n        let drugs = [];\r\n        for (let i = 0; i < info.drugs.length; i++) {\r\n          drugs.push(info.drugs[i].value);\r\n        }\r\n        if (drugs.length === 0) {\r\n          drugs.push(\"None\");\r\n        }\r\n\r\n        doc.text(texts[index], imgWidth + spaceBetween, 23 + subtitleH, {\r\n          align: \"justify\",\r\n          maxWidth: 50,\r\n        });\r\n\r\n        doc.setFontSize(14);\r\n        if (index === 1) {\r\n          doc.text(names2[index] + \" : \" + info.amrClassFilter, 23, 10);\r\n        } else {\r\n          doc.text(names2[index], 23, 10);\r\n        }\r\n        doc.setFontSize(9);\r\n\r\n        if (index === 0) {\r\n          doc.text(`Top Genotypes (up to ${info.RFWGCount})`, 23, 15);\r\n        }\r\n        if (index === 1) {\r\n          doc.text(\"Top Genotypes (up to 10)\", 23, 15);\r\n        }\r\n        if (index === 2) {\r\n          doc.text(\"Data are plotted for years with N >= 10 genomes\", 23, 15);\r\n        }\r\n\r\n        doc.setFontSize(12);\r\n        doc.text(`Total ${info.actualGenomes} genomes`, 230, 30);\r\n        doc.text(\"Dataset: \" + dataset, 230, 35);\r\n        doc.text(\r\n          \"Time period: \" +\r\n          info.actualTimePeriodRange[0] +\r\n          \" to \" +\r\n          info.actualTimePeriodRange[1],\r\n          230,\r\n          40\r\n        );\r\n        doc.text(\"Country: \" + info.country, 230, 45);\r\n        // doc.text(\"Region: \" + info.region, 230, 50);\r\n\r\n        if (index === 3) {\r\n          doc.setFillColor(255, 255, 255);\r\n          doc.rect(\r\n            22,\r\n            info.dimensions.width < info.desktop ? 120 : 110,\r\n            300,\r\n            100,\r\n            \"F\"\r\n          );\r\n        } else if (index === 1) {\r\n          doc.setFillColor(255, 255, 255);\r\n          doc.rect(22, 113, 300, 100, \"F\");\r\n        }\r\n\r\n        if (index === 1) {\r\n          var img4 = new Image();\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipNS)\") {\r\n            img4.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            img4.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n          doc.addImage(img4, \"PNG\", 22, 107 + subtitleH);\r\n        } else if (index === 3) {\r\n          var img5 = new Image();\r\n          img5.src = \"legends/Genotype_Distribution.png\";\r\n          doc.addImage(\r\n            img5,\r\n            \"PNG\",\r\n            22,\r\n            (info.dimensions.width < info.desktop ? 115 : 108) + subtitleH\r\n          );\r\n        }\r\n        doc.line(0, 200, 300, 200);\r\n        doc.setFontSize(10);\r\n        doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" });\r\n        if (index < ids.length - 1) {\r\n          doc.addPage(\"a4\", \"l\");\r\n        }\r\n      }\r\n\r\n      doc.save(\"TyphiNET - Report.pdf\");\r\n      setCaptureReportInProgress(false);\r\n    } else if (index !== 0) {\r\n      let graph = document.getElementById(id);\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      let graphImg = document.createElement(\"img\");\r\n      let graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      await domtoimage\r\n        .toPng(graph, { quality: 0.1, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          graphImg.src = dataUrl;\r\n        });\r\n\r\n      let cHeight = 20;\r\n      let logoHeight = 100;\r\n      let legendHeight = 0;\r\n      let filterHeight = 80;\r\n      let subtitleHeight = 0;\r\n      if (id === \"RFWG\" || id === \"RFWAG\" || id === \"DRT\") {\r\n        cHeight += 20;\r\n        subtitleHeight = 20;\r\n      }\r\n      let imgHeight = graphImg.height;\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        imgHeight -= 200;\r\n      }\r\n\r\n      if (id === \"GD\" || id === \"RFWAG\") legendHeight = 40;\r\n\r\n      let imgWidth = graphImg.width;\r\n      if (id === \"RFWAG\") {\r\n        imgWidth += 130;\r\n        if (info.amrClassFilter === \"Azithromycin\") {\r\n          imgWidth += 100;\r\n        } else if (info.amrClassFilter === \"Co-trimoxazole\") {\r\n          imgWidth += 195;\r\n        } else if (info.amrClassFilter === \"Fluoroquinolones (CipNS)\") {\r\n          imgWidth += 250;\r\n        }\r\n      } else if (id === \"GD\") {\r\n        imgWidth += 370;\r\n      }\r\n\r\n      await graphImgPromise;\r\n      canvas.width = imgWidth;\r\n\r\n      canvas.height =\r\n        imgHeight +\r\n        cHeight +\r\n        logoHeight +\r\n        legendHeight +\r\n        filterHeight +\r\n        subtitleHeight +\r\n        60;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"18px Montserrat\";\r\n      ctx.fillStyle = \"black\";\r\n      ctx.textAlign = \"center\";\r\n\r\n      ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight);\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(60, canvas.height - 130, 800, 300);\r\n      ctx.fillStyle = \"black\";\r\n\r\n      if (id === \"RFWG\") {\r\n        ctx.fillText(brokenNames[0][0], canvas.width / 2, 10 + logoHeight);\r\n        ctx.fillText(brokenNames[0][1], canvas.width / 2, 30 + logoHeight);\r\n        ctx.font = \"12px Montserrat\";\r\n        ctx.fillText(\r\n          `Top Genotypes (up to ${info.RFWGCount})`,\r\n          canvas.width / 2,\r\n          32 + logoHeight + subtitleHeight\r\n        );\r\n      } else if (id === \"RFWAG\") {\r\n        ctx.fillText(brokenNames[1][0], canvas.width / 2, 10 + logoHeight);\r\n        ctx.fillText(brokenNames[1][1], canvas.width / 2, 30 + logoHeight);\r\n        ctx.font = \"12px Montserrat\";\r\n        ctx.fillText(\r\n          \"Top Genotypes (up to 10)\",\r\n          canvas.width / 2,\r\n          32 + logoHeight + subtitleHeight\r\n        );\r\n      } else if (id === \"DRT\") {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight);\r\n        ctx.font = \"12px Montserrat\";\r\n        ctx.fillText(\r\n          \"Data are plotted for years with N ≥ 10 genomes\",\r\n          canvas.width / 2,\r\n          32 + logoHeight + subtitleHeight\r\n        );\r\n      } else {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight);\r\n      }\r\n\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        let legendImg = document.createElement(\"img\");\r\n        let legendImgPromise = imgOnLoadPromise(legendImg);\r\n        if (id === \"RFWAG\") {\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipNS)\") {\r\n            legendImg.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            if (\r\n              info.amrClassFilter === \"Trimethoprim\" ||\r\n              info.amrClassFilter === \"Co-trimoxazole\"\r\n            ) {\r\n              info.amrClassFilter += \"2\";\r\n            }\r\n            legendImg.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n        } else {\r\n          legendImg.src = \"legends/Genotype_Distribution_2.png\";\r\n        }\r\n        await legendImgPromise;\r\n\r\n        ctx.drawImage(\r\n          legendImg,\r\n          graphImg.width,\r\n          logoHeight + subtitleHeight + 12 + cHeight\r\n        );\r\n      }\r\n\r\n      let typhinetLogo = document.createElement(\"img\");\r\n      let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n      typhinetLogo.src = typhinetLogoImg;\r\n      await typhinetLogoPromise;\r\n      ctx.drawImage(typhinetLogo, 10, 10, 170, 55);\r\n\r\n      ctx.fillStyle = \"black\";\r\n      ctx.font = \"14px Montserrat\";\r\n      ctx.textAlign = \"start\";\r\n      ctx.fillText(\"Dataset: \" + info.dataset, 10, canvas.height - 92);\r\n      ctx.fillText(\r\n        \"Time period: \" +\r\n        info.actualTimePeriodRange[0] +\r\n        \" to \" +\r\n        info.actualTimePeriodRange[1],\r\n        10,\r\n        canvas.height - 70\r\n      );\r\n      ctx.fillText(\"Country: \" + info.country, 10, canvas.height - 48);\r\n      // ctx.fillText(\"Region: \" + info.region, 10, canvas.height - 26);\r\n\r\n      const base64 = canvas.toDataURL();\r\n      stopLoading(index);\r\n      download(base64, \"TyphiNET - \" + names[index - 1] + \".png\");\r\n    } else {\r\n      svgAsPngUri(document.getElementById(id), {\r\n        scale: 4,\r\n        backgroundColor: \"white\",\r\n        width: 1200,\r\n        left: -200,\r\n      }).then(async (uri) => {\r\n        let canvas = document.createElement(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        let mapImg = document.createElement(\"img\");\r\n        let mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        let cWidth = 3600;\r\n        let cHeight = 1800;\r\n        let textHeight = 240;\r\n        let legendHeight = 0;\r\n        if (info.mapView === \"Dominant Genotype\") {\r\n          legendHeight = 440;\r\n        }\r\n\r\n        canvas.width = cWidth;\r\n        canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.font = \"bolder 50px Montserrat\";\r\n        ctx.fillStyle = \"black\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(\r\n          \"Global Overview of Salmonella Typhi\",\r\n          canvas.width / 2,\r\n          80\r\n        );\r\n        ctx.font = \"35px Montserrat\";\r\n        ctx.textAlign = \"center\";\r\n\r\n        let actualMapView = info.mapView;\r\n        switch (actualMapView) {\r\n          case \"MDR\":\r\n            actualMapView = \"Multidrug resistant (MDR)\";\r\n            break;\r\n          case \"XDR\":\r\n            actualMapView = \"Extensively drug resistant (XDR)\";\r\n            break;\r\n          case \"Azith\":\r\n            actualMapView = \"Azithromycin resistant\";\r\n            break;\r\n          case \"CipI\":\r\n            actualMapView = \"Ciprofloxacin nonsusceptible (CipNS)\";\r\n            break;\r\n          case \"CipR\":\r\n            actualMapView = \"Ciprofloxacin resistant (CipR)\";\r\n            break;\r\n          case \"H58 / Non-H58\":\r\n            actualMapView = \"H58 genotype\";\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        ctx.fillText(\"Map view: \" + actualMapView, canvas.width / 2, 140);\r\n        ctx.fillText(\"Dataset: \" + info.dataset, canvas.width / 2, 190);\r\n        ctx.fillText(\r\n          \"Time period: \" +\r\n          info.actualTimePeriodRange[0] +\r\n          \" to \" +\r\n          info.actualTimePeriodRange[1],\r\n          canvas.width / 2,\r\n          240\r\n        );\r\n\r\n        ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n        let legendImg = document.createElement(\"img\");\r\n        let legendImgoPromise = imgOnLoadPromise(legendImg);\r\n        let h;\r\n        let w;\r\n        if (info.mapView === \"Dominant Genotype\") {\r\n          legendImg.src = \"legends/MapView_DominantGenotype.png\";\r\n          await legendImgoPromise;\r\n          let centerWidth = (canvas.width - 1731) / 2;\r\n          ctx.drawImage(\r\n            legendImg,\r\n            centerWidth,\r\n            canvas.height - legendHeight - 20,\r\n            1731,\r\n            420\r\n          );\r\n        } else if (info.mapView === \"No. Samples\") {\r\n          legendImg.src = \"legends/MapView_NoSamples.png\";\r\n          await legendImgoPromise;\r\n          h = 350;\r\n          w = 310;\r\n          ctx.drawImage(\r\n            legendImg,\r\n            canvas.width - w - 15,\r\n            canvas.height - h - 10,\r\n            w,\r\n            h\r\n          );\r\n        } else {\r\n          legendImg.src = \"legends/MapView_Others.png\";\r\n          await legendImgoPromise;\r\n          h = 350;\r\n          w = 280;\r\n          ctx.drawImage(\r\n            legendImg,\r\n            canvas.width - w - 25,\r\n            canvas.height - h - 20,\r\n            w,\r\n            h\r\n          );\r\n        }\r\n\r\n        let typhinetLogo = document.createElement(\"img\");\r\n        let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n        typhinetLogo.src = typhinetLogoImg;\r\n        await typhinetLogoPromise;\r\n        ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n        const base64 = canvas.toDataURL();\r\n        stopLoading(index);\r\n        download(base64, \"TyphiNET - Global Overview Salmonella Typhi.png\");\r\n      });\r\n    }\r\n  });\r\n\r\n  // Download spreadsheet\r\n  const [dowloadBaseSpreadsheet] = useState(() => () => {\r\n    axios.get(`${API_ENDPOINT}file/download`).then((res) => {\r\n      let cols_to_remove = [\r\n        \"azith_pred_pheno\",\r\n        \"ACCESSION\",\r\n        \"COUNTRY_ONLY\",\r\n        \"REGION_IN_COUNTRY\",\r\n        \"LOCATION\",\r\n        \"ACCURACY\",\r\n        \"LATITUDE\",\r\n        \"LONGITUDE\",\r\n        \"REFERENCE\",\r\n        \"MLST ST (EnteroBase)\",\r\n        \"MLST PROFILE (EnteroBase)\",\r\n        \"GENOTYPHI SNPs CALLED\",\r\n        \"Genome ID\",\r\n        \"Version\",\r\n        \"Organism Name\",\r\n        \"Organism ID\",\r\n        \"Species Name\",\r\n        \"Species ID\",\r\n        \"Genus Name\",\r\n        \"Genus ID\",\r\n        \"Reference ID\",\r\n        \"Matching Hashes\",\r\n        \"p-Value\",\r\n        'Mash Distance',\r\n        \"cip_pred_pheno\",\r\n        \"dcs_category\",\r\n        \"amr_category\",\r\n        \"num_qrdr\",\r\n        \"num_acrb\",\r\n        \"ESBL_category\",\r\n        \"chloramphenicol_category\",\r\n        \"tetracycline_category\",\r\n        \"cip_pheno_qrdr_gene\",\r\n        \"dcs_mechanisms\",\r\n        \"num_amr_genes\",\r\n        \"dfra_any\",\r\n        \"sul_any\",\r\n        \"co_trim\",\r\n        \"GENOTYPE_SIMPLE\",\r\n        \"h58_genotypes\",\r\n      ];\r\n      let indexes = [];\r\n      let csv = res.data.split(\"\\n\");\r\n      let lines = [];\r\n\r\n      for (let index = 0; index < csv.length; index++) {\r\n        let line = csv[index].split(\",\");\r\n        lines.push(line);\r\n      }\r\n\r\n      for (let index = 0; index < cols_to_remove.length; index++) {\r\n        let currentIndex = lines[0].indexOf(cols_to_remove[index]);\r\n        indexes.push(currentIndex);\r\n      }\r\n      indexes.sort();\r\n      indexes.reverse();\r\n\r\n      let newLines = [];\r\n      for (let j = 0; j < lines.length; j++) {\r\n        let aux = [];\r\n        for (let i = 0; i < lines[j].length; i++) {\r\n          if (!indexes.includes(i)) {\r\n            aux.push(lines[j][i]);\r\n          }\r\n        }\r\n        newLines.push(aux);\r\n      }\r\n\r\n      let newCSV = \"\";\r\n      for (let i = 0; i < newLines.length; i++) {\r\n        let aux = \"\";\r\n        for (let index = 0; index < newLines[i].length; index++) {\r\n          aux += newLines[i][index];\r\n          if (index !== newLines[i].length - 1) {\r\n            aux += \",\";\r\n          }\r\n        }\r\n        if (i !== newLines.length - 1) {\r\n          aux += \"\\n\";\r\n        }\r\n        newCSV += aux;\r\n      }\r\n\r\n      download(newCSV, \"TyphiNET_Database.csv\");\r\n    });\r\n  });\r\n\r\n  const [dowloadCurrentDataSpreadsheet] = useState(() => () => { });\r\n\r\n  // Component for map view's options\r\n  const generateMapLegendOptions = () => {\r\n    // let percentageSteps2 = ['1', '2', '10', '50']\r\n    let percentageSteps = [\"1\", \"3\", \"11\", \"51\"];\r\n    let percentageStepsSensitive = [\"10\", \"20\", \"50\", \"90\", \"100\"];\r\n    const otherViews = [\"CipI\", \"CipR\", \"Azith\", \"MDR\", \"XDR\"];\r\n\r\n    if (otherViews.includes(mapView)) {\r\n      return (\r\n        <>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-insufficient-data\" />\r\n            <span>Insufficient data</span>\r\n          </div>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-zero-percent\" />\r\n            <span>0%</span>\r\n          </div>\r\n          {percentageSteps.map((n) => {\r\n            return (\r\n              <div key={n} className=\"samples-info\">\r\n                <div\r\n                  className=\"color\"\r\n                  style={{ backgroundColor: mapRedColorScale(n) }}\r\n                />\r\n                {n === \"1\" && <span>{\"1 - 2\"}%</span>}\r\n                {n === \"3\" && <span>{\"3 - 10\"}%</span>}\r\n                {n === \"11\" && <span>{\"11 - 50\"}%</span>}\r\n                {n === \"51\" && <span>{\"51 - 100\"}%</span>}\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n      );\r\n    }\r\n\r\n    switch (mapView) {\r\n      case \"Sensitive to all drugs\":\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {percentageStepsSensitive.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: mapRedColorScaleForSensitive(n) }}\r\n                  />\r\n                  {n === \"10\" && <span>{\"0 - 10\"}%</span>}\r\n                  {n === \"20\" && <span>{\"10 - 20\"}%</span>}\r\n                  {n === \"50\" && <span>{\"20 - 50\"}%</span>}\r\n                  {n === \"90\" && <span>{\"50 - 90\"}%</span>}\r\n                  {n === \"100\" && <span>{\"90 - 100\"}%</span>}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        );\r\n      case \"No. Samples\":\r\n        let legends = [\"1 - 9\", \"10 - 19\", \"20 - 99\", \"100 - 299\", \">= 300\"];\r\n        let aux = [1, 10, 20, 100, 300];\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {[...Array(5).keys()].map((n, i) => {\r\n              return (\r\n                <div key={n + i} className=\"samples-info\">\r\n                  <div\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: mapSamplesColorScale(aux[n]) }}\r\n                  />\r\n                  <span>{legends[n]}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        );\r\n      case \"Dominant Genotype\":\r\n        return (\r\n          <div className=\"map-legend-DG\">\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {genotypes.map((g, n) => {\r\n              return (\r\n                <div key={n + \"DG\"} className=\"samples-info\">\r\n                  <div\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: getColorForGenotype(g) }}\r\n                  />\r\n                  <span>{g}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      case \"H58 / Non-H58\":\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-zero-percent\" />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((g, n) => {\r\n              return (\r\n                <div key={n + \"H58\"} className=\"samples-info\">\r\n                  <div\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: mapRedColorScale(g) }}\r\n                  />\r\n                  {g === \"1\" && <span>{\"1 - 2\"}%</span>}\r\n                  {g === \"3\" && <span>{\"3 - 10\"}%</span>}\r\n                  {g === \"11\" && <span>{\"11 - 50\"}%</span>}\r\n                  {g === \"51\" && <span>{\"51 - 100\"}%</span>}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Map upper right buttons component\r\n  const renderMapLegend = () => {\r\n    const mapLegends = [\r\n      [\"MDR\", \"Multidrug resistant (MDR)\"],\r\n      [\"XDR\", \"Extensively drug resistant (XDR)\"],\r\n      [\"Azith\", \"Azithromycin resistant\"],\r\n      [\"CipI\", \"Ciprofloxacin nonsusceptible (CipNS)\"],\r\n      [\"CipR\", \"Ciprofloxacin resistant (CipR)\"],\r\n      [\"Sensitive to all drugs\", \"Sensitive to all drugs\"],\r\n      [\"Dominant Genotype\", \"Dominant Genotype\"],\r\n      [\"H58 / Non-H58\", \"H58 genotype\"],\r\n      [\"No. Samples\", \"No. Samples\"],\r\n    ];\r\n    return (\r\n      <div className=\"map-legend\">\r\n        <FormControl fullWidth className={classes.formControlSelect}>\r\n          <div className=\"map-legend-formcontrol-div map-legend-formcontrol-div-pad\">\r\n            <div className=\"map-legend-formcontrol-label\">Select map view</div>\r\n            <IconTooltip\r\n              title={\r\n                <div className={classes.tooltipTitle}>\r\n                  Percentage frequency data is shown only for countries with\r\n                  N≥20 genomes\r\n                </div>\r\n              }\r\n              placement=\"top\"\r\n            >\r\n              <IconButton className={classes.tooltipButton}>\r\n                <FontAwesomeIcon\r\n                  icon={faInfoCircle}\r\n                  size=\"xs\"\r\n                  className={classes.tooltipIcon}\r\n                />\r\n              </IconButton>\r\n            </IconTooltip>\r\n          </div>\r\n          <Select\r\n            value={mapView}\r\n            onChange={(evt) => setMapView(evt.target.value)}\r\n            fullWidth\r\n            className={classes.select}\r\n          >\r\n            {mapLegends.map((n, i) => {\r\n              return (\r\n                <MenuItem\r\n                  key={i + \"mapview\"}\r\n                  className={classes.select}\r\n                  value={n[0]}\r\n                >\r\n                  {n[1]}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        {generateMapLegendOptions()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // The variables and functions between the two dotted lines below represents the new method for filtering the data on the dashboard\r\n  //-------------------------------------------------------------------------------------------------------------------\r\n  const [data, setData] = useState([]);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [init, setInit] = useState(false);\r\n  const [allCountryRegions, setAllCountryRegions] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Get data from the csv file, filter it and set all initial values for the dashboard\r\n  // The CSV is only read ONCE in this function, after that the data passes only through the \"filterForComponents\" function from the filters.js file\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}filters/getDataFromCSV`).then((res) => {\r\n      // console.log('Getting Data');\r\n      setData(res.data);\r\n      setTotalGenomes(res.data.length);\r\n\r\n      let [auxTGenotypes, auxYears, auxCountries, auxRegions] = [\r\n        [],\r\n        [],\r\n        [],\r\n        {},\r\n      ];\r\n      let empty = [\"\", \"-\"];\r\n      res.data.forEach((x) => {\r\n        if (!auxTGenotypes.includes(x.GENOTYPE)) auxTGenotypes.push(x.GENOTYPE);\r\n        if (!auxYears.includes(x.DATE) && !empty.includes(x.DATE))\r\n          auxYears.push(x.DATE);\r\n        if (\r\n          !auxCountries.includes(x.COUNTRY_ONLY) &&\r\n          !empty.includes(x.COUNTRY_ONLY)\r\n        ) {\r\n          auxCountries.push(x.COUNTRY_ONLY);\r\n          auxRegions[x.COUNTRY_ONLY] = [];\r\n        }\r\n        if (\r\n          !empty.includes(x.COUNTRY_ONLY) &&\r\n          !empty.includes(x.REGION_IN_COUNTRY) &&\r\n          !auxRegions[x.COUNTRY_ONLY].includes(x.REGION_IN_COUNTRY)\r\n        ) {\r\n          auxRegions[x.COUNTRY_ONLY].push(x.REGION_IN_COUNTRY);\r\n        }\r\n      });\r\n      auxYears.sort();\r\n      auxCountries.sort();\r\n      auxCountries.unshift(\"All\");\r\n\r\n      setTotalGenotypes(auxTGenotypes.length);\r\n      setTimeInitial(auxYears[0]);\r\n      setActualTimeInitial(auxYears[0]);\r\n      setTimeFinal(auxYears[auxYears.length - 1]);\r\n      setActualTimeFinal(auxYears[auxYears.length - 1]);\r\n      setYears(auxYears);\r\n      setCountriesForFilter(auxCountries);\r\n      setAllCountryRegions(auxRegions);\r\n\r\n      // console.log('FINISH');\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  // Update regions after country changes.\r\n  // This was made apart from the normal filters because we already have all regions from all countries and it is not necessary\r\n  // to loop through all the data again.\r\n  useEffect(() => {\r\n    if (init) {\r\n      setActualRegion(\"All\");\r\n      if (actualCountry !== \"All\") {\r\n        const auxRegions = allCountryRegions[actualCountry];\r\n        auxRegions.sort();\r\n        auxRegions.unshift(\"All\");\r\n        setRegionsForFilter(auxRegions);\r\n      }\r\n    }\r\n  }, [init, actualCountry, allCountryRegions]);\r\n\r\n  // This function checks for changes on any of the filters and changes the loading status of the apge to TRUE.\r\n  // This triggers the function below this one (filterForComponents) and updates the data shown on the page\r\n  useEffect(() => {\r\n    if (init) {\r\n      // console.log('Something changed');\r\n      setLoading(true);\r\n    }\r\n  }, [\r\n    init,\r\n    dataset,\r\n    actualTimeInitial,\r\n    actualTimeFinal,\r\n    actualCountry,\r\n    actualRegion,\r\n  ]);\r\n\r\n  // Watcher from changes from filter on the dashboard, this way data is passed through the filters.js file and returns\r\n  useEffect(() => {\r\n    function update() {\r\n      if (init && loading) {\r\n        // console.log('Updating...');\r\n        const aux = filterForComponents({\r\n          data: data,\r\n          dataset: dataset,\r\n          country: actualCountry,\r\n          minYear: actualTimeInitial,\r\n          maxYear: actualTimeFinal,\r\n          region: actualRegion,\r\n        });\r\n        setCurrentData(aux[0]);\r\n        setActualGenomes(aux[0].length);\r\n        setActualGenotypes(aux[1]);\r\n        setWorldMapSamplesData(aux[2]);\r\n        setWorldMapComplementaryData(aux[3]);\r\n        setWorldMapGenotypesData(aux[4]);\r\n        setWorldMapH58Data(aux[5]);\r\n        setWorldMapSTADData(aux[6]);\r\n        setWorldMapMDRData(aux[7]);\r\n        setWorldMapXDRData(aux[8]);\r\n        setWorldMapAZITHData(aux[9]);\r\n        setWorldMapCIPRData(aux[10]);\r\n        setWorldMapCIPIData(aux[11]);\r\n        setCountryPMID(aux[12]);\r\n        setDrugsAndGenotypesChartData(aux[13]);\r\n        setDrugTrendsChartData(aux[14]);\r\n        setAmrClassChartData(aux[15]);\r\n        setPopulationStructureChartData(aux[16]);\r\n        setAppLoading(false);\r\n        setLoading(false);\r\n      }\r\n    }\r\n    update();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [loading]);\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------\r\n\r\n  return (\r\n    <div className=\"dashboard\" style={{ height: \"100vh\" }}>\r\n      {/* Mobile toolbar */}\r\n      <div className=\"menu-bar-mobile\">\r\n        <img\r\n          className=\"logoImageMenu-mobile\"\r\n          src={typhinetLogoImg}\r\n          alt=\"TyphiNET\"\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding:\r\n            dimensions.width > 770 ? \"16px 16px 0px 16px\" : \"16x 0px 0px 0px\",\r\n          display: appLoading ? \"none\" : \"\",\r\n          backgroundColor: \"#E5E5E5\",\r\n        }}\r\n      >\r\n        {/* Logo and information on genotypes and genomes */}\r\n        <div className=\"info-wrapper\">\r\n          {dimensions.width > desktop && (\r\n            <>\r\n              <div className=\"typhinet-logo\">\r\n                <img\r\n                  className=\"typhinet-logo-image\"\r\n                  src={typhinetLogoImg}\r\n                  alt=\"TyphiNET\"\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className=\"card card-padding\">\r\n            <span>Total Genomes</span>\r\n            {totalGenomes === actualGenomes ? (\r\n              <span className=\"value\">{totalGenomes}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenomes}\r\n                <span className=\"value-total\">/{totalGenomes}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"card\">\r\n            <span>Total Genotypes</span>\r\n            {totalGenotypes === actualGenotypes ? (\r\n              <span className=\"value\">{totalGenotypes}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenotypes}\r\n                <span className=\"value-total\">/{totalGenotypes}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Map Wrapper*/}\r\n        <div className=\"map-filters-wrapper\">\r\n          <h2>\r\n            Global Overview of <i>Salmonella</i> Typhi\r\n          </h2>\r\n          <div\r\n            className=\"map-filters-wrapper-inside\"\r\n            style={{\r\n              flexDirection: dimensions.width > desktop ? \"row\" : \"column\",\r\n            }}\r\n          >\r\n            {/* Map -> all map views and information */}\r\n            <div className=\"map-wrapper\">\r\n              <ComposableMap\r\n                id=\"control-map\"\r\n                data-tip=\"\"\r\n                projectionConfig={{\r\n                  rotate: [-10, 0, 0],\r\n                  scale: 210,\r\n                }}\r\n                className=\"composable-map\"\r\n              >\r\n                <ZoomableGroup\r\n                  zoom={controlMapPosition.zoom}\r\n                  center={controlMapPosition.coordinates}\r\n                  onMoveEnd={(position) => {\r\n                    setControlMapPosition(position);\r\n                  }}\r\n                >\r\n                  <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Geographies geography={geography}>\r\n                    {({ geographies }) => {\r\n                      return geographies.map((geo) => {\r\n                        const sample = worldMapSamplesData.find(\r\n                          (s) =>\r\n                            s.displayName === geo.properties.NAME\r\n                          // && (actualContinent === \"All\" ||\r\n                          //   geo.properties.CONTINENT === actualContinent)\r\n                        );\r\n\r\n                        const d =\r\n                          worldMapComplementaryData[geo.properties.NAME];\r\n                        let country;\r\n\r\n                        let fill = \"lightgrey\";\r\n                        let darkGray = \"#727272\";\r\n                        let zeroPercentColor = \"#A20F17\";\r\n\r\n                        switch (mapView) {\r\n                          case \"No. Samples\":\r\n                            if (sample && sample.count !== 0) {\r\n                              fill = mapSamplesColorScale(sample.count);\r\n                            } else if (sample && sample.count === 0) {\r\n                              fill = \"#F5F4F6\";\r\n                            }\r\n                            break;\r\n                          case \"Dominant Genotype\":\r\n                            country = worldMapGenotypesData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              const temp = country.genotypes;\r\n                              temp.sort((a, b) =>\r\n                                a.count <= b.count ? 1 : -1\r\n                              );\r\n                              if (sample) {\r\n                                fill = getColorForGenotype(temp[0].lineage);\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"H58 / Non-H58\":\r\n                            country = worldMapH58Data.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              let countH58 = 0;\r\n                              const isH58 = country.genotypes.find(\r\n                                (g) => g.type === \"H58\"\r\n                              );\r\n                              if (isH58 !== undefined) {\r\n                                countH58 = isH58.count;\r\n                              }\r\n\r\n                              if (country.total >= 20 && countH58 > 0) {\r\n                                fill = mapRedColorScale(isH58.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"MDR\":\r\n                            country = worldMapMDRData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"Sensitive to all drugs\":\r\n                            country = worldMapSTADData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScaleForSensitive(\r\n                                  country.percentage\r\n                                );\r\n                              } else if (country.total >= 20) {\r\n                                fill = zeroPercentColor;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"XDR\":\r\n                            country = worldMapXDRData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"Azith\":\r\n                            country = worldMapAZITHData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"CipI\":\r\n                            country = worldMapCIPIData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"CipR\":\r\n                            country = worldMapCIPRData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          default:\r\n                            break;\r\n                        }\r\n\r\n                        return (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            cursor=\"pointer\"\r\n                            fill={fill}\r\n                            onClick={() => {\r\n                              if (d !== undefined && sample !== undefined) {\r\n                                setActualCountry(sample.name);\r\n                              }\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              setTooltipContent(null);\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              const { NAME } = geo.properties;\r\n                              switch (mapView) {\r\n                                case \"No. Samples\":\r\n                                  if (sample !== undefined && d !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      additionalInfo: {\r\n                                        samples: sample.count,\r\n                                        genotypes: d.GENOTYPES.TOTAL,\r\n                                        H58:\r\n                                          Math.round(d.H58) !== d.H58\r\n                                            ? d.H58.toFixed(2)\r\n                                            : d.H58,\r\n                                        MDR:\r\n                                          Math.round(d.MDR) !== d.MDR\r\n                                            ? d.MDR.toFixed(2)\r\n                                            : d.MDR,\r\n                                        XDR:\r\n                                          Math.round(d.XDR) !== d.XDR\r\n                                            ? d.XDR.toFixed(2)\r\n                                            : d.XDR,\r\n                                        // DCS:\r\n                                        //   Math.round(d.DCS) !== d.DCS\r\n                                        //     ? d.DCS.toFixed(2)\r\n                                        //     : d.DCS,\r\n                                        CipI:\r\n                                          Math.round(d.CipI) !== d.CipI\r\n                                            ? d.CipI.toFixed(2)\r\n                                            : d.CipI,\r\n                                        CipR:\r\n                                          Math.round(d.CipR) !== d.CipR\r\n                                            ? d.CipR.toFixed(2)\r\n                                            : d.CipR,\r\n                                        CipI_R:\r\n                                          Math.round(d.CipI_R) !== d.CipI_R\r\n                                            ? d.CipI_R.toFixed(2)\r\n                                            : d.CipI_R,\r\n                                        AzithR:\r\n                                          Math.round(d.AzithR) !== d.AzithR\r\n                                            ? d.AzithR.toFixed(2)\r\n                                            : d.AzithR,\r\n                                        STAD:\r\n                                          Math.round(d.STAD) !== d.STAD\r\n                                            ? d.STAD.toFixed(2)\r\n                                            : d.STAD,\r\n                                      },\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"Dominant Genotype\":\r\n                                  if (country !== undefined) {\r\n                                    let temp = country.genotypes;\r\n                                    temp.sort((a, b) =>\r\n                                      a.count <= b.count ? 1 : -1\r\n                                    );\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      genotypeInfo: temp,\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"H58 / Non-H58\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.genotypes.length > 0\r\n                                  ) {\r\n                                    let countH58 = 0;\r\n                                    const isH58 = country.genotypes.find(\r\n                                      (g) => g.type === \"H58\"\r\n                                    );\r\n                                    if (isH58 !== undefined) {\r\n                                      countH58 = isH58.count;\r\n                                    }\r\n\r\n                                    if (country.total >= 20 && countH58 > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        simpleGenotypeInfo: country.genotypes,\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n\r\n                                  break;\r\n                                case \"MDR\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.MDRs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        mdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"Sensitive to all drugs\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.STADs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        stadInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"XDR\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.XDRs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        xdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"Azith\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.AZs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        azInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"CipI\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.CipIs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      let cipI = country.CipIs.filter(\r\n                                        (x) => x.type === \"CipI\"\r\n                                      );\r\n                                      if (cipI.length) {\r\n                                        cipI = cipI[0];\r\n                                        if (\r\n                                          Math.round(cipI.percentage) !==\r\n                                          cipI.percentage\r\n                                        )\r\n                                          cipI.percentage =\r\n                                            cipI.percentage.toFixed(2);\r\n                                        cipI.percentage = parseFloat(\r\n                                          cipI.percentage\r\n                                        );\r\n                                      } else {\r\n                                        cipI = {\r\n                                          count: 0,\r\n                                          percentage: 0,\r\n                                        };\r\n                                      }\r\n                                      let cipR = country.CipIs.filter(\r\n                                        (x) => x.type === \"CipR\"\r\n                                      );\r\n                                      if (cipR.length) {\r\n                                        cipR = cipR[0];\r\n                                        if (\r\n                                          Math.round(cipR.percentage) !==\r\n                                          cipR.percentage\r\n                                        )\r\n                                          cipR.percentage =\r\n                                            cipR.percentage.toFixed(2);\r\n                                        cipR.percentage = parseFloat(\r\n                                          cipR.percentage\r\n                                        );\r\n                                      } else {\r\n                                        cipR = {\r\n                                          count: 0,\r\n                                          percentage: 0,\r\n                                        };\r\n                                      }\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipIInfo: {\r\n                                          count: cipI.count,\r\n                                          percentage: cipI.percentage,\r\n                                        },\r\n                                        cipRInfo2: {\r\n                                          count: cipR.count,\r\n                                          percentage: cipR.percentage,\r\n                                        },\r\n                                        cipIRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"CipR\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.CipRs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                default:\r\n                                  break;\r\n                              }\r\n                            }}\r\n                            style={{\r\n                              default: {\r\n                                outline: \"none\",\r\n                              },\r\n                              hover: {\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                              pressed: {\r\n                                fill: \"#FF5722\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                            }}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n\r\n                    }\r\n                  </Geographies>\r\n                </ZoomableGroup>\r\n              </ComposableMap>\r\n              {/* Map legend */}\r\n              {dimensions.width > desktop && (\r\n                <div className=\"map-upper-right-buttons\">\r\n                  {renderMapLegend()}\r\n                </div>\r\n              )}\r\n              {dimensions.width > desktop && (\r\n                // Dataset Filter\r\n                <div className=\"map-upper-left-buttons \">\r\n                  <div\r\n                    className=\"map-filters\"\r\n                    style={{\r\n                      width:\r\n                        dimensions.width > desktop\r\n                          ? 200\r\n                          : \"-webkit-fill-available\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      className=\"map-filters-label\"\r\n                      style={{\r\n                        marginBottom: dimensions.width > desktop ? 20 : 10,\r\n                      }}\r\n                    >\r\n                      Filters\r\n                    </span>\r\n                    <div\r\n                      style={{\r\n                        marginBottom: dimensions.width > desktop ? 16 : 8,\r\n                      }}\r\n                    >\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null) setDataset(newDataset);\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">All</CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div className=\"margin-div\">\r\n                      {years.length > 2 && (\r\n                        <div className=\"my-year-range\">\r\n                          <div>\r\n                            <Typography\r\n                              gutterBottom\r\n                              className={classes.typography}\r\n                            >\r\n                              Start year\r\n                            </Typography>\r\n                            <Select\r\n                              value={actualTimeInitial}\r\n                              onChange={(evt, value) =>\r\n                                setActualTimeInitial(value.props.value)\r\n                              }\r\n                              className={classes.selectYear}\r\n                              fullWidth\r\n                            >\r\n                              {years\r\n                                ?.filter((x) => x <= actualTimeFinal)\r\n                                .map((n, i) => {\r\n                                  return (\r\n                                    <MenuItem\r\n                                      key={i + \"timeperiod\"}\r\n                                      className={classes.select}\r\n                                      value={n}\r\n                                    >\r\n                                      {n}\r\n                                    </MenuItem>\r\n                                  );\r\n                                })}\r\n                            </Select>\r\n                          </div>\r\n                          <div className=\"my-divider\"></div>\r\n                          <div className=\"my-year-range-row\">\r\n                            <Typography\r\n                              gutterBottom\r\n                              className={classes.typographyEndYear}\r\n                            >\r\n                              End year\r\n                            </Typography>\r\n                            <Select\r\n                              value={actualTimeFinal}\r\n                              onChange={(evt, value) =>\r\n                                setActualTimeFinal(value.props.value)\r\n                              }\r\n                              className={classes.selectYear}\r\n                              fullWidth\r\n                            >\r\n                              {years\r\n                                ?.filter((x) => x >= actualTimeInitial)\r\n                                .map((n, i) => {\r\n                                  return (\r\n                                    <MenuItem\r\n                                      key={i + \"timeperiod2\"}\r\n                                      className={classes.select}\r\n                                      value={n}\r\n                                    >\r\n                                      {n}\r\n                                    </MenuItem>\r\n                                  );\r\n                                })}\r\n                            </Select>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* Map controllers */}\r\n              <div className=\"map-lower-left-buttons\">\r\n                <Zoom\r\n                  in={\r\n                    controlMapPosition.zoom !== 1 ||\r\n                    controlMapPosition.coordinates.some((c) => c !== 0)\r\n                  }\r\n                >\r\n                  <TooltipMaterialUI\r\n                    title={<span className=\"my-font\">Recenter Map</span>}\r\n                    placement=\"right\"\r\n                  >\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() =>\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\r\n                      }\r\n                    >\r\n                      <FontAwesomeIcon icon={faCrosshairs} />\r\n                    </div>\r\n                  </TooltipMaterialUI>\r\n                </Zoom>\r\n                <TooltipMaterialUI\r\n                  title={<span className=\"my-font\">Zoom In</span>}\r\n                  placement=\"right\"\r\n                >\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom >= 4) return;\r\n                      setControlMapPosition((pos) => ({\r\n                        ...pos,\r\n                        zoom: pos.zoom * 2,\r\n                      }));\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                <TooltipMaterialUI\r\n                  title={<span className=\"my-font\">Zoom Out</span>}\r\n                  placement=\"right\"\r\n                >\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom <= 1) return;\r\n                      if (controlMapPosition.zoom / 2 === 1) {\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                      } else {\r\n                        setControlMapPosition((pos) => ({\r\n                          ...pos,\r\n                          zoom: pos.zoom / 2,\r\n                        }));\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n              </div>\r\n              {/* Download map button */}\r\n              <div className=\"map-lower-right-buttons\">\r\n                <TooltipMaterialUI\r\n                  title={<span className=\"my-font\">Download Map as PNG</span>}\r\n                  placement=\"left\"\r\n                >\r\n                  <div\r\n                    className={`button ${captureControlMapInProgress && \"disabled\"\r\n                      }`}\r\n                    onClick={() => {\r\n                      if (!captureControlMapInProgress)\r\n                        capturePicture(\"control-map\", 0, {\r\n                          mapView: mapView,\r\n                          dataset: dataset,\r\n                          actualTimePeriodRange: [\r\n                            actualTimeInitial,\r\n                            actualTimeFinal,\r\n                          ],\r\n                        });\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCamera} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                {captureControlMapInProgress && (\r\n                  <CustomCircularProgress\r\n                    size={54}\r\n                    thickness={4}\r\n                    style={{ top: 5, left: -7 }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Map filters and legends for mobile */}\r\n            {!(dimensions.width > desktop) && (\r\n              <div className=\"wrapper-map-legend\">\r\n                {/* Legend */}\r\n                {renderMapLegend()}\r\n                {/* Filters */}\r\n                <div>\r\n                  <div\r\n                    className=\"map-filters-mobile\"\r\n                    style={{\r\n                      width:\r\n                        dimensions.width > desktop\r\n                          ? 200\r\n                          : \"-webkit-fill-available\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      className=\"map-filters-label\"\r\n                      style={{\r\n                        marginBottom: dimensions.width > desktop ? 20 : 10,\r\n                      }}\r\n                    >\r\n                      Filters\r\n                    </span>\r\n                    {/* Dataset Filter */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: dimensions.width > desktop ? 16 : 8,\r\n                      }}\r\n                    >\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null) setDataset(newDataset);\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">All</CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    {/* Year Filter */}\r\n                    <div className=\"margin-div\">\r\n                      <div className=\"my-year-range\">\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography\r\n                            gutterBottom\r\n                            className={classes.typography}\r\n                          >\r\n                            Start year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeInitial}\r\n                            onChange={(evt, value) =>\r\n                              setActualTimeInitial(value.props.value)\r\n                            }\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem\r\n                                  key={i + \"year\"}\r\n                                  className={classes.select}\r\n                                  value={n}\r\n                                >\r\n                                  {n}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                        <div className=\"my-divider\"></div>\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography\r\n                            gutterBottom\r\n                            className={classes.typographyEndYear}\r\n                          >\r\n                            End year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeFinal}\r\n                            onChange={(evt, value) =>\r\n                              setActualTimeFinal(value.props.value)\r\n                            }\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem\r\n                                  key={i + \"year2\"}\r\n                                  className={classes.select}\r\n                                  value={n}\r\n                                >\r\n                                  {n}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {/* Map Tooltips */}\r\n            <ReactTooltip>\r\n              {tooltipContent && (\r\n                <div className=\"tooltip-map\">\r\n                  <span className=\"country\">{tooltipContent.name}</span>\r\n                  {tooltipContent.additionalInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        Samples: {tooltipContent.additionalInfo.samples}\r\n                      </span>\r\n                      <span>\r\n                        Genotypes: {tooltipContent.additionalInfo.genotypes}\r\n                      </span>\r\n                      <span>H58: {tooltipContent.additionalInfo.H58}%</span>\r\n                      <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\r\n                      <span>XDR: {tooltipContent.additionalInfo.XDR}%</span>\r\n                      {/* <span>DCS: {tooltipContent.additionalInfo.DCS}%</span> */}\r\n                      <span>\r\n                        AzithR: {tooltipContent.additionalInfo.AzithR}%\r\n                      </span>\r\n                      <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\r\n                      <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\r\n                      <span>\r\n                        CipNS: {tooltipContent.additionalInfo.CipI_R}%\r\n                      </span>\r\n                      <span>\r\n                        Susceptible: {tooltipContent.additionalInfo.STAD}%\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.genotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.genotypeInfo.map((genotype, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div\r\n                              key={index + \"genotypeInfo\"}\r\n                              className=\"genotype\"\r\n                            >\r\n                              <div\r\n                                className=\"color\"\r\n                                style={{\r\n                                  backgroundColor: getColorForGenotype(\r\n                                    genotype.lineage\r\n                                  ),\r\n                                }}\r\n                              />\r\n                              <span>\r\n                                {genotype.lineage}: {genotype.count}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        } else return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.simpleGenotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\r\n                        <span>\r\n                          {tooltipContent.simpleGenotypeInfo[0].type}:{\" \"}\r\n                          {tooltipContent.simpleGenotypeInfo[0].count} (\r\n                          {tooltipContent.simpleGenotypeInfo[0].percentage}%)\r\n                        </span>\r\n                      ) : tooltipContent.simpleGenotypeInfo.length > 1 &&\r\n                        tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\r\n                        <span>\r\n                          {tooltipContent.simpleGenotypeInfo[1].type}:{\" \"}\r\n                          {tooltipContent.simpleGenotypeInfo[1].count} (\r\n                          {tooltipContent.simpleGenotypeInfo[1].percentage}%)\r\n                        </span>\r\n                      ) : (\r\n                        <span>H58: 0 (0%)</span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.mdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        MDR: {tooltipContent.mdrInfo.count} (\r\n                        {tooltipContent.mdrInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.stadInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        Susceptible: {tooltipContent.stadInfo.count} (\r\n                        {tooltipContent.stadInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.xdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        XDR: {tooltipContent.xdrInfo.count} (\r\n                        {tooltipContent.xdrInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.azInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        AzithR: {tooltipContent.azInfo.count} (\r\n                        {tooltipContent.azInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipIInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        CipNS: {tooltipContent.cipIRInfo.count} (\r\n                        {tooltipContent.cipIRInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipRInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        CipR: {tooltipContent.cipRInfo.count} (\r\n                        {tooltipContent.cipRInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {!tooltipContent.xdrInfo &&\r\n                    !tooltipContent.mdrInfo &&\r\n                    !tooltipContent.stadInfo &&\r\n                    !tooltipContent.azInfo &&\r\n                    !tooltipContent.cipIInfo &&\r\n                    !tooltipContent.cipRInfo &&\r\n                    !tooltipContent.simpleGenotypeInfo &&\r\n                    !tooltipContent.genotypeInfo &&\r\n                    !tooltipContent.additionalInfo && (\r\n                      <div className=\"additional-info\">\r\n                        <span>\r\n                          {tooltipContent.smallerThan20\r\n                            ? \"0%\"\r\n                            : \"Insufficient data\"}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n        {/* Chart Wrapper */}\r\n        <div className=\"chart-wrapper\">\r\n          <h2 className=\"showing-data\">\r\n            Now showing: {dataset} data from{\" \"}\r\n            {actualCountry === \"All\" ? \"all countries\" : actualCountry} from{\" \"}\r\n            {actualTimeInitial} to {actualTimeFinal}\r\n          </h2>\r\n          <div\r\n            className=\"country-region-div\"\r\n            style={{ flexDirection: dimensions.width > 560 ? \"row\" : \"column\" }}\r\n          >\r\n            {/* Select country dropdown */}\r\n            <FormControl className={classes.formControlSelectCountryRegion}>\r\n              <label className=\"select-country-label\">\r\n                Select country (or click map)\r\n              </label>\r\n              <Select\r\n                value={actualCountry}\r\n                onChange={(evt) => {\r\n                  setActualCountry(evt.target.value);\r\n                }}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {countriesForFilter.map((country, index) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={index + \"countriesFilter\"}\r\n                      className={classes.selectCountryValues}\r\n                      value={country}\r\n                    >\r\n                      {country}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            {dimensions.width > 560 && (\r\n              <div className=\"country-region-spacer\"></div>\r\n            )}\r\n            {/* Select region dropdown */}\r\n            {/* <FormControl className={`${classes.formControlSelectCountryRegion}`}>\r\n              <label className=\"select-country-label\">Select region</label>\r\n              <Select\r\n                value={actualRegion}\r\n                onChange={evt => { setActualRegion(evt.target.value) }}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {regionsForFilter.map((region, index) => {\r\n                  return (\r\n                    <MenuItem key={index + \"regionFilter\"} className={classes.selectCountryValues} value={region}>\r\n                      {region}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl> */}\r\n          </div>\r\n          {/* Charts */}\r\n          <div className=\"chart-wrapper-div\">\r\n            <div\r\n              className=\"chart-wrapper-div2\"\r\n              style={{\r\n                flexDirection: dimensions.width > desktop ? \"row\" : \"column\",\r\n                paddingBottom: dimensions.width > desktop ? 20 : 0,\r\n              }}\r\n            >\r\n              <div\r\n                className=\"chart-wrapper-div3\"\r\n                style={{ paddingRight: dimensions.width < mobile ? 0 : 10 }}\r\n              >\r\n                {/* Resistance frequencies within genotypes CHART */}\r\n                <div className=\"chart-wrapper-RFWA\">\r\n                  <div className=\"chart-wrapper-RFWA-div\">\r\n                    <span className=\"chart-title chart-wrapper-RFWA-title\">\r\n                      Resistance frequencies within genotypes\r\n                    </span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-RFWA-download\">\r\n                      <TooltipMaterialUI\r\n                        title={\r\n                          <span className=\"my-font\">Download Chart as PNG</span>\r\n                        }\r\n                        placement=\"right\"\r\n                      >\r\n                        <div\r\n                          className={`button ${captureControlChartRFWGInProgress && \"disabled\"\r\n                            }`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWGInProgress)\r\n                              capturePicture(\"RFWG\", 1, {\r\n                                mapView: mapView,\r\n                                dataset: dataset,\r\n                                actualTimePeriodRange: [\r\n                                  actualTimeInitial,\r\n                                  actualTimeFinal,\r\n                                ],\r\n                                country: actualCountry,\r\n                                region: actualRegion,\r\n                                RFWGCount: RFWGValues.length,\r\n                              });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWGInProgress && (\r\n                        <CustomCircularProgress size={44} thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">\r\n                    Top Genotypes (up to {RFWGValues.length})\r\n                  </span>\r\n                  <div\r\n                    className=\"chart-wrapper-RFWA-view\"\r\n                    style={{ width: dimensions.width > 790 ? \"71%\" : \"260px\" }}\r\n                  >\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">\r\n                        Data view\r\n                      </div>\r\n                      <IconTooltip\r\n                        title={\r\n                          <div className={classes.tooltipTitle}>\r\n                            Select up to 7 genotypes\r\n                          </div>\r\n                        }\r\n                        placement=\"top\"\r\n                      >\r\n                        <IconButton className={classes.tooltipButton}>\r\n                          <FontAwesomeIcon\r\n                            icon={faInfoCircle}\r\n                            size=\"xs\"\r\n                            className={classes.tooltipIcon}\r\n                          />\r\n                        </IconButton>\r\n                      </IconTooltip>\r\n                    </div>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={RFWGFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[\r\n                          {\r\n                            value: RFWGFilterOptions[RFWGFilter - 1].value,\r\n                            id: RFWGFilter,\r\n                          },\r\n                        ]}\r\n                        onChange={(evt) => {\r\n                          setRFWGFilter(evt[0].id);\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    {/* Genotypes select dropdown */}\r\n                    <FormControl\r\n                      id=\"DDS2\"\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={RFWGDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"label\"}\r\n                        values={RFWGDropdownOptions.slice(0, 5)}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length}{\" \"}\r\n                              Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({\r\n                          item,\r\n                          itemIndex,\r\n                          props,\r\n                          state,\r\n                          methods,\r\n                        }) => {\r\n                          return (\r\n                            <div\r\n                              key={item[props.valueField]}\r\n                              onClick={() => {\r\n                                if (RFWGValues.length >= 7) {\r\n                                  if (methods.isSelected(item)) {\r\n                                    methods.addItem(item);\r\n                                  }\r\n                                } else {\r\n                                  methods.addItem(item);\r\n                                }\r\n                              }}\r\n                            >\r\n                              <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  checked={methods.isSelected(item)}\r\n                                  onChange={() => { }}\r\n                                />\r\n                                &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        clearRenderer={({ props, state, methods }) => {\r\n                          return (\r\n                            <Buttons>\r\n                              {state.values.length > 0 ? (\r\n                                <ButtonClearSelect\r\n                                  id=\"DSButton2\"\r\n                                  className=\"clear\"\r\n                                  onClick={methods.clearAll}\r\n                                  checked={false}\r\n                                >\r\n                                  Clear all\r\n                                </ButtonClearSelect>\r\n                              ) : (\r\n                                <ButtonClearSelect\r\n                                  id=\"DSButton2\"\r\n                                  onClick={() => {\r\n                                    methods.selectAll(\r\n                                      RFWGDropdownOptions.slice(0, 5)\r\n                                    );\r\n                                  }}\r\n                                  checked={true}\r\n                                >\r\n                                  Reset\r\n                                </ButtonClearSelect>\r\n                              )}\r\n                            </Buttons>\r\n                          );\r\n                        }}\r\n                        onChange={(values) => {\r\n                          setRFWGValues(values);\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWG\">{plotDrugsAndGenotypesChart}</div>\r\n                </div>\r\n                {/* Resistance determinants within genotypes CHART */}\r\n                <div className=\"chart-wrapper-RDWAG\">\r\n                  <div className=\"chart-wrapper-RDWAG-div\">\r\n                    <span className=\"chart-title chart-wrapper-RDWAG-title\">\r\n                      Resistance determinants within genotypes\r\n                    </span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-RDWAG-download\">\r\n                      <TooltipMaterialUI\r\n                        title={\r\n                          <span className=\"my-font\">Download Chart as PNG</span>\r\n                        }\r\n                        placement=\"right\"\r\n                      >\r\n                        <div\r\n                          className={`button ${captureControlChartRFWAGInProgress && \"disabled\"\r\n                            }`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWAGInProgress)\r\n                              capturePicture(\"RFWAG\", 4, {\r\n                                mapView: mapView,\r\n                                dataset: dataset,\r\n                                actualTimePeriodRange: [\r\n                                  actualTimeInitial,\r\n                                  actualTimeFinal,\r\n                                ],\r\n                                country: actualCountry,\r\n                                amrClassFilter: amrClassFilter,\r\n                                region: actualRegion,\r\n                              });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWAGInProgress && (\r\n                        <CustomCircularProgress size={44} thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RDWAG-top\">\r\n                    Top Genotypes (up to 10)\r\n                  </span>\r\n                  <div\r\n                    className=\"chart-wrapper-RDWAG-view\"\r\n                    style={{\r\n                      width: dimensions.width > desktop ? \"71%\" : \"90%\",\r\n                    }}\r\n                  >\r\n                    <InputLabel className={classes.inputLabel}>\r\n                      Select Drug Class\r\n                    </InputLabel>\r\n                    {/* Drug class dropdown */}\r\n                    <FormControl\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={amrClassFilterforFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[\r\n                          {\r\n                            value: amrClassFilter,\r\n                            id: amrClassFilterforFilterOptions.find(\r\n                              (o) => o.value === amrClassFilter\r\n                            ).id,\r\n                          },\r\n                        ]}\r\n                        onChange={(evt) => {\r\n                          setAmrClassFilter(evt[0].value);\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    <InputLabel className={classes.inputLabel}>\r\n                      Data view\r\n                    </InputLabel>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={amrClassFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[\r\n                          {\r\n                            value:\r\n                              amrClassFilterOptions[RDWAGDataviewFilter - 1]\r\n                                .value,\r\n                            id: RDWAGDataviewFilter,\r\n                          },\r\n                        ]}\r\n                        onChange={(evt) => {\r\n                          setRDWAGDataviewFilter(evt[0].id);\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWAG\">{plotAmrClassChart}</div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"chart-wrapper-div3\"\r\n                style={{\r\n                  paddingLeft: dimensions.width < mobile ? 0 : 10,\r\n                  marginTop: dimensions.width < desktop ? 50 : 0,\r\n                }}\r\n              >\r\n                {/* Drug resistance trends CHART */}\r\n                <div className=\"chart-wrapper-DRT\">\r\n                  <div className=\"chart-wrapper-DRT-div\">\r\n                    <span className=\"chart-title chart-wrapper-DRT-title\">\r\n                      Drug resistance trends\r\n                    </span>\r\n                    {/* Download button */}\r\n                    <div className=\"chart-wrapper-DRT-download\">\r\n                      <TooltipMaterialUI\r\n                        title={\r\n                          <span className=\"my-font\">Download Chart as PNG</span>\r\n                        }\r\n                        placement=\"right\"\r\n                      >\r\n                        <div\r\n                          className={`button ${captureControlChartDRTInProgress && \"disabled\"\r\n                            }`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartDRTInProgress)\r\n                              capturePicture(\"DRT\", 2, {\r\n                                mapView: mapView,\r\n                                dataset: dataset,\r\n                                actualTimePeriodRange: [\r\n                                  actualTimeInitial,\r\n                                  actualTimeFinal,\r\n                                ],\r\n                                country: actualCountry,\r\n                                drugs: trendValues,\r\n                                region: actualRegion,\r\n                              });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartDRTInProgress && (\r\n                        <CustomCircularProgress size={44} thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">\r\n                    Data are plotted for years with N ≥ 10 genomes\r\n                  </span>\r\n                  {dimensions.width > desktop && (\r\n                    <span className=\"chart-title\"></span>\r\n                  )}\r\n                  <div\r\n                    className=\"chart-wrapper-DRT-view\"\r\n                    style={{ width: dimensions.width > 790 ? \"71%\" : \"260px\" }}\r\n                  >\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">\r\n                        Drugs view\r\n                      </div>\r\n                      <IconTooltip\r\n                        title={\r\n                          <div className={classes.tooltipTitle}>\r\n                            The resistance frequencies are only shown for years with N≥10 genomes.\r\n                            When the data is insufficient per year to calculate annual frequencies,\r\n                            there are no data points to show.\r\n                          </div>\r\n                        }\r\n                        placement=\"top\"\r\n                      >\r\n                        <IconButton className={classes.tooltipButton}>\r\n                          <FontAwesomeIcon\r\n                            icon={faInfoCircle}\r\n                            size=\"xs\"\r\n                            className={classes.tooltipIcon}\r\n                          />\r\n                        </IconButton>\r\n                      </IconTooltip>\r\n                    </div>\r\n                    {/* Drugs dropdown */}\r\n                    <FormControl\r\n                      id=\"DDS\"\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={trendDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"value\"}\r\n                        values={trendDropdownOptions}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length}{\" \"}\r\n                              Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({\r\n                          item,\r\n                          itemIndex,\r\n                          props,\r\n                          state,\r\n                          methods,\r\n                        }) => (\r\n                          <div\r\n                            key={item[props.valueField]}\r\n                            onClick={() => methods.addItem(item)}\r\n                          >\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={methods.isSelected(item)}\r\n                                onChange={() => { }}\r\n                              />\r\n                              &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        clearRenderer={({ props, state, methods }) => {\r\n                          return (\r\n                            <Buttons>\r\n                              {methods.areAllSelected() ? (\r\n                                <ButtonClearSelect\r\n                                  id=\"DSButton\"\r\n                                  className=\"clear\"\r\n                                  onClick={methods.clearAll}\r\n                                  checked={false}\r\n                                >\r\n                                  Clear all\r\n                                </ButtonClearSelect>\r\n                              ) : (\r\n                                <ButtonClearSelect\r\n                                  id=\"DSButton\"\r\n                                  onClick={methods.selectAll}\r\n                                  checked={true}\r\n                                >\r\n                                  Select all\r\n                                </ButtonClearSelect>\r\n                              )}\r\n                            </Buttons>\r\n                          );\r\n                        }}\r\n                        onChange={(values) => {\r\n                          const doc = document.getElementById(\"DRT\");\r\n                          const lines =\r\n                            doc.getElementsByClassName(\"recharts-line\");\r\n                          for (let index = 0; index < lines.length; index++) {\r\n                            const isValue = values.some((e) => e.id === index);\r\n                            lines[index].style.display = isValue\r\n                              ? \"block\"\r\n                              : \"none\";\r\n                          }\r\n                          setTrendValues(values);\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"DRT\">{plotDrugTrendsChart}</div>\r\n                </div>\r\n                {/* Genotype distribution CHART */}\r\n                <div className=\"chart-wrapper-GD\">\r\n                  <div className=\"chart-wrapper-GD-div\">\r\n                    <span className=\"chart-title chart-wrapper-GD-title\">\r\n                      Genotype distribution\r\n                    </span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-GD-download\">\r\n                      <TooltipMaterialUI\r\n                        title={\r\n                          <span className=\"my-font\">Download Chart as PNG</span>\r\n                        }\r\n                        placement=\"right\"\r\n                      >\r\n                        <div\r\n                          className={`button ${captureControlChartGDInProgress && \"disabled\"\r\n                            }`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartGDInProgress)\r\n                              capturePicture(\"GD\", 3, {\r\n                                mapView: mapView,\r\n                                dataset: dataset,\r\n                                actualTimePeriodRange: [\r\n                                  actualTimeInitial,\r\n                                  actualTimeFinal,\r\n                                ],\r\n                                country: actualCountry,\r\n                                region: actualRegion,\r\n                              });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartGDInProgress && (\r\n                        <CustomCircularProgress size={44} thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {dimensions.width > desktop && (\r\n                    <span className=\"chart-title chart-wrapper-GD-space\"></span>\r\n                  )}\r\n                  <div\r\n                    className=\"chart-wrapper-GD-view\"\r\n                    style={{\r\n                      paddingTop: dimensions.width > desktop ? \"67px\" : \"\",\r\n                      width: dimensions.width > desktop ? \"71%\" : \"90%\",\r\n                    }}\r\n                  >\r\n                    <InputLabel className={classes.inputLabel}>\r\n                      Data view\r\n                    </InputLabel>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={populationStructureFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[\r\n                          {\r\n                            value:\r\n                              populationStructureFilterOptions[\r\n                                populationStructureFilter - 1\r\n                              ].value,\r\n                            id: populationStructureFilter,\r\n                          },\r\n                        ]}\r\n                        onChange={(evt) => {\r\n                          setPopulationStructureFilter(evt[0].id);\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"GD\">{plotPopulationStructureChart}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Download spreadsheet and report wrappper */}\r\n            <div\r\n              className=\"wrapper-download-sheet-button\"\r\n              style={{\r\n                flexDirection: dimensions.width > desktop ? \"row\" : \"column\",\r\n                padding:\r\n                  dimensions.width < desktop\r\n                    ? \"0px 12px 12px 12px\"\r\n                    : \"50px 12px 12px 12px\",\r\n                width: \"-webkit-fill-available\",\r\n              }}\r\n            >\r\n              {/* Download spreadsheet */}\r\n              <TooltipMaterialUI\r\n                title={\r\n                  <span className=\"my-font\">\r\n                    The full database can be downloaded using the button below,\r\n                    note this includes all genomes including those from biased\r\n                    sampling frames that are not shown in the dashboard.\r\n                    Genome line list - including source information,\r\n                    genome-derived AMR and genotype information, and citations\r\n                    for each genome; pulled from Pathogenwatch. \r\n                  </span>\r\n                }\r\n                placement=\"top\"\r\n              >\r\n                <div\r\n                  className=\"download-sheet-button\"\r\n                  onClick={() => dowloadBaseSpreadsheet()}\r\n                >\r\n                  <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\r\n                  <span>Download database (CSV format, 7.2MB)</span>\r\n                </div>\r\n              </TooltipMaterialUI>\r\n              {/* Download report */}\r\n              <div\r\n                style={{\r\n                  marginTop: dimensions.width > desktop ? 0 : 20,\r\n                  marginLeft: dimensions.width > desktop ? 20 : 0,\r\n                }}\r\n                className={`download-sheet-button`}\r\n                onClick={() => {\r\n                  if (!captureReportInProgress) {\r\n                    setCaptureReportInProgress(true);\r\n                    capturePicture(\"\", 5, {\r\n                      mapView: mapView,\r\n                      dataset: dataset,\r\n                      actualTimePeriodRange: [\r\n                        actualTimeInitial,\r\n                        actualTimeFinal,\r\n                      ],\r\n                      country: actualCountry,\r\n                      region: actualRegion,\r\n                      amrClassFilter: amrClassFilter,\r\n                      actualGenomes: actualGenomes,\r\n                      drugs: trendValues,\r\n                      dimensions: dimensions,\r\n                      desktop: desktop,\r\n                      RFWGCount: RFWGValues.length,\r\n                      PMID: countryPMID,\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faFilePdf} style={{ marginRight: 8 }} />\r\n                <span>Download report from current view</span>\r\n                {captureReportInProgress && (\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      paddingBottom: 32,\r\n                      paddingRight: 20,\r\n                    }}\r\n                  >\r\n                    <CustomCircularProgress\r\n                      size={44}\r\n                      thickness={4}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: -5,\r\n                        left: -6,\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* About info */}\r\n        <div className=\"about-wrapper\">\r\n          <h2>About TyphiNET</h2>\r\n          <p>\r\n            The TyphiNET dashboard collates antimicrobial resistance (AMR) and\r\n            genotype (lineage) information extracted from whole genome sequence\r\n            (WGS) data from the bacterial pathogen <i> Salmonella</i> Typhi, the\r\n            agent of typhoid fever.\r\n          </p>\r\n          <p>\r\n            AMR determinants identified in the genome assemblies using\r\n            Pathogenwatch are used to define drug resistance variables as\r\n            follows.\r\n          </p>\r\n          <p>\r\n            Multidrug resistance(MDR): resistance determinants for\r\n            chloramphenicol (<i>catA1</i> or <i>cmlA</i>), ampicillin (\r\n            <i>bla</i>TEM-1D, <i>bla</i>OXA-7), and co-trimoxazole (at least one{\" \"}\r\n            <i>dfrA</i> gene and at least one <i>sul</i> gene).\r\n          </p>\r\n          <p>\r\n            Ciprofloxacin non-susceptible (CipNS): one or more of the quinolone resistance\r\n            determining region(QRDR) mutations at <i>gyrA</i>-83, <i>gyrA</i>\r\n            -87, <i>parC</i>-80, <i>parC</i>-84, <i>gyrB</i>-464 or presence of\r\n            a plasmid-mediated quinolone resistance(PMQR) gene(<i>qnrB</i>,{\" \"}\r\n            <i>qnrD</i> , <i>qnrS</i>).\r\n          </p>\r\n          <p>\r\n            Ciprofloxacin resistant (CipR): QRDR triple mutant (<i>gyrA</i>-83 and <i>gyrA</i>-87, together with\r\n            either <i>parC</i>-80 or <i>parC</i>-84), or plasmid-mediated\r\n            quinolone resistance(PMQR) together with <i>gyrA</i>-83, <i>gyrA</i>\r\n            -87 and/or <i>gyrB</i>-464.\r\n          </p>\r\n          <p>\r\n            Third-generation cephalosporin resistance (3 GCR): presence of an extended-spectrum\r\n            beta-lactamase(ESBL) (<i>bla</i>CTX-M-12, <i>bla</i>CTX-M-15,{\" \"}\r\n            <i>bla</i>CTX-M-23, <i>bla</i>CTX-M-55, <i>bla</i>SHV-12) or{\" \"}\r\n            <i>ampC</i> gene.\r\n          </p>\r\n          <p>\r\n            Extreme drug resistance(XDR): MDR plus CipR plus 3 GCR.\r\n          </p>\r\n          <p>\r\n            Azithromycin resistance(AziR): mutation at <i>acrB</i>-717. See{\" \"}\r\n            <a\r\n              href=\"https://www.nature.com/articles/s41467-021-23091-2\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Argimon et al, 2021\r\n            </a>{\" \"}\r\n            for details.\r\n          </p>\r\n          <p>\r\n            <b>Data:</b> Data are sourced regularly from Typhi{\" \"}\r\n            <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Pathogenwatch\r\n            </a>\r\n            , and filtered to include only genomes from unbiased sampling frames\r\n            (e.g. routine or project-based enteric fever surveillance, as\r\n            opposed to AMR-focused sampling), based on curation by the {\" \"}\r\n            <a href=\"https://www.typhoidgenomics.org/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Global Typhoid Genomics Consortium\r\n            </a>. \r\n            The database can be downloaded using the button below.\r\n            <p>\r\n            <b>Documentation:</b> Full documentation for the dashboard is available {\" \"}\r\n            <a href=\"https://github.com/zadyson/TyphiNET/wiki\" target=\"_blank\" rel=\"noreferrer\">\r\n              here\r\n            </a>.\r\n            </p>\r\n            Information on genotype definitions can be found in{\" \"}\r\n            <a\r\n              href=\"https://academic.oup.com/jid/article/224/Supplement_7/S775/6358992?login=true\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Dyson & Holt, 2021\r\n            </a>\r\n            .\r\n          </p>\r\n          <p>\r\n            <b>Team:</b> The TyphiNET dashboard is coordinated by {\" \"}\r\n            <a href=\"https://scholar.google.com.au/citations?hl=en&user=klhFnE0AAAAJ\" target=\"_blank\" rel=\"noreferrer\">\r\n              Dr Zoe Dyson\r\n            </a>\r\n            , {\" \"}\r\n            <a href=\"https://scholar.google.com.au/citations?hl=en&user=O2dcz5MAAAAJ\" target=\"_blank\" rel=\"noreferrer\">\r\n              Dr Louise Cerdeira\r\n            </a>\r\n             &amp; {\" \"}\r\n            <a href=\"https://holtlab.net/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Prof Kat Holt\r\n            </a>\r\n             , with support from  the Wellcome Trust (219692/Z/19/Z and 226432/Z/22/Z),\r\n             the European Union's Horizon 2020 research and innovation programme under the Marie\r\n            Sklodowska-Curie grant agreement No 845681.\r\n            <img\r\n              className=\"euFlagImage\"\r\n              src={euFlagImg}\r\n              alt=\"EU_FLAG\"\r\n              height=\"20\"\r\n            />\r\n            , the{\" \"}\r\n            <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">\r\n              London School of Hygiene and Tropical Medicine\r\n            </a>{\" \"}\r\n            &amp;{\" \"}\r\n            <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Monash University\r\n            </a>\r\n            .\r\n          </p>\r\n        </div>\r\n        {/* Footer */}\r\n        <div className=\"footer-buttons-wrapper\">\r\n          {/* Contact Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open(\"mailto:dashboard@typhi.net\", \"_blank\");\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} className=\"fontawesome-icon\" />\r\n            <span>Contact</span>\r\n          </div>\r\n          {/* Documentation Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open(\"https://github.com/zadyson/TyphiNET/wiki\", \"_blank\");\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} className=\"fontawesome-icon\" />\r\n            <span>Documentation</span>\r\n          </div>\r\n          {/* Github Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open(\"https://github.com/zadyson/TyphiNET\", \"_blank\");\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} className=\"fontawesome-icon\" />\r\n            <span>GitHub</span>\r\n          </div>\r\n          {/* Twitter Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open(\"https://twitter.com/typhinet\", \"_blank\");\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} className=\"fontawesome-icon\" />\r\n            <span>Twitter</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }} />\r\n        <div className=\"footer\">\r\n          <span>\r\n            Data obtained from:{\" \"}\r\n            <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">\r\n              pathogen watch project\r\n            </a>{\" \"}\r\n            on 21/02/2023.{\" \"}\r\n            <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">\r\n              Holt Lab\r\n            </a>\r\n          </span>\r\n        </div>\r\n        {/* FAB reset filters */}\r\n        <div\r\n          className=\"fab-button\"\r\n          style={{ width: dimensions.width < mobile ? \"48px\" : \"56px\" }}\r\n        >\r\n          <TooltipMaterialUI\r\n            title={<span className=\"my-font\">Reset Configurations</span>}\r\n            placement=\"left\"\r\n          >\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size={dimensions.width < mobile ? \"medium\" : \"large\"}\r\n              onClick={() => {\r\n                setDataset(\"All\");\r\n                setActualTimeInitial(timeInitial);\r\n                setActualTimeFinal(timeFinal);\r\n                setActualCountry(\"All\");\r\n                setActualRegion(\"All\");\r\n                setMapView(\"CipI\");\r\n                setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                setPopulationStructureFilter(1);\r\n                setAmrClassFilter(amrClassesForFilter[5]);\r\n                setRDWAGDataviewFilter(2);\r\n                setRFWGFilter(2);\r\n                // setActualContinent(\"All\");\r\n                const text = document.getElementById(\"DSButton\");\r\n                if (text.innerText === \"SELECT ALL\") {\r\n                  text.click();\r\n                }\r\n                const text2 = document.getElementById(\"DSButton2\");\r\n                if (text2.innerText === \"RESET\") {\r\n                  text2.click();\r\n                }\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faUndoAlt} size=\"lg\" color=\"white\" />\r\n            </Fab>\r\n          </TooltipMaterialUI>\r\n        </div>\r\n        {/* Loading */}\r\n        {loading && <div className=\"loading-2\">Loading...</div>}\r\n      </div>\r\n      {/* Loading Screen */}\r\n      {appLoading && (\r\n        <div className=\"loading\">\r\n          {dimensions.width > desktop && (\r\n            <img\r\n              className=\"logoImageMenu-loading\"\r\n              src={typhinetLogoImg}\r\n              alt=\"TyphiNET\"\r\n            />\r\n          )}\r\n          <Loader\r\n            className=\"my-loader\"\r\n            type=\"Circles\"\r\n            color=\"#D91E45\"\r\n            height={70}\r\n            width={70}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// CircularProgress for 'Submit data' and 'Look for changes' dialogs\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n      color: \"rgb(31, 187, 211)\"\r\n  }\r\n})(CircularProgress);\r\n\r\n// CSS like classes\r\nconst useStyles = makeStyles({\r\n    cellON: {\r\n        backgroundColor: '#e9f9fc'\r\n    },\r\n    off: {},\r\n    tableID : {\r\n        position: 'sticky',\r\n        right: 0\r\n    },\r\n    tablePadding: {\r\n        marginTop: '16px'\r\n    },\r\n    actionsCell:{\r\n      borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n      backgroundColor: 'white'\r\n    },\r\n    stickyCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n        backgroundColor: 'white'\r\n    },\r\n    actionsHeaderCell: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    stickyHeaderCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    changesTable: {\r\n        maxHeight: '400px',\r\n        marginBottom: 32\r\n    },\r\n    viewButton: {\r\n        width: 80\r\n    },\r\n    resetButton: {\r\n        width: 150,\r\n        height: 40,\r\n        marginRight: 16,\r\n        marginLeft: 16\r\n    },\r\n    uploadButton: {\r\n        width: 150,\r\n        height: 40\r\n    },\r\n    checkChangesButton: {\r\n      width: 100,\r\n      height: 40\r\n    }, \r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    input: {\r\n        marginBottom: 16\r\n    },\r\n    input2: {\r\n        marginBottom: 16\r\n    },\r\n    currentData: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      whiteSpace: 'nowrap',\r\n      paddingRight: 8\r\n    },\r\n    toolbar: {\r\n      backgroundColor: 'black',\r\n      borderBottom: '1px solid white',\r\n      justifyContent: 'space-between'\r\n    },\r\n    deleteSelected: {\r\n      color: 'red'\r\n    },\r\n    checkboxCell: {\r\n      backgroundColor: 'black'\r\n    },\r\n    checkbox: {\r\n      color: 'white'\r\n    },\r\n    tableRowRoot: {\r\n      \"&$tableRowSelected, &$tableRowSelected:hover\": {\r\n        backgroundColor: '#e9f9fc'\r\n      }\r\n    },\r\n    tableRowSelected: {\r\n      backgroundColor: '#e9f9fc'\r\n    },\r\n    box: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingLeft: 16\r\n    },\r\n    select: {\r\n      textAlign: 'right',\r\n      paddingLeft: 8,\r\n      textAlignLast: 'right',\r\n      minWidth: 50,\r\n      userSelect: 'none',\r\n      borderRadius: 0,\r\n      font: 'inherit',\r\n      letterSpacing: 'inherit',\r\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n      fontSize: 14,\r\n      backgroundColor: 'transparent',\r\n      '&:focus': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      marginRight: 12,\r\n    },\r\n    choosePage: {\r\n      opacity: 0.87,\r\n      whiteSpace: 'nowrap',\r\n      paddingLeft: 8\r\n    },\r\n    selectFilter: {\r\n      backgroundColor: 'white',\r\n      textAlign: 'start'\r\n    },\r\n    header: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'stretch'\r\n    },\r\n    headerTitle:{\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'flex-start'\r\n    },\r\n    rowHeader: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-start'\r\n    },\r\n    deleteChangeButton: {\r\n      backgroundColor: 'grey',\r\n      width: 35,\r\n      borderRadius: 5,\r\n      color: 'white',\r\n      border: '1px solid rgba(0, 0, 0, 0.23)',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n    },\r\n    // dialogTransition: {\r\n    //   transition: 'none'\r\n    // }\r\n  });\r\n\r\n// Load button from the changes table\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'grey',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n      marginRight: '16px'\r\n    },\r\n}))(Button);\r\n\r\n// 'Reset changes' and 'Add new entry' buttons\r\nconst ColorButton3 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'white',\r\n      color: '#1FBBD3',\r\n      '&:hover': {\r\n        color: 'black',\r\n        backgroundColor: '#CFCFCF'\r\n      },\r\n      borderColor: '#1FBBD3'\r\n    },\r\n}))(Button);\r\n\r\n// Submit changes button\r\nconst ColorButton4 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: '#1FBBD3',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#188C9E'\r\n      }\r\n    },\r\n}))(Button);\r\n\r\n// Refresh button\r\nconst ColorButton5 = withStyles((theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    fontWeight: 'bold'\r\n  },\r\n}))(Button);\r\n\r\n// Header cell for both tables\r\nconst StyledHeaderCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n// Wrapper for data table\r\nconst CustomTableContainer = withStyles((theme) => ({\r\n    root: {\r\n        maxHeight: '600px'\r\n    }\r\n}))(TableContainer);\r\n\r\n// Label for header cells from the data table with order buttons\r\nconst CustomTableSortLabel = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        \"&:hover\": {\r\n        color: 'white',\r\n      },\r\n      '&$active': {\r\n        color: 'white',\r\n      },\r\n    },\r\n    active: {},\r\n    icon: {\r\n        color: 'inherit !important'\r\n    },\r\n}))(TableSortLabel);\r\n\r\n\r\nexport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress};","import './index.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Tooltip, Toolbar, Typography, Checkbox, Box, IconButton, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport { FirstPage, LastPage, KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress } from './materialUI'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport axios from 'axios';\r\nimport LZString from 'lz-string';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction createData(id, date, changes) {\r\n    return { id, date, changes };\r\n}\r\n\r\nconst AdminPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [rows, setRows] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [originalData, setOriginalData] = useState([])\r\n    const [currentData, setCurrentData] = useState(0)\r\n    const [tableKeys, setTableKeys] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('NAME');\r\n    const [currentRow, setCurrentRow] = useState({})\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const [open3, setOpen3] = React.useState(false);\r\n    const [open4, setOpen4] = React.useState(false);\r\n    const [open5, setOpen5] = React.useState(false);\r\n    const [open6, setOpen6] = React.useState(false);\r\n    const [open7, setOpen7] = React.useState(false);\r\n    const [open8, setOpen8] = React.useState(false);\r\n    const [resultMessage, setResultMessage] = React.useState(\"\");\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [filters, setFilters] = React.useState({});\r\n    const [filterOptions, setFilterOptions] = React.useState({});\r\n    const [filteredData, setFilteredData] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [startProgress, setStartProgress] = React.useState(false);\r\n    const [loadingMessage, setLoadingMessage] = React.useState(\"\");\r\n    const [currentChange, setCurrentChange] = React.useState(null);\r\n\r\n    const [exceptions] = React.useState([\"NAME\", \"ACCESION\", \"Genome ID\", \"LATITUDE\", \"LONGITUDE\", \"LOCATION\", \"Mash Distance\", \"Matching Hashes\", \"SANGER LANE\", \"STRAIN\"]);\r\n\r\n    // Change table page\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    // Change number of rows per page and return to first page\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    // Sort table by selected column in asc or desc\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    // Helper function for getComparator\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // Main function to return data ordered to table\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    // Comparator to order table for stableSort\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    // Change current view of the table to another ID, this also resets all changes made on the table\r\n    function changeView(id) {\r\n        resetChanges()\r\n        setData(originalData)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        if (id > 0) {\r\n            for (let index = 0; index < id; index++) {\r\n                Object.keys(rows[index].changes.added).forEach(element => {\r\n                    const genome = rows[index].changes.added[element]\r\n                    const gIndex = aux.findIndex(x => x.NAME === genome.NAME)\r\n                    aux.splice(gIndex, 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.deleted).forEach(element => {\r\n                    const genome = rows[index].changes.deleted[element]\r\n                    aux.push(genome)\r\n                    aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.updated).forEach(element => {\r\n                    const keys = rows[index].changes.updated[element]\r\n                    for (const key in keys) {\r\n                        const genome = aux.filter(x => x.NAME === element)\r\n                        if (genome.length > 0) {\r\n                            genome[0][key] = keys[key].old\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            setData(aux)\r\n        }\r\n        setCurrentData(id)\r\n    }\r\n\r\n    // Beautify text for changes\r\n    function betterChanges(changes) {\r\n        const aux = JSON.parse(JSON.stringify(changes))\r\n        const added = Object.keys(aux.added).length > 0 ? Object.keys(aux.added).join(\", \") + \".\" : \"\"\r\n        const deleted = (Object.keys(aux.deleted).length > 0 ? (Object.keys(aux.deleted).join(\", \")) + \".\" : \"\")\r\n        let updated = \"\"\r\n\r\n        if (Object.keys(aux.updated).length > 0) {\r\n            updated = Object.entries(aux.updated).map(x => {\r\n                const updates = Object.entries(x[1])\r\n                const changes = updates.map((y, i) => {\r\n                    const point = i === updates.length - 1 ? \".\" : \"\"\r\n                    return y[0] + \" (new: \" + y[1].new + \", old: \" + y[1].old + \")\" + point\r\n                });\r\n                return x[0] + \": \" + changes.join(\", \");\r\n            })\r\n        }\r\n\r\n        const text = []\r\n        if (added !== \"\") text.push([\"ADDED\", added])\r\n        if (deleted !== \"\") text.push([\"DELETED\", deleted])\r\n        if (updated !== \"\") text.push([\"UPDATED\", updated])\r\n        return text\r\n    }\r\n\r\n    // The five handlers below are mediators between the button and the dialog. They set specific informations before opening the dialogs.\r\n    function handleDelete(row) {\r\n        setCurrentRow(row)\r\n        setOpen(true)\r\n    }\r\n    function handleDeleteChange(id) {\r\n        setCurrentChange(id)\r\n        setOpen8(true)\r\n    }\r\n    function handleEdit(row) {\r\n        setCurrentRow(row)\r\n        setOpen2(true)\r\n    }\r\n    function handleUpload() {\r\n        setOpen4(true)\r\n    }\r\n    function handleCheckChanges(message) {\r\n        setResultMessage(message);\r\n        setOpen5(true);\r\n    }\r\n\r\n    // Delete chosen change\r\n    async function deleteChange() {\r\n        axios.post(`${API_ENDPOINT}mongo/deleteChange`, { id: currentChange - 1 })\r\n            .then((res) => {\r\n                getChangeData(res.data)\r\n                setCurrentData(0)\r\n            })\r\n            .finally(() => {\r\n                setOpen8(false)\r\n            })\r\n    }\r\n\r\n    // Check if there were any new changes on the database and updates the table\r\n    async function checkChanges(showPopup = true) {\r\n        setStartProgress(true);\r\n        setLoading(true);\r\n        return await axios.get(`${API_ENDPOINT}mongo/checkForChanges`)\r\n            .then(async (res) => {\r\n                if (res.data.Status === \"Changes\") {\r\n                    await resetChanges();\r\n                    await getData();\r\n                    if (showPopup) {\r\n                        handleCheckChanges('Changes were found. Tables updated.');\r\n                    }\r\n                    return true\r\n                } else if (res.data.Status === \"No Changes\") {\r\n                    if (showPopup) {\r\n                        handleCheckChanges('No changes found.');\r\n                    }\r\n                    return false\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (showPopup) {\r\n                    handleCheckChanges('Could not check for changes. Try again later.');\r\n                }\r\n                return false\r\n            })\r\n            .finally(() => {\r\n                setOpen7(false)\r\n                setLoading(false);\r\n                setStartProgress(false);\r\n            })\r\n    }\r\n\r\n    // Handler for select all rows button\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = filteredData.map((n) => n.NAME);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    // Handler for selecting specific row\r\n    const handleClick = (name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    // Delete selected row\r\n    function deleteRow() {\r\n        const index = data.findIndex(x => x.NAME === currentRow.NAME)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        aux.splice(index, 1)\r\n        setData(aux)\r\n        setOpen(false)\r\n    }\r\n\r\n    // If more than one row is selected than delete all of them\r\n    function deleteRows() {\r\n        const aux = JSON.parse(JSON.stringify(filteredData))\r\n        const aux2 = JSON.parse(JSON.stringify(data))\r\n        selected.forEach(row => {\r\n            const index = aux.findIndex(x => x.NAME === row);\r\n            if (index !== -1) {\r\n                aux.splice(index, 1)\r\n            }\r\n            const index2 = aux2.findIndex(x => x.NAME === row);\r\n            if (index2 !== -1) {\r\n                aux2.splice(index2, 1)\r\n            }\r\n        })\r\n        setData(aux2)\r\n        setFilteredData(aux)\r\n        setSelected([])\r\n        setOpen6(false)\r\n    }\r\n\r\n    // Edit selected row\r\n    function editRow() {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const rowIndex = aux.findIndex(x => x.NAME === currentRow.NAME)\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n\r\n        aux[rowIndex] = row\r\n        setData(aux)\r\n        setOpen2(false)\r\n        setResultMessage(`Row ${currentRow.NAME} edited with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    // Add new row\r\n    function addRow() {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n\r\n        aux.push(row)\r\n        aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n        setData(aux)\r\n        setOpen3(false)\r\n        setResultMessage(`Row ${row.NAME} added with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    // Reset all changes made on the table\r\n    async function resetChanges() {\r\n        setSearch(\"\")\r\n        let aux = JSON.parse(JSON.stringify(filters))\r\n        for (const key in aux) {\r\n            aux[key] = \"\"\r\n        }\r\n        setFilters(aux)\r\n        setPage(0)\r\n        setRowsPerPage(10)\r\n        setCurrentData(0)\r\n        setData(originalData)\r\n    }\r\n\r\n    // Upload changes on the current table to the database\r\n    function uploadChanges() {\r\n        setLoading(true)\r\n        setStartProgress(true);\r\n        setResultMessage(\"\")\r\n        const times = Math.ceil(data.length / 1500)\r\n        const parts = []\r\n        for (let index = 0; index < times; index++) {\r\n            if (times === 0) {\r\n                break\r\n            }\r\n            if (times === index - 1) {\r\n                if (times === 1) {\r\n                    parts.push([data])\r\n                } else {\r\n                    parts.push([data.slice((times - 1) * 1500)])\r\n                }\r\n            } else {\r\n                parts.push([data.slice(index * 1500, (index * 1500) + 1500)])\r\n            }\r\n            axios.post(`${API_ENDPOINT}mongo/upload/admin`, {\r\n                data: LZString.compress(JSON.stringify(parts[parts.length - 1])),\r\n                parts: times,\r\n                current: index + 1\r\n            })\r\n                .then((res) => {\r\n                    if (res.data !== '' && res.data.Status === 'Uploaded') {\r\n                        axios.get(`${API_ENDPOINT}mongo/download`)\r\n                            .then(async () => {\r\n                                await checkChanges()\r\n                                setResultMessage(\"Upload and download completed!\")\r\n                            })\r\n                            .catch(() => {\r\n                                setResultMessage(\"Something went wrong with the download, please try again later!\")\r\n                            })\r\n                            .finally(() => {\r\n                                setStartProgress(false)\r\n                                setLoading(false)\r\n                                setOpen4(false)\r\n                                setOpen5(true)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    setStartProgress(false)\r\n                    setLoading(false)\r\n                    setOpen4(false)\r\n                    setResultMessage(\"Something went wrong with the upload, please try again later!\")\r\n                    setOpen5(true)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    // Helper for function getData to get only the changes\r\n    function getChangeData(changeData) {\r\n        let aux = []\r\n        for (let index = 0; index < changeData.length - 1; index++) {\r\n            const date = new Date(changeData[index].updatedAt)\r\n            aux.push(\r\n                createData(index + 1, date.toLocaleString(), changeData[index].changes)\r\n            )\r\n        }\r\n        setRows(aux)\r\n    }\r\n\r\n    // Main function to get data for all the admin page\r\n    async function getData() {\r\n        await axios.get(`${API_ENDPOINT}file/databaseLog`)\r\n            .then((res) => {\r\n                let data = res.data\r\n\r\n                getChangeData(data)\r\n\r\n                let aux2 = Object.values(data[data.length - 1].data)\r\n                let aux4 = {}\r\n                let aux5 = {}\r\n\r\n                Object.keys(aux2[0]).forEach(key => {\r\n                    if (!exceptions.includes(key)) {\r\n                        aux4[key] = \"\"\r\n                        aux5[key] = []\r\n                        let options = aux2.map(value => value[key]);\r\n                        options.forEach(x => {\r\n                            if (!aux5[key].includes(x)) {\r\n                                aux5[key].push(x)\r\n                            }\r\n                        })\r\n                        aux5[key].sort()\r\n                    }\r\n                });\r\n\r\n                setData(aux2)\r\n                setFilters(aux4)\r\n                setFilterOptions(aux5)\r\n                setFilteredData(JSON.parse(JSON.stringify(aux2)))\r\n                setOriginalData(JSON.parse(JSON.stringify(aux2)))\r\n                setTableKeys(Object.keys(aux2[0]))\r\n            })\r\n    }\r\n\r\n    // Check for changes when admin page is opened and get data\r\n    useEffect(() => {\r\n        setLoadingMessage(\"Checking for changes...\")\r\n        checkChanges(false).then((response) => {\r\n            if (!response) {\r\n                getData().finally(() => {\r\n                    setIsLoading(false);\r\n                });\r\n            } else {\r\n                setIsLoading(false);\r\n            }\r\n        }).finally(() => {\r\n            setLoadingMessage(\"\")\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    // Watcher for filtering columns and search\r\n    useEffect(() => {\r\n        let aux = JSON.parse(JSON.stringify(data))\r\n        if (search === \"\" && Object.values(filters).join(\"\") === \"\") {\r\n            setFilteredData(aux)\r\n        } else {\r\n            let s = search.toLowerCase()\r\n\r\n            aux = aux.filter(x => {\r\n                let pass = true\r\n                Object.keys(x).forEach(y => {\r\n                    if (!exceptions.includes(y) && filters[y] !== \"\" && x[y] !== filters[y]) {\r\n                        pass = false\r\n                    }\r\n                    if (search !== \"\" && !Object.values(x).join(\" \").toLowerCase().includes(s)) {\r\n                        pass = false\r\n                    }\r\n                })\r\n                return pass\r\n            })\r\n\r\n            setFilteredData(aux)\r\n        }\r\n    }, [search, data, filters, exceptions])\r\n\r\n    // Component table toolbar (Above table header)\r\n    const EnhancedTableToolbar = (props) => {\r\n        const { numSelected } = props;\r\n\r\n        return (\r\n            <Toolbar className={classes.toolbar}>\r\n                {numSelected > 0 ? (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        color=\"inherit\"\r\n                        variant=\"subtitle1\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        <b>DATA ID:</b> {currentData}\r\n                    </Typography>\r\n                )}\r\n\r\n                <SearchBar\r\n                    value={search}\r\n                    placeholder={\"Search and press enter...\"}\r\n                    onCancelSearch={() => {\r\n                        setSearch(\"\")\r\n                        setPage(0)\r\n                    }}\r\n                    onRequestSearch={(value) => {\r\n                        setSearch(value)\r\n                        setPage(0)\r\n                    }}\r\n                />\r\n\r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"Delete\">\r\n                        <IconButton onClick={() => setOpen6(true)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className={classes.deleteSelected} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : null}\r\n\r\n\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    // Component table header\r\n    function EnhancedTableHead(props) {\r\n        const { classes, order, orderBy, onRequestSort, onSelectAllClick, numSelected, rowCount } = props;\r\n        const createSortHandler = (property) => (event) => {\r\n            onRequestSort(event, property);\r\n        };\r\n\r\n        return data.length > 0 && (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\" className={classes.checkboxCell}>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            className={classes.checkbox}\r\n                        />\r\n                    </TableCell>\r\n                    {tableKeys.map((headCell) => (\r\n                        <StyledHeaderCell\r\n                            key={headCell + 'table'}\r\n                            align={'center'}\r\n                            sortDirection={orderBy === headCell ? order : false}\r\n                        >\r\n                            <CustomTableSortLabel\r\n                                active={orderBy === headCell}\r\n                                direction={orderBy === headCell ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell)}\r\n                                className={classes.rowHeader}\r\n                            >\r\n                                <div className={classes.header}>\r\n                                    <div className={classes.headerTitle}>{headCell}</div>\r\n                                    {!exceptions.includes(headCell) && (\r\n                                        <FormControl>\r\n                                            <Select\r\n                                                value={filters[headCell]}\r\n                                                onChange={(event) => {\r\n                                                    setPage(0)\r\n                                                    let aux = JSON.parse(JSON.stringify(filters))\r\n                                                    aux[headCell] = event.target.value\r\n                                                    setFilters(aux)\r\n                                                    event.stopPropagation()\r\n                                                }}\r\n                                                displayEmpty\r\n                                                className={classes.selectFilter}\r\n                                                onOpen={(event) => event.stopPropagation()}\r\n                                                onClose={(event) => event.stopPropagation()}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem>\r\n                                                {filterOptions[headCell].map((option, i) => (<MenuItem key={i + option} value={option}>{option}</MenuItem>))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    )}\r\n                                </div>\r\n                            </CustomTableSortLabel>\r\n                        </StyledHeaderCell>\r\n                    ))}\r\n                    <TableCell className={classes.stickyHeaderCell}>\r\n                        <div className=\"actions\">ACTIONS</div>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n\r\n    // Get number of pages for the table\r\n    function NumberOfPages() {\r\n        return Math.ceil(filteredData.length / rowsPerPage)\r\n    }\r\n\r\n    // Component TablePaginationActions\r\n    function TablePaginationActions(props) {\r\n        const theme = useTheme();\r\n        const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n        const handleFirstPageButtonClick = (event) => {\r\n            onPageChange(event, 0);\r\n        };\r\n\r\n        const handleBackButtonClick = (event) => {\r\n            onPageChange(event, page - 1);\r\n        };\r\n\r\n        const handleNextButtonClick = (event) => {\r\n            onPageChange(event, page + 1);\r\n        };\r\n\r\n        const handleLastPageButtonClick = (event) => {\r\n            onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n        };\r\n\r\n        return (\r\n            <Box sx={{ flexShrink: 0, ml: 2.5 }} className={classes.box}>\r\n                <IconButton\r\n                    onClick={handleFirstPageButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"first page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleBackButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"previous page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleNextButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"next page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleLastPageButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"last page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n                </IconButton>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    TablePaginationActions.propTypes = {\r\n        count: PropTypes.number.isRequired,\r\n        onPageChange: PropTypes.func.isRequired,\r\n        page: PropTypes.number.isRequired,\r\n        rowsPerPage: PropTypes.number.isRequired,\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    return (\r\n        <div className=\"mainDiv\">\r\n            <div className=\"mainDiv-padding\">\r\n                <div className=\"titleActions\">\r\n                    <div className=\"titleButtonRow\">\r\n                        <h2 className=\"title\">MongoDB Admin Page</h2>\r\n                    </div>\r\n                    <div className=\"tooltipSubmitRow\">\r\n                        <ColorButton5 onClick={() => { setOpen7(true) }} variant=\"outlined\" size=\"small\" className={classes.checkChangesButton} >Refresh</ColorButton5>\r\n                        <Tooltip\r\n                            title={<div className=\"tooltipTitle\">Changes are only saved by pressing the <b className=\"boldTooltipText\">SUBMIT CHANGES</b> button</div>}\r\n                            placement=\"left\"\r\n                        >\r\n                            <IconButton>\r\n                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <ColorButton4 onClick={() => { handleUpload() }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    </div>\r\n                </div>\r\n                <TableContainer component={Paper} className={classes.changesTable}>\r\n                    <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledHeaderCell>ID</StyledHeaderCell>\r\n                                <StyledHeaderCell>Date</StyledHeaderCell>\r\n                                <StyledHeaderCell align=\"left\">Changes</StyledHeaderCell>\r\n                                <StyledHeaderCell className={classes.actionsHeaderCell} align=\"left\">Actions</StyledHeaderCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow key={'00changes'} className={currentData === 0 ? classes.cellON : classes.off}>\r\n                                <TableCell align=\"left\">{0}</TableCell>\r\n                                <TableCell align=\"left\"></TableCell>\r\n                                <TableCell align=\"left\" width=\"70%\">{'CURRENT DATA'}</TableCell>\r\n                                <TableCell align=\"left\" className={classes.actionsCell}>\r\n                                    <div className=\"tableActions\">\r\n                                        <ColorButton onClick={() => changeView(0)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            {rows.map((row, r) => (\r\n                                <TableRow key={row.id + 'changes'} className={row.id === currentData ? classes.cellON : classes.off}>\r\n                                    <TableCell align=\"left\">{row.id}</TableCell>\r\n                                    <TableCell align=\"left\">{row.date}</TableCell>\r\n                                    <TableCell align=\"left\" width=\"70%\">{betterChanges(row.changes).map((text, t) => (\r\n                                        <div key={`${r}${t}change`} className=\"changesText\">\r\n                                            <div>{text[0]}</div>\r\n                                            &nbsp;{\"entries with name:\"}&nbsp;\r\n                                            {text[0] !== \"UPDATED\"\r\n                                                ? (<div>{text[1]}</div>)\r\n                                                : (\r\n                                                    <div>\r\n                                                        {Object.values(text[1]).map((x, i) => (<div key={x + i}>{x}</div>))}\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    ))}</TableCell>\r\n                                    <TableCell align=\"left\" className={classes.actionsCell}>\r\n                                        <div className=\"tableActions\">\r\n                                            <ColorButton onClick={() => changeView(row.id)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                            <IconButton aria-label=\"deleteChange\" size=\"small\" className={classes.deleteChangeButton} onClick={() => handleDeleteChange(row.id)}>\r\n                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div className=\"addButton\">\r\n                    <ColorButton4 onClick={() => { handleUpload() }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    <ColorButton3\r\n                        onClick={() => {\r\n                            resetChanges()\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.resetButton}\r\n                    >\r\n                        Reset changes\r\n                    </ColorButton3>\r\n                    <ColorButton3 onClick={() => { setOpen3(true) }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Add new entry</ColorButton3>\r\n                </div>\r\n                <Paper className={classes.tablePadding}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} />\r\n                    <CustomTableContainer>\r\n                        <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                            <EnhancedTableHead\r\n                                numSelected={selected.length}\r\n                                classes={classes}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                rowCount={filteredData.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(filteredData, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.NAME);\r\n                                    return (\r\n                                        <TableRow\r\n                                            key={row.NAME + index}\r\n                                            className={classes.dataRow}\r\n                                            role=\"checkbox\"\r\n                                            hover\r\n                                            aria-checked={isItemSelected}\r\n                                            selected={isItemSelected}\r\n                                            classes={{ selected: classes.tableRowSelected, root: classes.tableRowRoot }}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    onClick={() => handleClick(row.NAME)}\r\n                                                />\r\n                                            </TableCell>\r\n                                            {Object.values(row).map((cell) => (\r\n                                                <TableCell key={Math.random() + 'cell'} align=\"center\">{cell}</TableCell>\r\n                                            ))}\r\n                                            <TableCell align=\"center\" className={classes.stickyCell}>\r\n                                                <div className=\"tableActions\">\r\n                                                    <IconButton aria-label=\"edit\" size=\"small\" onClick={() => handleEdit(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faEdit} className=\"editIcon\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton aria-label=\"delete\" size=\"small\" onClick={() => handleDelete(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} className=\"trashIcon\" />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CustomTableContainer>\r\n                    <div className=\"pagination\">\r\n                        <Typography className={classes.choosePage} variant=\"body2\">Choose Page: </Typography>\r\n                        {filteredData.length > 0 && (<Select\r\n                            value={page}\r\n                            onChange={(event) => { setPage(event.target.value) }}\r\n                            className={classes.select}\r\n                            disableUnderline\r\n                        >\r\n                            {[...Array(NumberOfPages())].map((x, i) => <MenuItem key={x + 'nPage'} value={i}>{i}</MenuItem>)}\r\n                        </Select>)}\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 50, 100]}\r\n                            component=\"div\"\r\n                            count={filteredData.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n            {isLoading && (<div className=\"div-loader\">\r\n                <Loader\r\n                    type=\"Circles\"\r\n                    color=\"white\"\r\n                    height={70}\r\n                    width={70}\r\n                />\r\n                <p className=\"div-loader-msg\">{loadingMessage}</p>\r\n            </div>)}\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete {currentRow.NAME} ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open2}\r\n                onClose={() => setOpen2(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Edit\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {Object.entries(currentRow).map(item => (\r\n                        <TextField key={item[0] + 'input'} id={item[0]} className={classes.input} label={item[0]} variant=\"outlined\" defaultValue={item[1]} />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen2(false)}>Cancel</Button>\r\n                    <Button onClick={() => editRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open3}\r\n                onClose={() => setOpen3(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Add\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {data.length > 0 && Object.keys(data[0]).map(item => (\r\n                        <TextField key={item + 'input2'} id={item} className={classes.input2} label={item} variant=\"outlined\" />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen3(false)}>Cancel</Button>\r\n                    <Button onClick={() => addRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open4}\r\n                onClose={() => setOpen4(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Submit data\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Would you like to submit changes to the database and download the new version to TyphiNET ?\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!startProgress && (<Button onClick={() => setOpen4(false)}>Cancel</Button>)}\r\n                    {!startProgress && (<Button onClick={() => uploadChanges()} autoFocus>\r\n                        Ok\r\n                    </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open5}\r\n                onClose={() => setOpen5(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Result\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {resultMessage}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen5(false)} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open6}\r\n                onClose={() => setOpen6(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete many\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete {selected.length} row(s) ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen6(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteRows()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open7}\r\n                onClose={() => setOpen7(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Look for changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Look for changes in the database? If there are, your current changes in the table below will be reseted.\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!startProgress && (<Button onClick={() => setOpen7(false)}>Cancel</Button>)}\r\n                    {!startProgress && (<Button onClick={() => { checkChanges() }} autoFocus>\r\n                        Ok\r\n                    </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open8}\r\n                onClose={() => setOpen8(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete change nº {currentChange} ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen8(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteChange()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport DashboardPage from './pages/dashboard'\r\nimport AdminPage from './pages/admin'\r\n// import typhinetLogoImg from './assets/img/logo-typhinet.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <nav>\r\n          <Link to=\"/\"></Link>\r\n          <Link to=\"/admin\"></Link>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <div>\r\n              <AdminPage/>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <div className=\"App\">\r\n              <div className=\"content\">\r\n                <DashboardPage/>\r\n              </div>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    // <div className=\"App\">\r\n    //   <div className=\"content\">\r\n    //     <DashboardPage/>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// capture the user experience of a web page\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}