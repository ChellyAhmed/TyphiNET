{"version":3,"sources":["assets/img/logo-typhinet.png","constants.js","util/colorHelper.js","pages/contact/index.js","pages/dashboard/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForAMR","amr","getColorForDrug","drug","getColorForIncType","incType","useStyles","makeStyles","theme","textField","color","borderBottomColor","button","backgroundColor","fade","ContactPage","classes","React","useState","company","email","firstName","lastName","address","city","country","postalCode","additionalInformation","form","setForm","formErrors","setFormErrors","loading","setLoading","isDesktop","window","innerWidth","className","TextField","value","onChange","evt","target","fullWidth","label","style","fontFamily","fontWeight","InputProps","error","helperText","FormHelperTextProps","width","multiline","marginTop","LinearProgress","Button","variant","onClick","_formErrors","axios","post","then","res","alert","catch","formControlSelect","spacing","marginBottom","minWidth","CustomSlider","withStyles","root","thumb","boxShadow","valueLabel","Slider","CustomCircularProgress","CircularProgress","CustomToggleButton","padding","selected","ToggleButton","DashboardPage","coordinates","zoom","controlMapPosition","setControlMapPosition","samplesQty","setSamplesQty","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapXDRData","setWorldMapXDRData","worldMapDCSData","setWorldMapDCSData","worldMapAZITHData","setWorldMapAZITHData","worldMapCIPIData","setWorldMapCIPIData","worldMapCIPRData","setWorldMapCIPRData","worldMapDrugsData","setWorldMapDrugsData","worldMapAmrProfilesData","setWorldMapAmrProfilesData","worldMapPlasmidIncompatibilityTypeData","setWorldMapPlasmidIncompatibilityTypeData","captureControlMapInProgress","setCaptureControlMapInProgress","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","tooltipContent","setTooltipContent","timePeriodRange","setTimePeriodRange","actualTimePeriodRange","setActualTimePeriodRange","countriesForFilter","setCountriesForFilter","actualCountry","setActualCountry","populationStructureFilter","setPopulationStructureFilter","amrClassesForFilter","amrClassFilter","setAmrClassFilter","drugTrendsChartData","setDrugTrendsChartData","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","chartMaxHeight","setChartMaxHeight","chartMaxWidth","setChartMaxWidth","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","dataset","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","contactModalVisible","setContactModalVisible","desktop","mobile","height","innerHeight","dimensions","setDimensions","useEffect","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","genotypes","sort","a","b","localeCompare","get","limits","data","min","max","timeOutId","response","filter","genotypeChartResponse","parseDataForGenotypeChart","parseDataForCountryMap","drugTrendsChartResponse","parseDataForDrugTrendsChart","classChartResponse","parseDataForAmrClassChart","finalPopulationStructureChartData","genomes","forEach","entry","some","g","GENOTYPE","push","e","name","YEAR","year","find","yearIndex","findIndex","undefined","genotypeSimple","genotypeSimpleIndex","length","sum","Object","entries","total","arraysEqual","populationStructureChartSums","_year","highestSum","Math","ceil","genotypesData","drugsData","amrData","finalCountries","samplesData","h58Data","mdrData","xdrData","incTypesData","dcsData","azithData","cipIData","cipRData","countData","array","elementToCount","parentName","childName","temp","countryIndex","parent","index","count","displayName","congoCountryIndex","centralAfricanRepublicCountryIndex","ivoryCoastCountryIndex","timorLesteCountryIndex","unshift","includes","percentage","round","toFixed","MDRs","mdr","type","parseFloat","XDRs","xdr","DCSs","dcs","AZs","az","CipIs","cipIs","CipRs","cipRs","dataForCountingDrugs","DRUGS","DRUG","incTypes","finalChartData","maxSum","totalSum","genotypeIndex","GENE","errorMargin","lowerValue","top10","element","finalDrugTrendsChartData","finalDrugsAndGenotypesChartData","allDrugs","slice","a1","a2","JSON","stringify","mapSamplesColorScale","scaleLinear","domain","range","mapRedColorScale","tooltip","positionY","width1","width2","wrapperS","stroke","chart","position","y","x","wrapperStyle","content","active","payload","reverse","border","display","flexDirection","fontSize","flexWrap","map","item","alignItems","fill","flex","marginLeft","wordWrap","armClassFilterComponent","info","margin","top","left","bottom","right","layout","strokeDasharray","dataKey","interval","tick","amrClassChartTooltip","bars","stackId","barSize","zIndex","allowEscapeViewBox","justifyContent","overflowX","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","stopLoading","capturePicture","id","names","domtoimage","toPng","document","getElementById","quality","bgcolor","dataUrl","link","createElement","download","href","click","svgAsPngUri","scale","uri","canvas","ctx","getContext","mapImg","mapImgPromise","src","fillStyle","fillRect","drawImage","typhinetLogo","typhinetLogoPromise","typhinetLogoImg","typhinetLogoWidth","typhinetLogoHeight","base64","toDataURL","generateMapLegendOptions","percentageSteps","Array","keys","n","samplesLegend","amrProfiles","maxHeight","overflowY","d","renderMapLegend","FormControl","InputLabel","whiteSpace","Select","MenuItem","alt","icon","faInfoCircle","title","textAlign","data-tip","projectionConfig","rotate","center","onMoveEnd","strokeWidth","geography","geographies","geo","sample","s","properties","NAME","lineage","drugs","cursor","onMouseEnter","additionalInfo","samples","GENOTYPES","TOTAL","H58","MDR","DCS","CipI","CipR","AzithR","amrProfilesInfo","genotypeInfo","simpleGenotypeInfo","mdrInfo","xdrInfo","dcsInfo","azInfo","cipIInfo","cipRInfo","drugsInfo","incTypesInfo","onMouseLeave","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","size","newDataset","gutterBottom","marks","step","valueLabelDisplay","Zoom","in","c","Tooltip","placement","faCrosshairs","pos","faPlus","faMinus","faCamera","thickness","toString","substring","paddingBottom","paddingRight","marginRight","props","borderRadius","flexShrink","paddingLeft","paddingTop","alignSelf","amrClass","fontsize","cotrim","colors1","colors2","plotAmrClassChart","connectNulls","maxH","plotPopulationStructureChart","faTable","rel","faEnvelope","open","faGithub","faTwitter","visible","showCloseButton","customStyles","overflow","onClose","faTimes","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"k3xIAAe,MAA0B,0C,SCA5BA,EAAe,6BCAfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACH,MAAO,UACT,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,aACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,QACE,MAAO,YAIAC,EAAiB,SAA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","file":"static/js/main.cc439fb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet.f503745b.png\";","export const API_ENDPOINT = \"http://localhost:8080/api/\";\r\n// export const API_ENDPOINT = \"https://typhinet.herokuapp.com/api/\";","export const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n      return \"#000000\";\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '4.3.1.1.P1':\r\n      return \"#000000\";\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return \"#808080\";\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return \"#ffff00\";\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return \"#ffd700\";\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return \"#32cd32\";\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n      return \"#adff2f\";\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return \"#98fb98\";\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return \"#6b8e23\";\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return \"#2e8b57\";\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return \"#006400\";\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return \"#0000cd\";\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return \"#4682b4\";\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return \"#00bfff\";\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return \"#1e90ff\";\r\n    case '3.4':\r\n      return \"#6a5acd\";\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n      return \"#4b0082\";\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return \"#8b0000\";\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return \"#ff6347\";\r\n    case '4.3':\r\n    case '4.3.0':\r\n    case '4.3.1':\r\n      return \"#ff0000\";\r\n    case '4.3.1.1':\r\n      return \"#f1b6da\";\r\n    case '4.3.1.2':\r\n      return \"#c51b7d\";\r\n    case '4.3.1.3':\r\n      return \"#fb8072\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForAMR = (amr) => {\r\n  switch (amr) {\r\n    case 'No AMR detected':\r\n      return \"#addd8e\";\r\n    case 'MDR_DCS':\r\n      return \"#9e9ac8\"\r\n    case 'MDR':\r\n      return \"red\"\r\n    case 'DCS':\r\n      return \"#6baed6\"\r\n    case 'AzithR_MDR':\r\n      return \"#a50f15\"\r\n    case 'AzithR_DCS':\r\n      return \"#7a0177\"\r\n    case 'AzithR_DCS_MDR':\r\n      return \"#54278f\"\r\n    case 'XDR':\r\n      return \"black\"\r\n    case 'AMR':\r\n      return \"#ffeda0\"\r\n    case 'AMR_DCS':\r\n      return \"#fd8d3c\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForSimpleGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case 'H58':\r\n      return \"green\";\r\n    case 'Non-H58':\r\n      return \"red\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Azithromycin':\r\n      return \"rgb(144,211,199)\";\r\n    case 'Fluoroquinolones (DCS)':\r\n      return \"rgb(255,236,120)\";\r\n    case 'ESBL':\r\n      return \"rgb(190,186,217)\";\r\n    case 'Chloramphenicol':\r\n      return \"rgb(249,129,117)\";\r\n    case 'Ampicillin':\r\n      return \"rgb(129,178,210)\";\r\n    case 'Co-trimoxazole':\r\n      return \"rgb(252,180,105)\";\r\n    case 'Sulphonamides':\r\n      return \"rgb(180,221,112)\";\r\n    case 'Trimethoprim':\r\n      return \"rgb(144,211,199)\";\r\n    case 'Tetracyclines':\r\n      return \"rgb(251,207,229)\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForIncType = (incType) => {\r\n  switch (incType) {\r\n    case 'IncX1':\r\n      return 'rgb(174,227,154)'\r\n    case 'IncFIA(HI1)':\r\n      return 'rgb(138,35,139)'\r\n    case 'IncFIB(pHCM2)':\r\n      return 'rgb(163,215,30)'\r\n    case 'IncA/C2':\r\n      return 'rgb(69,51,214)'\r\n    case 'IncP1':\r\n      return 'rgb(223,207,231)'\r\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(66,69,94)'\r\n    case 'Col(BS512)':\r\n      return 'rgb(251,172,246)'\r\n    case 'IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(34,151,67)'\r\n    case 'IncN':\r\n      return 'rgb(238,83,190)'\r\n    case 'IncHI1B(R27)':\r\n      return 'rgb(68,242,112)'\r\n    case 'p0111':\r\n      return 'rgb(251,45,76)'\r\n    case 'IncHI1A':\r\n      return 'rgb(101,230,249)'\r\n    case 'IncI1':\r\n      return 'rgb(123,44,49)'\r\n    case 'IncY':\r\n      return 'rgb(231,173,121)'\r\n    case 'IncFIB(AP001918)':\r\n      return 'rgb(32,80,46)'\r\n    case 'IncFIB(K)':\r\n      return 'rgb(53,136,209)'\r\n    case 'IncHI2/IncHI2A':\r\n      return 'rgb(115,140,78)'\r\n    case 'Col440I':\r\n      return 'rgb(159,4,252)'\r\n    case 'Col156':\r\n      return 'rgb(244,212,3)'\r\n    case 'Col440II/Col440II':\r\n      return 'rgb(17,160,170)'\r\n    case 'IncFIA(HI1)/IncHI1A':\r\n      return 'rgb(251,120,16)'\r\n    case 'ColRNAI':\r\n      return 'rgb(91,67,11)'\r\n    case 'ColpVC':\r\n      return 'rgb(248,117,116)'\r\n    case 'IncX3':\r\n      return 'rgb(190,177,231)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}","import './index.css'\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    '& label.Mui-focused': {\r\n      color: \"rgb(31, 187, 211)\",\r\n    },\r\n    '& :not(.Mui-error).MuiInput-underline:after': {\r\n      borderBottomColor: \"rgb(31, 187, 211)\",\r\n    }\r\n  },\r\n  button: {\r\n    backgroundColor: \"rgb(31, 187, 211)\",\r\n    '&:hover': {\r\n      backgroundColor: fade(\"rgb(31, 187, 211)\", .6)\r\n    }\r\n  }\r\n}));\r\n\r\nconst ContactPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [form, setForm] = React.useState({\r\n    company: '',\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    address: '',\r\n    city: '',\r\n    country: '',\r\n    postalCode: '',\r\n    additionalInformation: ''\r\n  })\r\n  const [formErrors, setFormErrors] = React.useState({\r\n    company: '',\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    city: '',\r\n    country: '',\r\n  })\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const isDesktop = window.innerWidth > 767\r\n\r\n  const submit = () => {\r\n    let error = false;\r\n    let _formErrors = {\r\n      company: '',\r\n      email: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      city: '',\r\n      country: '',\r\n    }\r\n\r\n    if (form.company === '') {\r\n      _formErrors = { ..._formErrors, company: 'This field is required.' }\r\n      error = true\r\n    }\r\n\r\n    if (form.email === '') {\r\n      _formErrors = { ..._formErrors, email: 'This field is required.' }\r\n      error = true\r\n    }\r\n\r\n    if (form.firstName === '') {\r\n      _formErrors = { ..._formErrors, firstName: 'This field is required.' }\r\n      error = true\r\n    }\r\n\r\n    if (form.lastName === '') {\r\n      _formErrors = { ..._formErrors, lastName: 'This field is required.' }\r\n      error = true\r\n    }\r\n\r\n    if (form.city === '') {\r\n      _formErrors = { ..._formErrors, city: 'This field is required.' }\r\n      error = true\r\n    }\r\n\r\n    if (form.country === '') {\r\n      _formErrors = { ..._formErrors, country: 'This field is required.' }\r\n      error = true\r\n    }\r\n\r\n    if (!error) {\r\n      setLoading(true)\r\n      axios.post(`${API_ENDPOINT}email`, form)\r\n        .then((res) => {\r\n          setLoading(false)\r\n          window.alert('Message successfully sent!')\r\n        })\r\n        .catch((res) => {\r\n          setLoading(false)\r\n          window.alert('Error while sending message. Please try again.')\r\n        })\r\n    } else {\r\n      setFormErrors(_formErrors)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"contact\">\r\n      <div className=\"row\">\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.company}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, company: evt.target.value })\r\n            setFormErrors({ ...formErrors, company: '' })\r\n          }}\r\n          fullWidth\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Company</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n          error={formErrors.company !== ''}\r\n          helperText={formErrors.company}\r\n          FormHelperTextProps={{\r\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\r\n          }}\r\n        />\r\n        {isDesktop && (\r\n          <div style={{ width: 16 }} />\r\n        )}\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.email}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, email: evt.target.value })\r\n            setFormErrors({ ...formErrors, email: '' })\r\n          }}\r\n          fullWidth\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Email address</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n          error={formErrors.email !== ''}\r\n          helperText={formErrors.email}\r\n          FormHelperTextProps={{\r\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.firstName}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, firstName: evt.target.value })\r\n            setFormErrors({ ...formErrors, firstName: '' })\r\n          }}\r\n          fullWidth\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>First name</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n          error={formErrors.firstName !== ''}\r\n          helperText={formErrors.firstName}\r\n          FormHelperTextProps={{\r\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\r\n          }}\r\n        />\r\n        {isDesktop && (\r\n          <div style={{ width: 16 }} />\r\n        )}\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.lastName}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, lastName: evt.target.value })\r\n            setFormErrors({ ...formErrors, lastName: '' })\r\n          }}\r\n          fullWidth\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Last name</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n          error={formErrors.lastName !== ''}\r\n          helperText={formErrors.lastName}\r\n          FormHelperTextProps={{\r\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.address}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, address: evt.target.value })\r\n          }}\r\n          fullWidth\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Address</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.city}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, city: evt.target.value })\r\n            setFormErrors({ ...formErrors, city: '' })\r\n          }}\r\n          fullWidth\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>City</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n          error={formErrors.city !== ''}\r\n          helperText={formErrors.city}\r\n          FormHelperTextProps={{\r\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\r\n          }}\r\n        />\r\n        {isDesktop && (\r\n          <div style={{ width: 16 }} />\r\n        )}\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.country}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, country: evt.target.value })\r\n            setFormErrors({ ...formErrors, country: '' })\r\n          }}\r\n          fullWidth\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Country</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n          error={formErrors.country !== ''}\r\n          helperText={formErrors.country}\r\n          FormHelperTextProps={{\r\n            style: { fontFamily: \"Montserrat\", fontWeight: 400 }\r\n          }}\r\n        />\r\n        {isDesktop && (\r\n          <div style={{ width: 16 }} />\r\n        )}\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.postalCode}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, postalCode: evt.target.value })\r\n          }}\r\n          fullWidth\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Postal code</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <TextField\r\n          className={classes.textField}\r\n          value={form.additionalInformation}\r\n          onChange={(evt) => {\r\n            setForm({ ...form, additionalInformation: evt.target.value })\r\n          }}\r\n          fullWidth\r\n          multiline\r\n          label={<span style={{ fontFamily: \"Montserrat\", fontWeight: 400 }}>Additional information</span>}\r\n          InputProps={{ style: { fontFamily: \"Montserrat\", fontWeight: 600 } }}\r\n        />\r\n      </div>\r\n      {!loading ? (\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{ fontFamily: \"Montserrat\", marginTop: 16 }} onClick={submit}>\r\n          Submit\r\n        </Button>\r\n      ) : (\r\n          <div style={{ marginTop: 16 }}>\r\n            <LinearProgress />\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;","import './index.css';\r\nimport React, { useEffect, useState} from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule, ZoomableGroup } from \"react-simple-maps\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TooltipMaterialUI from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Brush, LineChart, Line, Legend } from 'recharts';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faMinus, faCrosshairs, faCamera, faTable, faTimes, faInfoCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport download from 'downloadjs';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport typhinetLogoImg from '../../assets/img/logo-typhinet.png';\r\nimport geography from '../../assets/world-110m.json'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { getColorForGenotype, getColorForAMR, getColorForDrug, getColorForIncType } from '../../util/colorHelper';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\nimport ContactPage from '../contact';\r\nimport domtoimage from 'dom-to-image';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControlSelect: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    minWidth: 120,\r\n    '& label.Mui-focused': {\r\n      color: \"rgb(31, 187, 211)\",\r\n    },\r\n    '& :not(.Mui-error).MuiInput-underline:after': {\r\n      borderBottomColor: \"rgb(31, 187, 211)\",\r\n    },\r\n  }\r\n}));\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: \"rgb(31, 187, 211)\"\r\n  },\r\n  thumb: {\r\n    \"&.MuiSlider-thumb\": {\r\n      \"&:not(.MuiSlider-active):focus\": {\r\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n      \"&:not(.MuiSlider-active):hover\": {\r\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n      \"&.MuiSlider-active\": {\r\n        boxShadow: \"0px 0px 0px 14px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n    },\r\n  },\r\n  valueLabel: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: 500\r\n  }\r\n})(Slider);\r\n\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n    color: \"rgb(31, 187, 211)\",\r\n  }\r\n})(CircularProgress);\r\n\r\nconst CustomToggleButton = withStyles({\r\n  root: {\r\n    padding: \"2px 8px\",\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: 600\r\n  },\r\n  selected: {\r\n    backgroundColor: 'rgb(31, 187, 211) !important',\r\n    color: \"white !important\"\r\n  }\r\n})(ToggleButton);\r\n\r\nconst DashboardPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [controlMapPosition, setControlMapPosition] = useState({ coordinates: [0, 0], zoom: 1 });\r\n  const [samplesQty, setSamplesQty] = useState(0);\r\n\r\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\r\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState({});\r\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\r\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\r\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\r\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\r\n  const [worldMapDCSData, setWorldMapDCSData] = useState([]);\r\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\r\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\r\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\r\n  const [worldMapDrugsData, setWorldMapDrugsData] = useState([]);\r\n  const [worldMapAmrProfilesData, setWorldMapAmrProfilesData] = useState([]);\r\n  const [worldMapPlasmidIncompatibilityTypeData, setWorldMapPlasmidIncompatibilityTypeData] = useState([]);\r\n\r\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] = useState(false)\r\n  const [captureControlChartRFWGInProgress, setCaptureControlChartRFWGInProgress] = useState(false)\r\n  const [captureControlChartDRTInProgress, setCaptureControlChartDRTInProgress] = useState(false)\r\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] = useState(false)\r\n  const [captureControlChartRFWAGInProgress, setCaptureControlChartRFWAGInProgress] = useState(false)\r\n\r\n  const [tooltipContent, setTooltipContent] = useState(null);\r\n\r\n  const [timePeriodRange, setTimePeriodRange] = React.useState([1905, 2019]);\r\n  const [actualTimePeriodRange, setActualTimePeriodRange] = React.useState([1905, 2019]);\r\n  const [countriesForFilter, setCountriesForFilter] = React.useState(['All']);\r\n  const [actualCountry, setActualCountry] = useState(\"All\");\r\n  const [populationStructureFilter, setPopulationStructureFilter] = React.useState(1);\r\n  const amrClassesForFilter = [/*\"AMR Profiles\", */\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (DCS)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"]\r\n  const [amrClassFilter, setAmrClassFilter] = React.useState(amrClassesForFilter[0])\r\n\r\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([])\r\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState([])\r\n  const [chartMaxHeight, setChartMaxHeight] = useState(0)\r\n  const [chartMaxWidth, setChartMaxWidth] = useState(0)\r\n  const [populationStructureChartData, setPopulationStructureChartData] = useState([])\r\n  const [amrClassChartData, setAmrClassChartData] = useState([])\r\n\r\n  const [mapView, setMapView] = React.useState('Dominant Genotype');\r\n  const [dataset, setDataset] = React.useState('full');\r\n  const [totalGenomes, setTotalGenomes] = useState([])\r\n  const [actualGenomes, setActualGenomes] = useState([])\r\n  const [totalGenotypes, setTotalGenotypes] = useState([])\r\n  const [actualGenotypes, setActualGenotypes] = useState([])\r\n\r\n  const [contactModalVisible, setContactModalVisible] = useState(false)\r\n\r\n  // const [dimensions.width > desktop, setdimensions.width > desktop] = useState(window.innerWidth > 767)\r\n  const desktop = 767\r\n  const mobile = 500\r\n  const middle = 1300\r\n\r\n  const [dimensions, setDimensions] = React.useState({ \r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n\r\n  function debounce(fn, ms) {\r\n    let timer\r\n    return _ => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(_ => {\r\n        timer = null\r\n        fn.apply(this, arguments)\r\n      }, ms)\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }, 1000)\r\n\r\n    window.addEventListener('resize', debouncedHandleResize)\r\n\r\n    return _ => {\r\n      window.removeEventListener('resize', debouncedHandleResize)\r\n    }\r\n  })\r\n\r\n  const genotypes = [\r\n    '0.0.1', '0.0.2', '0.0.3', '0.1',\r\n    '0.1.1', '0.1.2', '0.1.3', '1.1.1',\r\n    '1.1.2', '1.1.3', '1.2', '1.2.1',\r\n    '2', '2.0.1', '2.0.2', '2.1',\r\n    '2.1.1', '2.1.3', '2.1.5', '2.1.6',\r\n    '2.1.7', '2.1.8', '2.1.9', '2.2',\r\n    '2.2.1', '2.2.2', '2.2.3', '2.2.4',\r\n    '2.3.1', '2.3.2', '2.3.3', '2.3.4',\r\n    '2.3.5', '2.4', '2.4.1', '2.5',\r\n    '2.5.1', '3', '3.0.1', '3.0.2',\r\n    '3.1', '3.1.1', '3.1.2', '3.2',\r\n    '3.2.1', '3.2.2', '3.3', '3.3.1',\r\n    '3.3.2', '3.3.2.Bd1', '3.3.2.Bd2', '3.4',\r\n    '3.5', '3.5.1', '3.5.2', '3.5.3',\r\n    '3.5.4', '4.1', '4.2', '4.2.1',\r\n    '4.2.2', '4.2.3', '4.3.1', '4.3.1.1',\r\n    '4.3.1.1.P1', '4.3.1.2', '4.3.1.3'].sort((a, b) => a.localeCompare(b));\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}filters/getYearLimits`)\r\n      .then((res) => {\r\n        let limits = res.data\r\n        setTimePeriodRange([limits.min, limits.max])\r\n        setActualTimePeriodRange([limits.min, limits.max])\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const timeOutId = setTimeout(() => {\r\n      axios.get(`${API_ENDPOINT}filters/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n        .then((res) => {\r\n          var response = res.data\r\n\r\n          response['Dem. Rep. Congo'] = response['Democratic Republic of Congo']\r\n          delete response['Democratic Republic of Congo']\r\n          response['Central African Rep.'] = response['Central African Republic']\r\n          delete response['Central African Republic']\r\n          response[\"Côte d'Ivoire\"] = response['Ivory Coast']\r\n          delete response['Ivory Coast']\r\n          response[\"Timor-Leste\"] = response['East Timor']\r\n          delete response['East Timor']\r\n\r\n          setWorldMapComplementaryData(response)\r\n        })\r\n    }, 500)\r\n    return () => clearTimeout(timeOutId);\r\n  }, [actualTimePeriodRange, dataset])\r\n\r\n  useEffect(() => {\r\n    const timeOutId = setTimeout(async () => {\r\n      let filter;\r\n\r\n      if (populationStructureFilter === 1) {\r\n        filter = 2\r\n      } else {\r\n        filter = 3 /* H58 and Non-H58 */\r\n      }\r\n\r\n      let genotypeChartResponse = await axios.get(`${API_ENDPOINT}filters/${filter}/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n      parseDataForGenotypeChart(genotypeChartResponse.data)\r\n\r\n      if (actualCountry === \"All\") {\r\n        parseDataForCountryMap(genotypeChartResponse.data)\r\n      }\r\n      else {\r\n        let response = await axios.get(`${API_ENDPOINT}filters/${filter}/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n        parseDataForCountryMap(response.data)\r\n      }\r\n\r\n      let drugTrendsChartResponse = await axios.get(`${API_ENDPOINT}filters/drugTrendsChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n      parseDataForDrugTrendsChart(drugTrendsChartResponse.data)\r\n\r\n      let classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${amrClassFilter}/${dataset}`)\r\n      parseDataForAmrClassChart(classChartResponse.data)\r\n\r\n    }, 500);\r\n    return () => clearTimeout(timeOutId);\r\n  }, [populationStructureFilter, actualTimePeriodRange, actualCountry, dataset, amrClassFilter]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const parseDataForGenotypeChart = (data) => {\r\n    var finalPopulationStructureChartData = [];\r\n\r\n    var genomes = data;\r\n    var genotypes = [];\r\n\r\n    data.forEach((entry) => {\r\n      if (!genotypes.some(g => g === entry.GENOTYPE)) {\r\n        genotypes.push(entry.GENOTYPE)\r\n      }\r\n\r\n      /* POPULATION STRUCTURE CHART GENERATION */\r\n      if (populationStructureFilter === 1) { /* Genotype */\r\n        if (!finalPopulationStructureChartData.some(e => e.name === entry.YEAR)) {\r\n          finalPopulationStructureChartData.push({\r\n            name: entry.YEAR,\r\n            [entry.GENOTYPE]: 1\r\n          })\r\n        } else {\r\n          let year = finalPopulationStructureChartData.find(e => e.name === entry.YEAR);\r\n          let yearIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry.YEAR);\r\n\r\n          if (year[entry.GENOTYPE] === undefined) {\r\n            year[entry.GENOTYPE] = 1\r\n          } else {\r\n            year[entry.GENOTYPE] = year[entry.GENOTYPE] + 1\r\n          }\r\n          finalPopulationStructureChartData[yearIndex] = year;\r\n        }\r\n      } else { /* H58 / Non-H58 */\r\n        if (entry['GENOTYPE_SIMPLE'] === 'H58' || entry['GENOTYPE_SIMPLE'] === 'Non-H58')\r\n          if (!finalPopulationStructureChartData.some(e => e.name === entry['GENOTYPE_SIMPLE'])) {\r\n            finalPopulationStructureChartData.push({\r\n              name: entry['GENOTYPE_SIMPLE'],\r\n              [entry.GENOTYPE]: 1\r\n            })\r\n          } else {\r\n            let genotypeSimple = finalPopulationStructureChartData.find(e => e.name === entry['GENOTYPE_SIMPLE']);\r\n            let genotypeSimpleIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry['GENOTYPE_SIMPLE']);\r\n\r\n            if (genotypeSimple[entry.GENOTYPE] === undefined) {\r\n              genotypeSimple[entry.GENOTYPE] = 1\r\n            } else {\r\n              genotypeSimple[entry.GENOTYPE] = genotypeSimple[entry.GENOTYPE] + 1\r\n            }\r\n            finalPopulationStructureChartData[genotypeSimpleIndex] = genotypeSimple;\r\n          }\r\n      }\r\n    })\r\n\r\n    if (totalGenomes.length === 0)\r\n      setTotalGenomes(genomes)\r\n\r\n    if (totalGenotypes.length === 0){\r\n      if (actualCountry === \"All\") {\r\n        axios.get(`${API_ENDPOINT}filters/totalGenotypes`)\r\n        .then((res) => {\r\n          setTotalGenotypes(res.data.genotypes)\r\n        })\r\n      }else{\r\n        setTotalGenotypes(genotypes)\r\n      }\r\n    }\r\n\r\n    setActualGenomes(genomes)\r\n    setActualGenotypes(genotypes)\r\n\r\n    finalPopulationStructureChartData.forEach((data) => {\r\n      let sum = 0;\r\n      Object.entries(data).forEach((entry) => {\r\n        if (entry[0] !== \"name\")\r\n          sum += entry[1];\r\n      })\r\n      data.total = sum;\r\n    })\r\n\r\n    if (!arraysEqual(finalPopulationStructureChartData, populationStructureChartData))\r\n      setPopulationStructureChartData(finalPopulationStructureChartData)\r\n\r\n    let populationStructureChartSums = []\r\n    finalPopulationStructureChartData.forEach((year) => {\r\n      let sum = 0\r\n      let yearArray = Object.entries(year)\r\n      yearArray.forEach((_year) => {\r\n        if (_year[0] !== \"name\" && _year[0] !== \"total\")\r\n          sum += _year[1]\r\n      })\r\n      populationStructureChartSums.push({\r\n        year: year.name,\r\n        sum\r\n      })\r\n    })\r\n\r\n    if (populationStructureChartSums.length > 0) {\r\n      let highestSum = populationStructureChartSums.sort((a, b) => b.sum - a.sum)[0].sum;\r\n\r\n      if (populationStructureFilter === 1) {\r\n        if (highestSum > chartMaxHeight)\r\n          setChartMaxHeight(Math.ceil(highestSum / 100) * 100)\r\n      } else {\r\n        if (highestSum > chartMaxWidth)\r\n          setChartMaxWidth(Math.ceil(highestSum / 100) * 100)\r\n      }\r\n    }\r\n  }\r\n\r\n  const parseDataForCountryMap = (data) => {\r\n    let finalCountries = [];\r\n\r\n    let samplesData = [], genotypesData = [], h58Data = [], mdrData = [], xdrData = [], drugsData = [], amrData = [], incTypesData = [], dcsData = [], azithData = [], cipIData = [], cipRData = [];\r\n\r\n    const countData = (array, elementToCount, parentName, childName) => {\r\n      let temp = []\r\n      array.forEach(entry => {\r\n        if (!temp.some(e => e.name === entry['COUNTRY_ONLY'])) {\r\n          temp.push({\r\n            name: entry['COUNTRY_ONLY'],\r\n            displayName: entry['COUNTRY_ONLY'],\r\n            total: 1,\r\n            [parentName]: [{\r\n              [childName]: entry[elementToCount],\r\n              count: 1\r\n            }]\r\n          })\r\n        } else {\r\n          let country = temp.find(e => e.name === entry['COUNTRY_ONLY']);\r\n          let countryIndex = temp.findIndex(e => e.name === entry['COUNTRY_ONLY']);\r\n\r\n          if (!country[parentName].some(e => e[childName] === entry[elementToCount])) {\r\n            country[parentName].push({\r\n              [childName]: entry[elementToCount],\r\n              count: 1\r\n            })\r\n          } else {\r\n            let parent = country[parentName].find(e => e[childName] === entry[elementToCount]);\r\n            let index = country[parentName].findIndex(e => e[childName] === entry[elementToCount]);\r\n            parent.count = parent.count + 1\r\n            country[parentName][index] = parent\r\n          }\r\n          country.total = country.total + 1\r\n\r\n          temp[countryIndex] = country;\r\n        }\r\n      })\r\n\r\n      let congoCountryIndex = temp.findIndex(e => e.name === 'Democratic Republic of Congo');\r\n      if (congoCountryIndex !== -1)\r\n        temp[congoCountryIndex].displayName = 'Dem. Rep. Congo'\r\n\r\n      let centralAfricanRepublicCountryIndex = temp.findIndex(e => e.name === 'Central African Republic');\r\n      if (centralAfricanRepublicCountryIndex !== -1)\r\n        temp[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\r\n\r\n      let ivoryCoastCountryIndex = temp.findIndex(e => e.name === \"Ivory Coast\");\r\n      if (ivoryCoastCountryIndex !== -1)\r\n        temp[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\r\n\r\n      let timorLesteCountryIndex = temp.findIndex(e => e.name === \"East Timor\");\r\n      if (timorLesteCountryIndex !== -1)\r\n        temp[timorLesteCountryIndex].displayName = \"Timor-Leste\"\r\n\r\n      temp.forEach((country) => {\r\n        country[parentName].sort((a, b) => b.count - a.count);\r\n      })\r\n      temp.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n      return temp\r\n    }\r\n\r\n    data.forEach((entry) => {\r\n      if (!finalCountries.some(e => e === entry['COUNTRY_ONLY']) && entry['COUNTRY_ONLY'] !== \"-\" && entry['COUNTRY_ONLY'] !== \"\")\r\n        finalCountries.push(entry['COUNTRY_ONLY'])\r\n\r\n      if (!samplesData.some(e => e.name === entry['COUNTRY_ONLY'])) {\r\n        samplesData.push({\r\n          name: entry['COUNTRY_ONLY'],\r\n          displayName: entry['COUNTRY_ONLY'],\r\n          count: 1\r\n        })\r\n      } else {\r\n        let country = samplesData.find(e => e.name === entry['COUNTRY_ONLY']);\r\n        let countryIndex = samplesData.findIndex(e => e.name === entry['COUNTRY_ONLY']);\r\n        country.count = country.count + 1\r\n        samplesData[countryIndex] = country;\r\n      }\r\n    })\r\n\r\n    if (!arraysEqual(samplesData, worldMapSamplesData)) {\r\n      let congoCountryIndex = samplesData.findIndex(e => e.name === 'Democratic Republic of Congo');\r\n      if (congoCountryIndex !== -1)\r\n        samplesData[congoCountryIndex].displayName = 'Dem. Rep. Congo'\r\n\r\n      let centralAfricanRepublicCountryIndex = samplesData.findIndex(e => e.name === 'Central African Republic');\r\n      if (centralAfricanRepublicCountryIndex !== -1)\r\n        samplesData[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\r\n\r\n      let ivoryCoastCountryIndex = samplesData.findIndex(e => e.name === \"Ivory Coast\");\r\n      if (ivoryCoastCountryIndex !== -1)\r\n        samplesData[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\r\n\r\n      let timorLesteCountryIndex = samplesData.findIndex(e => e.name === \"East Timor\");\r\n      if (timorLesteCountryIndex !== -1)\r\n        samplesData[timorLesteCountryIndex].displayName = \"Timor-Leste\"\r\n\r\n      setWorldMapSamplesData(samplesData)\r\n      setSamplesQty(\r\n        Math.ceil((\r\n          samplesData.length > 0 ? samplesData.sort((a, b) => b.count - a.count)[0].count : 0\r\n        ) / 50) * 50\r\n      )\r\n    }\r\n\r\n    finalCountries.sort((a, b) => a.localeCompare(b));\r\n    finalCountries.unshift(\"All\");\r\n    setCountriesForFilter(finalCountries)\r\n\r\n    if (!finalCountries.includes(actualCountry))\r\n      setActualCountry(\"All\")\r\n\r\n    genotypesData = countData(data, \"GENOTYPE\", \"genotypes\", \"lineage\")\r\n    if (!arraysEqual(genotypesData, worldMapGenotypesData))\r\n      setWorldMapGenotypesData(genotypesData)\r\n\r\n    h58Data = countData(data, \"GENOTYPE_SIMPLE\", \"genotypes\", \"type\")\r\n    h58Data.forEach(country => {\r\n      country.genotypes.forEach((g, index) => {\r\n        let percentage = ((g.count / country.total) * 100)\r\n        if (Math.round(percentage) !== percentage) {\r\n          percentage = percentage.toFixed(2)\r\n        }\r\n        g.percentage = percentage\r\n      })\r\n    })\r\n    if (!arraysEqual(h58Data, worldMapH58Data))\r\n      setWorldMapH58Data(h58Data)\r\n\r\n    mdrData = countData(data, \"MDR\", \"MDRs\", \"type\")\r\n    mdrData.forEach(country => {\r\n      country.MDRs.forEach((mdr, index) => {\r\n        if (mdr.type === \"MDR\") {\r\n          let percentage = ((mdr.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2)\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = mdr.count;\r\n        }\r\n      })\r\n      if (country.percentage === undefined) {\r\n        country.percentage = parseFloat(0)\r\n      }\r\n      if (country.count === undefined) {\r\n        country.count = 0\r\n      }\r\n    })\r\n    if (!arraysEqual(mdrData, worldMapMDRData))\r\n      setWorldMapMDRData(mdrData)\r\n\r\n    xdrData = countData(data, \"XDR\", \"XDRs\", \"type\")\r\n    xdrData.forEach(country => {\r\n      country.XDRs.forEach((xdr, index) => {\r\n        if (xdr.type === \"XDR\") {\r\n          let percentage = ((xdr.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2)\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = xdr.count;\r\n        }\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n    })\r\n    if (!arraysEqual(xdrData, worldMapXDRData))\r\n      setWorldMapXDRData(xdrData)\r\n\r\n    dcsData = countData(data, \"DCS\", \"DCSs\", \"type\")\r\n    dcsData.forEach(country => {\r\n      country.DCSs.forEach((dcs, index) => {\r\n        if (dcs.type === \"DCS\") {\r\n          let percentage = ((dcs.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2)\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = dcs.count;\r\n        }\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n    })\r\n    if (!arraysEqual(dcsData, worldMapDCSData))\r\n      setWorldMapDCSData(dcsData)\r\n\r\n    azithData = countData(data, \"Azith\", \"AZs\", \"type\")\r\n    azithData.forEach(country => {\r\n      country.AZs.forEach((az, index) => {\r\n        if (az.type === \"AzithR\") {\r\n          let percentage = ((az.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2)\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = az.count;\r\n        }\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n    })\r\n    if (!arraysEqual(azithData, worldMapAZITHData))\r\n      setWorldMapAZITHData(azithData)\r\n\r\n    cipIData = countData(data, \"CipI\", \"CipIs\", \"type\")\r\n    cipIData.forEach(country => {\r\n      country.CipIs.forEach((cipIs, index) => {\r\n        if (cipIs.type === \"CipI\") {\r\n          let percentage = ((cipIs.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2)\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = cipIs.count;\r\n        }\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n    })\r\n    if (!arraysEqual(cipIData, worldMapCIPIData))\r\n      setWorldMapCIPIData(cipIData)\r\n\r\n    cipRData = countData(data, \"CipR\", \"CipRs\", \"type\")\r\n    cipRData.forEach(country => {\r\n      country.CipRs.forEach((cipRs, index) => {\r\n        if (cipRs.type === \"CipR\") {\r\n          let percentage = ((cipRs.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2)\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = cipRs.count;\r\n        }\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n    })\r\n    if (!arraysEqual(cipRData, worldMapCIPRData))\r\n      setWorldMapCIPRData(cipRData)\r\n\r\n    let dataForCountingDrugs = []\r\n    data.forEach(entry => {\r\n      entry.DRUGS.forEach(drug => {\r\n        dataForCountingDrugs.push({\r\n          ...entry,\r\n          DRUG: drug,\r\n        })\r\n      })\r\n    })\r\n    drugsData = countData(dataForCountingDrugs, \"DRUG\", \"drugs\", \"name\");\r\n    if (!arraysEqual(drugsData, worldMapDrugsData))\r\n      setWorldMapDrugsData(drugsData)\r\n\r\n    amrData = countData(data, \"AMR\", \"amrProfiles\", \"name\")\r\n    if (!arraysEqual(amrData, worldMapAmrProfilesData))\r\n      setWorldMapAmrProfilesData(amrData)\r\n\r\n    incTypesData = countData(data, \"IncTypes\", \"incTypes\", \"type\")\r\n    incTypesData.forEach(country => {\r\n      country.incTypes = country.incTypes.filter(g => g.type !== \"\")\r\n    })\r\n    if (!arraysEqual(incTypesData, worldMapPlasmidIncompatibilityTypeData))\r\n      setWorldMapPlasmidIncompatibilityTypeData(incTypesData)\r\n  }\r\n\r\n  const parseDataForAmrClassChart = (data) => {\r\n    let finalChartData = []\r\n    let maxSum = 0\r\n    let totalSum = {}\r\n    data.forEach((entry) => {\r\n      if (!finalChartData.some(e => e.genotype === entry.GENOTYPE)) {\r\n        finalChartData.push({\r\n          genotype: entry.GENOTYPE,\r\n          [entry.GENE]: 1\r\n        })\r\n      } else {\r\n        let genotype = finalChartData.find(e => e.genotype === entry.GENOTYPE);\r\n        let genotypeIndex = finalChartData.findIndex(e => e.genotype === entry.GENOTYPE);\r\n\r\n        if (genotype[entry.GENE] === undefined) {\r\n          genotype[entry.GENE] = 1\r\n        } else {\r\n          genotype[entry.GENE] = genotype[entry.GENE] + 1\r\n        }\r\n        finalChartData[genotypeIndex] = genotype;\r\n      }\r\n      if (entry.GENOTYPE !== \"\") {\r\n        if (!(entry.GENE in totalSum)) {\r\n          totalSum[entry.GENE] = 1\r\n        } else {\r\n          totalSum[entry.GENE] = totalSum[entry.GENE] + 1\r\n        }\r\n      }\r\n    })\r\n    delete totalSum[\"\"]\r\n\r\n    finalChartData.sort((a, b) => a.genotype.localeCompare(b.genotype));\r\n    finalChartData.forEach((data) => {\r\n      let sum = 0;\r\n      Object.entries(data).forEach((entry) => {\r\n        if (entry[0] !== \"genotype\") {\r\n          let errorMargin = Math.ceil(entry[1] * 0.2) // 20%\r\n          let lowerValue = errorMargin > entry[1] ? entry[1] : errorMargin;\r\n\r\n          if (entry[1] === 1)\r\n            lowerValue = 1\r\n\r\n          if (entry[1] === 0)\r\n            lowerValue = 0\r\n\r\n          data[`error-${entry[0]}`] = [lowerValue, errorMargin]\r\n\r\n          sum += entry[1];\r\n          if (entry[1] > maxSum) {\r\n            maxSum = entry[1]\r\n          }\r\n        }\r\n      })\r\n      data.total = sum;\r\n    })\r\n    finalChartData = finalChartData.filter(g => g.genotype !== undefined && g.genotype !== \"0\")\r\n    let top10 = []\r\n    finalChartData.forEach(element => {\r\n      if (top10.length < 10) {\r\n        top10.push(element)\r\n      } else {\r\n        top10.sort(function (a, b) {\r\n          if (a.total === b.total && a.genotype > b.genotype)\r\n            return -1\r\n          return a.total > b.total ? -1 : 1\r\n        })\r\n        if (element.total === top10[9].total) {\r\n          if (element.genotype > top10[9].genotype) {\r\n            top10[9] = element\r\n          }\r\n        }\r\n        if (element.total > top10[9].total) {\r\n          top10[9] = element\r\n        }\r\n      }\r\n    })\r\n    top10.sort(function (a, b) {\r\n      if (a.total === b.total && a.genotype > b.genotype)\r\n        return -1\r\n      return a.total > b.total ? -1 : 1\r\n    })\r\n    top10.push({ maxSum: Math.ceil(top10[0].total / 50) * 50, totalSum: totalSum })\r\n    if (amrClassFilter !== \"Co-trimoxazole\") {\r\n      if (!arraysEqual(amrClassChartData, top10))\r\n        setAmrClassChartData(top10)\r\n    } else {\r\n      if (!arraysEqual(amrClassChartData, top10))\r\n        setAmrClassChartData(top10)\r\n    }\r\n  }\r\n\r\n  const parseDataForDrugTrendsChart = (data) => {\r\n    let finalDrugTrendsChartData = []\r\n    let finalDrugsAndGenotypesChartData = []\r\n    let totalSum = {}\r\n    let allDrugs = data[data.length - 1]\r\n    data = data.slice(0, data.length - 1)\r\n\r\n    data.forEach((entry) => {\r\n      if (!finalDrugTrendsChartData.some(e => e.name === entry.YEAR)) {\r\n        finalDrugTrendsChartData.push({\r\n          name: entry.YEAR,\r\n          [entry.DRUG]: 1\r\n        })\r\n      } else {\r\n        let year = finalDrugTrendsChartData.find(e => e.name === entry.YEAR);\r\n        let yearIndex = finalDrugTrendsChartData.findIndex(e => e.name === entry.YEAR);\r\n\r\n        if (year[entry.DRUG] === undefined) {\r\n          year[entry.DRUG] = 1\r\n        } else {\r\n          year[entry.DRUG] = year[entry.DRUG] + 1\r\n        }\r\n        finalDrugTrendsChartData[yearIndex] = year;\r\n      }\r\n\r\n      if (!finalDrugsAndGenotypesChartData.some(e => e.name === entry.GENOTYPE)) {\r\n        finalDrugsAndGenotypesChartData.push({\r\n          name: entry.GENOTYPE,\r\n          [entry.DRUG]: 1\r\n        })\r\n      } else {\r\n        let genotype = finalDrugsAndGenotypesChartData.find(e => e.name === entry.GENOTYPE);\r\n        let genotypeIndex = finalDrugsAndGenotypesChartData.findIndex(e => e.name === entry.GENOTYPE);\r\n\r\n        if (genotype[entry.DRUG] === undefined) {\r\n          genotype[entry.DRUG] = 1\r\n        } else {\r\n          genotype[entry.DRUG] = genotype[entry.DRUG] + 1\r\n        }\r\n        finalDrugsAndGenotypesChartData[genotypeIndex] = genotype;\r\n      }\r\n\r\n      if (!(entry.DRUG in totalSum)) {\r\n        totalSum[entry.DRUG] = 1\r\n      } else {\r\n        totalSum[entry.DRUG] = totalSum[entry.DRUG] + 1\r\n      }\r\n    })\r\n    finalDrugTrendsChartData.forEach((data) => {\r\n      let sum = 0;\r\n      Object.entries(data).forEach((entry) => {\r\n        if (entry[0] !== \"name\")\r\n          sum += entry[1];\r\n      })\r\n      data.total = sum;\r\n    })\r\n\r\n    finalDrugsAndGenotypesChartData.forEach((data) => {\r\n      let sum = 0;\r\n      Object.entries(data).forEach((entry) => {\r\n        if (entry[0] !== \"name\")\r\n          sum += entry[1];\r\n      })\r\n      data.total = sum;\r\n    })\r\n\r\n    finalDrugTrendsChartData.sort((a, b) => a.name.localeCompare(b.name))\r\n    finalDrugTrendsChartData.push({ totalSum: allDrugs })\r\n\r\n    finalDrugsAndGenotypesChartData.sort((a, b) => b.total - a.total)\r\n    finalDrugsAndGenotypesChartData = finalDrugsAndGenotypesChartData.slice(0, finalDrugsAndGenotypesChartData.length >= 5 ? 5 : finalDrugsAndGenotypesChartData.length)\r\n    finalDrugsAndGenotypesChartData.push({ totalSum: totalSum })\r\n\r\n    if (!arraysEqual(finalDrugTrendsChartData, drugTrendsChartData))\r\n      setDrugTrendsChartData(finalDrugTrendsChartData)\r\n\r\n    if (!arraysEqual(finalDrugsAndGenotypesChartData, drugsAndGenotypesChartData)) {\r\n      setDrugsAndGenotypesChartData(finalDrugsAndGenotypesChartData)\r\n    }\r\n  }\r\n\r\n  function arraysEqual(a1, a2) {\r\n    return JSON.stringify(a1) === JSON.stringify(a2);\r\n  }\r\n\r\n  const mapSamplesColorScale = scaleLinear()\r\n    .domain([1, samplesQty / 5, 2 * (samplesQty / 5), 3 * (samplesQty / 5), 4 * (samplesQty / 5), samplesQty])\r\n    .range([\"#4575b4\", \"#91bfdb\", \"#e0f3f8\", \"#fee090\", \"#fc8d59\", \"#d73027\"]);\r\n\r\n  const mapRedColorScale = scaleLinear()\r\n    .domain([0, 50, 100])\r\n    .range([\"#ffebee\", \"#f44336\", \"#b71c1c\"]);\r\n\r\n  const tooltip = (positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\r\n    return (\r\n      <Tooltip\r\n        position={{ y: positionY, x: dimensions.width < mobile ? -20: 0 }}\r\n        wrapperStyle={wrapperS}\r\n        content={({ active, payload, label }) => {\r\n          if (payload !== null) {\r\n            if (sort) {\r\n              payload.sort((a, b) => b.value - a.value)\r\n              payload = payload.reverse()\r\n            }\r\n            if (active) {\r\n              return (\r\n                <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\r\n                  <div style={{ height: 14 }} />\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\", width: width1, flexDirection: \"\" }}>\r\n                    {payload.reverse().map((item, index) => {\r\n                      let percentage = ((item.value / item.payload.total) * 100)\r\n                      if (chart === 0) {\r\n                        percentage = ((item.value / drugsAndGenotypesChartData[drugsAndGenotypesChartData.length - 1].totalSum[item.name]) * 100)\r\n                      } else if (chart === 1) {\r\n                        percentage = ((item.value / drugTrendsChartData[drugTrendsChartData.length - 1].totalSum[item.payload.name]) * 100)\r\n                      }\r\n                      if (Math.round(percentage) !== percentage)\r\n                        percentage = percentage.toFixed(2)\r\n                      return (\r\n                        <div key={index + item} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: width2, marginBottom: 8 }}>\r\n                          <div style={{ backgroundColor: stroke ? item.stroke : item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\r\n                          <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8, width: \"95%\" }}>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14, wordWrap: 'break-word', width: dimensions.width < mobile ? '80%' : '100%' }}>{item.name}</span>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {item.value}</span>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n          return null;\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  const plotPopulationStructureChart = () => {\r\n\r\n    if (populationStructureFilter === 1) { /* Genotype */\r\n      let maxH = 0\r\n      for (let index = 0; index < populationStructureChartData.length; index++) {\r\n        if (populationStructureChartData[index].total > maxH) {\r\n          maxH = populationStructureChartData[index].total\r\n        }\r\n      }\r\n      maxH = Math.ceil(maxH / 50) * 50\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <BarChart\r\n            height={300}\r\n            data={populationStructureChartData}\r\n            margin={{\r\n              top: 20, bottom: 5, right: 0\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\r\n            <YAxis domain={[0, maxH]} />\r\n            <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n\r\n            {tooltip(300, dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false)}\r\n            {genotypes.map((item) => <Bar dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    } else { /* H58 and Non-H58 */\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={populationStructureChartData}\r\n            margin={{\r\n              top: 20, bottom: 5, right: 0\r\n            }}\r\n            layout=\"vertical\"\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis type={\"number\"} domain={[0, chartMaxWidth]} />\r\n            <YAxis dataKey=\"name\" type={\"category\"} domain={[0, 50]}/>\r\n            {tooltip(300, dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false)}\r\n            {genotypes.map((item) => <Bar dataKey={item} stackId=\"a\" barSize={50} fill={getColorForGenotype(item)} />)}\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n  }\r\n\r\n  const armClassFilterComponent = (info) => {\r\n    let maxSum = 0\r\n    if (amrClassChartData[amrClassChartData.length - 1] !== undefined) {\r\n      maxSum = amrClassChartData[amrClassChartData.length - 1].maxSum\r\n    }\r\n\r\n    const data = amrClassChartData.slice(0, amrClassChartData.length - 1)\r\n    return (\r\n      <ResponsiveContainer width=\"90%\">\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 20, left: -20, bottom: 5, right: 0\r\n          }}\r\n          layout=\"horizontal\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < middle ? 1 : 0} tick={{ fontSize: 14 }} />\r\n          <YAxis domain={[0, maxSum]} type={\"number\"} />\r\n          <Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n\r\n          {amrClassChartTooltip()}\r\n          {info.bars.map((item) => {\r\n            return (\r\n              <Bar dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n            )\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    )\r\n  }\r\n\r\n  const plotAmrClassChart = () => {\r\n    switch (amrClassFilter) {\r\n      case 'Azithromycin':\r\n        return (armClassFilterComponent({\r\n          left: -5, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n            ['acrB_R717Q', \"#addd8e\", \"error-acrB_R717Q\"],\r\n            ['ereA', \"#9e9ac8\", \"error-ereA\"]]\r\n        }))\r\n      case 'Fluoroquinolones (DCS)':\r\n        return (armClassFilterComponent({\r\n          left: 10, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n            ['3_QRDR', \"rgb(198,127,251)\", \"error-3_QRDR\"],\r\n            ['2_QRDR', \"rgb(70,191,195)\", \"error-2_QRDR\"],\r\n            ['1_QRDR + qnrS', \"rgb(125,172,32)\", \"error-1_QRDR + qnrS\"],\r\n            ['1_QRDR', \"rgb(244,119,112)\", \"error-1_QRDR\"]]\r\n        }))\r\n      case 'Chloramphenicol':\r\n        return (armClassFilterComponent({\r\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n            ['cmlA', \"#addd8e\", \"error-cmlA\"],\r\n            ['catA1', \"#9e9ac8\", \"error-catA1\"]]\r\n        }))\r\n      case 'Ampicillin':\r\n        return (armClassFilterComponent({\r\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n            ['blaTEM-1D', \"#addd8e\", \"error-blaTEM-1D\"]]\r\n        }))\r\n      case 'Sulphonamides':\r\n        return (armClassFilterComponent({\r\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n            ['sul2', \"#ffeda0\", \"error-sul2\"],\r\n            ['sul1', \"#fd8d3c\", \"error-sul1\"]]\r\n        }))\r\n      case 'Trimethoprim':\r\n        return (armClassFilterComponent({\r\n          left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n            ['dfrA7', \"#addd8e\", \"error-dfrA7\"],\r\n            ['dfrA5', \"#9e9ac8\", \"error-dfrA5\"],\r\n            ['dfrA18', \"#6baed6\", \"error-dfrA18\"],\r\n            ['dfrA17', \"#7a0177\", \"error-dfrA17\"],\r\n            ['dfrA15', \"#54278f\", \"error-dfrA15\"],\r\n            ['dfrA14', \"#a50f15\", \"error-dfrA14\"],\r\n            ['dfrA1', \"red\", \"error-dfrA1\"]]\r\n        }))\r\n      case 'Co-trimoxazole':\r\n        let cotrim = [\"dfrA1\", \"dfrA5\", \"dfrA7\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\"];\r\n        let colors1 = [\"#ffeda0\", \"#fd8d3c\", \"#addd8e\", \"#9e9ac8\", \"#6baed6\", \"#7a0177\", \"#54278f\"]\r\n        let colors2 = [\"#a50f15\", \"#6a5acd\", \"#f1b6da\", \"#fb8072\", \"#4682b4\", \"#2e8b57\", \"#98fb98\"]\r\n        let bars = []\r\n\r\n        for (const index in cotrim) {\r\n          bars.push([cotrim[index] + \"-sul1\", colors1[index], \"error-\" + cotrim[index] + \"-sul1\"])\r\n          bars.push([cotrim[index] + \"-sul2\", colors2[index], \"error-\" + cotrim[index] + \"-sul2\"])\r\n        }\r\n\r\n        return (armClassFilterComponent({\r\n          left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: bars\r\n        }))\r\n      case 'Tetracyclines':\r\n        return (armClassFilterComponent({\r\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n            ['tetA(D)', \"#addd8e\", \"error-tetA(D)\"],\r\n            ['tetA(C)', \"#9e9ac8\", \"error-tetA(C)\"],\r\n            ['tetA(B)', \"#6baed6\", \"error-tetA(B)\"],\r\n            ['tetA(A)', \"#a50f15\", \"error-tetA(A)\"]]\r\n        }))\r\n      case 'AMR Profiles':\r\n        return (armClassFilterComponent({\r\n          left: dimensions.width > desktop ? 12 : -30, fontsize: dimensions.width > desktop ? 14 : 5, strokeWidth: 0.5, width: 3, bars: [\r\n            ['No AMR detected', getColorForAMR('No AMR detected'), \"error-No AMR detected\"],\r\n            ['MDR_DCS', getColorForAMR('MDR_DCS'), \"error-MDR_DCS\"],\r\n            ['MDR', getColorForAMR('MDR'), \"error-MDR\"],\r\n            ['DCS', getColorForAMR('DCS'), \"error-DCS\"],\r\n            ['AzithR_MDR', getColorForAMR('AzithR_MDR'), \"error-AzithR_MDR\"],\r\n            ['AzithR_DCS', getColorForAMR('AzithR_DCS'), \"error-AzithR_DCS\"],\r\n            ['AzithR_DCS_MDR', getColorForAMR('AzithR_DCS_MDR'), \"error-AzithR_DCS_MDR\"],\r\n            ['XDR', getColorForAMR('XDR'), \"error-XDR\"],\r\n            ['AMR', getColorForAMR('AMR'), \"error-AMR\"],\r\n            ['AMR_DCS', getColorForAMR('AMR_DCS'), \"error-AMR_DCS\"]]\r\n        }))\r\n      case 'ESBL':\r\n        return (armClassFilterComponent({\r\n          left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n            ['blaSHV-12', \"#addd8e\", \"error-blaSHV-12\"],\r\n            ['blaOXA-7', \"#9e9ac8\", \"error-blaOXA-7\"],\r\n            ['blaCTX-M-15_23', \"#6baed6\", \"error-blaCTX-M-15_23\"]]\r\n        }))\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  const amrClassChartTooltip = () => {\r\n    return (\r\n      <Tooltip\r\n        position={{ x: 0 }}\r\n        wrapperStyle={{ zIndex: 100, top: 50 }}\r\n        allowEscapeViewBox={{ x: true, y: true }}\r\n        content={({ active, payload, label }) => {\r\n          if (payload !== null) {\r\n            if (active) {\r\n              return (\r\n                <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\r\n                  <div style={{ height: 14 }} />\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", width: 250 }}>\r\n                    {payload.reverse().map((item, index) => {\r\n                      let percentage = ((item.value / amrClassChartData[amrClassChartData.length - 1].totalSum[item.name]) * 100)\r\n                      if (Math.round(percentage) !== percentage)\r\n                        percentage = percentage.toFixed(2)\r\n                      return (\r\n                        <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: \"33.33%\", marginBottom: 8 }}>\r\n                          <div style={{ backgroundColor: item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\r\n                          <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8, wordWrap: \"break-word\", overflowX: \"hidden\" }}>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14 }}>{item.name}</span>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {item.value}</span>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n\r\n          return null;\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  const plotDrugTrendsChart = () => {\r\n    return (\r\n      <ResponsiveContainer width=\"90%\">\r\n        <LineChart\r\n          height={300}\r\n          data={drugTrendsChartData.slice(0, drugTrendsChartData.length - 1)}\r\n          margin={{\r\n            top: 20, bottom: 5, right: 0\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval={\"preserveStartEnd\"} />\r\n          <YAxis />\r\n          <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n\r\n          <Legend\r\n            content={(props) => {\r\n              const { payload } = props;\r\n              return (\r\n                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: 'center'}}>\r\n                  <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", width: dimensions.width < mobile ? \"93%\" : \"95%\", justifyContent: \"space-between\", marginTop: 10}}>\r\n                    {payload.map((entry, index) => {\r\n                      const { dataKey, color } = entry\r\n                      return (\r\n                        <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", width: 120, marginBottom: 4, marginLeft: 3, marginRight: 3 }}>\r\n                          <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3 ,backgroundColor: color, flexShrink: 0 }} />\r\n                          <span style={{ fontSize: 12, paddingLeft: 4}}>{dataKey}</span>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          {tooltip(150, dimensions.width < mobile ? 250 : 325, \"50%\", true, { zIndex: 100, top: 175, right: 0}, true, 1)}\r\n          {amrClassesForFilter.slice(1).map((item) => (<Line dataKey={item} stroke={getColorForDrug(item)} connectNulls type=\"monotone\" />))}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    )\r\n  }\r\n\r\n  const plotDrugsAndGenotypesChart = () => {\r\n    return (\r\n      <ResponsiveContainer width=\"90%\">\r\n        <BarChart\r\n          height={300}\r\n          data={drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1)}\r\n          margin={{\r\n            top: 20, left: -5, bottom: 5, right: 0\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n          <YAxis />\r\n          <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n\r\n          <Legend\r\n            content={(props) => {\r\n              const { payload } = props;\r\n              return (\r\n                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: 'center'}}>\r\n                  <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", width: dimensions.width < mobile ? \"93%\" : \"95%\", justifyContent: \"space-between\", marginTop: 10}}>\r\n                    {payload.map((entry, index) => {\r\n                      const { dataKey, color } = entry\r\n                      return (\r\n                        <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", width: 120, marginBottom: 4, marginLeft: 3, marginRight: 3 }}>\r\n                          <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3 ,backgroundColor: color, flexShrink: 0 }} />\r\n                          <span style={{ fontSize: 12, paddingLeft: 4}}>{dataKey}</span>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          {tooltip(150, dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 0)}\r\n          {amrClassesForFilter.slice(1).map((item) => (<Bar dataKey={item} fill={getColorForDrug(item)} />))}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    )\r\n  }\r\n\r\n  const getPopulationStructureChartLabel = () => {\r\n    if (populationStructureFilter === 1)\r\n      return <span className=\"y-axis-label-vertical\" style={{ marginRight: 8 }}>Number of genomes</span>\r\n    else\r\n      return <span className=\"y-axis-label-horizontal\">Number of genomes</span>\r\n  }\r\n\r\n  function imgOnLoadPromise(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      obj.onload = () => resolve(obj);\r\n      obj.onerror = reject;\r\n    });\r\n  }\r\n\r\n  const stopLoading = (index) => {\r\n    switch (index) {\r\n      case 0: setCaptureControlMapInProgress(false)\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(false)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(false)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(false)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(false)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const capturePicture = (id, index) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(true)\r\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(true)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(true)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(true)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(true)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (index !== 0) {\r\n      const names = [\"Resistance Frequencies Within Genotypes (Chart) - TiphyNET.png\", \"Drug Resistance Trends (Chart) - TiphyNET.png\", \"Genotype Distribution (Chart) - TiphyNET.png\", \"Resistance determinants within all genotypes (Chart) - TiphyNET.png\"]\r\n      domtoimage.toPng(document.getElementById(id), { quality: 0.95, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          var link = document.createElement('a');\r\n          link.download = names[index - 1];\r\n          link.href = dataUrl;\r\n          stopLoading(index)\r\n          link.click();\r\n        });\r\n    } else {\r\n      svgAsPngUri(document.getElementById(id), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          canvas.width = 3600;\r\n          canvas.height = 1800;\r\n\r\n          ctx.fillStyle = \"white\";\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n          ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n\r\n          let typhinetLogo = document.createElement(\"img\");\r\n          let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n          typhinetLogo.src = typhinetLogoImg;\r\n          await typhinetLogoPromise;\r\n\r\n          const typhinetLogoWidth = typhinetLogo.width * 0.5\r\n          const typhinetLogoHeight = typhinetLogo.height * 0.5\r\n\r\n          ctx.drawImage(typhinetLogo, 26, canvas.height - typhinetLogoHeight - 16, typhinetLogoWidth, typhinetLogoHeight);\r\n\r\n          const base64 = canvas.toDataURL();\r\n          stopLoading(index)\r\n          download(base64, 'Genome Samples (World Map) - TyphiNET.png');\r\n        });\r\n    }\r\n  }\r\n\r\n  const dowloadBaseSpreadsheet = () => {\r\n    axios.get(`${API_ENDPOINT}file/download`)\r\n      .then((res) => {\r\n        download(res.data, 'TyphiNET Database.csv');\r\n      })\r\n  }\r\n\r\n  const generateMapLegendOptions = () => {\r\n    let percentageSteps = ['1', '25', '50', '75', '100']\r\n\r\n    switch (mapView) {\r\n      case 'No. Samples':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0</span>\r\n            </div>\r\n            {[...Array(6).keys()].map((n) => {\r\n              const samplesLegend = n !== 0 ? n * (samplesQty / 5) : 1\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapSamplesColorScale(samplesLegend) }} />\r\n                  <span>{samplesLegend}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'AMR Profiles':\r\n        let amrProfiles = ['MDR_DCS', 'MDR', 'DCS', 'AzithR_MDR', 'AzithR_DCS', 'AzithR_DCS_MDR', 'XDR', 'AMR', 'AMR_DCS'].sort((a, b) => a.localeCompare(b));\r\n        amrProfiles.push('No AMR detected')\r\n        return (\r\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n            {amrProfiles.map((a, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForAMR(a) }} />\r\n                  <span>{a}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      case 'Dominant Genotype':\r\n        return (\r\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n            {genotypes.map((g, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForGenotype(g) }} />\r\n                  <span>{g}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      case 'H58 / Non-H58':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((g, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(g) }} />\r\n                  <span>{g}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'MDR':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'XDR':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'DCS':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'Azith':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'CipI':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'CipR':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#F5F4F6\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                  <span>{n}%</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'Resistance to Drug':\r\n        let drugs = [\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (DCS)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"]\r\n        return (\r\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n            {drugs.map((d, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForDrug(d) }} />\r\n                  <span>{d}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      case 'Plasmid Incompatibility Type':\r\n        let incTypes = [\"IncX1\", \"IncFIA(HI1)\", \"IncFIB(pHCM2)\", \"IncA/C2\", \"IncP1\", \"IncFIA(HI1)/IncHI1A/IncHI1B(R27)\", \"Col(BS512)\", \"IncHI1A/IncHI1B(R27)\", \"IncN\", \"IncHI1B(R27)\", \"p0111\", \"IncHI1A\", \"IncI1\", \"IncY\", \"IncFIB(AP001918)\", \"IncFIB(K)\", \"IncHI2/IncHI2A\", \"Col440I\", \"Col440I\", \"Col156\", \"Col440II/Col440II\", \"IncFIA(HI1)/IncHI1A\", \"ColRNAI\", \"ColpVC\", \"IncX3\"].sort((a, b) => a.localeCompare(b));\r\n        return (\r\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n            {incTypes.map((d, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForIncType(d) }} />\r\n                  <span>{d}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const renderMapLegend = () => {\r\n    return (\r\n      <div className=\"map-legend\">\r\n        <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 12, marginTop: 2 }}>\r\n          <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\" }}>Select map view</InputLabel>\r\n          <Select\r\n            value={mapView}\r\n            onChange={evt => setMapView(evt.target.value)}\r\n            fullWidth\r\n            style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }}\r\n          >\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Dominant Genotype'}>\r\n              Dominant Genotype\r\n          </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'No. Samples'}>\r\n              No. Samples\r\n          </MenuItem>\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'AMR Profiles'}>\r\n              AMR Profiles\r\n          </MenuItem> */}\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'H58 / Non-H58'}>\r\n              H58\r\n          </MenuItem>\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Plasmid Incompatibility Type'}>\r\n              Plasmid Incompatibility Type\r\n          </MenuItem> */}\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'MDR'}>\r\n              MDR\r\n          </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'XDR'}>\r\n              XDR\r\n          </MenuItem>\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'DCS'}>\r\n              DCS\r\n          </MenuItem> */}\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Azith'}>\r\n              AzithR\r\n          </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'CipI'}>\r\n              CipI\r\n          </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'CipR'}>\r\n              CipR\r\n          </MenuItem>\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Resistance to Drug'}>\r\n              Resistance to Drug\r\n          </MenuItem> */}\r\n          </Select>\r\n        </FormControl>\r\n        {generateMapLegendOptions()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"menu-bar-mobile\">\r\n        <img className=\"logoImageMenu-mobile\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n      </div>\r\n      <div style={{padding: dimensions.width > 770 ? '16px' : '16px 0px'}}>\r\n        <div className=\"info-wrapper\">\r\n          {dimensions.width > desktop && (\r\n            <>\r\n              <div style={{ display: \"flex\", flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <img style={{ height: 90, marginBottom: -10 }} src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n              </div>\r\n              <div style={{ width: 16 }} />\r\n            </>\r\n          )}\r\n          <div className=\"card\">\r\n            <span>Total Genomes</span>\r\n            {totalGenomes.length === actualGenomes.length ? (\r\n              <span className=\"value\">{totalGenomes.length}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenomes.length}\r\n                <span className=\"value-total\">/{totalGenomes.length}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ width: 16 }} />\r\n          <div className=\"card\">\r\n            <span>\r\n              Total Genotypes \r\n              <FontAwesomeIcon icon={faInfoCircle} className=\"icon-info\" title=\"Total genotypes present in TyphiNET database / Total genotypes worldwide published\"/>\r\n            </span>\r\n            {totalGenotypes.length === actualGenotypes.length ? (\r\n              <span className=\"value\">{totalGenotypes.length}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenotypes.length}\r\n                <span className=\"value-total\">/{totalGenotypes.length}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"map-filters-wrapper\" style={{ flexDirection: 'column' }}>\r\n          <h2 style={{ textAlign: \"center\" }}>Global Overview of Salmonella Typhi</h2>\r\n          <div className=\"map-filters-wrapper-inside\" style={{ flexDirection: dimensions.width > desktop ? 'row' : 'column' }}>\r\n            <div className=\"map-wrapper\">\r\n              <ComposableMap\r\n                id=\"control-map\"\r\n                data-tip=\"\"\r\n                projectionConfig={{\r\n                  rotate: [-10, 0, 0],\r\n                  scale: 210,\r\n                }}\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n              >\r\n                <ZoomableGroup\r\n                  zoom={controlMapPosition.zoom}\r\n                  center={controlMapPosition.coordinates}\r\n                  onMoveEnd={(position) => {\r\n                    setControlMapPosition(position);\r\n                  }}\r\n                >\r\n                  <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Geographies\r\n                    geography={geography}>\r\n                    {({ geographies }) =>\r\n                      geographies.map((geo) => {\r\n                        const sample = worldMapSamplesData.find(s => s.displayName === geo.properties.NAME)\r\n                        const d = worldMapComplementaryData[geo.properties.NAME]; /* .NAME || .NAME_LONG */\r\n                        let country\r\n\r\n                        let fill = \"lightgrey\"\r\n\r\n                        switch (mapView) {\r\n                          case 'No. Samples':\r\n                            if (sample && sample.count !== 0){\r\n                              fill = mapSamplesColorScale(sample.count);\r\n                            }else if (sample && sample.count === 0){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'AMR Profiles':\r\n                            country = worldMapAmrProfilesData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.amrProfiles.length > 0)\r\n                              fill = getColorForAMR(country.amrProfiles[0].name);\r\n                            break;\r\n                          case 'Dominant Genotype':\r\n                            country = worldMapGenotypesData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              const temp = country.genotypes\r\n                              temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                              fill = getColorForGenotype(temp[0].lineage)\r\n                            }\r\n                            break;\r\n                          case 'H58 / Non-H58':\r\n                            country = worldMapH58Data.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.genotypes[0]) {\r\n                              const temp = country.genotypes.find(g => g.type === 'H58')\r\n                              switch (temp === undefined) {\r\n                                case false:\r\n                                  fill = mapRedColorScale(temp.percentage)\r\n                                  break;\r\n                                case 'Non-H58':\r\n                                  fill = '#F5F4F6'\r\n                                  break;\r\n                                default:\r\n                                  fill = '#F5F4F6'\r\n                                  break;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'MDR':\r\n                            country = worldMapMDRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.percentage){\r\n                              fill = mapRedColorScale(country.percentage);\r\n                            }else if (country !== undefined){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'XDR':\r\n                            country = worldMapXDRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.percentage){\r\n                              fill = mapRedColorScale(country.percentage);\r\n                            }else if (country !== undefined){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'DCS':\r\n                            country = worldMapDCSData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.percentage){\r\n                              fill = mapRedColorScale(country.percentage);\r\n                            }else if (country !== undefined){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'Azith':\r\n                            country = worldMapAZITHData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.percentage){\r\n                              fill = mapRedColorScale(country.percentage);\r\n                            }else if (country !== undefined){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'CipI':\r\n                            country = worldMapCIPIData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.percentage){\r\n                              fill = mapRedColorScale(country.percentage);\r\n                            }else if (country !== undefined){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'CipR':\r\n                            country = worldMapCIPRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.percentage){\r\n                              fill = mapRedColorScale(country.percentage);\r\n                            }else if (country !== undefined){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'Resistance to Drug':\r\n                            country = worldMapDrugsData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.drugs.length > 0){\r\n                              fill = getColorForDrug(country.drugs[0].name);\r\n                            }else if (country !== undefined){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'Plasmid Incompatibility Type':\r\n                            country = worldMapPlasmidIncompatibilityTypeData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined && country.incTypes.length > 0){\r\n                              fill = getColorForIncType(country.incTypes[0].type);\r\n                            }else if (country !== undefined){\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          default:\r\n                            break;\r\n                        }\r\n\r\n                        return (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            cursor=\"pointer\"\r\n                            fill={fill}\r\n                            onClick={() => {\r\n                              if (d !== undefined && sample !== undefined)\r\n                                setActualCountry(sample.name)\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              const { NAME } = geo.properties;\r\n                              switch (mapView) {\r\n                                case 'No. Samples':\r\n                                  if (sample !== undefined && d !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      additionalInfo: {\r\n                                        samples: sample.count,\r\n                                        genotypes: d.GENOTYPES.TOTAL,\r\n                                        H58: Math.round(d.H58) !== d.H58 ? d.H58.toFixed(2) : d.H58,\r\n                                        MDR: Math.round(d.MDR) !== d.MDR ? d.MDR.toFixed(2) : d.MDR,\r\n                                        DCS: Math.round(d.DCS) !== d.DCS ? d.DCS.toFixed(2) : d.DCS,\r\n                                        CipI: Math.round(d.CipI) !== d.CipI ? d.CipI.toFixed(2) : d.CipI,\r\n                                        CipR: Math.round(d.CipR) !== d.CipR ? d.CipR.toFixed(2) : d.CipR,\r\n                                        AzithR: Math.round(d.AzithR) !== d.AzithR ? d.AzithR.toFixed(2) : d.AzithR\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'AMR Profiles':\r\n                                  if (country !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      amrProfilesInfo: country.amrProfiles\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Dominant Genotype':\r\n                                  if (country !== undefined) {\r\n                                    let temp = country.genotypes\r\n                                    temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      genotypeInfo: temp\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'H58 / Non-H58':\r\n                                  if (country !== undefined && country.genotypes.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      simpleGenotypeInfo: country.genotypes\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'MDR':\r\n                                  if (country !== undefined && country.MDRs.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      mdrInfo: {\r\n                                        count: country.count,\r\n                                        percentage: country.percentage,\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'XDR':\r\n                                  if (country !== undefined && country.XDRs.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      xdrInfo: {\r\n                                        count: country.count,\r\n                                        percentage: country.percentage,\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'DCS':\r\n                                  if (country !== undefined && country.DCSs.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      dcsInfo: {\r\n                                        count: country.count,\r\n                                        percentage: country.percentage,\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Azith':\r\n                                  if (country !== undefined && country.AZs.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      azInfo: {\r\n                                        count: country.count,\r\n                                        percentage: country.percentage,\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipI':\r\n                                  if (country !== undefined && country.CipIs.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      cipIInfo: {\r\n                                        count: country.count,\r\n                                        percentage: country.percentage,\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipR':\r\n                                  if (country !== undefined && country.CipRs.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      cipRInfo: {\r\n                                        count: country.count,\r\n                                        percentage: country.percentage,\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Resistance to Drug':\r\n                                  if (country !== undefined && country.drugs.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      drugsInfo: country.drugs\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Plasmid Incompatibility Type':\r\n                                  if (country !== undefined && country.incTypes.length > 0) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      incTypesInfo: country.incTypes\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                default:\r\n                                  break;\r\n                              }\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              setTooltipContent(null);\r\n                            }}\r\n                            style={{\r\n                              default: {\r\n                                outline: \"none\",\r\n                              },\r\n                              hover: {\r\n                                fill: \"#CFD8DC\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                              pressed: {\r\n                                fill: \"#FF5722\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              }\r\n                            }}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n                  </Geographies>\r\n                </ZoomableGroup>\r\n\r\n              </ComposableMap>\r\n              {(samplesQty > 0 && dimensions.width > desktop) && (\r\n                <div className=\"map-upper-right-buttons\">\r\n                  {renderMapLegend()}\r\n                </div>\r\n              )}\r\n              {(samplesQty > 0) && (\r\n                <div className=\"map-upper-left-buttons \">\r\n                  <div className=\"map-filters\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span style={{ fontWeight: 600, fontSize: 20, marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        style={{ marginTop: 5}}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"full\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"global\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"local\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div style={{ marginTop: 4 }}>\r\n                      <Typography gutterBottom style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\r\n                        Select time period\r\n                      </Typography>\r\n                      <CustomSlider\r\n                        style={{marginTop: dimensions.width > desktop ? '' : -5, marginBottom: dimensions.width > desktop ? '' : -5}}\r\n                        value={actualTimePeriodRange}\r\n                        min={timePeriodRange[0]}\r\n                        max={timePeriodRange[1]}\r\n                        marks\r\n                        step={10}\r\n                        onChange={(evt, value) => {\r\n                          setActualTimePeriodRange(value)\r\n                        }}\r\n                        valueLabelDisplay=\"auto\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"map-lower-left-buttons\">\r\n                <Zoom in={controlMapPosition.zoom !== 1 || controlMapPosition.coordinates.some(c => c !== 0)}>\r\n                  <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Recenter Map</span>} placement=\"right\">\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() => setControlMapPosition({ coordinates: [0, 0], zoom: 1 })}\r\n                    >\r\n                      <FontAwesomeIcon icon={faCrosshairs} />\r\n                    </div>\r\n                  </TooltipMaterialUI>\r\n                </Zoom>\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom In</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom >= 4) return;\r\n                      setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom Out</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom <= 1) return;\r\n                      if (controlMapPosition.zoom / 2 === 1) {\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                      } else {\r\n                        setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n              </div>\r\n              <div className=\"map-lower-right-buttons\">\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Map as PNG</span>} placement=\"left\">\r\n                  <div\r\n                    className={`button ${captureControlMapInProgress && \"disabled\"}`}\r\n                    onClick={() => {\r\n                      if (!captureControlMapInProgress)\r\n                        capturePicture('control-map', 0)\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCamera} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                {captureControlMapInProgress && (\r\n                  <CustomCircularProgress\r\n                    size={54}\r\n                    thickness={4}\r\n                    style={{ position: \"absolute\", top: 5, left: -7 }} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {(samplesQty > 0 && !dimensions.width > desktop) && (\r\n              <div style={{ marginTop: 16, marginBottom: 8 }}>\r\n                {renderMapLegend()}\r\n              </div>\r\n            )}\r\n            <ReactTooltip>\r\n              {tooltipContent && (\r\n                <div className=\"tooltip-map\">\r\n                  <span className=\"country\">{tooltipContent.name}</span>\r\n                  {tooltipContent.additionalInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Samples: {tooltipContent.additionalInfo.samples}</span>\r\n                      <span>Genotypes: {tooltipContent.additionalInfo.genotypes}</span>\r\n                      <span>H58: {tooltipContent.additionalInfo.H58}%</span>\r\n                      <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\r\n                      <span>DCS: {tooltipContent.additionalInfo.DCS}%</span>\r\n                      <span>AzithR: {tooltipContent.additionalInfo.AzithR}%</span>\r\n                      <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\r\n                      <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.genotypeInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.genotypeInfo.map((genotype, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForGenotype(genotype.lineage) }} />\r\n                              <span>{genotype.lineage}: {genotype.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.simpleGenotypeInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[0].type}: {tooltipContent.simpleGenotypeInfo[0].count} ({tooltipContent.simpleGenotypeInfo[0].percentage}%)</span>\r\n                      ) : tooltipContent.simpleGenotypeInfo.length > 1 && tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[1].type}: {tooltipContent.simpleGenotypeInfo[1].count} ({tooltipContent.simpleGenotypeInfo[1].percentage}%)</span>\r\n                      ) : (\r\n                        <span>H58: 0 (0%)</span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.mdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>MDR: {tooltipContent.mdrInfo.count} ({tooltipContent.mdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.xdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>XDR: {tooltipContent.xdrInfo.count} ({tooltipContent.xdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.dcsInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>DCS: {tooltipContent.dcsInfo.count} ({tooltipContent.dcsInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.azInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>AzithR: {tooltipContent.azInfo.count} ({tooltipContent.azInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipIInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipI: {tooltipContent.cipIInfo.count} ({tooltipContent.cipIInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipRInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipR: {tooltipContent.cipRInfo.count} ({tooltipContent.cipRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.drugsInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.drugsInfo.map((drug, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForDrug(drug.name) }} />\r\n                              <span>{drug.name}: {drug.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.amrProfilesInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.amrProfilesInfo.map((amr, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForAMR(amr.name) }} />\r\n                              <span>{amr.name}: {amr.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.incTypesInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.incTypesInfo.map((incType, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForIncType(incType.type) }} />\r\n                              <span>{incType.type}: {incType.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {(!tooltipContent.incTypesInfo && !tooltipContent.amrProfilesInfo && !tooltipContent.drugsInfo && !tooltipContent.xdrInfo && !tooltipContent.mdrInfo && !tooltipContent.dcsInfo && !tooltipContent.azInfo && !tooltipContent.cipIInfo && !tooltipContent.cipRInfo && !tooltipContent.simpleGenotypeInfo && !tooltipContent.genotypeInfo && !tooltipContent.additionalInfo) && (\r\n                    <div className=\"additional-info\">\r\n                      <span>No reported data</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n        <div className=\"chart-wrapper\" style={{ flexDirection: 'column' }}>\r\n          <h2 style={{ textAlign: \"center\" }}>Now showing: {dataset === \"full\" ? \"All\" : dataset === \"global\" ? \"Local\" : \"Travel\"} data from {actualCountry === \"All\" ? \"all countries\" : actualCountry} from {actualTimePeriodRange.toString().substring(0, 4)} to {actualTimePeriodRange.toString().substring(5)}</h2>\r\n          <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 16, alignItems: \"center\", textAlign: \"center\" }}>\r\n            <label style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\", fontSize: 18 }}>Select country (or click map)</label>\r\n            <Select\r\n              value={actualCountry}\r\n              onChange={evt => setActualCountry(evt.target.value)}\r\n              fullWidth\r\n              style={{ fontWeight: 600, fontFamily: \"Montserrat\", width: 200, textAlign: \"left\" }}\r\n            >\r\n              {countriesForFilter.map((country, index) => {\r\n                return (\r\n                  <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={country}>\r\n                    {country}\r\n                  </MenuItem>\r\n                )\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: dimensions.width > desktop ? \"row\" : \"column\", marginTop: 16, paddingBottom: 20 }}>\r\n              <div style={{ display: \"flex\", flexDirection: \"column\", flex: 0.5, paddingRight: dimensions.width < mobile ? 0 : 10}}>\r\n                <div id=\"RFWG\" style={{ height: 458, width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span style={{ paddingRight: 32, marginRight: -22 }} className=\"chart-title\">Resistance frequencies within genotypes</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartRFWGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWGInProgress)\r\n                              capturePicture('RFWG', 1)\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title\" style={{ marginRight: -22, marginBottom: -8, marginTop: dimensions.width > desktop ? 5 : 10, fontSize: 10, fontWeight: 400 }}>Top Five Genotypes</span>\r\n                  <div style={{ height: 420, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <span className=\"y-axis-label-vertical\" style={{ paddingRight: 8, marginBottom: dimensions.width > desktop ? 84 : 154 }}>Number of occurrences</span>\r\n                    {plotDrugsAndGenotypesChart()}\r\n                  </div>\r\n                </div>\r\n                <div id=\"RFWAG\" style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", paddingTop: 50 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span className=\"chart-title\" style={{ marginRight: -22, paddingRight: 32 }}>Resistance determinants within all genotypes</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartRFWAGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWAGInProgress)\r\n                              capturePicture('RFWAG', 4)\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWAGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title\" style={{ fontSize: 10, fontWeight: 400, paddingBottom: 10, marginTop: dimensions.width > desktop ? 5 : 10 }}>Top Ten Genotypes</span>\r\n                  <div style={{ width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\", marginBottom: -4, marginRight: dimensions.width > desktop ? \"-10%\" : 0 }}>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginTop: 0 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Select Drug Class</InputLabel>\r\n                      <Select\r\n                        value={amrClassFilter}\r\n                        onChange={evt => setAmrClassFilter(evt.target.value)}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      >\r\n                        {amrClassesForFilter.map((amrClass, index) => {\r\n                          return (\r\n                            <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={amrClass}>\r\n                              {amrClass}\r\n                            </MenuItem>\r\n                          )\r\n                        })}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div style={{ height: 350, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <span className=\"y-axis-label-vertical\" style={{ paddingRight: 8 }}>Number of occurrences</span>\r\n                    {plotAmrClassChart()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"column\", flex: 0.5, paddingLeft: dimensions.width < mobile ? 0 : 10, marginTop: dimensions.width < mobile ? 25 : 0}}>\r\n                <div id=\"DRT\" style={{width: \"100%\", display: \"flex\", flexDirection: \"column\", marginTop: dimensions.width < desktop ? 47 : dimensions.width < 930 ? 18 : 8 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span className=\"chart-title\" style={{ paddingRight: 32 }}>Drug resistance trends</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartDRTInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartDRTInProgress)\r\n                              capturePicture('DRT', 2)\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartDRTInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ height: 422, display: \"flex\", flexDirection: \"row\", alignItems: \"center\"}}>\r\n                    <span className=\"y-axis-label-vertical\" style={{ paddingBottom: dimensions.width > desktop ? 84 : 124 }}>Number of occurrences</span>\r\n                    {plotDrugTrendsChart()}\r\n                  </div>\r\n                </div>\r\n                <div id=\"GD\" style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", paddingTop: dimensions.width < mobile ? 30 : dimensions.width < 931 ? 49 : dimensions.width < 1018 ? 60 : 48 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span className=\"chart-title\" style={{ marginRight: -22, paddingRight: 32 }}>Genotype distribution</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartGDInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartGDInProgress)\r\n                              capturePicture('GD', 3)\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartGDInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\", paddingRight: dimensions.width > desktop && populationStructureFilter !== 1 ? \"-10%\" : 0, paddingBottom: populationStructureFilter === 1 ? -8 : 16 }}>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 5, marginTop: 23 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Population Structure</InputLabel>\r\n                      <Select\r\n                        value={populationStructureFilter}\r\n                        onChange={evt => setPopulationStructureFilter(evt.target.value)}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      >\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\r\n                          Genotype\r\n                        </MenuItem>\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\r\n                          H58 / Non-H58\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div style={{ width: '100%', height: 350, display: \"flex\", flexDirection: populationStructureFilter === 1 ? \"row\" : \"column-reverse\", alignItems: \"center\", paddingLeft: populationStructureFilter === 2 ? -22 : 0 }}>\r\n                    {getPopulationStructureChartLabel()}\r\n                    {plotPopulationStructureChart()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: dimensions.width > desktop ? \"row\" : \"column\", padding: 12, alignItems: \"center\", width: \"-webkit-fill-available\", justifyContent: \"center\" }}>\r\n              <div className=\"download-sheet-button\" onClick={() => dowloadBaseSpreadsheet()}>\r\n                <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\r\n                <span>Download TyphiNET Database</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"about-wrapper\">\r\n          <h2 style={{ marginBottom: 0 }}>About TyphiNET</h2>\r\n          <p>\r\n            TyphiNET is a multi-institutional global collaborative network. Our goal is to facilitate data sharing, and assist in removing barriers to the re-use of pathogen genomic data from both endemic surveillance projects, as well as those data routinely generated by public health reference laboratories, for global public health benefit.\r\n          </p>\r\n          <p>\r\n            The TyphiNET online platform is designed to collate all available whole genome sequence (WGS) data from the bacterial pathogen Salmonella Typhi. As bacterial WGS data is uniquely enriched with many characteristics of the infecting pathogen, we aim to provide up to date global estimates of both antimicrobial resistance and circulating genotypes for S. Typhi. We aim to improve global typhoid fever surveillance in the short term, and to provide evidence to assist in the improvement of intervention strategies and treatment guidelines for this pathogen in the long term.\r\n          </p>\r\n          <p>\r\n            TyphiNET is coordinated by Dr Zoe Dyson, Dr Louise Cerdeira and Prof Kat Holt. We are based at the Department of Infection Biology at the <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">London School of Hygiene and Tropical Medicine</a>, as well as the Department of Infectious Diseases at <a href=\"https://www.monash.edu/medicine/ccs/infectious-diseases/home\" target=\"_blank\" rel=\"noreferrer\">Monash University</a>. For more information about Holt lab projects and members, please visit the <a href=\"https://holtlab.net/\" target=\"_blank\" rel=\"noreferrer\">Holt Lab website</a>.\r\n          </p>\r\n          <p>\r\n            TyphiNET has received funding from the European Union's Horizon 2020 research and innovation programme under the Marie Skłodowska-Curie grant agreement TyphiNET No 845681. We are also grateful to the Wellcome Trust for support from their Open Research Fund programme (219692/Z/19/Z). Follow us on <a href=\"https://twitter.com/typhinet\" target=\"_blank\" rel=\"noreferrer\">Twitter</a>.\r\n          </p>\r\n          <h2 style={{ marginBottom: 0 }}>Genomic analysis framework:</h2>\r\n          <p>\r\n            TyphiNET utilises the <a href=\"https://github.com/katholt/genotyphi/\" target=\"_blank\" rel=\"noreferrer\">GenoTyphi</a> genotyping scheme, publised by <a href=\"https://www.nature.com/articles/ncomms12827\" target=\"_blank\" rel=\"noreferrer\">Wong <i>et al.</i> 2016</a>, and discussed in this <a href=\"https://holtlab.net/2016/10/12/global-picture-typhoid/\" target=\"_blank\" rel=\"noreferrer\">blog post</a>.  Data are sourced monthly from the <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">Pathogenwatch</a> online data analysis platform described in this <a href=\"https://www.biorxiv.org/content/10.1101/2020.07.03.186692v1.abstract\" target=\"_blank\" rel=\"noreferrer\">preprint</a> by Argimón <i>et al.</i> 2020.\r\n        </p>\r\n        </div>\r\n        <div className=\"footer-buttons-wrapper\">\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              setContactModalVisible(true)\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>Contact</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://github.com/zadyson/TyphiNET', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>GitHub</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://twitter.com/typhinet', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>Twitter</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }} />\r\n        <div className=\"footer\">\r\n          <span>Data obtained from: <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">pathogen watch project</a> on 07/02/2021. <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">Holt Lab</a></span>\r\n        </div>\r\n\r\n        <div style={{ zIndex: 1000 }}>\r\n          <Rodal\r\n            visible={contactModalVisible}\r\n            showCloseButton={false}\r\n            customStyles={{ padding: 0, overflow: \"hidden\", width: dimensions.width > desktop ? \"75%\" : \"95%\", height: dimensions.width > desktop ? \"75%\" : \"95%\" }}\r\n            onClose={() => {\r\n              setContactModalVisible(false);\r\n            }}\r\n          >\r\n            <div style={{ backgroundColor: \"transparent\", height: \"100%\", width: \"100%\", overflow: \"hidden\" }}>\r\n              <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", height: \"100%\" }}>\r\n                <div\r\n                  className=\"modal-close-button\"\r\n                  style={{ position: \"absolute\", right: 24, top: 24, height: 24, width: 24, zIndex: 500 }}\r\n                  onClick={() => {\r\n                    setContactModalVisible(false);\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faTimes} style={{ marginRight: 8, color: \"black\", fontSize: 24 }} />\r\n                </div>\r\n                <div style={{\r\n                  padding: 32, height: \"100%\", width: \"-webkit-fill-available\", display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\"\r\n                }}>\r\n                  <span style={{ fontWeight: 600, fontSize: 20, marginBottom: 20 }}>Contact</span>\r\n                  <ContactPage />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Rodal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","import React from 'react';\r\nimport './App.css';\r\nimport DashboardPage from './pages/dashboard'\r\n// import typhinetLogoImg from './assets/img/logo-typhinet.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"content\">\r\n        <DashboardPage/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}