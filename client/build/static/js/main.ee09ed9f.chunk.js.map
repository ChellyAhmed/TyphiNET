{"version":3,"sources":["assets/img/logo-typhinet.png","assets/img/logo-typhinet-prod.png","constants.js","util/colorHelper.js","pages/dashboard/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForAMR","amr","getColorForDrug","drug","getColorForIncType","incType","getColorForTetracyclines","tetA","useStyles","makeStyles","theme","formControlSelect","marginTop","spacing","marginBottom","minWidth","color","borderBottomColor","CustomSlider","withStyles","root","thumb","boxShadow","valueLabel","fontFamily","fontWeight","Slider","CustomCircularProgress","CircularProgress","CustomToggleButton","padding","selected","backgroundColor","ToggleButton","Buttons","styled","div","ButtonClearSelect","button","DashboardPage","classes","useState","coordinates","zoom","controlMapPosition","setControlMapPosition","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapSTADData","setWorldMapSTADData","worldMapXDRData","setWorldMapXDRData","worldMapDCSData","setWorldMapDCSData","worldMapAZITHData","setWorldMapAZITHData","worldMapCIPIData","setWorldMapCIPIData","worldMapCIPRData","setWorldMapCIPRData","worldMapDrugsData","setWorldMapDrugsData","worldMapAmrProfilesData","setWorldMapAmrProfilesData","worldMapPlasmidIncompatibilityTypeData","setWorldMapPlasmidIncompatibilityTypeData","plotAmrClassChart","setPlotAmrClassChart","plotDrugsAndGenotypesChart","setPlotDrugsAndGenotypesChart","plotPopulationStructureChart","setPlotPopulationStructureChart","plotDrugTrendsChart","setPlotDrugTrendsChart","captureControlMapInProgress","setCaptureControlMapInProgress","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","captureReportInProgress","setCaptureReportInProgress","tooltipContent","setTooltipContent","setAllCountries","React","timePeriodRange","setTimePeriodRange","actualTimePeriodRange","setActualTimePeriodRange","countriesForFilter","setCountriesForFilter","actualCountry","setActualCountry","populationStructureFilter","setPopulationStructureFilter","RFWGFilter","setRFWGFilter","amrClassesForFilter","drtClassesForFilter","trendClassesForFilter","value","id","trendDropdownOptions","amrClassFilter","setAmrClassFilter","RDWAGDataviewFilter","setRDWAGDataviewFilter","drugTrendsChartData","setDrugTrendsChartData","setDrugTrendsChartDataBackup","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","chartMaxHeight","setChartMaxHeight","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","dataset","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","appLoading","setAppLoading","allGenotypes","setAllGenotypes","brushRFWG","setBrushRFWG","brushDRT","setBrushDRT","brushRDWAG","setBrushRDWAG","brushGD","setBrushGD","open","setOpen","open2","setOpen2","handleClose","handleClose2","desktop","mobile","middle","hoverColor","height","window","innerHeight","width","innerWidth","dimensions","setDimensions","useEffect","document","getElementsByClassName","style","overflow","remove","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","sort","a","b","localeCompare","genotypes","arraysEqual","a1","a2","JSON","stringify","axios","get","then","res","limits","data","min","max","countries","timeOutId","response","parseDataForGenotypeChart","finalPopulationStructureChartData","genomes","forEach","entry","some","g","GENOTYPE","push","e","name","YEAR","year","find","yearIndex","findIndex","undefined","length","sum","Object","entries","total","populationStructureChartSums","_year","highestSum","Math","ceil","parseDataForCountryMap","genotypesData","drugsData","amrData","finalCountries","samplesData","h58Data","mdrData","stadData","xdrData","incTypesData","dcsData","azithData","cipIData","cipRData","countData","array","elementToCount","parentName","childName","temp","country","countryIndex","parent","index","count","displayName","congoCountryIndex","centralAfricanRepublicCountryIndex","ivoryCoastCountryIndex","timorLesteCountryIndex","unshift","includes","percentage","round","toFixed","STADs","stad","type","parseFloat","MDRs","mdr","XDRs","xdr","DCSs","dcs","AZs","az","CipIs","cipIs","CipRs","cipRs","dataForCountingDrugs","DRUGS","DRUG","incTypes","filter","parseDataForAmrClassChart","finalChartData","maxSum","totalSum","genotypeIndex","GENE","element","keys","slice","key","obj","errorMargin","lowerValue","total2","toString","noneCount","top10","parseDataForDrugTrendsChart","finalDrugTrendsChartData","finalDrugsAndGenotypesChartData","totalCountryCount","allDrugs","maxValue","drugsPercentage","aux","higherPercentage","totalS","item","genotypeChartResponse","drugTrendsChartResponse","classChartResponse","mapSamplesColorScale","domain","scaleLinear","range","mapRedColorScale","tooltip","useCallback","positionY","width1","width2","wrapperS","stroke","chart","position","y","x","wrapperStyle","cursor","fill","content","active","payload","label","reverse","border","display","flexDirection","alignItems","fontSize","paddingLeft","quantities","flexWrap","map","dataKey","flex","marginLeft","wordWrap","imgOnLoadPromise","Promise","resolve","reject","onload","onerror","maxH","margin","top","bottom","right","strokeDasharray","left","interval","tick","allowDataOverflow","allowDecimals","angle","textAnchor","offset","onChange","startIndex","endIndex","props","overflowX","justifyContent","marginRight","borderRadius","flexShrink","zIndex","stackId","teste","parse","barCategoryGap","amrClassChartTooltip","allowEscapeViewBox","armClassFilterComponent","info","dataAMR","layout","bars","barSize","fontsize","strokeWidth","cotrim","colors1","colors2","colors3","dataDRT","i","tickCount","connectNulls","stopLoading","names","brokenNames","ids","doc","jsPDF","unit","format","orientation","typhinetLogo","Image","src","typhinetLogoImg2","addImage","setFontSize","paragraph1","paragraph2","text","align","maxWidth","addPage","svgAsPngUri","getElementById","scale","uri","canvas","createElement","ctx","getContext","mapImg","mapImgPromise","drawImage","img","toDataURL","actualMapView","img2","img3","names2","legend","graph","url","domtoimage","toPng","quality","bgcolor","dataUrl","subtitleH","imgWidth","API","getImageProperties","floor","texts","spaceBetween","brushInterval","brush","img4","img5","save","graphImg","graphImgPromise","cHeight","logoHeight","legendHeight","filterHeight","subtitleHeight","imgHeight","DRTHeight","fillStyle","fillRect","font","textAlign","fillText","legendImg","legendImgPromise","typhinetLogoPromise","base64","download","textHeight","legendImgoPromise","centerWidth","h","w","capturePicture","cols_to_remove","indexes","csv","split","lines","line","currentIndex","indexOf","newLines","newCSV","dowloadBaseSpreadsheet","generateMapLegendOptions","percentageSteps","className","n","legends","Array","maxHeight","overflowY","renderMapLegend","FormControl","fullWidth","InputLabel","whiteSpace","Select","evt","target","MenuItem","typhinetLogoImg","alt","icon","faInfoCircle","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","projectionConfig","rotate","center","onMoveEnd","geography","geographies","geo","sample","s","properties","NAME","d","darkGray","lineage","countH58","isH58","onMouseEnter","additionalInfo","samples","GENOTYPES","TOTAL","H58","MDR","XDR","DCS","CipI","CipR","AzithR","STAD","genotypeInfo","simpleGenotypeInfo","smallerThan20","mdrInfo","stadInfo","xdrInfo","azInfo","cipIInfo","cipRInfo","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","size","newDataset","gutterBottom","valueLabelDisplay","Zoom","in","c","Tooltip","title","placement","faCrosshairs","pos","faPlus","faMinus","faCamera","thickness","dcsInfo","drugsInfo","amrProfilesInfo","incTypesInfo","substring","paddingBottom","paddingRight","paddingTop","alignSelf","amrClass","options","multi","searchable","clearable","separator","labelField","values","contentRenderer","state","itemRenderer","itemIndex","methods","addItem","checked","isSelected","valueField","clearRenderer","areAllSelected","clearAll","selectAll","isValue","faTable","faFilePdf","href","rel","faEnvelope","faGithub","faTwitter","Fab","faUndoAlt","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","URL","process","origin","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"k4xIAAe,MAA0B,0CCA1B,MAA0B,+C,SCA5BA,EAAe,6BCAfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACH,MAAO,UACT,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UAGT,IAAK,QACH,MAAO,UACT,IAAK,UACL,IAAK,cACL,IAAK,aACH,MAAO,UACT,IAAK,UACL,IAAK,cACL,IAAK,cACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,QACE,MAAO,YAIAC,EAAiB,SAACC,GAC7B,OAAQA,GACN,IAAK,kBACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,MACH,MAAO,MACT,IAAK,MACH,MAAO,UACT,IAAK,aACH,MAAO,UACT,IAAK,aACH,MAAO,UACT,IAAK,iBACH,MAAO,UACT,IAAK,MACH,MAAO,QACT,IAAK,MACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,QACE,MAAO,YAeAC,EAAkB,SAACC,GAC9B,OAAQA,GACN,IAAK,eACH,MAAO,mBACT,IAAK,4BACH,MAAO,mBACT,IAAK,OACH,MAAO,UACT,IAAK,kBACH,MAAO,mBACT,IAAK,aACH,MAAO,mBACT,IAAK,iBACH,MAAO,mBACT,IAAK,gBACH,MAAO,mBACT,IAAK,eACH,MAAO,mBACT,IAAK,gBACH,MAAO,mBACT,IAAK,cACH,MAAO,YACT,QACE,MAAO,YAIAC,EAAqB,SAACC,GACjC,OAAQA,GACN,IAAK,QACH,MAAO,mBACT,IAAK,cACH,MAAO,kBACT,IAAK,gBACH,MAAO,kBACT,IAAK,UACH,MAAO,iBACT,IAAK,QACH,MAAO,mBACT,IAAK,mCACH,MAAO,gBACT,IAAK,aACH,MAAO,mBACT,IAAK,uBACH,MAAO,iBACT,IAAK,OACH,MAAO,kBACT,IAAK,eACH,MAAO,kBACT,IAAK,QACH,MAAO,iBACT,IAAK,UACH,MAAO,mBACT,IAAK,QACH,MAAO,iBACT,IAAK,OACH,MAAO,mBACT,IAAK,mBACH,MAAO,gBACT,IAAK,YACH,MAAO,kBACT,IAAK,iBACH,MAAO,kBACT,IAAK,UACH,MAAO,iBACT,IAAK,SACH,MAAO,iBACT,IAAK,oBACH,MAAO,kBACT,IAAK,sBACH,MAAO,kBACT,IAAK,UACH,MAAO,gBACT,IAAK,SACH,MAAO,mBACT,IAAK,QACH,MAAO,mBACT,QACE,MAAO,YAIAC,EAA2B,SAACC,GACvC,OAAQA,GACN,IAAK,UACH,MAAO,mBACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,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","file":"static/js/main.ee09ed9f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet.791189fb.png\";","export default __webpack_public_path__ + \"static/media/logo-typhinet-prod.f503745b.png\";","export const API_ENDPOINT = \"http://localhost:8080/api/\";\r\n// export const API_ENDPOINT = \"https://typhinet.herokuapp.com/api/\";","export const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n      return \"#000000\";\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n      return \"#000000\";\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return \"#808080\";\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return \"#ffff00\";\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return \"#ffd700\";\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return \"#32cd32\";\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return \"#adff2f\";\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return \"#98fb98\";\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return \"#6b8e23\";\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return \"#2e8b57\";\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return \"#006400\";\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return \"#0000cd\";\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return \"#4682b4\";\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return \"#00bfff\";\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return \"#1e90ff\";\r\n    case '3.4':\r\n      return \"#6a5acd\";\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n      return \"#4b0082\";\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return \"#8b0000\";\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return \"#ff6347\";\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return \"#ff0000\";\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n    case '4.3.1.1.P1':\r\n      return \"#f1b6da\";\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n      return \"#c51b7d\";\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return \"#fb8072\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForAMR = (amr) => {\r\n  switch (amr) {\r\n    case 'No AMR detected':\r\n      return \"#addd8e\";\r\n    case 'MDR_DCS':\r\n      return \"#9e9ac8\"\r\n    case 'MDR':\r\n      return \"red\"\r\n    case 'DCS':\r\n      return \"#6baed6\"\r\n    case 'AzithR_MDR':\r\n      return \"#a50f15\"\r\n    case 'AzithR_DCS':\r\n      return \"#7a0177\"\r\n    case 'AzithR_DCS_MDR':\r\n      return \"#54278f\"\r\n    case 'XDR':\r\n      return \"black\"\r\n    case 'AMR':\r\n      return \"#ffeda0\"\r\n    case 'AMR_DCS':\r\n      return \"#fd8d3c\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForSimpleGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case 'H58':\r\n      return \"green\";\r\n    case 'Non-H58':\r\n      return \"red\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Azithromycin':\r\n      return \"rgb(144,211,199)\";\r\n    case 'Fluoroquinolones (CipI/R)':\r\n      return \"rgb(255,236,120)\";\r\n    case 'ESBL':\r\n      return \"#DB90F0\";\r\n    case 'Chloramphenicol':\r\n      return \"rgb(249,129,117)\";\r\n    case 'Ampicillin':\r\n      return \"rgb(129,178,210)\";\r\n    case 'Co-trimoxazole':\r\n      return \"rgb(252,180,105)\";\r\n    case 'Sulphonamides':\r\n      return \"rgb(180,221,112)\";\r\n    case 'Trimethoprim':\r\n      return \"rgb(102,102,255)\";\r\n    case 'Tetracyclines':\r\n      return \"rgb(251,207,229)\";\r\n    case 'Susceptible':\r\n      return \"lightGray\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForIncType = (incType) => {\r\n  switch (incType) {\r\n    case 'IncX1':\r\n      return 'rgb(174,227,154)'\r\n    case 'IncFIA(HI1)':\r\n      return 'rgb(138,35,139)'\r\n    case 'IncFIB(pHCM2)':\r\n      return 'rgb(163,215,30)'\r\n    case 'IncA/C2':\r\n      return 'rgb(69,51,214)'\r\n    case 'IncP1':\r\n      return 'rgb(223,207,231)'\r\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(66,69,94)'\r\n    case 'Col(BS512)':\r\n      return 'rgb(251,172,246)'\r\n    case 'IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(34,151,67)'\r\n    case 'IncN':\r\n      return 'rgb(238,83,190)'\r\n    case 'IncHI1B(R27)':\r\n      return 'rgb(68,242,112)'\r\n    case 'p0111':\r\n      return 'rgb(251,45,76)'\r\n    case 'IncHI1A':\r\n      return 'rgb(101,230,249)'\r\n    case 'IncI1':\r\n      return 'rgb(123,44,49)'\r\n    case 'IncY':\r\n      return 'rgb(231,173,121)'\r\n    case 'IncFIB(AP001918)':\r\n      return 'rgb(32,80,46)'\r\n    case 'IncFIB(K)':\r\n      return 'rgb(53,136,209)'\r\n    case 'IncHI2/IncHI2A':\r\n      return 'rgb(115,140,78)'\r\n    case 'Col440I':\r\n      return 'rgb(159,4,252)'\r\n    case 'Col156':\r\n      return 'rgb(244,212,3)'\r\n    case 'Col440II/Col440II':\r\n      return 'rgb(17,160,170)'\r\n    case 'IncFIA(HI1)/IncHI1A':\r\n      return 'rgb(251,120,16)'\r\n    case 'ColRNAI':\r\n      return 'rgb(91,67,11)'\r\n    case 'ColpVC':\r\n      return 'rgb(248,117,116)'\r\n    case 'IncX3':\r\n      return 'rgb(190,177,231)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForTetracyclines = (tetA) => {\r\n  switch (tetA) {\r\n    case 'tetA(A)':\r\n      return 'rgb(174,227,154)'\r\n    case 'tetA(B)':\r\n      return '#D7AEF7'\r\n    case 'tetA(C)':\r\n      return '#FFEC78'\r\n    case 'tetA(D)':\r\n      return '#FCB469'\r\n    case 'tetA(AB)':\r\n      return 'rgb(223,207,231)'\r\n    case 'tetA(ABC)':\r\n      return 'rgb(66,69,94)'\r\n    case 'tetA(ABD)':\r\n      return 'rgb(251,172,246)'\r\n    case 'tetA(ABCD)':\r\n      return 'rgb(34,151,67)'\r\n    case 'tetA(AC)':\r\n      return 'rgb(238,83,190)'\r\n    case 'tetA(ACD)':\r\n      return 'rgb(68,242,112)'\r\n    case 'tetA(AD)':\r\n      return 'rgb(251,45,76)'\r\n    case 'tetA(BC)':\r\n      return 'rgb(101,230,249)'\r\n    case 'tetA(BD)':\r\n      return 'rgb(123,44,49)'\r\n    case 'tetA(BCD)':\r\n      return 'rgb(231,173,121)'\r\n    case 'tetA(CD)':\r\n      return 'rgb(32,80,46)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}","import './index.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule, ZoomableGroup } from \"react-simple-maps\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TooltipMaterialUI from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { BarChart, Bar, XAxis, Label, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Brush, LineChart, Line, Legend } from 'recharts';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faMinus, faCrosshairs, faCamera, faTable, faFilePdf, faInfoCircle, faUndoAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport download from 'downloadjs';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport typhinetLogoImg from '../../assets/img/logo-typhinet.png';\r\nimport typhinetLogoImg2 from '../../assets/img/logo-typhinet-prod.png';\r\nimport geography from '../../assets/world-110m.json'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { getColorForGenotype, getColorForAMR, getColorForDrug, getColorForIncType, getColorForTetracyclines } from '../../util/colorHelper';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport {Select as DropDownSelect} from \"react-dropdown-select\"\r\n// import Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\n// import ContactPage from '../contact';\r\nimport domtoimage from 'dom-to-image';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { jsPDF } from \"jspdf\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControlSelect: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    minWidth: 120,\r\n    '& label.Mui-focused': {\r\n      color: \"rgb(31, 187, 211)\",\r\n    },\r\n    '& :not(.Mui-error).MuiInput-underline:after': {\r\n      borderBottomColor: \"rgb(31, 187, 211)\",\r\n    },\r\n  }\r\n}));\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: \"rgb(31, 187, 211)\"\r\n  },\r\n  thumb: {\r\n    \"&.MuiSlider-thumb\": {\r\n      \"&:not(.MuiSlider-active):focus\": {\r\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n      \"&:not(.MuiSlider-active):hover\": {\r\n        boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n      \"&.MuiSlider-active\": {\r\n        boxShadow: \"0px 0px 0px 14px rgba(31, 187, 211, 0.16)\"\r\n      },\r\n    },\r\n  },\r\n  valueLabel: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: 500\r\n  }\r\n})(Slider);\r\n\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n    color: \"rgb(31, 187, 211)\",\r\n  }\r\n})(CircularProgress);\r\n\r\nconst CustomToggleButton = withStyles({\r\n  root: {\r\n    padding: \"2px 8px\",\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: 600\r\n  },\r\n  selected: {\r\n    backgroundColor: 'rgb(31, 187, 211) !important',\r\n    color: \"white !important\"\r\n  }\r\n})(ToggleButton);\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n\r\n  & div {\r\n    margin: 0 0 0 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst ButtonClearSelect = styled.button`\r\n  background: none;\r\n  border: 1px solid #555;\r\n  color: #555;\r\n  border-radius: 3px;\r\n  margin: 0 10px 0;\r\n  padding: 3px 5px;\r\n  font-size: 10px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &.clear {\r\n    color: tomato;\r\n    border: 1px solid tomato;\r\n  }\r\n\r\n  :hover {\r\n    border: 1px solid deepskyblue;\r\n    color: deepskyblue;\r\n  }\r\n`;\r\n\r\nconst DashboardPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [controlMapPosition, setControlMapPosition] = useState({ coordinates: [0, 0], zoom: 1 });\r\n  // const [samplesQty, setSamplesQty] = useState(0);\r\n\r\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\r\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState({});\r\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\r\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\r\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\r\n  const [worldMapSTADData, setWorldMapSTADData] = useState([]);\r\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\r\n  const [worldMapDCSData, setWorldMapDCSData] = useState([]);\r\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\r\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\r\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\r\n  const [worldMapDrugsData, setWorldMapDrugsData] = useState([]);\r\n  const [worldMapAmrProfilesData, setWorldMapAmrProfilesData] = useState([]);\r\n  const [worldMapPlasmidIncompatibilityTypeData, setWorldMapPlasmidIncompatibilityTypeData] = useState([]);\r\n\r\n  const [plotAmrClassChart, setPlotAmrClassChart] = useState(function () { })\r\n  const [plotDrugsAndGenotypesChart, setPlotDrugsAndGenotypesChart] = useState(function () { })\r\n  const [plotPopulationStructureChart, setPlotPopulationStructureChart] = useState(function () { })\r\n  const [plotDrugTrendsChart, setPlotDrugTrendsChart] = useState(function () { })\r\n\r\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] = useState(false)\r\n  const [captureControlChartRFWGInProgress, setCaptureControlChartRFWGInProgress] = useState(false)\r\n  const [captureControlChartDRTInProgress, setCaptureControlChartDRTInProgress] = useState(false)\r\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] = useState(false)\r\n  const [captureControlChartRFWAGInProgress, setCaptureControlChartRFWAGInProgress] = useState(false)\r\n  const [captureReportInProgress, setCaptureReportInProgress] = useState(false)\r\n  const [tooltipContent, setTooltipContent] = useState(null);\r\n\r\n  const [allCountries, setAllCountries] = useState([]);\r\n\r\n  const [timePeriodRange, setTimePeriodRange] = React.useState([1905, 2019]);\r\n  const [actualTimePeriodRange, setActualTimePeriodRange] = React.useState([1905, 2019]);\r\n  const [countriesForFilter, setCountriesForFilter] = React.useState(['All']);\r\n  const [actualCountry, setActualCountry] = useState(\"All\");\r\n  const [populationStructureFilter, setPopulationStructureFilter] = React.useState(1);\r\n  const [RFWGFilter, setRFWGFilter] = React.useState(1);\r\n  const [amrClassesForFilter] = useState([/*\"AMR Profiles\", */\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [drtClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [trendClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [trendDropdownOptions] = useState([{value: \"Ampicillin\", id: 0}, {value: \"Azithromycin\", id: 1}, {value: \"Chloramphenicol\", id: 2}, {value: \"Co-trimoxazole\", id: 3}, {value: \"ESBL\", id: 4}, {value: \"Fluoroquinolones (CipI/R)\", id: 5}, {value: \"Susceptible\", id: 6}, {value: \"Sulphonamides\", id: 7}, {value: \"Tetracyclines\", id: 8}, {value: \"Trimethoprim\", id: 9}])\r\n  const [amrClassFilter, setAmrClassFilter] = React.useState(amrClassesForFilter[5])\r\n  const [RDWAGDataviewFilter, setRDWAGDataviewFilter] = React.useState(1)\r\n\r\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([])\r\n  const [drugTrendsChartDataBackup, setDrugTrendsChartDataBackup] = useState([])\r\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState([])\r\n  const [chartMaxHeight, setChartMaxHeight] = useState(0)\r\n  // const [chartMaxWidth, setChartMaxWidth] = useState(0)\r\n  const [populationStructureChartData, setPopulationStructureChartData] = useState([])\r\n  const [amrClassChartData, setAmrClassChartData] = useState([])\r\n\r\n  const [mapView, setMapView] = React.useState('CipI');\r\n  const [dataset, setDataset] = React.useState('full');\r\n  const [totalGenomes, setTotalGenomes] = useState([])\r\n  const [actualGenomes, setActualGenomes] = useState([])\r\n  const [totalGenotypes, setTotalGenotypes] = useState([])\r\n  const [actualGenotypes, setActualGenotypes] = useState([])\r\n  const [appLoading, setAppLoading] = useState(0)\r\n\r\n  const [allGenotypes, setAllGenotypes] = useState({})\r\n\r\n  const [brushRFWG, setBrushRFWG] = useState([])\r\n  const [brushDRT, setBrushDRT] = useState([])\r\n  const [brushRDWAG, setBrushRDWAG] = useState([])\r\n  const [brushGD, setBrushGD] = useState([])\r\n\r\n  // const [contactModalVisible, setContactModalVisible] = useState(false)\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen2 = () => {\r\n    setOpen2(true);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setOpen2(false);\r\n  };\r\n\r\n  // const [dimensions.width > desktop, setdimensions.width > desktop] = useState(window.innerWidth > 767)\r\n  const [desktop] = useState(767)\r\n  const [mobile] = useState(500)\r\n  const [middle] = useState(1300)\r\n\r\n  const [hoverColor] = useState(\"#D2F1F6\")\r\n\r\n  const [dimensions, setDimensions] = React.useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n\r\n  function debounce(fn, ms) {\r\n    let timer\r\n    return _ => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(_ => {\r\n        timer = null\r\n        fn.apply(this, arguments)\r\n      }, ms)\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (appLoading === 0) {\r\n      document.getElementsByClassName('App')[0].style.overflow = 'hidden'\r\n    } else if (appLoading === 2) {\r\n      document.getElementsByClassName('App')[0].style.overflow = 'visible'\r\n      document.getElementsByClassName('loading')[0].remove()\r\n    }\r\n  }, [appLoading])\r\n\r\n  // useEffect(() => {\r\n  //   const timeOutId = setTimeout(() => {\r\n  //     setAppLoading(false)\r\n  //   }, 8000)\r\n  //   return () => clearTimeout(timeOutId);\r\n  // }, [appLoading])\r\n\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }, 1000)\r\n\r\n    window.addEventListener('resize', debouncedHandleResize)\r\n\r\n    return _ => {\r\n      window.removeEventListener('resize', debouncedHandleResize)\r\n    }\r\n  })\r\n\r\n  const [genotypes] = useState([\r\n    '0','0.0.1', '0.0.2', '0.0.3', '0.1.0', '0.1',\r\n    '0.1.1', '0.1.2', '0.1.3', '1.1', '1.1.1',\r\n    '1.1.2', '1.1.3', '1.1.4', '1.2', '1.2.1',\r\n    '2', '2.0.0', '2.0.1', '2.0.2', '2.1.0', '2.1',\r\n    '2.1.1', '2.1.2', '2.1.3', '2.1.4', '2.1.5', '2.1.6',\r\n    '2.1.7', '2.1.8', '2.1.9', '2.1.7.1', '2.1.7.2', '2.2',\r\n    '2.2.0', '2.2.1', '2.2.2', '2.2.3', '2.2.4',\r\n    '2.3', '2.3.1', '2.3.2', '2.3.3', '2.3.4',\r\n    '2.3.5', '2.4.0', '2.4', '2.4.1', '2.5.0', '2.5',\r\n    '2.5.1', '2.5.2', '3.0.0', '3', '3.0.1', '3.0.2',\r\n    '3.1.0', '3.1', '3.1.1', '3.1.2', '3.2',\r\n    '3.2.1', '3.2.2', '3.3.0', '3.3', '3.3.1',\r\n    '3.3.2', '3.3.2.Bd1', '3.3.2.Bd2', '3.4',\r\n    '3.5', '3.5.1', '3.5.2', '3.5.3',\r\n    '3.5.4', '4', '4.1.0', '4.1', '4.1.1', '4.2', '4.2.1',\r\n    '4.2.2', '4.2.3', /*'4.3', '4.3.0', */'4.3.1', '4.3.1.1',\r\n    '4.3.1.1.P1', '4.3.1.1.EA1', '4.3.1.2', '4.3.1.2.EA2',\r\n    '4.3.1.2.EA3', '4.3.1.3', '4.3.1.3.Bdq'].sort((a, b) => a.localeCompare(b)));\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}filters/getYearLimits`)\r\n      .then((res) => {\r\n        let limits = res.data\r\n        setTimePeriodRange([limits.min, limits.max])\r\n        setActualTimePeriodRange([limits.min, limits.max])\r\n        setAllCountries(limits.countries)\r\n        setAllGenotypes(limits.allGenotypes)\r\n        setTotalGenotypes(limits.totalGenotypes)\r\n        setAppLoading((value) => value + 1)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const timeOutId = setTimeout(() => {\r\n      axios.get(`${API_ENDPOINT}filters/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n        .then((res) => {\r\n          var response = res.data\r\n\r\n          response['Dem. Rep. Congo'] = response['Democratic Republic of Congo']\r\n          delete response['Democratic Republic of Congo']\r\n          response['Central African Rep.'] = response['Central African Republic']\r\n          delete response['Central African Republic']\r\n          response[\"Côte d'Ivoire\"] = response['Ivory Coast']\r\n          delete response['Ivory Coast']\r\n          response[\"Timor-Leste\"] = response['East Timor']\r\n          delete response['East Timor']\r\n\r\n          setWorldMapComplementaryData(response)\r\n        })\r\n    }, 500)\r\n    return () => clearTimeout(timeOutId);\r\n  }, [actualTimePeriodRange, dataset])\r\n\r\n  useEffect(() => {\r\n    const parseDataForGenotypeChart = (data) => {\r\n      var finalPopulationStructureChartData = [];\r\n\r\n      var genomes = data;\r\n      var genotypes = [];\r\n\r\n      data.forEach((entry) => {\r\n        if (!genotypes.some(g => g === entry.GENOTYPE)) {\r\n          genotypes.push(entry.GENOTYPE)\r\n        }\r\n\r\n        /* POPULATION STRUCTURE CHART GENERATION */\r\n        // if (populationStructureFilter === 1) { /* Genotype */\r\n        if (!finalPopulationStructureChartData.some(e => e.name === entry.YEAR)) {\r\n          finalPopulationStructureChartData.push({\r\n            name: entry.YEAR,\r\n            [entry.GENOTYPE]: 1\r\n          })\r\n        } else {\r\n          let year = finalPopulationStructureChartData.find(e => e.name === entry.YEAR);\r\n          let yearIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry.YEAR);\r\n\r\n          if (year[entry.GENOTYPE] === undefined) {\r\n            year[entry.GENOTYPE] = 1\r\n          } else {\r\n            year[entry.GENOTYPE] = year[entry.GENOTYPE] + 1\r\n          }\r\n          finalPopulationStructureChartData[yearIndex] = year;\r\n        }\r\n        // } \r\n        // else { /* H58 / Non-H58 */\r\n        //   if (entry['GENOTYPE_SIMPLE'] === 'H58' || entry['GENOTYPE_SIMPLE'] === 'Non-H58')\r\n        //     if (!finalPopulationStructureChartData.some(e => e.name === entry['GENOTYPE_SIMPLE'])) {\r\n        //       finalPopulationStructureChartData.push({\r\n        //         name: entry['GENOTYPE_SIMPLE'],\r\n        //         [entry.GENOTYPE]: 1\r\n        //       })\r\n        //     } else {\r\n        //       let genotypeSimple = finalPopulationStructureChartData.find(e => e.name === entry['GENOTYPE_SIMPLE']);\r\n        //       let genotypeSimpleIndex = finalPopulationStructureChartData.findIndex(e => e.name === entry['GENOTYPE_SIMPLE']);\r\n\r\n        //       if (genotypeSimple[entry.GENOTYPE] === undefined) {\r\n        //         genotypeSimple[entry.GENOTYPE] = 1\r\n        //       } else {\r\n        //         genotypeSimple[entry.GENOTYPE] = genotypeSimple[entry.GENOTYPE] + 1\r\n        //       }\r\n        //       finalPopulationStructureChartData[genotypeSimpleIndex] = genotypeSimple;\r\n        //     }\r\n        // }\r\n      })\r\n\r\n      if (totalGenomes.length === 0)\r\n        setTotalGenomes(genomes)\r\n\r\n      setActualGenomes(genomes)\r\n      setActualGenotypes(genotypes)\r\n\r\n      finalPopulationStructureChartData.forEach((data) => {\r\n        let sum = 0;\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] !== \"name\")\r\n            sum += entry[1];\r\n        })\r\n        data.total = sum;\r\n      })\r\n\r\n      if (!arraysEqual(finalPopulationStructureChartData, populationStructureChartData)){\r\n        setPopulationStructureChartData(finalPopulationStructureChartData)\r\n        if (finalPopulationStructureChartData.length > 0) {\r\n          setBrushGD([finalPopulationStructureChartData[0].name, finalPopulationStructureChartData[finalPopulationStructureChartData.length - 1].name])\r\n        } else {\r\n          setBrushGD(['Undefined', 'Undefined'])\r\n        }\r\n      }\r\n\r\n      let populationStructureChartSums = []\r\n      finalPopulationStructureChartData.forEach((year) => {\r\n        let sum = 0\r\n        let yearArray = Object.entries(year)\r\n        yearArray.forEach((_year) => {\r\n          if (_year[0] !== \"name\" && _year[0] !== \"total\")\r\n            sum += _year[1]\r\n        })\r\n        populationStructureChartSums.push({\r\n          year: year.name,\r\n          sum\r\n        })\r\n      })\r\n\r\n      if (populationStructureChartSums.length > 0) {\r\n        let highestSum = populationStructureChartSums.sort((a, b) => b.sum - a.sum)[0].sum;\r\n\r\n        // if (populationStructureFilter === 1) {\r\n        //   if (highestSum > chartMaxHeight)\r\n        //     setChartMaxHeight(Math.ceil(highestSum / 100) * 100)\r\n        // } else {\r\n        //   if (highestSum > chartMaxWidth)\r\n        //     setChartMaxWidth(Math.ceil(highestSum / 100) * 100)\r\n        // }\r\n        if (highestSum > chartMaxHeight)\r\n          setChartMaxHeight(Math.ceil(highestSum / 100) * 100)\r\n      }\r\n    }\r\n\r\n    const parseDataForCountryMap = (data) => {\r\n      let finalCountries = [];\r\n\r\n      let samplesData = [], genotypesData = [], h58Data = [], mdrData = [], stadData = [], xdrData = [], drugsData = [], amrData = [], incTypesData = [], dcsData = [], azithData = [], cipIData = [], cipRData = [];\r\n\r\n      const countData = (array, elementToCount, parentName, childName) => {\r\n        let temp = []\r\n        array.forEach(entry => {\r\n          if (!temp.some(e => e.name === entry['COUNTRY_ONLY'])) {\r\n            temp.push({\r\n              name: entry['COUNTRY_ONLY'],\r\n              displayName: entry['COUNTRY_ONLY'],\r\n              total: 1,\r\n              [parentName]: [{\r\n                [childName]: entry[elementToCount],\r\n                count: 1\r\n              }]\r\n            })\r\n          } else {\r\n            let country = temp.find(e => e.name === entry['COUNTRY_ONLY']);\r\n            let countryIndex = temp.findIndex(e => e.name === entry['COUNTRY_ONLY']);\r\n\r\n            if (!country[parentName].some(e => e[childName] === entry[elementToCount])) {\r\n              country[parentName].push({\r\n                [childName]: entry[elementToCount],\r\n                count: 1\r\n              })\r\n            } else {\r\n              let parent = country[parentName].find(e => e[childName] === entry[elementToCount]);\r\n              let index = country[parentName].findIndex(e => e[childName] === entry[elementToCount]);\r\n              parent.count = parent.count + 1\r\n              country[parentName][index] = parent\r\n            }\r\n            country.total = country.total + 1\r\n\r\n            temp[countryIndex] = country;\r\n          }\r\n        })\r\n\r\n        let congoCountryIndex = temp.findIndex(e => e.name === 'Democratic Republic of Congo');\r\n        if (congoCountryIndex !== -1)\r\n          temp[congoCountryIndex].displayName = 'Dem. Rep. Congo'\r\n\r\n        let centralAfricanRepublicCountryIndex = temp.findIndex(e => e.name === 'Central African Republic');\r\n        if (centralAfricanRepublicCountryIndex !== -1)\r\n          temp[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\r\n\r\n        let ivoryCoastCountryIndex = temp.findIndex(e => e.name === \"Ivory Coast\");\r\n        if (ivoryCoastCountryIndex !== -1)\r\n          temp[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\r\n\r\n        let timorLesteCountryIndex = temp.findIndex(e => e.name === \"East Timor\");\r\n        if (timorLesteCountryIndex !== -1)\r\n          temp[timorLesteCountryIndex].displayName = \"Timor-Leste\"\r\n\r\n        temp.forEach((country) => {\r\n          country[parentName].sort((a, b) => b.count - a.count);\r\n        })\r\n        temp.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n        return temp\r\n      }\r\n\r\n      data.forEach((entry) => {\r\n        if (!finalCountries.some(e => e === entry['COUNTRY_ONLY']) && entry['COUNTRY_ONLY'] !== \"-\" && entry['COUNTRY_ONLY'] !== \"\")\r\n          finalCountries.push(entry['COUNTRY_ONLY'])\r\n\r\n        if (!samplesData.some(e => e.name === entry['COUNTRY_ONLY'])) {\r\n          samplesData.push({\r\n            name: entry['COUNTRY_ONLY'],\r\n            displayName: entry['COUNTRY_ONLY'],\r\n            count: 1\r\n          })\r\n        } else {\r\n          let country = samplesData.find(e => e.name === entry['COUNTRY_ONLY']);\r\n          let countryIndex = samplesData.findIndex(e => e.name === entry['COUNTRY_ONLY']);\r\n          country.count = country.count + 1\r\n          samplesData[countryIndex] = country;\r\n        }\r\n      })\r\n\r\n      if (!arraysEqual(samplesData, worldMapSamplesData)) {\r\n        let congoCountryIndex = samplesData.findIndex(e => e.name === 'Democratic Republic of Congo');\r\n        if (congoCountryIndex !== -1)\r\n          samplesData[congoCountryIndex].displayName = 'Dem. Rep. Congo'\r\n\r\n        let centralAfricanRepublicCountryIndex = samplesData.findIndex(e => e.name === 'Central African Republic');\r\n        if (centralAfricanRepublicCountryIndex !== -1)\r\n          samplesData[centralAfricanRepublicCountryIndex].displayName = 'Central African Rep.'\r\n\r\n        let ivoryCoastCountryIndex = samplesData.findIndex(e => e.name === \"Ivory Coast\");\r\n        if (ivoryCoastCountryIndex !== -1)\r\n          samplesData[ivoryCoastCountryIndex].displayName = \"Côte d'Ivoire\"\r\n\r\n        let timorLesteCountryIndex = samplesData.findIndex(e => e.name === \"East Timor\");\r\n        if (timorLesteCountryIndex !== -1)\r\n          samplesData[timorLesteCountryIndex].displayName = \"Timor-Leste\"\r\n\r\n        setWorldMapSamplesData(samplesData)\r\n        // setSamplesQty(\r\n        //   Math.ceil((\r\n        //     samplesData.length > 0 ? samplesData.sort((a, b) => b.count - a.count)[0].count : 0\r\n        //   ) / 50) * 50\r\n        // )\r\n      }\r\n\r\n      finalCountries.sort((a, b) => a.localeCompare(b));\r\n      finalCountries.unshift(\"All\");\r\n      setCountriesForFilter(finalCountries)\r\n\r\n      if (!finalCountries.includes(actualCountry))\r\n        setActualCountry(\"All\")\r\n\r\n      genotypesData = countData(data, \"GENOTYPE\", \"genotypes\", \"lineage\")\r\n      if (!arraysEqual(genotypesData, worldMapGenotypesData))\r\n        setWorldMapGenotypesData(genotypesData)\r\n\r\n      h58Data = countData(data, \"GENOTYPE_SIMPLE\", \"genotypes\", \"type\")\r\n      h58Data.forEach(country => {\r\n        country.genotypes.forEach((g, index) => {\r\n          let percentage = ((g.count / country.total) * 100)\r\n          if (Math.round(percentage) !== percentage) {\r\n            percentage = percentage.toFixed(2)\r\n          }\r\n          g.percentage = percentage\r\n        })\r\n      })\r\n      if (!arraysEqual(h58Data, worldMapH58Data))\r\n        setWorldMapH58Data(h58Data)\r\n\r\n      stadData = countData(data, \"STAD\", \"STADs\", \"type\")\r\n      stadData.forEach(country => {\r\n        country.STADs.forEach((stad, index) => {\r\n          if (stad.type === \"No AMR detected\") {\r\n            let percentage = ((stad.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = stad.count;\r\n          }\r\n        })\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n      if (!arraysEqual(stadData, worldMapSTADData))\r\n        setWorldMapSTADData(stadData)\r\n\r\n      mdrData = countData(data, \"MDR\", \"MDRs\", \"type\")\r\n      mdrData.forEach(country => {\r\n        country.MDRs.forEach((mdr, index) => {\r\n          if (mdr.type === \"MDR\") {\r\n            let percentage = ((mdr.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = mdr.count;\r\n          }\r\n        })\r\n        if (country.percentage === undefined) {\r\n          country.percentage = parseFloat(0)\r\n        }\r\n        if (country.count === undefined) {\r\n          country.count = 0\r\n        }\r\n      })\r\n      if (!arraysEqual(mdrData, worldMapMDRData))\r\n        setWorldMapMDRData(mdrData)\r\n\r\n      xdrData = countData(data, \"XDR\", \"XDRs\", \"type\")\r\n      xdrData.forEach(country => {\r\n        country.XDRs.forEach((xdr, index) => {\r\n          if (xdr.type === \"XDR\") {\r\n            let percentage = ((xdr.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = xdr.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(xdrData, worldMapXDRData))\r\n        setWorldMapXDRData(xdrData)\r\n\r\n      dcsData = countData(data, \"DCS\", \"DCSs\", \"type\")\r\n      dcsData.forEach(country => {\r\n        country.DCSs.forEach((dcs, index) => {\r\n          if (dcs.type === \"DCS\") {\r\n            let percentage = ((dcs.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = dcs.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(dcsData, worldMapDCSData))\r\n        setWorldMapDCSData(dcsData)\r\n\r\n      azithData = countData(data, \"Azith\", \"AZs\", \"type\")\r\n      azithData.forEach(country => {\r\n        country.AZs.forEach((az, index) => {\r\n          if (az.type === \"AzithR\") {\r\n            let percentage = ((az.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = az.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(azithData, worldMapAZITHData))\r\n        setWorldMapAZITHData(azithData)\r\n\r\n      cipIData = countData(data, \"CipI\", \"CipIs\", \"type\")\r\n      cipIData.forEach(country => {\r\n        country.CipIs.forEach((cipIs, index) => {\r\n          if (cipIs.type === \"CipI\") {\r\n            let percentage = ((cipIs.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = cipIs.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(cipIData, worldMapCIPIData))\r\n        setWorldMapCIPIData(cipIData)\r\n\r\n      cipRData = countData(data, \"CipR\", \"CipRs\", \"type\")\r\n      cipRData.forEach(country => {\r\n        country.CipRs.forEach((cipRs, index) => {\r\n          if (cipRs.type === \"CipR\") {\r\n            let percentage = ((cipRs.count / country.total) * 100)\r\n            if (Math.round(percentage) !== percentage)\r\n              percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = cipRs.count;\r\n          }\r\n          if (country.percentage === undefined) {\r\n            country.percentage = parseFloat(0)\r\n          }\r\n          if (country.count === undefined) {\r\n            country.count = 0\r\n          }\r\n        })\r\n      })\r\n      if (!arraysEqual(cipRData, worldMapCIPRData))\r\n        setWorldMapCIPRData(cipRData)\r\n\r\n      let dataForCountingDrugs = []\r\n      data.forEach(entry => {\r\n        entry.DRUGS.forEach(drug => {\r\n          dataForCountingDrugs.push({\r\n            ...entry,\r\n            DRUG: drug,\r\n          })\r\n        })\r\n      })\r\n      drugsData = countData(dataForCountingDrugs, \"DRUG\", \"drugs\", \"name\");\r\n      if (!arraysEqual(drugsData, worldMapDrugsData))\r\n        setWorldMapDrugsData(drugsData)\r\n\r\n      amrData = countData(data, \"AMR\", \"amrProfiles\", \"name\")\r\n      if (!arraysEqual(amrData, worldMapAmrProfilesData))\r\n        setWorldMapAmrProfilesData(amrData)\r\n\r\n      incTypesData = countData(data, \"IncTypes\", \"incTypes\", \"type\")\r\n      incTypesData.forEach(country => {\r\n        country.incTypes = country.incTypes.filter(g => g.type !== \"\")\r\n      })\r\n      if (!arraysEqual(incTypesData, worldMapPlasmidIncompatibilityTypeData))\r\n        setWorldMapPlasmidIncompatibilityTypeData(incTypesData)\r\n    }\r\n\r\n    const parseDataForAmrClassChart = (data) => {\r\n      let finalChartData = []\r\n      let maxSum = 0\r\n      let totalSum = {}\r\n      data.forEach((entry) => {\r\n        if (!finalChartData.some(e => e.genotype === entry.GENOTYPE)) {\r\n          finalChartData.push({\r\n            genotype: entry.GENOTYPE,\r\n            [entry.GENE]: 1\r\n          })\r\n        } else {\r\n          let genotype = finalChartData.find(e => e.genotype === entry.GENOTYPE);\r\n          let genotypeIndex = finalChartData.findIndex(e => e.genotype === entry.GENOTYPE);\r\n\r\n          if (genotype[entry.GENE] === undefined) {\r\n            genotype[entry.GENE] = 1\r\n          } else {\r\n            genotype[entry.GENE] = genotype[entry.GENE] + 1\r\n          }\r\n          finalChartData[genotypeIndex] = genotype;\r\n        }\r\n\r\n        if (entry.GENOTYPE !== \"\") {\r\n          if (!(entry.GENE in totalSum)) {\r\n            totalSum[entry.GENE] = 1\r\n          } else {\r\n            totalSum[entry.GENE] = totalSum[entry.GENE] + 1\r\n          }\r\n        }\r\n      })\r\n      delete totalSum[\"\"]\r\n\r\n      finalChartData.sort((a, b) => a.genotype.localeCompare(b.genotype));\r\n\r\n      let genotypes = []\r\n      finalChartData.forEach(element => {\r\n        let keys = Object.keys(element).slice(1)\r\n        let filteredData = keys.filter((key) => { return !(key.includes('No')) && !(key.includes('0_')) })\r\n        if (filteredData.length === 0) {\r\n          genotypes.push(element.genotype)\r\n        }\r\n      });\r\n\r\n      for (const genotype in genotypes) {\r\n        finalChartData = finalChartData.filter((obj) => {\r\n          return obj.genotype !== genotypes[genotype]\r\n        })\r\n      }\r\n\r\n      finalChartData.forEach((data) => {\r\n        let sum = 0;\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] !== \"genotype\" && entry[0] !== \"undefined\") {\r\n            let errorMargin = Math.ceil(entry[1] * 0.2) // 20%\r\n            let lowerValue = errorMargin > entry[1] ? entry[1] : errorMargin;\r\n\r\n            if (entry[1] === 1)\r\n              lowerValue = 1\r\n\r\n            if (entry[1] === 0)\r\n              lowerValue = 0\r\n\r\n            data[`error-${entry[0]}`] = [lowerValue, errorMargin]\r\n\r\n            if (!(entry[0].includes('No')) && !(entry[0].includes('0_'))) {\r\n              sum += entry[1];\r\n              if (entry[1] > maxSum) {\r\n                maxSum = entry[1]\r\n              }\r\n            }\r\n\r\n          }\r\n        })\r\n        data.total = sum;\r\n      })\r\n\r\n      finalChartData.forEach((data) => {\r\n        Object.entries(data).forEach((entry) => {\r\n          if (entry[0] === \"genotype\") {\r\n            if (actualCountry === \"All\") {\r\n              data.total2 = allGenotypes[entry[1].toString()];\r\n            } else {\r\n              let noneCount = 'None' in data ? data['None'] : 0\r\n              data.total2 = data.total + noneCount\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      finalChartData = finalChartData.filter(g => g.genotype !== undefined && g.genotype !== \"0\")\r\n      let top10 = []\r\n      finalChartData.forEach(element => {\r\n        if (top10.length < 10) {\r\n          top10.push(element)\r\n        } else {\r\n          top10.sort(function (a, b) {\r\n            if (a.total === b.total && a.genotype > b.genotype)\r\n              return -1\r\n            return a.total > b.total ? -1 : 1\r\n          })\r\n          if (element.total === top10[9].total) {\r\n            if (element.genotype > top10[9].genotype) {\r\n              top10[9] = element\r\n            }\r\n          }\r\n          if (element.total > top10[9].total) {\r\n            top10[9] = element\r\n          }\r\n        }\r\n      })\r\n\r\n      top10.sort(function (a, b) {\r\n        if (a.total === b.total && a.genotype > b.genotype)\r\n          return -1\r\n        return a.total > b.total ? -1 : 1\r\n      })\r\n\r\n      top10.push({ maxSum: top10.length === 0 ? 0 : Math.ceil(top10[0].total2 / 50) * 50, totalSum: totalSum })\r\n\r\n      // if (amrClassFilter !== \"Co-trimoxazole\") {\r\n      //   if (!arraysEqual(amrClassChartData, top10))\r\n      //     setAmrClassChartData(top10)\r\n      // } else {\r\n      //   if (!arraysEqual(amrClassChartData, top10))\r\n      //     setAmrClassChartData(top10)\r\n      // }\r\n      if (!arraysEqual(amrClassChartData, top10)){\r\n        setAmrClassChartData(top10)\r\n        if (top10.length > 1) {\r\n          setBrushRDWAG([top10[0].genotype, top10[top10.length - 2].genotype])\r\n        } else {\r\n          setBrushRDWAG(['Undefined', 'Undefined'])\r\n        }\r\n      }\r\n    }\r\n\r\n    const parseDataForDrugTrendsChart = (data) => {\r\n      let finalDrugTrendsChartData = []\r\n      let finalDrugsAndGenotypesChartData = []\r\n      let totalSum = {}\r\n      let totalCountryCount = data[data.length - 1][0]\r\n      let allDrugs = data[data.length - 2][0]\r\n      data = data.slice(0, data.length - 2)\r\n\r\n      data.forEach((entry) => {\r\n        if (!finalDrugTrendsChartData.some(e => e.name === entry.YEAR)) {\r\n          finalDrugTrendsChartData.push({\r\n            name: entry.YEAR,\r\n            [entry.DRUG]: 1\r\n          })\r\n        } else {\r\n          let year = finalDrugTrendsChartData.find(e => e.name === entry.YEAR);\r\n          let yearIndex = finalDrugTrendsChartData.findIndex(e => e.name === entry.YEAR);\r\n\r\n          if (year[entry.DRUG] === undefined) {\r\n            year[entry.DRUG] = 1\r\n          } else {\r\n            year[entry.DRUG] = year[entry.DRUG] + 1\r\n          }\r\n          finalDrugTrendsChartData[yearIndex] = year;\r\n        }\r\n\r\n        if (!finalDrugsAndGenotypesChartData.some(e => e.name === entry.GENOTYPE)) {\r\n          finalDrugsAndGenotypesChartData.push({\r\n            name: entry.GENOTYPE,\r\n            [entry.DRUG]: 1\r\n          })\r\n        } else {\r\n          let genotype = finalDrugsAndGenotypesChartData.find(e => e.name === entry.GENOTYPE);\r\n          let genotypeIndex = finalDrugsAndGenotypesChartData.findIndex(e => e.name === entry.GENOTYPE);\r\n\r\n          if (genotype[entry.DRUG] === undefined) {\r\n            genotype[entry.DRUG] = 1\r\n          } else {\r\n            genotype[entry.DRUG] = genotype[entry.DRUG] + 1\r\n          }\r\n          finalDrugsAndGenotypesChartData[genotypeIndex] = genotype;\r\n        }\r\n\r\n        if (!(entry.GENOTYPE in totalSum)) {\r\n          totalSum[entry.GENOTYPE] = 1\r\n        } else {\r\n          totalSum[entry.GENOTYPE] = totalSum[entry.GENOTYPE] + 1\r\n        }\r\n      })\r\n      finalDrugTrendsChartData.forEach((data) => {\r\n        data.total = allDrugs[data[\"name\"]];\r\n        let maxValue = 0;\r\n        const drugsPercentage = {}\r\n        for (const key in data) {\r\n          if (key !== 'name' && key !== 'total') {\r\n            if (data[key] > maxValue) {\r\n              maxValue = data[key]\r\n            }\r\n            const aux = (data[key] * 100) / data.total\r\n            drugsPercentage[key] = data[key]\r\n            data[key] = aux\r\n          }\r\n        }\r\n        data.higherPercentage = Math.round((maxValue * 100) / data.total)\r\n        data.drugsPercentage = drugsPercentage\r\n      })\r\n      \r\n      finalDrugsAndGenotypesChartData.forEach((data) => {\r\n        Object.entries(data).forEach((entry) => {\r\n          if (actualCountry !== \"All\" && entry[0] === \"name\") {\r\n            data.total = totalCountryCount[entry[1]].total\r\n            data.totalS = totalCountryCount[entry[1]].totalS\r\n          }\r\n          else if (entry[0] === \"name\")\r\n            data.total = allGenotypes[entry[1]]\r\n        })\r\n      })\r\n\r\n      finalDrugTrendsChartData = finalDrugTrendsChartData.filter(item => item.total === 10 || item.total > 10)\r\n\r\n      finalDrugTrendsChartData.sort((a, b) => a.name.localeCompare(b.name))\r\n      finalDrugTrendsChartData.push({ totalSum: allDrugs})\r\n\r\n      finalDrugsAndGenotypesChartData.sort((a, b) => b.total - a.total)\r\n      finalDrugsAndGenotypesChartData = finalDrugsAndGenotypesChartData.slice(0, finalDrugsAndGenotypesChartData.length >= 5 ? 5 : finalDrugsAndGenotypesChartData.length)\r\n      finalDrugsAndGenotypesChartData.push({ totalSum: totalSum})\r\n\r\n      if (!arraysEqual(finalDrugTrendsChartData, drugTrendsChartData)){\r\n        setDrugTrendsChartData(finalDrugTrendsChartData)\r\n        setDrugTrendsChartDataBackup(finalDrugTrendsChartData)\r\n        if (finalDrugTrendsChartData.length > 1) {\r\n          setBrushDRT([finalDrugTrendsChartData[0].name, finalDrugTrendsChartData[finalDrugTrendsChartData.length - 2].name])\r\n        } else {\r\n          setBrushDRT(['Undefined', 'Undefined'])\r\n        }\r\n        \r\n      }\r\n      if (!arraysEqual(finalDrugsAndGenotypesChartData, drugsAndGenotypesChartData)) {\r\n        setDrugsAndGenotypesChartData(finalDrugsAndGenotypesChartData)\r\n        if (finalDrugsAndGenotypesChartData.length > 1) {\r\n          setBrushRFWG([finalDrugsAndGenotypesChartData[0].name, finalDrugsAndGenotypesChartData[finalDrugsAndGenotypesChartData.length - 2].name])\r\n        } else {\r\n          setBrushRFWG(['Undefined', 'Undefined'])\r\n        }\r\n      }\r\n    }\r\n\r\n    const timeOutId = setTimeout(async () => {\r\n      let filter;\r\n\r\n      filter = 2\r\n      // if (populationStructureFilter === 1) {\r\n      //   filter = 2\r\n      // } else {\r\n      //   filter = 3 /* H58 and Non-H58 */\r\n      // }\r\n\r\n      let genotypeChartResponse = await axios.get(`${API_ENDPOINT}filters/${filter}/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n      parseDataForGenotypeChart(genotypeChartResponse.data)\r\n\r\n      if (actualCountry === \"All\") {\r\n        parseDataForCountryMap(genotypeChartResponse.data)\r\n      }\r\n      else {\r\n        let response = await axios.get(`${API_ENDPOINT}filters/${filter}/all/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n        parseDataForCountryMap(response.data)\r\n      }\r\n\r\n      let drugTrendsChartResponse = await axios.get(`${API_ENDPOINT}filters/drugTrendsChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${dataset}`)\r\n      parseDataForDrugTrendsChart(drugTrendsChartResponse.data)\r\n\r\n      let classChartResponse\r\n      if (amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n        classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${\"Fluoroquinolones (CipI-R)\"}/${dataset}`)\r\n      } else {\r\n        classChartResponse = await axios.get(`${API_ENDPOINT}filters/amrClassChart/${actualCountry === \"All\" ? \"all\" : actualCountry}/${actualTimePeriodRange[0]}/${actualTimePeriodRange[1]}/${amrClassFilter}/${dataset}`)\r\n      }\r\n      parseDataForAmrClassChart(classChartResponse.data)\r\n\r\n      setAppLoading((value) => { if (value < 2) return value + 1 })\r\n\r\n    }, 500);\r\n    return () => clearTimeout(timeOutId);\r\n  }, [populationStructureFilter, actualTimePeriodRange, actualCountry, dataset, amrClassFilter, allGenotypes]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function arraysEqual(a1, a2) {\r\n    return JSON.stringify(a1) === JSON.stringify(a2);\r\n  }\r\n\r\n  // const mapSamplesColorScale = scaleLinear()\r\n  //   .domain([1, samplesQty / 5, 2 * (samplesQty / 5), 3 * (samplesQty / 5), 4 * (samplesQty / 5), samplesQty])\r\n  //   .range([\"#4575b4\", \"#91bfdb\", \"#e0f3f8\", \"#fee090\", \"#fc8d59\", \"#d73027\"]);\r\n\r\n  const mapSamplesColorScale = (domain) => {\r\n    if (domain >= 1 && domain <= 9) {\r\n      return '#4575b4'\r\n    } else if (domain >= 10 && domain <= 19) {\r\n      return '#91bfdb'\r\n    } else if (domain >= 20 && domain <= 99) {\r\n      return '#addd8e'\r\n    } else if (domain >= 100 && domain <= 299) {\r\n      return '#fee090'\r\n    } else if (domain >= 300) {\r\n      return '#fc8d59'\r\n    }\r\n  }\r\n\r\n  const [mapRedColorScale] = useState(() => scaleLinear()\r\n    .domain([0, 50, 100])\r\n    .range([\"#ffebee\", \"#f44336\", \"#b71c1c\"]));\r\n\r\n  const tooltip = React.useCallback((positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\r\n    return (\r\n      <Tooltip\r\n        position={{ y: positionY, x: dimensions.width < mobile ? -20 : 0 }}\r\n        wrapperStyle={wrapperS}\r\n        cursor={{ fill: hoverColor }}\r\n        content={({ active, payload, label }) => {\r\n          if (payload !== null) {\r\n            if (payload[0]?.payload.name === \"\") {\r\n              return null;\r\n            }\r\n\r\n            if (sort) {\r\n              payload.sort((a, b) => b.value - a.value)\r\n              payload = payload.reverse()\r\n            }\r\n            if (active) {\r\n              return (\r\n                <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\r\n                  <div style={{display: \"flex\", flexDirection: \"row\", alignItems: 'center'}}>\r\n                    <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\r\n                    {chart === 0 && (<span style={{ fontFamily: \"Montserrat\", fontSize: 16, paddingLeft: 10 }}>{\"N = \" + (actualCountry !== \"All\" ? payload[0].payload.totalS : payload[0].payload.total)}</span>)}\r\n                    {chart === 4 && (<span style={{ fontFamily: \"Montserrat\", fontSize: 16, paddingLeft: 10 }}>{\"N = \" + (actualCountry !== \"All\" ? payload[0].payload.quantities.totalS : payload[0].payload.total)}</span>)}\r\n                    {chart === 1 && (<span style={{ fontFamily: \"Montserrat\", fontSize: 16, paddingLeft: 10 }}>{\"N = \" + payload[0].payload.total}</span>)}\r\n                  </div>\r\n                  <div style={{ height: 14 }} />\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\", width: width1, flexDirection: \"\" }}>\r\n                    {payload.reverse().map((item, index) => {\r\n                      let percentage = ((item.value / item.payload.total) * 100)\r\n                      if (chart === 1) {\r\n                        percentage = ((item.payload.drugsPercentage[item.dataKey] / item.payload.total) * 100)\r\n                      }\r\n                      if (chart === 0 && actualCountry !== \"All\") {\r\n                        percentage = ((item.value / item.payload.totalS) * 100)\r\n                      }\r\n                      percentage = Math.round(percentage * 100) / 100\r\n                      if ((populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4)) {\r\n                        percentage = Math.round(item.value * 100) / 100\r\n                      }\r\n                      if (chart === 1 && item.payload[item.name] === 0) {\r\n                        return null\r\n                      }\r\n                      return (\r\n                        <div key={index + item} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: width2, marginBottom: 8 }}>\r\n                          <div style={{ backgroundColor: stroke ? item.stroke : item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\r\n                          <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8, width: \"95%\" }}>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14, wordWrap: 'break-word', width: dimensions.width < mobile ? '80%' : '100%' }}>{item.name}</span>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {(populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4) ? item.payload.quantities[item.name] : chart === 1 ? item.payload.drugsPercentage[item.dataKey] : item.value}</span>\r\n                            <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n          return null;\r\n        }}\r\n      />\r\n    )\r\n  }, [dimensions, mobile, populationStructureFilter, RFWGFilter, hoverColor, actualCountry])\r\n\r\n  useEffect(() => {\r\n    const plotPopulationStructureChart = () => {\r\n\r\n      if (populationStructureFilter === 1) { /* QUANTITY */\r\n        let maxH = 0\r\n        for (let index = 0; index < populationStructureChartData.length; index++) {\r\n          if (populationStructureChartData[index].total > maxH) {\r\n            maxH = populationStructureChartData[index].total\r\n          }\r\n        }\r\n        maxH = Math.ceil(maxH / 50) * 50\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={populationStructureChartData}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle', fontSize: '' }} offset={6}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {populationStructureChartData.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} onChange={\r\n                (value) => {\r\n                  setBrushGD([\r\n                    populationStructureChartData[value.startIndex].name,\r\n                    populationStructureChartData[value.endIndex].name\r\n                  ])\r\n                }\r\n              } />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", height: 180 }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflowX: 'scroll', height: 180, marginLeft: 68, justifyContent: \"space-between\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", marginBottom: 4, marginLeft: 3, marginRight: 10 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip(280, dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false)}\r\n              {genotypes.map((item) => <Bar dataKey={item} stackId={0} fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else { /* PERCENTAGE */\r\n        let maxH = 100\r\n\r\n        let teste = JSON.parse(JSON.stringify(populationStructureChartData))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (keys[key] !== 'name' && keys[key] !== 'total' && keys[key] !== 'quantities') {\r\n              let aux = keys[key]\r\n              element.quantities[aux] = element[aux]\r\n              element[aux] = (element[aux] * 100) / element.total\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={teste}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n              barCategoryGap={'10%'}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={6}>\r\n                  % Genomes per year\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} onChange={\r\n                (value) => {\r\n                  setBrushGD([\r\n                    teste[value.startIndex].name,\r\n                    teste[value.endIndex].name\r\n                  ])\r\n                }\r\n              } />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", height: 180 }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflowX: 'scroll', height: 180, marginLeft: 68, justifyContent: \"space-between\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", marginBottom: 4, marginLeft: 3, marginRight: 10 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip(280, dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false, 3)}\r\n              {genotypes.map((item) => <Bar dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotPopulationStructureChart(plotPopulationStructureChart)\r\n  }, [dimensions, genotypes, populationStructureChartData, populationStructureFilter, tooltip])\r\n\r\n  useEffect(() => {\r\n    const amrClassChartTooltip = () => {\r\n      return (\r\n        <Tooltip\r\n          position={{ x: 0, y: 250 }}\r\n          wrapperStyle={{ zIndex: 100, top: 50 }}\r\n          allowEscapeViewBox={{ x: true, y: true }}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (active) {\r\n                return (\r\n                  <div style={{ backgroundColor: \"rgba(255,255,255,1)\", border: \"solid rgba(0,0,0,0.25) 1px\", padding: 16, display: \"flex\", flexDirection: \"column\" }}>\r\n                    <span style={{ fontFamily: \"Montserrat\", fontWeight: 600, fontSize: 24 }}>{label}</span>\r\n                    <div style={{ height: 14 }} />\r\n                    <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", width: 250 }}>\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage\r\n                        if (RDWAGDataviewFilter === 1) {\r\n                          percentage = ((item.value / item.payload.total2) * 100)\r\n                        } else {\r\n                          percentage = item.value\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100\r\n                        return (\r\n                          <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: \"33.33%\", marginBottom: 8 }}>\r\n                            <div style={{ backgroundColor: item.fill, height: 18, width: 18, border: \"solid rgb(0,0,0,0.75) 0.5px\", flex: \"none\" }} />\r\n                            <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 8, wordWrap: \"break-word\", overflowX: \"hidden\" }}>\r\n                              <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontWeight: 500, fontSize: 14 }}>{item.name}</span>\r\n                              <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 12 }}>N = {RDWAGDataviewFilter === 2 ? item.payload.percentage[item.name] : item.value}</span>\r\n                              <span style={{ fontFamily: \"Montserrat\", color: \"rgba(0,0,0,0.75)\", fontSize: 10 }}>{percentage}%</span>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }}\r\n        />\r\n      )\r\n    }\r\n\r\n    const armClassFilterComponent = (info) => {\r\n      let maxSum = 0\r\n      if (amrClassChartData[amrClassChartData.length - 1] !== undefined) {\r\n        maxSum = amrClassChartData[amrClassChartData.length - 1].maxSum\r\n      }\r\n\r\n      const dataAMR = amrClassChartData.slice(0, amrClassChartData.length - 1)\r\n\r\n      if (RDWAGDataviewFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={dataAMR}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < middle ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxSum]} type={\"number\"} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={6}>\r\n                  Number of occurrences\r\n                </Label>\r\n              </YAxis>\r\n              {dataAMR.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} onChange={\r\n                (value) => {\r\n                  setBrushRDWAG([\r\n                    dataAMR[value.startIndex].genotype,\r\n                    dataAMR[value.endIndex].genotype\r\n                  ])\r\n                }\r\n              } />)}\r\n  \r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", height: 180 }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflowX: 'scroll', height: 180, marginLeft: 68, justifyContent: amrClassFilter === \"Ampicillin\" ? \"\" : \"space-between\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", marginBottom: 4, marginLeft: 3, marginRight: 10 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n  \r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item) => {\r\n                return (\r\n                  <Bar dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else if (RDWAGDataviewFilter === 2){\r\n        let temp = JSON.parse(JSON.stringify(dataAMR))\r\n\r\n        temp.forEach(element => {\r\n          element.percentage = {}\r\n          for (const key in element) {\r\n            if (![\"genotype\", \"total\", \"total2\", \"percentage\"].includes(key) && !key.includes(\"error\")) {\r\n              const aux = (element[key] * 100) / element.total2\r\n              element.percentage[key] = element[key]\r\n              element[key] = aux\r\n            }\r\n          }\r\n        })\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={temp}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < middle ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} type={\"number\"} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={6}>\r\n                  % Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {temp.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} onChange={\r\n                (value) => {\r\n                  setBrushRDWAG([\r\n                    temp[value.startIndex].genotype,\r\n                    temp[value.endIndex].genotype\r\n                  ])\r\n                }\r\n              } />)}\r\n              \r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", height: 180 }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflowX: 'scroll', height: 180, marginLeft: 68, justifyContent: amrClassFilter === \"Ampicillin\" ? \"\" : \"space-between\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", marginBottom: 4, marginLeft: 3, marginRight: 10 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n  \r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item) => {\r\n                return (\r\n                  <Bar dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n\r\n    const plotAmrClassChart = () => {\r\n      switch (amrClassFilter) {\r\n        case 'Azithromycin':\r\n          return (armClassFilterComponent({\r\n            left: -5, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['ereA', \"#9e9ac8\", \"error-ereA\"],\r\n              ['acrB_R717Q', \"#addd8e\", \"error-acrB_R717Q\"],\r\n              ['acrB_R717L', \"#FBCFE5\", \"error-acrB_R717L\"],\r\n              ['ereA-acrB_R717Q', \"#FFEC78\", \"error-ereA-acrB_R717Q\"],\r\n              ['ereA-acrB_R717L', \"#66c2a4\", \"error-ereA-acrB_R717L\"],\r\n              ['acrB_R717Q-acrB_R717L', \"#fd8d3c\", \"error-acrB_R717Q-acrB_R717L\"],\r\n              ['ereA-acrB_R717Q-acrB_R717L', \"#6baed6\", \"error-ereA-acrB_R717Q-acrB_R717L\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n          }))\r\n        case 'Fluoroquinolones (CipI/R)':\r\n          return (armClassFilterComponent({\r\n            left: 10, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['3_QRDR', \"#6baed6\", \"error-3_QRDR\"],\r\n              ['2_QRDR', \"#FFEC78\", \"error-2_QRDR\"],\r\n              ['1_QRDR + qnrS', \"#66c2a4\", \"error-1_QRDR + qnrS\"],\r\n              ['1_QRDR', \"#FBCFE5\", \"error-1_QRDR\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"],\r\n              ['0_QRDR + qnrS', \"#8D8D8D\", \"error-0_QRDR + qnrS\"]]\r\n          }))\r\n        case 'Chloramphenicol':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['cmlA', \"#addd8e\", \"error-cmlA\"],\r\n              ['catA1', \"#9e9ac8\", \"error-catA1\"],\r\n              [\"catA1-cmlA\", \"#FFEC78\", \"error-catA1-cmlA\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n          }))\r\n        case 'Ampicillin':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaTEM-1D', \"#addd8e\", \"error-blaTEM-1D\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Sulphonamides':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['sul2', \"#ffeda0\", \"error-sul2\"],\r\n              ['sul1', \"#fd8d3c\", \"error-sul1\"],\r\n              ['sul1-sul2', \"#B4DD70\", \"error-sul1-sul2\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Trimethoprim':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['dfrA7', \"#FFEC78\", \"error-dfrA7\"],\r\n              ['dfrA5', \"#D7AEF7\", \"error-dfrA5\"],\r\n              ['dfrA18', \"#66c2a4\", \"error-dfrA18\"],\r\n              ['dfrA17', \"#FCB469\", \"error-dfrA17\"],\r\n              ['dfrA15', \"#FBCFE5\", \"error-dfrA15\"],\r\n              ['dfrA14', \"#6baed6\", \"error-dfrA14\"],\r\n              ['dfrA1', \"#B4DD70\", \"error-dfrA1\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        case 'Co-trimoxazole':\r\n          let cotrim = [\"dfrA1\", \"dfrA5\", \"dfrA7\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\"];\r\n          let colors1 = [\"#ffeda0\", \"#fd8d3c\", \"#addd8e\", \"#9e9ac8\", \"#6baed6\", \"#7a0177\", \"#54278f\"]\r\n          let colors2 = [\"#a50f15\", \"#6a5acd\", \"#f1b6da\", \"#fb8072\", \"#4682b4\", \"#2e8b57\", \"#98fb98\"]\r\n          let colors3 = [\"#fcc5c0\", \"#bcbddc\", \"#fdd0a2\", \"#c994c7\", \"#9ecae1\", \"#a8ddb5\", \"#fc9272\"]\r\n          let bars = [['None', \"#B9B9B9\", \"error-None\"]]\r\n\r\n          for (const index in cotrim) {\r\n            bars.push([cotrim[index] + \"-sul1\", colors1[index], \"error-\" + cotrim[index] + \"-sul1\"])\r\n            bars.push([cotrim[index] + \"-sul2\", colors2[index], \"error-\" + cotrim[index] + \"-sul2\"])\r\n            bars.push([cotrim[index] + \"-sul1-sul2\", colors3[index], \"error-\" + cotrim[index] + \"-sul1-sul2\"])\r\n          }\r\n\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: bars\r\n          }))\r\n        case 'Tetracyclines':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['tetA(D)', getColorForTetracyclines('tetA(D)'), \"error-tetA(D)\"],\r\n              ['tetA(C)', getColorForTetracyclines('tetA(C)'), \"error-tetA(C)\"],\r\n              ['tetA(B)', getColorForTetracyclines('tetA(B)'), \"error-tetA(B)\"],\r\n              ['tetA(A)', getColorForTetracyclines('tetA(A)'), \"error-tetA(A)\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]\r\n            ]\r\n            // ['tetA(AB)', getColorForTetracyclines('tetA(AB)'), \"error-tetA(AB)\"],\r\n            // ['tetA(ABC)', getColorForTetracyclines('tetA(ABC)'), \"error-tetA(ABC)\"],\r\n            // ['tetA(ABCD)', getColorForTetracyclines('tetA(ABCD)'), \"error-tetA(ABCD)\"],\r\n            // ['tetA(ABD)', getColorForTetracyclines('tetA(ABD)'), \"error-tetA(ABD)\"],\r\n            // ['tetA(AC)', getColorForTetracyclines('tetA(AC)'), \"error-tetA(AC)\"],\r\n            // ['tetA(AD)', getColorForTetracyclines('tetA(AD)'), \"error-tetA(AD)\"],\r\n            // ['tetA(ACD)', getColorForTetracyclines('tetA(ACD)'), \"error-tetA(ACD)\"],\r\n            // ['tetA(BC)', getColorForTetracyclines('tetA(BC)'), \"error-tetA(BC)\"],\r\n            // ['tetA(BD)', getColorForTetracyclines('tetA(BD)'), \"error-tetA(BD)\"],\r\n            // ['tetA(BCD)', getColorForTetracyclines('tetA(BCD)'), \"error-tetA(BCD)\"],\r\n            // ['tetA(CD)', getColorForTetracyclines('tetA(CD)'), \"error-tetA(CD)\"]]\r\n          }))\r\n        // case 'AMR Profiles':\r\n        //   return (armClassFilterComponent({\r\n        //     left: dimensions.width > desktop ? 12 : -30, fontsize: dimensions.width > desktop ? 14 : 5, strokeWidth: 0.5, width: 3, bars: [\r\n        //       ['No AMR detected', getColorForAMR('No AMR detected'), \"error-No AMR detected\"],\r\n        //       ['MDR_DCS', getColorForAMR('MDR_DCS'), \"error-MDR_DCS\"],\r\n        //       ['MDR', getColorForAMR('MDR'), \"error-MDR\"],\r\n        //       ['DCS', getColorForAMR('DCS'), \"error-DCS\"],\r\n        //       ['AzithR_MDR', getColorForAMR('AzithR_MDR'), \"error-AzithR_MDR\"],\r\n        //       ['AzithR_DCS', getColorForAMR('AzithR_DCS'), \"error-AzithR_DCS\"],\r\n        //       ['AzithR_DCS_MDR', getColorForAMR('AzithR_DCS_MDR'), \"error-AzithR_DCS_MDR\"],\r\n        //       ['XDR', getColorForAMR('XDR'), \"error-XDR\"],\r\n        //       ['AMR', getColorForAMR('AMR'), \"error-AMR\"],\r\n        //       ['AMR_DCS', getColorForAMR('AMR_DCS'), \"error-AMR_DCS\"]]\r\n        //   }))\r\n        case 'ESBL':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaSHV-12', \"#addd8e\", \"error-blaSHV-12\"],\r\n              ['blaOXA-7', \"#9e9ac8\", \"error-blaOXA-7\"],\r\n              ['blaCTX-M-15_23', \"#6baed6\", \"error-blaCTX-M-15_23\"],\r\n              ['blaCTX-M-55', \"#FBCFE5\", \"error-blaCTX-M-55\"],\r\n              ['None', \"#B9B9B9\", \"error-None\"]]\r\n          }))\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    setPlotAmrClassChart(plotAmrClassChart)\r\n  }, [hoverColor, RDWAGDataviewFilter, amrClassFilter, dimensions, amrClassChartData, desktop, middle])\r\n\r\n  useEffect(() => {\r\n    // const CustomizedDot = (props) => {\r\n    //   const { cx, cy, stroke, payload, value, dataKey } = props;\r\n\r\n    //   if (value !== undefined) {\r\n    //     switch (dataKey) {\r\n    //       case \"Azithromycin\":\r\n    //         return (\r\n    //           <svg x={cx - 6} y={cy - 7} width={120} height={120} fill={getColorForDrug(dataKey)} viewBox=\"0 0 1024 1024\">\r\n    //             <path d=\"M 50,5 95,97.5 5,97.5 Z\"/>\r\n    //           </svg>\r\n    //         );\r\n    //       case \"Chloramphenicol\":\r\n    //         return (\r\n    //           <svg x={cx - 7} y={cy - 7} width={160} height={160} fill={getColorForDrug(dataKey)} viewBox=\"0 0 1024 1024\">\r\n    //             <path d=\"M 25, 50 a 25,25 0 1,1 50,0 a 25,25 0 1,1 -50,0\"/>\r\n    //           </svg>\r\n    //         );\r\n    //       case \"Fluoroquinolones (CipI/R)\":\r\n    //         return (\r\n    //           <svg x={cx - 7} y={cy - 7} width={160} height={160} fill=\"black\" viewBox=\"0 0 1024 1024\">\r\n    //             {/* <path d=\"M0,0 150,0 150,50 0,50\" /> */}\r\n    //           </svg>\r\n    //         );\r\n    //       default:\r\n    //         return (\r\n    //           <svg x={cx - 7} y={cy - 5} width={1} height={1} fill=\"transparent\" viewBox=\"0 0 1024 1024\"></svg>\r\n    //         );\r\n    //     }\r\n    //   }\r\n    //   return (\r\n    //     <svg x={cx - 7} y={cy - 5} width={1} height={1} fill=\"transparent\" viewBox=\"0 0 1024 1024\"></svg>\r\n    //   );\r\n    // };\r\n\r\n    const plotDrugTrendsChart = () => {\r\n      let dataDRT = drugTrendsChartData.slice(0, drugTrendsChartData.length - 1)\r\n      for (const index in dataDRT) {\r\n        for (const i in trendClassesForFilter) {\r\n          if (!((trendClassesForFilter[i].toString()) in dataDRT[index])) {\r\n            dataDRT[index][trendClassesForFilter[i]] = 0\r\n            dataDRT[index].drugsPercentage[trendClassesForFilter[i]] = 0\r\n          }\r\n        }\r\n      }\r\n\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <LineChart\r\n            height={500}\r\n            data={dataDRT}\r\n            margin={{\r\n              top: 20, bottom: 5, right: 0, left: -5\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis padding={{ left: 20, right: 20 }} dataKey=\"name\" interval={\"preserveStartEnd\"} tick={{fontSize: 14}} />\r\n            <YAxis tickCount={6} padding={{ top: 20, bottom: 20 }} allowDecimals={false} width={70}>\r\n              <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={12}>\r\n                Resistant (%)\r\n              </Label>\r\n            </YAxis>\r\n            {drugTrendsChartData.slice(0, drugTrendsChartData.length - 1).length > 0 && (\r\n              <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} onChange={(value)=>{\r\n                setBrushDRT([\r\n                  drugTrendsChartData[value.startIndex].name,\r\n                  drugTrendsChartData[value.endIndex].name\r\n                ])\r\n              }}/>\r\n            )}\r\n\r\n            <Legend\r\n              content={(props) => {\r\n                const { payload } = props;\r\n                return (\r\n                  <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'flex-end' }}>\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\", paddingLeft: 68, marginTop: 10 }}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry\r\n                        return (\r\n                          <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", width: dimensions.width < 1585 ? 120: '19%', marginBottom: 4, marginLeft: 3, marginRight: 3 }}>\r\n                            <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                            <span style={{ fontSize: 12, paddingLeft: 4, fontFamily: 'Montserrat' }}>{dataKey}</span>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n            {tooltip(310, dimensions.width < mobile ? 250 : 325, \"50%\", true, { zIndex: 100, top: 175, right: 0 }, true, 1)}\r\n            {/* {trendClassesForFilter.slice(1).map((item) => (<Line dataKey={item} strokeWidth={2} stroke={getColorForDrug(item)} connectNulls type=\"monotone\" />))} */}\r\n            {trendClassesForFilter.map((item) => (<Line dataKey={item} strokeWidth={2} stroke={getColorForDrug(item)} connectNulls type=\"monotone\" />))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n\r\n    setPlotDrugTrendsChart(plotDrugTrendsChart)\r\n  }, [trendClassesForFilter, dimensions, drugTrendsChartData, tooltip, mobile])\r\n\r\n  useEffect(() => {\r\n    const plotDrugsAndGenotypesChart = () => {\r\n      if (RFWGFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={500}\r\n              data={drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1)}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis allowDecimals={false} width={75}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={12}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} onChange={\r\n                  (value) => {\r\n                    setBrushRFWG([\r\n                      drugsAndGenotypesChartData[value.startIndex].name,\r\n                      drugsAndGenotypesChartData[value.endIndex].name\r\n                    ])\r\n                  }\r\n                }/>\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'flex-end' }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", paddingLeft: 73, marginTop: 10, justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", width: dimensions.width < 1585 ? 120: '19%', marginBottom: 4, marginLeft: 3, marginRight: 3 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip(325, dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 0)}\r\n              {/* {drtClassesForFilter.slice(1).map((item) => (<Bar dataKey={item} fill={getColorForDrug(item)} />))} */}\r\n              {drtClassesForFilter.map((item) => (<Bar dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else {\r\n        let teste = JSON.parse(JSON.stringify(drugsAndGenotypesChartData.slice(0, drugsAndGenotypesChartData.length - 1)))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (keys[key] !== 'name' && keys[key] !== 'total' && keys[key] !== 'quantities') {\r\n              let aux = keys[key]\r\n              element.quantities[aux] = element[aux]\r\n              if (actualCountry === \"All\") {\r\n                element[aux] = (element[aux] * 100) / element.total\r\n              } else {\r\n                element[aux] = (element[aux] * 100) / element.totalS\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={500}\r\n              data={teste}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' style={{ textAnchor: 'middle' }} offset={12}>\r\n                  Percentage within genotype (%)\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} onChange={\r\n                (value) => {\r\n                  setBrushRFWG([\r\n                    teste[value.startIndex].name,\r\n                    teste[value.endIndex].name\r\n                  ])\r\n                }\r\n              } />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'flex-end' }}>\r\n                      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", paddingLeft: 68, justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\", marginTop: 10 }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"start\", width: dimensions.width < 1585 ? 120: '19%', marginBottom: 4, marginLeft: 3, marginRight: 3 }}>\r\n                              <div style={{ height: 8, width: 8, borderRadius: 4, marginTop: 3, backgroundColor: color, flexShrink: 0 }} />\r\n                              <span style={{ fontSize: 12, paddingLeft: 4 }}>{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip(325, dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 4)}\r\n              {/* {drtClassesForFilter.slice(1).map((item) => (<Bar dataKey={item} fill={getColorForDrug(item)} />))} */}\r\n              {drtClassesForFilter.map((item) => (<Bar dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotDrugsAndGenotypesChart(plotDrugsAndGenotypesChart)\r\n  }, [actualCountry, drtClassesForFilter, dimensions, drugsAndGenotypesChartData, tooltip, mobile, RFWGFilter])\r\n\r\n  function imgOnLoadPromise(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      obj.onload = () => resolve(obj);\r\n      obj.onerror = reject;\r\n    });\r\n  }\r\n\r\n  const [stopLoading] = useState(() => (index) => {\r\n    switch (index) {\r\n      case 0: setCaptureControlMapInProgress(false)\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(false)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(false)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(false)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(false)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  })\r\n\r\n  const [capturePicture] = useState(() => async (id, index, info={}) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(true)\r\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(true)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(true)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(true)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(true)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (info.dataset === \"full\") {\r\n      info.dataset = \"All\"\r\n    } else if (info.dataset === \"local\") {\r\n      info.dataset = \"Travel\"\r\n    } else {\r\n      info.dataset = \"Local\"\r\n    }\r\n\r\n    const names = [\"Resistance frequencies within genotypes\", \"Drug resistance trends\", \"Genotype distribution\", \"Resistance determinants within all genotypes\"]\r\n    const brokenNames = [[\"Resistance frequencies\", \"within genotypes\"], [\"Resistance determinants\", \"within all genotypes\"]]\r\n    \r\n    if (index === 5) {\r\n      let ids = [\"RFWG\", \"RFWAG\", \"DRT\", \"GD\"]\r\n\r\n      var doc = new jsPDF({unit: 'mm', format: 'a4', orientation: 'l'});\r\n\r\n      let typhinetLogo = new Image();\r\n      typhinetLogo.src = typhinetLogoImg2;\r\n      doc.addImage(typhinetLogo, 'PNG', 115, 0, 80, 34)\r\n      doc.setFontSize(16);\r\n      const paragraph1 = \"Nunc ultrices blandit urna mollis porttitor. Vivamus viverra imperdiet justo, vitae fermentum elit accumsan placerat. Maecenas malesuada tincidunt rhoncus. Sed quam mauris, lacinia ac nisi consectetur, tincidunt pulvinar mauris. Proin ultricies quam sit amet dolor faucibus, at aliquam leo porttitor. Morbi at molestie nulla. Mauris porta lacus at augue facilisis volutpat. Suspendisse justo odio, congue nec diam ut, pretium blandit arcu. Duis vel leo euismod, pretium ante sit amet, viverra nibh.\"\r\n      const paragraph2 = \"Quisque in tortor dignissim, mollis augue ac, sollicitudin ex. Quisque quis accumsan erat. Suspendisse sed nulla id ante fringilla sodales. Etiam sed pulvinar ex. Integer rutrum dolor a lobortis semper. Praesent fermentum feugiat justo ultrices facilisis. Etiam non sem ac ante rhoncus pretium eget eget dui. Duis non mollis nisl. Nullam id elementum augue, eget feugiat felis. Integer posuere nec sapien quis scelerisque. Etiam ut tortor dignissim, bibendum metus a, varius lectus. Nunc sollicitudin fringilla enim nec auctor. In vel rhoncus arcu. Morbi sed blandit libero.\"\r\n      doc.text(paragraph1, 10, 50, {align: 'justify', maxWidth: 130})\r\n      doc.text(paragraph2, 155, 50, {align: 'justify', maxWidth: 130})\r\n\r\n      doc.addPage('a4', 'l')\r\n      doc.setFontSize(25);\r\n      doc.text(\"Global overview Salmonella Typhi\", 80, 15);\r\n      \r\n      await svgAsPngUri(document.getElementById('control-map'), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200} )\r\n        .then(async (uri) => {\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          canvas.width = 1400;\r\n          canvas.height = 700;\r\n          ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n          var img = canvas.toDataURL(\"image/png\")\r\n          doc.addImage(img, \"PNG\", 0, 18, 298, 155);\r\n        })\r\n      \r\n      let actualMapView = info.mapView\r\n      switch (actualMapView) {\r\n        case \"MDR\":\r\n          actualMapView = \"Multidrug resistant (MDR)\"\r\n          break;\r\n        case \"XDR\":\r\n          actualMapView = \"Extremely drug resistant (XDR)\"\r\n          break;\r\n        case \"Azith\":\r\n          actualMapView = \"Azithromycin resistant\"\r\n          break;\r\n        case \"CipI\":\r\n          actualMapView = \"Ciprofloxacin insusceptible (CipI)\"\r\n          break;\r\n        case \"CipR\":\r\n          actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n          break;\r\n        case \"H58 / Non-H58\":\r\n          actualMapView = \"H58 genotype\"\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      \r\n      doc.setFontSize(14);\r\n      doc.text(\"Map view: \" + actualMapView, 10, 180);\r\n      doc.text(\"Dataset: \" + info.dataset, 10, 187);\r\n      doc.text(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 10, 194);\r\n      doc.text(\"Country: \" + info.country, 10, 201);\r\n      \r\n      if (info.mapView === 'Dominant Genotype') {\r\n        var img = new Image()\r\n        img.src = \"legends/MV_DG.png\"\r\n        doc.addImage(img, 'PNG', 90, 175, 160, 33)\r\n      } else if (info.mapView === 'No. Samples') {\r\n        var img2 = new Image()\r\n        img2.src = \"legends/MV_NS.png\"\r\n        doc.addImage(img2, 'PNG', 260, 170, 28, 35)\r\n      } else {\r\n        var img3 = new Image()\r\n        img3.src = \"legends/MV_outros.png\"\r\n        doc.addImage(img3, 'PNG', 260, 165, 30, 40)\r\n      }\r\n      \r\n      doc.addPage('a4', 'l')\r\n      const names2 = [\"Resistance frequencies within genotypes\", \"Resistance determinants within all genotypes\", \"Drug resistance trends\", \"Genotype distribution\"]\r\n      for (let index = 0; index < ids.length; index++) {\r\n        let legend\r\n        // let brush\r\n        const graph = document.getElementById(ids[index])\r\n        if (index === 1 || index === 3) {\r\n          legend = graph.getElementsByClassName('recharts-legend-wrapper')[0];\r\n          legend.style.display = 'none'\r\n        }\r\n        // brush = graph.getElementsByClassName('recharts-brush')[0];\r\n        // if (brush !== undefined) {\r\n        //   brush.style.display = 'none'\r\n        // }\r\n\r\n        let url\r\n        await domtoimage.toPng(document.getElementById(ids[index]), { quality: 1, bgcolor: \"white\" })\r\n          .then(function (dataUrl) {\r\n            url = dataUrl\r\n          });\r\n\r\n        if (index === 1 || index === 3) {\r\n          legend.style.display = 'block'\r\n        }\r\n        // if (brush !== undefined) {\r\n        //   brush.style.display = 'block'\r\n        // }\r\n\r\n        let subtitleH = 0\r\n        if (index === 0 || index === 3) {\r\n          subtitleH = 3\r\n        }\r\n        subtitleH += 3\r\n\r\n\r\n        if (index === 2 && dimensions.width >= desktop) {\r\n          doc.addImage(url, \"PNG\", 5, 15 + subtitleH - 21);\r\n        } else {\r\n          doc.addImage(url, \"PNG\", 5, 15 + subtitleH);\r\n        }\r\n\r\n        let imgWidth = jsPDF.API.getImageProperties(url).width\r\n        imgWidth = Math.floor(imgWidth * 0.264583)\r\n        doc.setFontSize(11)\r\n        const texts = [\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec dictum lorem sit amet auctor hendrerit. Morbi ut pulvinar leo, et dignissim tortor. Cras eget diam dignissim leo volutpat pharetra. Proin blandit consequat eleifend. Pellentesque imperdiet luctus aliquet. Sed vel tortor eros. Praesent interdum, tellus sit amet accumsan tincidunt, nisi magna interdum lorem, quis rhoncus eros massa ac risus.\",\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec dictum lorem sit amet auctor hendrerit. Morbi ut pulvinar leo, et dignissim tortor. Cras eget diam dignissim leo volutpat pharetra. Proin blandit consequat eleifend. Pellentesque imperdiet luctus aliquet. Sed vel tortor eros. Praesent interdum, tellus sit amet accumsan tincidunt, nisi magna interdum lorem, quis rhoncus eros massa ac risus.\",\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec dictum lorem sit amet auctor hendrerit. Morbi ut pulvinar leo, et dignissim tortor. Cras eget diam dignissim leo volutpat pharetra. Proin blandit consequat eleifend. Pellentesque imperdiet luctus aliquet. Sed vel tortor eros. Praesent interdum, tellus sit amet accumsan tincidunt, nisi magna interdum lorem, quis rhoncus eros massa ac risus.\",\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec dictum lorem sit amet auctor hendrerit. Morbi ut pulvinar leo, et dignissim tortor. Cras eget diam dignissim leo volutpat pharetra. Proin blandit consequat eleifend. Pellentesque imperdiet luctus aliquet. Sed vel tortor eros. Praesent interdum, tellus sit amet accumsan tincidunt, nisi magna interdum lorem, quis rhoncus eros massa ac risus.\"\r\n        ]\r\n        let spaceBetween = -4\r\n        if (dimensions.width < 1750) {\r\n          spaceBetween = 13\r\n        }\r\n        doc.text(texts[index], imgWidth + spaceBetween, 23 + subtitleH, {align: 'justify', maxWidth: 50})\r\n\r\n\r\n        doc.setFontSize(14)\r\n        doc.text(names2[index], 23, 10)\r\n        doc.setFontSize(9)\r\n\r\n        if (index === 0) {\r\n          doc.text(\"Top Genotypes (up to 5)\", 23, 15)\r\n        }\r\n        if (index === 3) {\r\n          doc.text(\"Top Genotypes (up to 10)\", 23, 15)\r\n        }\r\n\r\n        const brushInterval = info.brush[index]\r\n\r\n        if (index === 1 || index === 2) {\r\n          doc.text(\"Interval: \" + brushInterval[0] + \" to \" + brushInterval[1], 23, 15)\r\n        } else {\r\n          doc.text(\"Interval: \" + brushInterval[0] + \" to \" + brushInterval[1], 23, 20)\r\n        }\r\n\r\n        if (index === 1) {\r\n          var img4 = new Image()\r\n          if (amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            img4.src = \"legends/Fluoroquinolones (CipI-R).png\"\r\n          } else {\r\n            img4.src = \"legends/\" + info.amrClassFilter + \".png\"\r\n          }\r\n          doc.addImage(img4, 'PNG', 22, 105 + subtitleH)\r\n        } else if (index === 3) {\r\n          var img5 = new Image()\r\n          img5.src = \"legends/GD.png\"\r\n          doc.addImage(img5, 'PNG', 22, 105 + subtitleH)\r\n        }\r\n        if (index < ids.length - 1) {\r\n          doc.addPage('a4', 'l')\r\n        }\r\n      }\r\n\r\n      doc.save(\"TyphiNET - Global Overview.pdf\");\r\n      setCaptureReportInProgress(false);\r\n\r\n    } else if (index !== 0) {\r\n\r\n      let graph = document.getElementById(id)\r\n      let canvas = document.createElement(\"canvas\")\r\n      let ctx = canvas.getContext('2d');\r\n      let graphImg = document.createElement(\"img\");\r\n      let graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      var legend = graph.getElementsByClassName('recharts-legend-wrapper')[0];\r\n      // var brush = graph.getElementsByClassName('recharts-brush')[0];\r\n  \r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        legend.style.display = 'none'\r\n      }\r\n      // brush.style.display = 'none'\r\n\r\n      await domtoimage.toPng(graph, { quality: 0.1, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          graphImg.src = dataUrl;\r\n          legend.style.display = 'block'\r\n          // brush.style.display = 'block'\r\n        });\r\n      \r\n      let cHeight = 20\r\n      let logoHeight = 50\r\n      let legendHeight = 0\r\n      let filterHeight = 80\r\n      let subtitleHeight = 0\r\n      if (id === \"RFWG\" || id === \"RFWAG\") {\r\n        cHeight += 20\r\n        subtitleHeight = 20\r\n      }\r\n      let imgHeight = graphImg.height\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        imgHeight -= 180\r\n      }\r\n      if (id === \"GD\") {\r\n        legendHeight = 40\r\n      }\r\n      let imgWidth = graphImg.width\r\n      if (id === \"RFWAG\") {\r\n        imgWidth += 130\r\n        if (info.amrClassFilter === \"Co-trimoxazole\") {\r\n          imgWidth += 120\r\n        }\r\n      } else if (id === \"GD\") {\r\n        imgWidth += 370\r\n      }\r\n\r\n      await graphImgPromise;\r\n      canvas.width = imgWidth;\r\n\r\n      let DRTHeight = 0\r\n      if (id === \"DRT\" && dimensions.width >= desktop) {\r\n        DRTHeight = 76\r\n      }\r\n      canvas.height = imgHeight + cHeight + logoHeight + legendHeight + filterHeight + subtitleHeight + 40 - DRTHeight;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"18px Montserrat\"\r\n      ctx.fillStyle = \"black\";\r\n      ctx.textAlign = \"center\";\r\n\r\n      if (id === \"DRT\" && dimensions.width >= desktop) {\r\n        ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight - DRTHeight);\r\n      } else {\r\n        ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight);\r\n      }\r\n\r\n      if (id === \"RFWG\") {\r\n        ctx.fillText(brokenNames[0][0], canvas.width/2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[0][1], canvas.width/2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Top Genotypes (up to 5)\", canvas.width/2, 32 + logoHeight + subtitleHeight)\r\n      } else if (id === \"RFWAG\") {\r\n        ctx.fillText(brokenNames[1][0], canvas.width/2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[1][1], canvas.width/2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Top Genotypes (up to 10)\", canvas.width/2, 32 + logoHeight + subtitleHeight)\r\n      }else{\r\n        ctx.fillText(names[index - 1], canvas.width/2, 10 + logoHeight)\r\n      }\r\n\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        let legendImg = document.createElement(\"img\")\r\n        let legendImgPromise = imgOnLoadPromise(legendImg)\r\n        if (id === \"RFWAG\") {\r\n          if (amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            legendImg.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            legendImg.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n          \r\n        } else {\r\n          legendImg.src = \"legends/GD2.png\";\r\n        }\r\n        await legendImgPromise;\r\n\r\n        if (id === \"DRT\" && dimensions.width >= desktop) {\r\n          ctx.drawImage(legendImg, graphImg.width, logoHeight + subtitleHeight + 12 + cHeight - DRTHeight);\r\n        } else {\r\n          ctx.drawImage(legendImg, graphImg.width, logoHeight + subtitleHeight + 12 + cHeight);\r\n        }\r\n      }\r\n\r\n      let typhinetLogo = document.createElement(\"img\");\r\n      let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n      typhinetLogo.src = typhinetLogoImg2;\r\n      await typhinetLogoPromise;\r\n      ctx.drawImage(typhinetLogo, 0, 0, 120, 50);\r\n\r\n      ctx.fillStyle = \"black\"\r\n      ctx.font = \"14px Montserrat\"\r\n      ctx.textAlign = \"start\"\r\n      ctx.fillText(\"Dataset: \" + info.dataset, 10, canvas.height - 90)\r\n      ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 10, canvas.height - 68)\r\n      ctx.fillText(\"Country: \" + info.country, 10, canvas.height - 46)\r\n      ctx.fillText(\"Interval: \" + info.interval[0] + \" to \" + info.interval[1], 10, canvas.height - 24)\r\n\r\n      const base64 = canvas.toDataURL();\r\n      stopLoading(index)\r\n      download(base64, \"TiphyNET - \" + names[index - 1] + \".png\");\r\n    } else {\r\n      svgAsPngUri(document.getElementById(id), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          let cWidth = 3600\r\n          let cHeight = 1800\r\n          let textHeight = 240\r\n          let legendHeight = 0\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendHeight = 440\r\n          }\r\n\r\n          canvas.width = cWidth;\r\n          canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n          ctx.fillStyle = \"white\";\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n          ctx.font = \"bolder 50px Montserrat\"\r\n          ctx.fillStyle = \"black\";\r\n          ctx.textAlign = \"center\";\r\n          ctx.fillText(\"Global overview Salmonella Typhi\", canvas.width/2, 80)\r\n          ctx.font = \"35px Montserrat\"\r\n          ctx.textAlign = \"center\";\r\n\r\n          let actualMapView = info.mapView\r\n          switch (actualMapView) {\r\n            case \"MDR\":\r\n              actualMapView = \"Multidrug resistant (MDR)\"\r\n              break;\r\n            case \"XDR\":\r\n              actualMapView = \"Extremely drug resistant (XDR)\"\r\n              break;\r\n            case \"Azith\":\r\n              actualMapView = \"Azithromycin resistant\"\r\n              break;\r\n            case \"CipI\":\r\n              actualMapView = \"Ciprofloxacin insusceptible (CipI)\"\r\n              break;\r\n            case \"CipR\":\r\n              actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n              break;\r\n            case \"H58 / Non-H58\":\r\n              actualMapView = \"H58 genotype\"\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          ctx.fillText(\"Map view: \" + actualMapView, canvas.width/2, 140)\r\n          ctx.fillText(\"Dataset: \" + info.dataset, canvas.width/2, 190)\r\n          ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], canvas.width/2, 240)\r\n\r\n          ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n          let legendImg = document.createElement(\"img\");\r\n          let legendImgoPromise = imgOnLoadPromise(legendImg);\r\n          let h\r\n          let w\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendImg.src = \"legends/MV_DG.png\";\r\n            await legendImgoPromise;\r\n            let centerWidth = (canvas.width - 1731)/2\r\n            ctx.drawImage(legendImg, centerWidth, canvas.height - legendHeight, 1731, 400);\r\n          } else if (info.mapView === 'No. Samples') {\r\n            legendImg.src = \"legends/MV_NS.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 300\r\n            ctx.drawImage(legendImg, canvas.width - w - 10, canvas.height - h - 10, w, h);\r\n          } else {\r\n            legendImg.src = \"legends/MV_outros.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 230\r\n            ctx.drawImage(legendImg, canvas.width - w - 20, canvas.height - h - 20, w, h);\r\n          }\r\n\r\n          let typhinetLogo = document.createElement(\"img\");\r\n          let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n          typhinetLogo.src = typhinetLogoImg2;\r\n          await typhinetLogoPromise;\r\n          ctx.drawImage(typhinetLogo, 0, 0, 600, 252);\r\n\r\n          const base64 = canvas.toDataURL();\r\n          stopLoading(index)\r\n          download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n        });\r\n    }\r\n\r\n  })\r\n\r\n  const [dowloadBaseSpreadsheet] = useState(() => () => {\r\n    axios.get(`${API_ENDPOINT}file/download`)\r\n      .then((res) => {\r\n        let cols_to_remove = ['azith_pred_pheno', 'cip_pred_pheno', 'dcs_category', 'amr_category', 'num_qrdr', 'num_acrb', 'ESBL_category', 'chloramphenicol_category', 'tetracycline_category', 'cip_pheno_qrdr_gene', 'dcs_mechanisms', 'num_amr_genes', 'dfra_any', 'sul_any', 'co_trim', 'GENOTYPE_SIMPLE', 'h58_genotypes']\r\n        let indexes = []\r\n        let csv = res.data.split('\\n')\r\n        let lines = []\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',')\r\n          if (line[1] !== '-' && line[2] !== '-') {\r\n            lines.push(line)\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < cols_to_remove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(cols_to_remove[index])\r\n          indexes.push(currentIndex)\r\n        }\r\n\r\n        let newLines = []\r\n        for (let i = 0; i < lines.length; i++) {\r\n          let aux = []\r\n          for (let index = 0; index < lines[i].length; index++) {\r\n            if (!indexes.includes(index)) {\r\n              aux.push(lines[i][index])\r\n            }\r\n          }\r\n          newLines.push(aux)\r\n        }\r\n        let newCSV = \"\"\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = \"\"\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index]\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += \",\"\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += \"\\n\"\r\n          }\r\n          newCSV += aux\r\n        }\r\n\r\n        download(newCSV, 'TyphiNET_Database.csv');\r\n      })\r\n  })\r\n\r\n  const generateMapLegendOptions = () => {\r\n    let percentageSteps = ['1', '25', '50', '75']\r\n    const otherViews = ['CipI', 'CipR', 'Azith', 'Sensitive to all drugs', 'MDR', 'XDR']\r\n\r\n    if (otherViews.includes(mapView)) {\r\n      return (\r\n        <>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color\" style={{ backgroundColor: \"lightgrey\" }} />\r\n            <span>Insufficient data</span>\r\n          </div>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color\" style={{ backgroundColor: \"#727272\" }} />\r\n            <span>0%</span>\r\n          </div>\r\n          {percentageSteps.map((n) => {\r\n            return (\r\n              <div key={n} className=\"samples-info\">\r\n                <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                {n === \"1\" && (<span>{'1 - 24'}%</span>)}\r\n                {n === \"25\" && (<span>{'26 - 50'}%</span>)}\r\n                {n === \"50\" && (<span>{'51 - 75'}%</span>)}\r\n                {n === \"75\" && (<span>{'76 - 100'}%</span>)}\r\n              </div>\r\n            )\r\n          })}\r\n        </>\r\n      )\r\n    }\r\n\r\n    switch (mapView) {\r\n      case 'No. Samples':\r\n        let legends = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300']\r\n        let aux = [1, 10, 20, 100, 300]\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"lightgrey\" }} />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {[...Array(5).keys()].map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapSamplesColorScale(aux[n]) }} />\r\n                  <span>{legends[n]}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'Dominant Genotype':\r\n        return (\r\n          <div style={{ maxHeight: 300, display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"lightgrey\" }} />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {genotypes.map((g, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForGenotype(g) }} />\r\n                  <span>{g}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      case 'H58 / Non-H58':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"lightgrey\" }} />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color\" style={{ backgroundColor: \"#727272\" }} />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((g, n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(g) }} />\r\n                  {g === \"1\" && (<span>{'1 - 24'}%</span>)}\r\n                  {g === \"25\" && (<span>{'26 - 50'}%</span>)}\r\n                  {g === \"50\" && (<span>{'51 - 75'}%</span>)}\r\n                  {g === \"75\" && (<span>{'76 - 100'}%</span>)}\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const renderMapLegend = () => {\r\n    return (\r\n      <div className=\"map-legend\">\r\n        <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 12, marginTop: 2 }}>\r\n          <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\" }}>Select map view</InputLabel>\r\n          <Select\r\n            value={mapView}\r\n            onChange={evt => setMapView(evt.target.value)}\r\n            fullWidth\r\n            style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }}\r\n          >\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'MDR'}>\r\n              Multidrug resistant (MDR)\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'XDR'}>\r\n              Extremely drug resistant (XDR)\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Azith'}>\r\n              Azithromycin resistant\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'CipI'}>\r\n              Ciprofloxacin insusceptible (CipI)\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'CipR'}>\r\n              Ciprofloxacin resistant (CipR)\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Dominant Genotype'}>\r\n              Dominant Genotype\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'H58 / Non-H58'}>\r\n              H58 genotype\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Sensitive to all drugs'}>\r\n              Sensitive to all drugs\r\n            </MenuItem>\r\n            <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'No. Samples'}>\r\n              No. Samples\r\n            </MenuItem>\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'AMR Profiles'}>\r\n              AMR Profiles\r\n            </MenuItem> */}\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Plasmid Incompatibility Type'}>\r\n              Plasmid Incompatibility Type\r\n            </MenuItem> */}\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'DCS'}>\r\n              DCS\r\n            </MenuItem> */}\r\n            {/* <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 14 }} value={'Resistance to Drug'}>\r\n              Resistance to Drug\r\n            </MenuItem> */}\r\n          </Select>\r\n        </FormControl>\r\n        {generateMapLegendOptions()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"menu-bar-mobile\">\r\n        <img className=\"logoImageMenu-mobile\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n      </div>\r\n      <div style={{ padding: dimensions.width > 770 ? '16px 16px 0px 16px' : '16px 0px 0px 0px' }}>\r\n        <div className=\"info-wrapper\">\r\n          {dimensions.width > desktop && (\r\n            <>\r\n              <div style={{ display: \"flex\", flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <img style={{ height: 90, marginBottom: -10 }} src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n              </div>\r\n              <div style={{ width: 16 }} />\r\n            </>\r\n          )}\r\n          <div className=\"card\">\r\n            <span>\r\n              Total Genomes\r\n              <FontAwesomeIcon icon={faInfoCircle} onClick={handleClickOpen2} className=\"icon-info\" />\r\n              <Dialog\r\n                open={open2}\r\n                onClose={handleClose2}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Information\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    155 genome samples absent from TyphiNET DB\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose2} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </span>\r\n            {totalGenomes.length === actualGenomes.length ? (\r\n              <span className=\"value\">{totalGenomes.length}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenomes.length}\r\n                <span className=\"value-total\">/{totalGenomes.length}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ width: 16 }} />\r\n          <div className=\"card\">\r\n            <span>\r\n              Total Genotypes\r\n              <FontAwesomeIcon icon={faInfoCircle} onClick={handleClickOpen} className=\"icon-info\" />\r\n              <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Information\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    Total genotypes present in TyphiNET database / Total genotypes worldwide published\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </span>\r\n            {totalGenotypes.length === actualGenotypes.length ? (\r\n              <span className=\"value\">{totalGenotypes.length}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenotypes.length}\r\n                <span className=\"value-total\">/{totalGenotypes.length}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"map-filters-wrapper\" style={{ flexDirection: 'column' }}>\r\n          <h2 style={{ textAlign: \"center\" }}>Global Overview of <i>Salmonella</i> Typhi</h2>\r\n          <div className=\"map-filters-wrapper-inside\" style={{ flexDirection: dimensions.width > desktop ? 'row' : 'column' }}>\r\n            <div className=\"map-wrapper\">\r\n              <ComposableMap\r\n                id=\"control-map\"\r\n                data-tip=\"\"\r\n                projectionConfig={{\r\n                  rotate: [-10, 0, 0],\r\n                  scale: 210,\r\n                }}\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n              >\r\n                <ZoomableGroup\r\n                  zoom={controlMapPosition.zoom}\r\n                  center={controlMapPosition.coordinates}\r\n                  onMoveEnd={(position) => {\r\n                    setControlMapPosition(position);\r\n                  }}\r\n                >\r\n                  <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Geographies\r\n                    geography={geography}>\r\n                    {({ geographies }) =>\r\n                      geographies.map((geo) => {\r\n                        const sample = worldMapSamplesData.find(s => s.displayName === geo.properties.NAME)\r\n                        \r\n                        const d = worldMapComplementaryData[geo.properties.NAME]; /* .NAME || .NAME_LONG */\r\n                        let country\r\n\r\n                        let fill = \"lightgrey\"\r\n                        let darkGray = \"#727272\"\r\n\r\n                        switch (mapView) {\r\n                          case 'No. Samples':\r\n                            if (sample && sample.count !== 0) {\r\n                              fill = mapSamplesColorScale(sample.count);\r\n                            } else if (sample && sample.count === 0) {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          // case 'AMR Profiles':\r\n                          //   country = worldMapAmrProfilesData.find(s => s.displayName === geo.properties.NAME)\r\n                          //   if (country !== undefined)\r\n                          //     if (country.amrProfiles.length > 0)\r\n                          //       fill = getColorForAMR(country.amrProfiles[0].name);\r\n                          //   break;\r\n                          case 'Dominant Genotype':\r\n                            country = worldMapGenotypesData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              const temp = country.genotypes\r\n                              temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                              if (sample) {\r\n                                fill = getColorForGenotype(temp[0].lineage)\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'H58 / Non-H58':\r\n                            country = worldMapH58Data.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              let countH58 = 0\r\n                              const isH58 = country.genotypes.find(g => g.type === 'H58')\r\n                              if (isH58 !== undefined) {countH58 = isH58.count}\r\n\r\n                              if (country.total >= 20 && countH58 > 0) {\r\n                                fill = mapRedColorScale(isH58.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n\r\n                            // if (country !== undefined) {\r\n                            //   if (country.genotypes[0]) {\r\n                            //     const temp = country.genotypes.find(g => g.type === 'H58')\r\n                            //     const total = country.total;\r\n                            //     if (temp !== undefined && total >= 20) {\r\n                            //       fill = mapRedColorScale(temp.percentage)\r\n                            //     } else if () {\r\n\r\n                            //     }\r\n\r\n\r\n                            //     if (temp === undefined || (temp !== undefined && total < 20)) {\r\n                            //       fill = darkGray\r\n                            //     } else if (temp !== undefined && total >= 20 && temp.count > 0) {\r\n                            //       fill = mapRedColorScale(temp.percentage)\r\n                            //     }\r\n                            //   }\r\n                            // }\r\n                            // else {\r\n                            //   fill = '#F5F4F6'\r\n                            // }\r\n                            break;\r\n                          case 'MDR':\r\n                            country = worldMapMDRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            // else {\r\n                            //   fill = '#F5F4F6'\r\n                            // }\r\n                            break;\r\n                          case 'Sensitive to all drugs':\r\n                            country = worldMapSTADData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            // else {\r\n                            //   fill = '#F5F4F6'\r\n                            // }\r\n                            break;\r\n                          case 'XDR':\r\n                            country = worldMapXDRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            // else {\r\n                            //   fill = '#F5F4F6'\r\n                            // }\r\n                            break;\r\n                          // case 'DCS':\r\n                          //   country = worldMapDCSData.find(s => s.displayName === geo.properties.NAME)\r\n                          //   if (country !== undefined && country.percentage) {\r\n                          //     fill = mapRedColorScale(country.percentage);\r\n                          //   } else if (country !== undefined) {\r\n                          //     fill = '#F5F4F6'\r\n                          //   }\r\n                          //   break;\r\n                          case 'Azith':\r\n                            country = worldMapAZITHData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            // else {\r\n                            //   fill = '#F5F4F6'\r\n                            // }\r\n                            break;\r\n                          case 'CipI':\r\n                            country = worldMapCIPIData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            // else {\r\n                            //   fill = '#F5F4F6'\r\n                            // }\r\n                            break;\r\n                          case 'CipR':\r\n                            country = worldMapCIPRData.find(s => s.displayName === geo.properties.NAME)\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            // else {\r\n                            //   fill = '#F5F4F6'\r\n                            // }\r\n                            break;\r\n                          // case 'Resistance to Drug':\r\n                          //   country = worldMapDrugsData.find(s => s.displayName === geo.properties.NAME)\r\n                          //   if (country !== undefined && country.drugs.length > 0) {\r\n                          //     fill = getColorForDrug(country.drugs[0].name);\r\n                          //   } else if (country !== undefined) {\r\n                          //     fill = '#F5F4F6'\r\n                          //   }\r\n                          //   break;\r\n                          // case 'Plasmid Incompatibility Type':\r\n                          //   country = worldMapPlasmidIncompatibilityTypeData.find(s => s.displayName === geo.properties.NAME)\r\n                          //   if (country !== undefined && country.incTypes.length > 0) {\r\n                          //     fill = getColorForIncType(country.incTypes[0].type);\r\n                          //   } else if (country !== undefined) {\r\n                          //     fill = '#F5F4F6'\r\n                          //   }\r\n                          //   break;\r\n                          default:\r\n                            break;\r\n                        }\r\n\r\n                        return (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            cursor=\"pointer\"\r\n                            fill={fill}\r\n                            onClick={() => {\r\n                              if (d !== undefined && sample !== undefined)\r\n                                setActualCountry(sample.name)\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              const { NAME } = geo.properties;\r\n                              switch (mapView) {\r\n                                case 'No. Samples':\r\n                                  if (sample !== undefined && d !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      additionalInfo: {\r\n                                        samples: sample.count,\r\n                                        genotypes: d.GENOTYPES.TOTAL,\r\n                                        H58: Math.round(d.H58) !== d.H58 ? d.H58.toFixed(2) : d.H58,\r\n                                        MDR: Math.round(d.MDR) !== d.MDR ? d.MDR.toFixed(2) : d.MDR,\r\n                                        XDR: Math.round(d.XDR) !== d.XDR ? d.XDR.toFixed(2) : d.XDR,\r\n                                        DCS: Math.round(d.DCS) !== d.DCS ? d.DCS.toFixed(2) : d.DCS,\r\n                                        CipI: Math.round(d.CipI) !== d.CipI ? d.CipI.toFixed(2) : d.CipI,\r\n                                        CipR: Math.round(d.CipR) !== d.CipR ? d.CipR.toFixed(2) : d.CipR,\r\n                                        AzithR: Math.round(d.AzithR) !== d.AzithR ? d.AzithR.toFixed(2) : d.AzithR,\r\n                                        STAD: Math.round(d.STAD) !== d.STAD ? d.STAD.toFixed(2) : d.STAD\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                // case 'AMR Profiles':\r\n                                //   if (country !== undefined) {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME,\r\n                                //       amrProfilesInfo: country.amrProfiles\r\n                                //     });\r\n                                //   } else {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME\r\n                                //     })\r\n                                //   }\r\n                                //   break;\r\n                                case 'Dominant Genotype':\r\n                                  if (country !== undefined) {\r\n                                    let temp = country.genotypes\r\n                                    temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      genotypeInfo: temp\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'H58 / Non-H58':\r\n                                  if (country !== undefined && country.genotypes.length > 0) {\r\n                                    let countH58 = 0\r\n                                    const isH58 = country.genotypes.find(g => g.type === 'H58')\r\n                                    if (isH58 !== undefined) {countH58 = isH58.count}\r\n\r\n                                    if (country.total >= 20 && countH58 > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        simpleGenotypeInfo: country.genotypes\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n\r\n                                  break;\r\n                                case 'MDR':\r\n                                  if (country !== undefined && country.MDRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        mdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Sensitive to all drugs':\r\n                                  if (country !== undefined && country.STADs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        stadInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'XDR':\r\n                                  if (country !== undefined && country.XDRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        xdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                // case 'DCS':\r\n                                //   if (country !== undefined && country.DCSs.length > 0) {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME,\r\n                                //       dcsInfo: {\r\n                                //         count: country.count,\r\n                                //         percentage: country.percentage,\r\n                                //       }\r\n                                //     });\r\n                                //   } else {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME\r\n                                //     })\r\n                                //   }\r\n                                //   break;\r\n                                case 'Azith':\r\n                                  if (country !== undefined && country.AZs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        azInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipI':\r\n                                  if (country !== undefined && country.CipIs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipIInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipR':\r\n                                  if (country !== undefined && country.CipRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                // case 'Resistance to Drug':\r\n                                //   if (country !== undefined && country.drugs.length > 0) {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME,\r\n                                //       drugsInfo: country.drugs\r\n                                //     });\r\n                                //   } else {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME\r\n                                //     })\r\n                                //   }\r\n                                //   break;\r\n                                // case 'Plasmid Incompatibility Type':\r\n                                //   if (country !== undefined && country.incTypes.length > 0) {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME,\r\n                                //       incTypesInfo: country.incTypes\r\n                                //     });\r\n                                //   } else {\r\n                                //     setTooltipContent({\r\n                                //       name: NAME\r\n                                //     })\r\n                                //   }\r\n                                //   break;\r\n                                default:\r\n                                  break;\r\n                              }\r\n                            }}\r\n                            style={{\r\n                              default: {\r\n                                outline: \"none\",\r\n                              },\r\n                              hover: {\r\n                                fill: \"#CFD8DC\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                              pressed: {\r\n                                fill: \"#FF5722\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              }\r\n                            }}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n                  </Geographies>\r\n                </ZoomableGroup>\r\n\r\n              </ComposableMap>\r\n              {(dimensions.width > desktop) && (\r\n                <div className=\"map-upper-right-buttons\">\r\n                  {renderMapLegend()}\r\n                </div>\r\n              )}\r\n              {(\r\n                <div className=\"map-upper-left-buttons \">\r\n                  <div className=\"map-filters\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span style={{ fontWeight: 600, fontSize: 20, marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        style={{ marginTop: 5 }}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"full\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"global\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"local\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div style={{ marginTop: 4 }}>\r\n                      <Typography gutterBottom style={{ fontWeight: 500, fontFamily: \"Montserrat\", color: \"rgb(117,117,117)\", fontSize: 12 }}>\r\n                        Select time period\r\n                      </Typography>\r\n                      <CustomSlider\r\n                        style={{ marginTop: dimensions.width > desktop ? '' : -5, marginBottom: dimensions.width > desktop ? '' : -5 }}\r\n                        value={actualTimePeriodRange}\r\n                        min={timePeriodRange[0]}\r\n                        max={timePeriodRange[1]}\r\n                        onChange={(evt, value) => {\r\n                          setActualTimePeriodRange(value)\r\n                        }}\r\n                        valueLabelDisplay=\"auto\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"map-lower-left-buttons\">\r\n                <Zoom in={controlMapPosition.zoom !== 1 || controlMapPosition.coordinates.some(c => c !== 0)}>\r\n                  <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Recenter Map</span>} placement=\"right\">\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() => setControlMapPosition({ coordinates: [0, 0], zoom: 1 })}\r\n                    >\r\n                      <FontAwesomeIcon icon={faCrosshairs} />\r\n                    </div>\r\n                  </TooltipMaterialUI>\r\n                </Zoom>\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom In</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom >= 4) return;\r\n                      setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Zoom Out</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom <= 1) return;\r\n                      if (controlMapPosition.zoom / 2 === 1) {\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                      } else {\r\n                        setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n              </div>\r\n              <div className=\"map-lower-right-buttons\">\r\n                <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Map as PNG</span>} placement=\"left\">\r\n                  <div\r\n                    className={`button ${captureControlMapInProgress && \"disabled\"}`}\r\n                    onClick={() => {\r\n                      if (!captureControlMapInProgress)\r\n                      capturePicture('control-map', 0, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange})\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCamera} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                {captureControlMapInProgress && (\r\n                  <CustomCircularProgress\r\n                    size={54}\r\n                    thickness={4}\r\n                    style={{ position: \"absolute\", top: 5, left: -7 }} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {!(dimensions.width > desktop) && (\r\n              <div style={{ marginTop: 16, marginBottom: 8 }}>\r\n                {renderMapLegend()}\r\n              </div>\r\n            )}\r\n            <ReactTooltip>\r\n              {tooltipContent && (\r\n                <div className=\"tooltip-map\">\r\n                  <span className=\"country\">{tooltipContent.name}</span>\r\n                  {tooltipContent.additionalInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Samples: {tooltipContent.additionalInfo.samples}</span>\r\n                      <span>Genotypes: {tooltipContent.additionalInfo.genotypes}</span>\r\n                      <span>H58: {tooltipContent.additionalInfo.H58}%</span>\r\n                      <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\r\n                      <span>XDR: {tooltipContent.additionalInfo.XDR}%</span>\r\n                      <span>DCS: {tooltipContent.additionalInfo.DCS}%</span>\r\n                      <span>AzithR: {tooltipContent.additionalInfo.AzithR}%</span>\r\n                      <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\r\n                      <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\r\n                      <span>Susceptible: {tooltipContent.additionalInfo.STAD}%</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.genotypeInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.genotypeInfo.map((genotype, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForGenotype(genotype.lineage) }} />\r\n                              <span>{genotype.lineage}: {genotype.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.simpleGenotypeInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[0].type}: {tooltipContent.simpleGenotypeInfo[0].count} ({tooltipContent.simpleGenotypeInfo[0].percentage}%)</span>\r\n                      ) : tooltipContent.simpleGenotypeInfo.length > 1 && tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[1].type}: {tooltipContent.simpleGenotypeInfo[1].count} ({tooltipContent.simpleGenotypeInfo[1].percentage}%)</span>\r\n                      ) : (\r\n                        <span>H58: 0 (0%)</span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.mdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>MDR: {tooltipContent.mdrInfo.count} ({tooltipContent.mdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.stadInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Susceptible: {tooltipContent.stadInfo.count} ({tooltipContent.stadInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.xdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>XDR: {tooltipContent.xdrInfo.count} ({tooltipContent.xdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.dcsInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>DCS: {tooltipContent.dcsInfo.count} ({tooltipContent.dcsInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.azInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>AzithR: {tooltipContent.azInfo.count} ({tooltipContent.azInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipIInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipI: {tooltipContent.cipIInfo.count} ({tooltipContent.cipIInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipRInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipR: {tooltipContent.cipRInfo.count} ({tooltipContent.cipRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.drugsInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.drugsInfo.map((drug, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForDrug(drug.name) }} />\r\n                              <span>{drug.name}: {drug.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.amrProfilesInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.amrProfilesInfo.map((amr, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForAMR(amr.name) }} />\r\n                              <span>{amr.name}: {amr.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.incTypesInfo && (\r\n                    <div className=\"additional-info\" style={{ marginTop: 4 }}>\r\n                      {tooltipContent.incTypesInfo.map((incType, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForIncType(incType.type) }} />\r\n                              <span>{incType.type}: {incType.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {(!tooltipContent.incTypesInfo && !tooltipContent.amrProfilesInfo && !tooltipContent.drugsInfo && !tooltipContent.xdrInfo && !tooltipContent.mdrInfo && !tooltipContent.stadInfo && !tooltipContent.dcsInfo && !tooltipContent.azInfo && !tooltipContent.cipIInfo && !tooltipContent.cipRInfo && !tooltipContent.simpleGenotypeInfo && !tooltipContent.genotypeInfo && !tooltipContent.additionalInfo) && (\r\n                    <div className=\"additional-info\">\r\n                      {/* <span>{tooltipContent.smallerThan20 ? \"0%\" : !allCountries.includes(tooltipContent.name) || dataset === 'full' ? 'Insufficient data' : dataset === 'local' ? 'No travel reported' : 'No travel information'}</span> */}\r\n                      <span>{tooltipContent.smallerThan20 ? \"0%\" : 'Insufficient data'}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n        <div className=\"chart-wrapper\" style={{ flexDirection: 'column' }}>\r\n          <h2 style={{ textAlign: \"center\" }}>Now showing: {dataset === \"full\" ? \"All\" : dataset === \"global\" ? \"Local\" : \"Travel\"} data from {actualCountry === \"All\" ? \"all countries\" : actualCountry} from {actualTimePeriodRange.toString().substring(0, 4)} to {actualTimePeriodRange.toString().substring(5)}</h2>\r\n          <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 16, alignItems: \"center\", textAlign: \"center\" }}>\r\n            <label style={{ fontWeight: 500, fontFamily: \"Montserrat\", whiteSpace: \"nowrap\", fontSize: 18 }}>Select country (or click map)</label>\r\n            <Select\r\n              value={actualCountry}\r\n              onChange={evt => setActualCountry(evt.target.value)}\r\n              fullWidth\r\n              style={{ fontWeight: 600, fontFamily: \"Montserrat\", width: 200, textAlign: \"left\" }}\r\n            >\r\n              {countriesForFilter.map((country, index) => {\r\n                return (\r\n                  <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={country}>\r\n                    {country}\r\n                  </MenuItem>\r\n                )\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: dimensions.width > desktop ? \"row\" : \"column\", marginTop: 16, paddingBottom: 20 }}>\r\n              <div style={{ alignItems: 'center', display: \"flex\", flexDirection: \"column\", flex: 0.5, paddingRight: dimensions.width < mobile ? 0 : 10 }}>\r\n                <div style={{ height: 717, width: '100%', maxWidth: 920, display: \"flex\", flexDirection: \"column\" }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span style={{ paddingRight: 32, marginRight: -22, paddingLeft: 35 }} className=\"chart-title\">Resistance frequencies within genotypes</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartRFWGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWGInProgress)\r\n                            capturePicture('RFWG', 1, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry, interval: brushRFWG})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title\" style={{ marginLeft: 45, marginBottom: -8, marginTop: dimensions.width > 1010 ? 5 : dimensions.width > desktop ? 10 : 10, fontSize: 10, fontWeight: 400 }}>Top Genotypes (up to 5)</span>\r\n                  <div style={{ paddingTop: '0px', height: '74px', width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\", paddingBottom: -8 }}>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 5, marginTop: 23 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Data view</InputLabel>\r\n                      <Select\r\n                        value={RFWGFilter}\r\n                        onChange={evt => {\r\n                          setRFWGFilter(evt.target.value)\r\n                          setBrushRFWG([drugsAndGenotypesChartData[0].name, drugsAndGenotypesChartData[drugsAndGenotypesChartData.length - 2].name])\r\n                        }}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      >\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\r\n                          Number of genomes\r\n                        </MenuItem>\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\r\n                          Percentage within genotype\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWG\" style={{ height: 687, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {/* <span className=\"y-axis-label-vertical\" style={{ paddingRight: 8, marginBottom: 100 }}>{RFWGFilter === 1 ? 'Number of genomes' : 'Percentage within genotype (%)'}</span> */}\r\n                    {plotDrugsAndGenotypesChart}\r\n                  </div>\r\n                  {/* {brushRFWG}<br/>\r\n                  {brushDRT}<br/>\r\n                  {brushRDWAG}<br/>\r\n                  {brushGD} */}\r\n                </div>\r\n                <div style={{ width: \"100%\", maxWidth: 920, display: \"flex\", flexDirection: \"column\", paddingTop: 50 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span className=\"chart-title\" style={{ paddingLeft: 50, marginRight: -22, paddingRight: 32 }}>Resistance determinants within all genotypes</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartRFWAGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWAGInProgress)\r\n                            capturePicture('RFWAG', 4, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry, amrClassFilter: amrClassFilter, interval: brushRDWAG})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWAGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title\" style={{ fontSize: 10, fontWeight: 400, paddingBottom: 10, marginTop: dimensions.width > 1120 ? 5 : dimensions.width < desktop ? 10 : 10, paddingLeft: 50 }}>Top Genotypes (up to 10)</span>\r\n                  <div style={{ width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\", marginBottom: -4, marginRight: dimensions.width > desktop ? \"-10%\" : 0 }}>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginTop: 0 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Select Drug Class</InputLabel>\r\n                      <Select\r\n                        value={amrClassFilter}\r\n                        onChange={evt => {\r\n                          setAmrClassFilter(evt.target.value)\r\n                        }}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      >\r\n                        {amrClassesForFilter.map((amrClass, index) => {\r\n                          return (\r\n                            <MenuItem key={index} style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={amrClass}>\r\n                              {amrClass}\r\n                            </MenuItem>\r\n                          )\r\n                        })}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginTop: 0 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Data view</InputLabel>\r\n                      <Select\r\n                        value={RDWAGDataviewFilter}\r\n                        onChange={evt => {\r\n                          setRDWAGDataviewFilter(evt.target.value)\r\n                          setBrushRDWAG([amrClassChartData[0].genotype, amrClassChartData[amrClassChartData.length - 2].genotype])\r\n                        }}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      > \r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\r\n                          Number of genomes\r\n                        </MenuItem>\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\r\n                          Percentage per year\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWAG\" style={{ height: 513, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {/* <span className=\"y-axis-label-vertical\" style={{ paddingRight: 8, paddingTop: 190 }}>Number of occurrences</span> */}\r\n                    {plotAmrClassChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style={{ alignItems: 'center', display: \"flex\", flexDirection: \"column\", flex: 0.5, paddingLeft: dimensions.width < mobile ? 0 : 10, marginTop: dimensions.width < mobile ? 25 : 0 }}>\r\n                <div style={{ width: \"100%\", maxWidth: 920, display: \"flex\", flexDirection: \"column\", paddingTop: dimensions.width < desktop ? 50 : dimensions.width < 930 ? 0 : 0 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\", paddingBottom: dimensions.width < desktop ? 0 : dimensions.width < 1010 ? 24 : 8 }}>\r\n                    <span className=\"chart-title\" style={{ paddingRight: 32, marginRight: -22 }}>Drug resistance trends</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartDRTInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartDRTInProgress)\r\n                            capturePicture('DRT', 2, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry, interval: brushDRT})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartDRTInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ paddingTop: '18px', height: '59px', width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\"}}>\r\n                    <InputLabel style={{fontSize: 12, fontWeight: 500, fontFamily: \"Montserrat\" }}>Drugs view</InputLabel>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        id=\"DDS\"\r\n                        options={trendDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"value\"}\r\n                        values={trendDropdownOptions}\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div style={{ fontWeight: 600, fontFamily: \"Montserrat\", fontSize: 16 }}>\r\n                              {state.values.length} of {props.options.length} Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({ item, itemIndex, props, state, methods }) => (\r\n                          <div key={item[props.valueField]} onClick={() => methods.addItem(item)}>\r\n                            <div style={{ margin: \"10px\", fontFamily: \"Montserrat\" }}>\r\n                              <input type=\"checkbox\" checked={methods.isSelected(item)} />\r\n                              &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        clearRenderer={\r\n                          ({ props, state, methods }) => {\r\n                            return (\r\n                              <Buttons>\r\n                                {methods.areAllSelected() ? (\r\n                                  <ButtonClearSelect className=\"clear\" onClick={methods.clearAll}>\r\n                                    Clear all\r\n                                  </ButtonClearSelect>\r\n                                ) : (\r\n                                  <ButtonClearSelect onClick={methods.selectAll}>Select all</ButtonClearSelect>\r\n                                )}\r\n                              </Buttons>\r\n                            );\r\n                          }\r\n                        }\r\n                        onChange={(values) => {\r\n                          // const dataDTC = JSON.parse(JSON.stringify(drugTrendsChartDataBackup.slice(0, drugTrendsChartDataBackup.length - 1)))\r\n                          // const excludedKeys = ['drugsPercentage', 'higherPercentage', 'name', 'total']\r\n                          // for (let index = 0; index < dataDTC.length; index++) {\r\n                          //   for (const key in dataDTC[index]) {\r\n                          //     if (!(excludedKeys.includes(key)) && !(values.some(e => e.value === key))) {\r\n                          //       delete dataDTC[index][key]\r\n                          //     }\r\n                          //   }\r\n                          // }\r\n\r\n                          const doc = document.getElementById('DRT');\r\n                          const lines = doc.getElementsByClassName('recharts-line')\r\n                          for (let index = 0; index < lines.length; index++) {\r\n                            const isValue = values.some(e => e.id === index)\r\n                            lines[index].style.display = isValue ? 'block' : 'none';\r\n\r\n                            // const dots = lines[index].getElementsByClassName('recharts-active-dot')\r\n                            // console.log(dots);\r\n                            // if (dots.length > 0) {\r\n                            //   for (let i = 0; i < dots.length; i++) {\r\n                            //     dots[i].style.display = isValue ? 'block' : 'none';\r\n                            //   }\r\n                            // }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"DRT\" style={{ paddingTop: dimensions.width < desktop ? '10px' : '0px', height: 600, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {/* <span className=\"y-axis-label-vertical\" style={{ paddingTop: 80 }}>Resistant (%)</span> */}\r\n                    {plotDrugTrendsChart}\r\n                  </div>\r\n                </div>\r\n                <div style={{ width: \"100%\", maxWidth: 920, display: \"flex\", flexDirection: \"column\", paddingTop: dimensions.width < desktop ? 50 : dimensions.width < 1010 ? 29 : 45 }}>\r\n                  <div style={{ width: \"100%\", flexDirection: \"row\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <span className=\"chart-title\" style={{ marginRight: -22, paddingRight: 32 }}>Genotype distribution</span>\r\n                    <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n                      <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          style={{ marginTop: \"0\", height: \"33px\", width: \"33px\" }}\r\n                          className={`button ${captureControlChartGDInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartGDInProgress)\r\n                            capturePicture('GD', 3, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry, interval: brushGD})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartGDInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4}\r\n                          style={{ position: \"absolute\", top: -5, left: -6 }} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ paddingTop: dimensions.width < desktop ? '0px' : dimensions.width > 1120 ? '65px' : '86px', height: dimensions.width > 1120 ? '78px' : '74px', width: dimensions.width > desktop ? \"60%\" : \"90%\", alignSelf: \"center\", paddingBottom: -8 }}>\r\n                    <FormControl fullWidth className={classes.formControlSelect} style={{ marginBottom: 5, marginTop: 23 }}>\r\n                      <InputLabel style={{ fontWeight: 500, fontFamily: \"Montserrat\" }}>Data view</InputLabel>\r\n                      <Select\r\n                        value={populationStructureFilter}\r\n                        onChange={evt => {\r\n                          setPopulationStructureFilter(evt.target.value)\r\n                          setBrushGD([populationStructureChartData[0].name, populationStructureChartData[populationStructureChartData.length - 1].name])\r\n                        }}\r\n                        fullWidth\r\n                        style={{ fontWeight: 600, fontFamily: \"Montserrat\" }}\r\n                      >\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={1}>\r\n                          Number of genomes\r\n                        </MenuItem>\r\n                        <MenuItem style={{ fontWeight: 600, fontFamily: \"Montserrat\" }} value={2}>\r\n                          Percentage per year\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"GD\" style={{ width: '100%', height: 511, display: \"flex\", flexDirection: /*populationStructureFilter === 1 ? \"row\" : \"column-reverse\"*/\"row\", alignItems: \"center\" }}>\r\n                    {/* {getPopulationStructureChartLabel()} */}\r\n                    {/* <span className=\"y-axis-label-vertical\" style={{ paddingTop: 190 }}>{populationStructureFilter === 1 ? 'Number of genomes' : '% Genomes per year'}</span> */}\r\n                    {plotPopulationStructureChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: dimensions.width > desktop ? \"row\" : \"column\", padding: 12, alignItems: \"center\", width: \"-webkit-fill-available\", justifyContent: \"center\" }}>\r\n              <div className=\"download-sheet-button\" onClick={() => dowloadBaseSpreadsheet()}>\r\n                <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\r\n                <span>Download database</span>\r\n              </div>\r\n              <div style={{ marginTop: dimensions.width > desktop ? 0 : 20, marginLeft: dimensions.width > desktop ? 20 : 0}} className={`download-sheet-button`} onClick={() => {\r\n                if (!captureReportInProgress) {\r\n                  setCaptureReportInProgress(true);\r\n                  capturePicture('', 5, {mapView: mapView, dataset: dataset, actualTimePeriodRange: actualTimePeriodRange, country: actualCountry, amrClassFilter: amrClassFilter, brush: [brushRFWG, brushRDWAG, brushDRT, brushGD]});\r\n                }\r\n              }}>\r\n                <FontAwesomeIcon icon={faFilePdf} style={{ marginRight: 8 }} />\r\n                <span>Download report from current view</span>\r\n                {captureReportInProgress && (<div style={{position: 'absolute', paddingBottom: 32, paddingRight: 20 }}>\r\n                  <CustomCircularProgress\r\n                    size={44}\r\n                    thickness={4}\r\n                    style={{ position: \"absolute\", top: -5, left: -6, color: \"white\" }} />\r\n                </div>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"about-wrapper\" style={{ paddingBottom: '15px' }}>\r\n          <h2 style={{ marginBottom: 0 }}>About TyphiNET</h2>\r\n          <p>\r\n            The TyphiNET dashboard collates antimicrobial resistance (AMR) and genotype (lineage) information extracted from whole genome sequence (WGS) data from the bacterial pathogen <i>Salmonella</i> Typhi, the agent of typhoid fever. Data are sourced monthly from Typhoid <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">Pathogenwatch</a>. Information on genotype definitions and population structure can be found in <a href=\"https://www.nature.com/articles/ncomms12827\" target=\"_blank\" rel=\"noreferrer\">Wong et al, 2016</a>, and details of AMR determinants in <a href=\"https://www.nature.com/articles/s41467-021-23091-2\" target=\"_blank\" rel=\"noreferrer\">Argimon et al, 2021</a>. (CipI-R = decreased ciprofloxacin susceptibility).\r\n          </p>\r\n          <p>\r\n            The TyphiNET dashboard is coordinated by Dr Zoe Dyson, Dr Louise Cerdeira &amp; Prof Kat Holt at the <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">London School of Hygiene and Tropical Medicine</a> &amp; <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">Monash University</a>, supported by the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the EU Horizon 2020 research and innovation programme (Marie Skłodowska-Curie grant #845681).\r\n          </p>\r\n          <p>\r\n            <b>Note: This is a beta version, data are incomplete</b>.\r\n          </p>\r\n        </div>\r\n        <div className=\"footer-buttons-wrapper\">\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('mailto:dashboard@typhi.net', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>Contact</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://github.com/zadyson/TyphiNET', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>GitHub</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://twitter.com/typhinet', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} style={{ marginRight: 8 }} />\r\n            <span style={{ fontWeight: 600 }}>Twitter</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }} />\r\n        <div className=\"footer\">\r\n          <span>Data obtained from: <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">pathogen watch project</a> on 15/06/2021. <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">Holt Lab</a></span>\r\n        </div>\r\n        <div className=\"fab-button\" style={{ marginTop: -80 }}>\r\n          <TooltipMaterialUI title={<span style={{ fontFamily: \"Montserrat\" }}>Reset Configurations</span>} placement=\"left\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size={dimensions.width < mobile ? 'medium' : ''}\r\n              onClick={() => {\r\n                setMapView('CipI');\r\n                setDataset('full');\r\n                setActualTimePeriodRange(timePeriodRange);\r\n                setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                setActualCountry('All');\r\n                setPopulationStructureFilter(1);\r\n                setAmrClassFilter(amrClassesForFilter[5]);\r\n                setRDWAGDataviewFilter(1)\r\n                setRFWGFilter(1)\r\n                // const dds = document.getElementsByClassName('css-1038amu')\r\n                // // dds[0].click()\r\n                // console.log(dds);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faUndoAlt} size=\"lg\" color=\"white\" />\r\n            </Fab>\r\n          </TooltipMaterialUI>\r\n        </div>\r\n      </div>\r\n      <div className=\"loading\">\r\n        {dimensions.width > desktop && (\r\n          <img className=\"logoImageMenu-loading\" src={typhinetLogoImg} alt=\"TyphiNET\" style={{ paddingLeft: '20px' }} />\r\n        )}\r\n        <Loader\r\n          style={{ paddingLeft: '10px' }}\r\n          type=\"Circles\"\r\n          color=\"#D91E45\"\r\n          height={70}\r\n          width={70}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","import React from 'react';\r\nimport './App.css';\r\nimport DashboardPage from './pages/dashboard'\r\n// import typhinetLogoImg from './assets/img/logo-typhinet.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"content\">\r\n        <DashboardPage/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}