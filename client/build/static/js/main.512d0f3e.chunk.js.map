{"version":3,"sources":["assets/img/logo-typhinet3.png","constants.js","util/colorHelper.js","pages/dashboard/materialUI.js","pages/dashboard/filters.js","pages/dashboard/index.js","pages/admin/materialUI.js","pages/admin/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForDrug","drug","getColorForTetracyclines","tetA","useStyles","makeStyles","theme","formControlSelect","marginBottom","marginTop","minWidth","color","borderBottomColor","formControlSelectCountryRegionH","alignItems","formControlSelectCountryRegionV","select","fontWeight","fontFamily","fontSize","selectYear","width","borderColor","selectCountry","textAlign","selectCountryValues","typography","typographyEndYear","tbg","inputLabel","paddingBottom","tooltipButton","height","marginLeft","tooltipTitle","tooltipIcon","backgroundColor","borderWidth","borderRadius","CustomCircularProgress","withStyles","root","thumb","boxShadow","valueLabel","Slider","position","top","left","CircularProgress","CustomToggleButton","padding","selected","ToggleButton","Buttons","styled","div","ButtonClearSelect","button","WMCDTemplate","WMCountData","currentData","data","displayName","elementToCount","parentName","childName","h58","other","cipI","JSON","parse","some","e","name","COUNTRY_ONLY","country","find","countryIndex","findIndex","parent","index","count","push","total","forEach","g","percentage","Math","round","toFixed","item","parseFloat","undefined","aux","CipIs","filter","x","type","aux2","length","WMCountDataResults","worldMapCurrent","sort","a","b","localeCompare","filterForComponents","minYear","maxYear","dataset","region","results","amr","genotypes","worldMapResults","PMIDResults","auxWM","worldMapComplementaryResults","worldMapG","worldMapH58","worldMapSTAD","worldMapMDR","worldMapXDR","worldMapAZITH","worldMapCIPR","worldMapCIPI","RFWGResults","DRTResults","AMRResults","GDResults","DRTData","empty","includes","DATE","TRAVEL","toLowerCase","REGION_IN_COUNTRY","indexOf","WMCDAux","stringify","GENOTYPE","chartData","RFWGData","totalS","index2","drugsPercentage","Azithromycin","ESBL","Chloramphenicol","Ampicillin","Sulphonamides","Trimethoprim","Tetracyclines","Susceptible","currentRFWG","currentDRT","ChartData","fluoroR","fluoroI","cotrim","trime","Object","keys","key","total2","AZITH","DCS","CHLO","COTRIM","genes","i","join","SULPH","TRIM","TETRA","AMRData","GDData","PMID","TOTAL_OCCURRENCE","WMCDResults","element","top10","maxSum","ceil","AMRDataResults","DashboardPage","classes","useState","coordinates","zoom","controlMapPosition","setControlMapPosition","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapSTADData","setWorldMapSTADData","worldMapXDRData","setWorldMapXDRData","worldMapAZITHData","setWorldMapAZITHData","worldMapCIPIData","setWorldMapCIPIData","worldMapCIPRData","setWorldMapCIPRData","plotAmrClassChart","setPlotAmrClassChart","plotDrugsAndGenotypesChart","setPlotDrugsAndGenotypesChart","plotPopulationStructureChart","setPlotPopulationStructureChart","plotDrugTrendsChart","setPlotDrugTrendsChart","captureControlMapInProgress","setCaptureControlMapInProgress","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","captureReportInProgress","setCaptureReportInProgress","tooltipContent","setTooltipContent","React","timeInitial","setTimeInitial","timeFinal","setTimeFinal","actualTimeInitial","setActualTimeInitial","actualTimeFinal","setActualTimeFinal","years","setYears","countriesForFilter","setCountriesForFilter","regionsForFilter","setRegionsForFilter","actualCountry","setActualCountry","actualRegion","setActualRegion","actualContinent","setActualContinent","populationStructureFilter","setPopulationStructureFilter","value","id","populationStructureFilterOptions","RFWGFilterOptions","amrClassFilterOptions","amrClassFilterforFilterOptions","RFWGFilter","setRFWGFilter","amrClassesForFilter","drtClassesForFilter","trendClassesForFilter","trendDropdownOptions","RFWGDropdownOptions","setRFWGDropdownOptions","amrClassFilter","setAmrClassFilter","RDWAGDataviewFilter","setRDWAGDataviewFilter","drugTrendsChartData","setDrugTrendsChartData","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","appLoading","setAppLoading","lastUpdated","setLastUpdated","countryPMID","setCountryPMID","trendValues","setTrendValues","RFWGValues","setRFWGValues","desktop","mobile","hoverColor","window","innerHeight","innerWidth","dimensions","setDimensions","formatDate","date","moment","format","useEffect","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","axios","get","then","res","Date","mapSamplesColorScale","domain","scaleLinear","range","mapRedColorScale","tooltip","useCallback","positionY","width1","width2","wrapperS","stroke","chart","y","wrapperStyle","cursor","fill","content","active","payload","label","reverse","className","quantities","style","map","dataKey","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","maxH","margin","bottom","right","maxBarSize","strokeDasharray","interval","tick","allowDataOverflow","allowDecimals","angle","offset","props","entry","zIndex","stackId","teste","barCategoryGap","amrClassChartTooltip","allowEscapeViewBox","armClassFilterComponent","info","dataAMR","slice","layout","justifyContent","bars","barSize","temp","fontsize","strokeWidth","colors1","colors2","colors3","dataDRT","TCFF","toString","tickCount","connectNulls","activeDot","values","aux3","stopLoading","names","brokenNames","ids","doc","jsPDF","unit","orientation","IPW","internal","pageSize","getWidth","typhinetLogo","Image","src","typhinetLogoImg2","addImage","setFontSize","setTextColor","paragraph1","paragraph2","paragraph3","paragraph4","paragraph5","paragraph6","paragraph7","paragraph8","setFont","text","align","maxWidth","line","addPage","svgAsPngUri","document","getElementById","scale","uri","canvas","createElement","ctx","getContext","mapImg","mapImgPromise","drawImage","img","toDataURL","actualMapView","actualTimePeriodRange","img2","img3","names2","url","domtoimage","toJpeg","quality","bgcolor","dataUrl","subtitleH","imgWidth","API","getImageProperties","floor","texts","spaceBetween","drugs","RFWGCount","setFillColor","rect","img4","img5","save","graph","graphImg","graphImgPromise","toPng","cHeight","logoHeight","legendHeight","filterHeight","subtitleHeight","imgHeight","fillStyle","fillRect","font","fillText","legendImg","legendImgPromise","typhinetLogoPromise","base64","download","textHeight","legendImgoPromise","centerWidth","h","w","capturePicture","cols_to_remove","indexes","csv","split","lines","currentIndex","newLines","j","newCSV","dowloadBaseSpreadsheet","generateMapLegendOptions","percentageSteps","n","legends","Array","renderMapLegend","FormControl","fullWidth","title","placement","IconButton","icon","faInfoCircle","size","Select","onChange","evt","target","MenuItem","setData","init","setInit","allCountryRegions","setAllCountryRegions","loading","setLoading","console","log","auxTGenotypes","auxYears","auxCountries","auxRegions","unshift","update","typhinetLogoImg","alt","display","flexDirection","projectionConfig","rotate","center","onMoveEnd","geography","geographies","geo","sample","s","properties","NAME","CONTINENT","d","darkGray","lineage","countH58","isH58","onClick","onMouseLeave","onMouseEnter","additionalInfo","samples","GENOTYPES","TOTAL","H58","MDR","XDR","CipI","CipR","CipI_R","AzithR","STAD","genotypeInfo","simpleGenotypeInfo","smallerThan20","MDRs","mdrInfo","STADs","stadInfo","XDRs","xdrInfo","AZs","azInfo","cipR","cipIInfo","cipRInfo2","cipIRInfo","CipRs","cipRInfo","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","newDataset","gutterBottom","Zoom","in","c","Tooltip","faCrosshairs","pos","faPlus","faMinus","faCamera","thickness","paddingRight","options","searchable","labelField","multi","clearable","separator","contentRenderer","state","itemRenderer","itemIndex","methods","isSelected","addItem","checked","valueField","clearRenderer","clearAll","selectAll","InputLabel","o","paddingLeft","areAllSelected","getElementsByClassName","isValue","paddingTop","faTable","marginRight","faFilePdf","href","rel","open","faEnvelope","faGithub","faTwitter","flex","Fab","innerText","click","text2","faUndoAlt","cellON","off","tableID","tablePadding","actionsCell","borderLeft","stickyCell","actionsHeaderCell","stickyHeaderCell","changesTable","maxHeight","viewButton","resetButton","uploadButton","checkChangesButton","dialog","flexWrap","input","input2","toolbar","borderBottom","deleteSelected","checkboxCell","checkbox","tableRowRoot","tableRowSelected","box","textAlignLast","userSelect","letterSpacing","choosePage","opacity","selectFilter","header","headerTitle","rowHeader","deleteChangeButton","border","ColorButton","Button","ColorButton3","ColorButton4","ColorButton5","StyledHeaderCell","head","palette","common","black","white","body","TableCell","CustomTableContainer","TableContainer","CustomTableSortLabel","TableSortLabel","createData","changes","AdminPage","rows","setRows","originalData","setOriginalData","setCurrentData","tableKeys","setTableKeys","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","currentRow","setCurrentRow","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","open7","setOpen7","open8","setOpen8","resultMessage","setResultMessage","setSelected","search","setSearch","filters","setFilters","filterOptions","setFilterOptions","filteredData","setFilteredData","isLoading","setIsLoading","startProgress","setStartProgress","loadingMessage","setLoadingMessage","currentChange","setCurrentChange","exceptions","descendingComparator","changeView","resetChanges","added","genome","gIndex","splice","deleted","updated","old","betterChanges","entries","updates","point","new","handleUpload","handleCheckChanges","message","post","getChangeData","finally","checkChanges","showPopup","Status","getData","catch","error","changeData","updatedAt","toLocaleString","aux4","aux5","response","pass","EnhancedTableToolbar","numSelected","Toolbar","sx","variant","component","placeholder","onCancelSearch","onRequestSearch","faTrashAlt","EnhancedTableHead","onRequestSort","onSelectAllClick","rowCount","TableHead","TableRow","Checkbox","indeterminate","headCell","sortDirection","direction","property","event","stopPropagation","displayEmpty","onOpen","onClose","option","Paper","Table","stickyHeader","TableBody","row","r","t","newSelecteds","array","comparator","stabilizedThis","el","stableSort","getComparator","isItemSelected","dataRow","role","selectedIndex","newSelected","concat","handleClick","cell","random","handleEdit","faEdit","handleDelete","disableUnderline","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","ActionsComponent","useTheme","Box","flexShrink","ml","disabled","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","max","Dialog","dialogTransition","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteRow","autoFocus","TextField","defaultValue","rowIndex","inputs","editRow","addRow","times","parts","LZString","compress","current","uploadChanges","deleteRows","deleteChange","App","to","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","ReactDOM","render","StrictMode","ThemeProvider","URL","process","origin","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"y3xIAAe,MAA0B,2C,SCA5BA,EAAe,6BCAfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UAGT,IAAK,QACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,IAAK,aACH,MAAO,QACT,IAAK,UACL,IAAK,cACL,IAAK,cACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,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","file":"static/js/main.512d0f3e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet3.c193c2f3.png\";","export const API_ENDPOINT = \"http://localhost:8080/api/\";\r\n//export const API_ENDPOINT = \"https://typhinet.herokuapp.com/api/\";","export const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return \"#808080\";\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return \"#ffff00\";\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return \"#ffd700\";\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return \"#32cd32\";\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return \"#adff2f\";\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return \"#98fb98\";\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return \"#6b8e23\";\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return \"#2e8b57\";\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return \"#006400\";\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return \"#0000cd\";\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return \"#4682b4\";\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return \"#00bfff\";\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return \"#1e90ff\";\r\n    case '3.4':\r\n      return \"#6a5acd\";\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n      return \"#4b0082\";\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return \"#8b0000\";\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return \"#ff6347\";\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return \"#ff0000\";\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return \"black\";\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n      return \"#c51b7d\";\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return \"#fb8072\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForAMR = (amr) => {\r\n  switch (amr) {\r\n    case 'No AMR detected':\r\n      return \"#addd8e\";\r\n    case 'MDR_DCS':\r\n      return \"#9e9ac8\"\r\n    case 'MDR':\r\n      return \"red\"\r\n    case 'DCS':\r\n      return \"#6baed6\"\r\n    case 'AzithR_MDR':\r\n      return \"#a50f15\"\r\n    case 'AzithR_DCS':\r\n      return \"#7a0177\"\r\n    case 'AzithR_DCS_MDR':\r\n      return \"#54278f\"\r\n    case 'XDR':\r\n      return \"black\"\r\n    case 'AMR':\r\n      return \"#ffeda0\"\r\n    case 'AMR_DCS':\r\n      return \"#fd8d3c\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForSimpleGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case 'H58':\r\n      return \"green\";\r\n    case 'Non-H58':\r\n      return \"red\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Azithromycin':\r\n      return \"rgb(144,211,199)\";\r\n    case 'Fluoroquinolones (CipI/R)':\r\n      return \"rgb(255,236,120)\";\r\n    case 'ESBL':\r\n      return \"#DB90F0\";\r\n    case 'Chloramphenicol':\r\n      return \"rgb(249,129,117)\";\r\n    case 'Ampicillin':\r\n      return \"rgb(129,178,210)\";\r\n    case 'Co-trimoxazole':\r\n      return \"rgb(252,180,105)\";\r\n    case 'Sulphonamides':\r\n      return \"rgb(180,221,112)\";\r\n    case 'Trimethoprim':\r\n      return \"rgb(102,102,255)\";\r\n    case 'Tetracyclines':\r\n      return \"rgb(251,207,229)\";\r\n    case 'Susceptible':\r\n      return \"lightGray\";\r\n    case 'Fluoroquinolones (CipI)':\r\n      return \"#98fb98\";\r\n    case 'Fluoroquinolones (CipR)':\r\n      return \"#9e9ac8\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForIncType = (incType) => {\r\n  switch (incType) {\r\n    case 'IncX1':\r\n      return 'rgb(174,227,154)'\r\n    case 'IncFIA(HI1)':\r\n      return 'rgb(138,35,139)'\r\n    case 'IncFIB(pHCM2)':\r\n      return 'rgb(163,215,30)'\r\n    case 'IncA/C2':\r\n      return 'rgb(69,51,214)'\r\n    case 'IncP1':\r\n      return 'rgb(223,207,231)'\r\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(66,69,94)'\r\n    case 'Col(BS512)':\r\n      return 'rgb(251,172,246)'\r\n    case 'IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(34,151,67)'\r\n    case 'IncN':\r\n      return 'rgb(238,83,190)'\r\n    case 'IncHI1B(R27)':\r\n      return 'rgb(68,242,112)'\r\n    case 'p0111':\r\n      return 'rgb(251,45,76)'\r\n    case 'IncHI1A':\r\n      return 'rgb(101,230,249)'\r\n    case 'IncI1':\r\n      return 'rgb(123,44,49)'\r\n    case 'IncY':\r\n      return 'rgb(231,173,121)'\r\n    case 'IncFIB(AP001918)':\r\n      return 'rgb(32,80,46)'\r\n    case 'IncFIB(K)':\r\n      return 'rgb(53,136,209)'\r\n    case 'IncHI2/IncHI2A':\r\n      return 'rgb(115,140,78)'\r\n    case 'Col440I':\r\n      return 'rgb(159,4,252)'\r\n    case 'Col156':\r\n      return 'rgb(244,212,3)'\r\n    case 'Col440II/Col440II':\r\n      return 'rgb(17,160,170)'\r\n    case 'IncFIA(HI1)/IncHI1A':\r\n      return 'rgb(251,120,16)'\r\n    case 'ColRNAI':\r\n      return 'rgb(91,67,11)'\r\n    case 'ColpVC':\r\n      return 'rgb(248,117,116)'\r\n    case 'IncX3':\r\n      return 'rgb(190,177,231)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForTetracyclines = (tetA) => {\r\n  switch (tetA) {\r\n    case 'tetA(A)':\r\n      return 'rgb(174,227,154)'\r\n    case 'tetA(B)':\r\n      return '#D7AEF7'\r\n    case 'tetA(C)':\r\n      return '#FFEC78'\r\n    case 'tetA(D)':\r\n      return '#FCB469'\r\n    case 'tetA(AB)':\r\n      return 'rgb(223,207,231)'\r\n    case 'tetA(ABC)':\r\n      return 'rgb(66,69,94)'\r\n    case 'tetA(ABD)':\r\n      return 'rgb(251,172,246)'\r\n    case 'tetA(ABCD)':\r\n      return 'rgb(34,151,67)'\r\n    case 'tetA(AC)':\r\n      return 'rgb(238,83,190)'\r\n    case 'tetA(ACD)':\r\n      return 'rgb(68,242,112)'\r\n    case 'tetA(AD)':\r\n      return 'rgb(251,45,76)'\r\n    case 'tetA(BC)':\r\n      return 'rgb(101,230,249)'\r\n    case 'tetA(BD)':\r\n      return 'rgb(123,44,49)'\r\n    case 'tetA(BCD)':\r\n      return 'rgb(231,173,121)'\r\n    case 'tetA(CD)':\r\n      return 'rgb(32,80,46)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}","import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControlSelect: {\r\n        marginBottom: 12,\r\n        marginTop: 2,\r\n        minWidth: 120,\r\n        '&.label.Mui-focused': {\r\n            color: \"rgb(31, 187, 211)\",\r\n        },\r\n        '&:not(.Mui-error).MuiInput-underline:after': {\r\n            borderBottomColor: \"rgb(31, 187, 211)\",\r\n        }\r\n    },\r\n    formControlSelectCountryRegionH: {\r\n        marginBottom: 16,\r\n        alignItems: \"flex-start\"\r\n    },\r\n    formControlSelectCountryRegionV: {\r\n        marginBottom: 16,\r\n        alignItems: \"flex-start\",\r\n    },\r\n    select: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14\r\n    },\r\n    selectYear: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14,\r\n        width: '85px',\r\n        '&:before': {\r\n            borderColor: 'rgba(0, 0, 0, 0.12)',\r\n        }\r\n    },\r\n    selectCountry: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        width: 200,\r\n        textAlign: \"left\"\r\n    },\r\n    selectCountryValues: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\"\r\n    },\r\n    typography: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    typographyEndYear: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    tbg: {\r\n        marginTop: 5\r\n    },\r\n    inputLabel: {\r\n        fontSize: 12,\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        paddingBottom: 5\r\n    },\r\n    tooltipButton: {\r\n        height: 15.5,\r\n        width: 15.5,\r\n        marginLeft: 5\r\n    },\r\n    tooltipTitle: {\r\n        fontSize: 12\r\n    },\r\n    tooltipIcon: {\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"black\",\r\n        borderWidth: 1,\r\n        borderRadius: \"50%\"\r\n    }\r\n}));\r\n\r\nconst CustomSlider = withStyles({\r\n    root: {\r\n        color: \"rgb(31, 187, 211)\"\r\n    },\r\n    thumb: {\r\n        \"&.MuiSlider-thumb\": {\r\n            \"&:not(.MuiSlider-active):focus\": {\r\n                boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n            },\r\n            \"&:not(.MuiSlider-active):hover\": {\r\n                boxShadow: \"0px 0px 0px 8px rgba(31, 187, 211, 0.16)\"\r\n            },\r\n            \"&.MuiSlider-active\": {\r\n                boxShadow: \"0px 0px 0px 14px rgba(31, 187, 211, 0.16)\"\r\n            },\r\n        },\r\n    },\r\n    valueLabel: {\r\n        fontFamily: \"Montserrat\",\r\n        fontWeight: 500\r\n    }\r\n})(Slider);\r\n\r\nconst CustomCircularProgress = withStyles({\r\n    root: {\r\n        color: \"rgb(31, 187, 211)\",\r\n        position: \"absolute\",\r\n        top: -5,\r\n        left: -6\r\n    }\r\n})(CircularProgress);\r\n\r\nconst CustomToggleButton = withStyles({\r\n    root: {\r\n        padding: \"2px 8px\",\r\n        fontFamily: \"Montserrat\",\r\n        fontWeight: 600\r\n    },\r\n    selected: {\r\n        backgroundColor: 'rgb(31, 187, 211) !important',\r\n        color: \"white !important\"\r\n    }\r\n})(ToggleButton);\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n\r\n  & div {\r\n    margin: 0 0 0 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst ButtonClearSelect = styled.button`\r\n  background: none;\r\n  border: 1px solid #555;\r\n  color: #555;\r\n  border-radius: 3px;\r\n  margin: 0 10px 0;\r\n  padding: 3px 5px;\r\n  font-size: 10px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &.clear {\r\n    color: tomato;\r\n    border: 1px solid tomato;\r\n  }\r\n\r\n  :hover {\r\n    border: 1px solid deepskyblue;\r\n    color: deepskyblue;\r\n  }\r\n`;\r\n\r\nexport { useStyles, CustomSlider, CustomCircularProgress, CustomToggleButton, Buttons, ButtonClearSelect };","const WMCDTemplate = {\r\n    \"GENOTYPES\": {\r\n        \"GENOTYPES_LIST\": [],\r\n        \"TOTAL\": 0\r\n    },\r\n    \"H58\": 0,\r\n    \"MDR\": 0,\r\n    \"XDR\": 0,\r\n    \"DCS\": 0,\r\n    \"AzithR\": 0,\r\n    \"CipI\": 0,\r\n    \"CipR\": 0,\r\n    \"CipI_R\": 0,\r\n    \"STAD\": 0,\r\n    \"TOTAL_OCCURRENCE\": 0\r\n}\r\n\r\nfunction WMCDAux(currentData, data){\r\n    currentData = JSON.parse(currentData)\r\n\r\n    currentData[\"TOTAL_OCCURRENCE\"]++\r\n    if (currentData[\"GENOTYPES\"][\"GENOTYPES_LIST\"].indexOf(data[\"GENOTYPE\"]) === -1) {\r\n        currentData[\"GENOTYPES\"][\"GENOTYPES_LIST\"].push(data[\"GENOTYPE\"])\r\n        currentData[\"GENOTYPES\"][\"TOTAL\"]++\r\n    }\r\n\r\n    if (data[\"GENOTYPE_SIMPLE\"] === \"H58\") {\r\n        currentData[\"H58\"]++\r\n    }\r\n    if (data[\"MDR\"] === \"MDR\") {\r\n        currentData[\"MDR\"]++\r\n    }\r\n    if (data[\"XDR\"] === \"XDR\") {\r\n        currentData[\"XDR\"]++\r\n    }\r\n    if (data[\"dcs_category\"] === \"DCS\") {\r\n        currentData[\"DCS\"]++\r\n    }\r\n    if (data[\"azith_pred_pheno\"] === \"AzithR\") {\r\n        currentData[\"AzithR\"]++\r\n    }\r\n    if (data[\"cip_pred_pheno\"] === \"CipI\") {\r\n        currentData[\"CipI\"]++\r\n        currentData[\"CipI_R\"]++\r\n    }\r\n    if (data[\"cip_pred_pheno\"] === \"CipR\") {\r\n        currentData[\"CipR\"]++\r\n        currentData[\"CipI_R\"]++\r\n    }\r\n    if (data[\"amr_category\"] === \"No AMR detected\") {\r\n        currentData[\"STAD\"]++\r\n    }\r\n\r\n    return currentData\r\n}\r\n\r\nfunction WMCDResults(worldMapComplementaryResults){\r\n    worldMapComplementaryResults = JSON.parse(worldMapComplementaryResults)\r\n\r\n    for (let data in worldMapComplementaryResults) {\r\n        worldMapComplementaryResults[data][\"H58\"] = (worldMapComplementaryResults[data][\"H58\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        worldMapComplementaryResults[data][\"MDR\"] = (worldMapComplementaryResults[data][\"MDR\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        worldMapComplementaryResults[data][\"XDR\"] = (worldMapComplementaryResults[data][\"XDR\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        worldMapComplementaryResults[data][\"DCS\"] = (worldMapComplementaryResults[data][\"DCS\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        worldMapComplementaryResults[data][\"AzithR\"] = (worldMapComplementaryResults[data][\"AzithR\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        worldMapComplementaryResults[data][\"CipI\"] = (worldMapComplementaryResults[data][\"CipI\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        worldMapComplementaryResults[data][\"CipR\"] = (worldMapComplementaryResults[data][\"CipR\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        worldMapComplementaryResults[data][\"CipI_R\"] = (worldMapComplementaryResults[data][\"CipI_R\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        worldMapComplementaryResults[data][\"STAD\"] = (worldMapComplementaryResults[data][\"STAD\"] / worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) * 100\r\n        delete worldMapComplementaryResults[data].TOTAL_OCCURRENCE\r\n    }\r\n    return worldMapComplementaryResults\r\n}\r\n\r\nfunction WMCountData(currentData, data, displayName, elementToCount, parentName, childName, h58 = false, other = \"\", cipI = false){\r\n    currentData = JSON.parse(currentData)\r\n\r\n    if (!currentData.some(e => e.name === data.COUNTRY_ONLY)) {\r\n        currentData.push({ name: data.COUNTRY_ONLY, displayName: displayName, total: 1, [parentName]: [{ [childName]: data[elementToCount], count: 1 }]})\r\n        if (elementToCount !== \"GENOTYPE\") currentData[currentData.length - 1].percentage = 0\r\n        if (!h58 && elementToCount !== \"GENOTYPE\") currentData[currentData.length - 1].count = 0\r\n    } else {\r\n        const country = currentData.find(e => e.name === data['COUNTRY_ONLY']);\r\n        const countryIndex = currentData.findIndex(e => e.name === data['COUNTRY_ONLY']);\r\n\r\n        if (!country[parentName].some(e => e[childName] === data[elementToCount])) {\r\n            country[parentName].push({\r\n            [childName]: data[elementToCount],\r\n            count: 1\r\n            })\r\n        } else {\r\n            let parent = country[parentName].find(e => e[childName] === data[elementToCount]);\r\n            let index = country[parentName].findIndex(e => e[childName] === data[elementToCount]);\r\n            parent.count = parent.count + 1\r\n            country[parentName][index] = parent\r\n        }\r\n        country.total = country.total + 1\r\n\r\n        if (h58) {\r\n            country[parentName].forEach((g, index) => {\r\n                let percentage = ((g.count / country.total) * 100)\r\n                if (Math.round(percentage) !== percentage) {\r\n                  percentage = percentage.toFixed(2)\r\n                }\r\n                g.percentage = percentage\r\n            })\r\n        } else if (other !== \"\") {\r\n            country[parentName].forEach((item, index) => {\r\n                if (item[childName] === other) {\r\n                  let percentage = ((item.count / country.total) * 100)\r\n                  if (Math.round(percentage) !== percentage) percentage = percentage.toFixed(2)\r\n                  percentage = parseFloat(percentage);\r\n                  country.percentage = percentage;\r\n                  country.count = item.count;\r\n                }\r\n            })\r\n            if (country.percentage === undefined) {country.percentage = parseFloat(0)}\r\n            if (country.count === undefined) {country.count = 0}\r\n        } else if (cipI) {\r\n            let aux = country.CipIs.filter(x => x.type === 'CipI')\r\n            let aux2 = country.CipIs.filter(x => x.type === 'CipR')\r\n            if (aux.length) {\r\n                aux[0].percentage = (aux[0].count / country.total) * 100\r\n                aux = aux[0].count\r\n            } else aux = 0\r\n            if (aux2.length) {\r\n                aux2[0].percentage = (aux2[0].count / country.total) * 100\r\n                aux2 = aux2[0].count\r\n            } else aux2 = 0\r\n\r\n            let percentage = ((aux + aux2) / country.total) * 100\r\n            if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2)\r\n            percentage = parseFloat(percentage);\r\n            country.percentage = percentage;\r\n            country.count = aux + aux2;\r\n            if (country.percentage === undefined) country.percentage = parseFloat(0)\r\n            if (country.count === undefined) country.count = 0\r\n        }\r\n    \r\n        currentData[countryIndex] = country;\r\n    }\r\n\r\n    return currentData\r\n}\r\n\r\nfunction WMCountDataResults(worldMapCurrent, parentName){\r\n    worldMapCurrent = JSON.parse(worldMapCurrent)\r\n    worldMapCurrent.forEach((country) => {\r\n      country[parentName].sort((a, b) => b.count - a.count);\r\n    })\r\n    worldMapCurrent.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    return worldMapCurrent\r\n}\r\n\r\nfunction ChartData(RFWGData, DRTData, data){\r\n    RFWGData = JSON.parse(RFWGData)\r\n    DRTData = JSON.parse(DRTData)\r\n\r\n    let index = RFWGData.findIndex(x => x.name === data.GENOTYPE)\r\n    if (index === -1) {\r\n        RFWGData.push({name: data.GENOTYPE, total: 0, totalS: 0})\r\n        index = RFWGData.length - 1\r\n    }\r\n    RFWGData[index].totalS += 1\r\n\r\n    let index2 = DRTData.findIndex(x => x.name === data.DATE)\r\n    if (index2 === -1) {\r\n        DRTData.push({\r\n            name: data.DATE,\r\n            total: 0, drugsPercentage: {},\r\n            Azithromycin: 0,\r\n            'Fluoroquinolones (CipI/R)': 0,\r\n            ESBL: 0,\r\n            Chloramphenicol: 0,\r\n            Ampicillin: 0,\r\n            'Co-trimoxazole': 0,\r\n            Sulphonamides: 0,\r\n            Trimethoprim: 0,\r\n            Tetracyclines: 0,\r\n            Susceptible: 0,\r\n            'Fluoroquinolones (CipR)': 0\r\n        })\r\n        index2 = DRTData.length - 1\r\n    }\r\n    DRTData[index2].total += 1\r\n\r\n    const currentRFWG = RFWGData[index]\r\n    const currentDRT = DRTData[index2]\r\n\r\n    if (data[\"azith_pred_pheno\"] === \"AzithR\") {\r\n        if (currentRFWG[\"Azithromycin\"] === undefined) currentRFWG[\"Azithromycin\"] = 1\r\n        else currentRFWG[\"Azithromycin\"] += 1\r\n        currentDRT[\"Azithromycin\"] += 1\r\n    }\r\n    if (data[\"dcs_category\"] === \"DCS\") {\r\n        if (currentRFWG[\"Fluoroquinolones (CipI/R)\"] === undefined) currentRFWG[\"Fluoroquinolones (CipI/R)\"] = 1\r\n        else currentRFWG[\"Fluoroquinolones (CipI/R)\"] += 1\r\n        currentDRT[\"Fluoroquinolones (CipI/R)\"] += 1\r\n    }\r\n    if (data[\"ESBL_category\"] === \"ESBL\") {\r\n        if (currentRFWG[\"ESBL\"] === undefined) currentRFWG[\"ESBL\"] = 1\r\n        else currentRFWG[\"ESBL\"] += 1\r\n        currentDRT[\"ESBL\"] += 1\r\n    }\r\n    if (data[\"chloramphenicol_category\"] === \"ChlR\") {\r\n        if (currentRFWG[\"Chloramphenicol\"] === undefined) currentRFWG[\"Chloramphenicol\"] = 1\r\n        else currentRFWG[\"Chloramphenicol\"] += 1\r\n        currentDRT[\"Chloramphenicol\"] += 1\r\n    }\r\n    if (data[\"blaTEM-1D\"] === \"1\") {\r\n        if (currentRFWG[\"Ampicillin\"] === undefined) currentRFWG[\"Ampicillin\"] = 1\r\n        else currentRFWG[\"Ampicillin\"] += 1\r\n        currentDRT[\"Ampicillin\"] += 1\r\n    }\r\n    if (data[\"co_trim\"] === \"1\") {\r\n        if (currentRFWG[\"Co-trimoxazole\"] === undefined) currentRFWG[\"Co-trimoxazole\"] = 1\r\n        else currentRFWG[\"Co-trimoxazole\"] += 1\r\n        currentDRT[\"Co-trimoxazole\"] += 1\r\n    }\r\n    if (data[\"sul_any\"] === \"1\") {\r\n        if (currentRFWG[\"Sulphonamides\"] === undefined) currentRFWG[\"Sulphonamides\"] = 1\r\n        else currentRFWG[\"Sulphonamides\"] += 1\r\n        currentDRT[\"Sulphonamides\"] += 1\r\n    }\r\n    if (data[\"dfra_any\"] === \"1\") {\r\n        if (currentRFWG[\"Trimethoprim\"] === undefined) currentRFWG[\"Trimethoprim\"] = 1\r\n        else currentRFWG[\"Trimethoprim\"] += 1\r\n        currentDRT[\"Trimethoprim\"] += 1\r\n    }\r\n    if (data[\"tetracycline_category\"] === \"TetR\") {\r\n        if (currentRFWG[\"Tetracyclines\"] === undefined) currentRFWG[\"Tetracyclines\"] = 1\r\n        else currentRFWG[\"Tetracyclines\"] += 1\r\n        currentDRT[\"Tetracyclines\"] += 1\r\n    }\r\n    if (data[\"amr_category\"] === \"No AMR detected\") {\r\n        if (currentRFWG[\"Susceptible\"] === undefined) currentRFWG[\"Susceptible\"] = 1\r\n        else currentRFWG[\"Susceptible\"] += 1\r\n        currentDRT[\"Susceptible\"] += 1\r\n    } else {\r\n        currentRFWG.total += 1\r\n    }\r\n    if (data[\"cip_pred_pheno\"] === \"CipR\") {\r\n        if (currentRFWG[\"Fluoroquinolones (CipR)\"] === undefined) currentRFWG[\"Fluoroquinolones (CipR)\"] = 1\r\n        else currentRFWG[\"Fluoroquinolones (CipR)\"] += 1\r\n        currentDRT[\"Fluoroquinolones (CipR)\"] += 1\r\n    }\r\n\r\n    return [RFWGData, DRTData]\r\n}\r\n\r\nfunction DRTDataResults(DRTData){\r\n    DRTData = JSON.parse(DRTData)\r\n    DRTData.forEach(element => {\r\n        const drugsPercentage = {}\r\n        for (const key in element) {\r\n          if (key !== 'name' && key !== 'total') {\r\n            const aux = (element[key] * 100) / element.total\r\n            drugsPercentage[key] = element[key]\r\n            element[key] = aux\r\n          }\r\n        }\r\n        element.drugsPercentage = drugsPercentage\r\n    });\r\n    return DRTData\r\n}\r\n\r\nfunction AMRData(currentData, data) {\r\n    currentData = JSON.parse(currentData)\r\n    const fluoroR = ['3_QRDR + qnrS', '3_QRDR + qnrB', '3_QRDR', '2_QRDR + qnrS', '2_QRDR + qnrB', '1_QRDR + qnrS', '1_QRDR + qnrB']\r\n    const fluoroI = ['2_QRDR', '1_QRDR', '0_QRDR + qnrS', '0_QRDR + qnrB']\r\n    const cotrim = [\"dfrA1\", \"dfrA5\", \"dfrA7\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\"]\r\n    const trime = [\"dfrA1\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\", \"dfrA5\", \"dfrA7\"]\r\n\r\n    Object.keys(currentData).forEach(key => {\r\n        let index = currentData[key].findIndex(x => x.genotype === data.GENOTYPE)\r\n        if (index === -1) {\r\n            currentData[key].push({genotype: data.GENOTYPE, total: 0, total2: 0})\r\n            index = currentData[key].length - 1\r\n        }\r\n        if (key === \"Azithromycin\") {\r\n            const AZITH = data[\"azith_pred_pheno\"]\r\n            if (AZITH === \"AzithR\") {\r\n                currentData[key][index].total += 1\r\n                currentData[key][index].total2 += 1\r\n                if (data[\"ereA\"] === \"1\" && data[\"acrB_R717Q\"] === \"1\" && data[\"acrB_R717L\" == \"1\"]) {\r\n                    const name = \"ereA + acrB_R717Q + acrB_R717L\"\r\n                    if ( currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                } else {\r\n                    if (data[\"ereA\"] === \"1\" && data[\"acrB_R717Q\"] === \"1\") {\r\n                        const name = \"ereA + acrB_R717Q\"\r\n                        if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                    } else if (data[\"ereA\"] === \"1\" && data[\"acrB_R717L\"] === \"1\") {\r\n                        const name = \"ereA + acrB_R717L\"\r\n                        if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                    } else if (data[\"acrB_R717Q\"] === \"1\" && data[\"acrB_R717L\"] === \"1\") {\r\n                        const name = \"acrB_R717Q + acrB_R717L\"\r\n                        if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                    } else if (data[\"ereA\"] === \"1\") {\r\n                        const name = \"ereA\"\r\n                        if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                    } else if (data[\"acrB_R717Q\"] === \"1\") {\r\n                        const name = \"acrB_R717Q\"\r\n                        if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                    } else if (data[\"acrB_R717L\"] === \"1\") {\r\n                        const name = \"acrB_R717L\"\r\n                        if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                    }\r\n                }\r\n            } else if (AZITH === \"AzithS\") {\r\n                currentData[key][index].total2 += 1\r\n                const name = \"None\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        } else if (key === \"Fluoroquinolones (CipI/R)\") {\r\n            const DCS = data[\"dcs_mechanisms\"]\r\n            if (DCS === \"0_QRDR\") {\r\n                currentData[key][index].total2 += 1\r\n                const name = \"None (CipS)\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            } else if (fluoroR.includes(DCS)) {\r\n                currentData[key][index].total2 += 1\r\n                currentData[key][index].total += 1\r\n                const name = DCS + \" (CipR)\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            } else if (fluoroI.includes(DCS)) {\r\n                currentData[key][index].total2 += 1\r\n                currentData[key][index].total += 1\r\n                const name = DCS + \" (CipI)\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        } else if (key === \"ESBL\") {\r\n            const ESBL = data[\"ESBL_category\"]\r\n            if (ESBL === \"ESBL\") {\r\n                currentData[key][index].total2 += 1\r\n                currentData[key][index].total += 1\r\n                if (data[\"blaCTX-M-15_23\"] === \"1\") {\r\n                    const name = \"blaCTX-M-15\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                } \r\n                if (data[\"blaOXA-7\"] === \"1\") {\r\n                    const name = \"blaOXA-7\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                } \r\n                if (data[\"blaSHV-12\"] === \"1\") {\r\n                    const name = \"blaSHV-12\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                } \r\n                if (data[\"blaCTX-M-55\"] === \"1\") {\r\n                    const name = \"blaCTX-M-55\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                }\r\n            } else if (ESBL === \"Non-ESBL\") {\r\n                currentData[key][index].total2 += 1\r\n                const name = \"None\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        } else if (key === \"Chloramphenicol\") {\r\n            const CHLO = data[\"chloramphenicol_category\"]\r\n            if (CHLO === \"ChlR\") {\r\n                currentData[key][index].total2 += 1\r\n                currentData[key][index].total += 1\r\n                if (data[\"catA1\"] === \"1\" && data[\"cmlA\"] === \"1\") {\r\n                    const name = \"catA1 + cmlA\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                } else {\r\n                    if (data[\"catA1\"] === \"1\"){\r\n                        const name = \"catA1\"\r\n                        if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                    }\r\n                    if (data[\"cmlA\"] === \"1\") {\r\n                        const name = \"cmlA\"\r\n                        if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                    }\r\n                }\r\n            } else if (CHLO === \"ChlS\") {\r\n                currentData[key][index].total2 += 1\r\n                const name = \"None\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        } else if (key === \"Ampicillin\") {\r\n            currentData[key][index].total2 += 1\r\n            if (data[\"blaTEM-1D\"] === \"1\") {\r\n                currentData[key][index].total += 1\r\n                const name = \"blaTEM-1D\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            } else {\r\n                const name = \"None\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        } else if (key === \"Co-trimoxazole\") {\r\n            const COTRIM = data[\"co_trim\"]\r\n            if (COTRIM === \"1\") {\r\n                const genes = []\r\n                currentData[key][index].total2 += 1\r\n                currentData[key][index].total += 1\r\n                for (const i in cotrim) {\r\n                    if (data[cotrim[i]] === \"1\") {\r\n                        genes.push(cotrim[i])\r\n                    }\r\n                }\r\n                if (data[\"sul1\"] === \"1\") {\r\n                    genes.push(\"sul1\")\r\n                }\r\n                if (data[\"sul2\"] === \"1\") {\r\n                    genes.push(\"sul2\")\r\n                }\r\n                const name = genes.join(' + ')\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                \r\n            } else if (COTRIM === \"0\") {\r\n                currentData[key][index].total2 += 1\r\n                const name = \"None\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        } else if (key === \"Sulphonamides\") {\r\n            const SULPH = data[\"sul_any\"]\r\n            if (SULPH === \"1\") {\r\n                currentData[key][index].total2 += 1\r\n                currentData[key][index].total += 1\r\n                if (data[\"sul1\"] === \"1\" && data[\"sul2\"] === \"1\") {\r\n                    const name = \"sul1 + sul2\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                }\r\n                else if (data[\"sul1\"] === \"1\") {\r\n                    const name = \"sul1\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                }\r\n                else if (data[\"sul2\"] === \"1\") {\r\n                    const name = \"sul2\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                }\r\n            } else if (SULPH === \"0\") {\r\n                currentData[key][index].total2 += 1\r\n                const name = \"None\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        } else if (key === \"Trimethoprim\") {\r\n            const TRIM = data[\"dfra_any\"]\r\n            if (TRIM === \"1\") {\r\n                currentData[key][index].total2 += 1\r\n                currentData[key][index].total += 1\r\n                if (data[\"dfrA7\"] === \"1\" && data[\"dfrA14\"] === \"1\") {\r\n                    const name = \"dfrA7 + dfrA14\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                } else {\r\n                    for (const i in trime) {\r\n                        if (data[trime[i]] === \"1\") {\r\n                            const name = trime[i]\r\n                            if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            } else if (TRIM === \"0\") {\r\n                currentData[key][index].total2 += 1\r\n                const name = \"None\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        } else if (key === \"Tetracyclines\") {\r\n            const TETRA = data[\"tetracycline_category\"]\r\n            if (TETRA === \"TetR\") {\r\n                currentData[key][index].total2 += 1\r\n                currentData[key][index].total += 1\r\n                if (data[\"tetA(A)\"] === \"1\") {\r\n                    const name = \"tetA(A)\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                }\r\n                if (data[\"tetA(B)\"] === \"1\") {\r\n                    const name = \"tetA(B)\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                }\r\n                if (data[\"tetA(C)\"] === \"1\") {\r\n                    const name = \"tetA(C)\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                }\r\n                if (data[\"tetA(D)\"] === \"1\") {\r\n                    const name = \"tetA(D)\"\r\n                    if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n                }\r\n            } else if (TETRA === \"TetS\") {\r\n                currentData[key][index].total2 += 1\r\n                const name = \"None\"\r\n                if (currentData[key][index][name] === undefined) {currentData[key][index][name] = 1} else {currentData[key][index][name] += 1}\r\n            }\r\n        }\r\n    })\r\n\r\n    return currentData\r\n}\r\n\r\nfunction AMRDataResults (AMRData) {\r\n    AMRData = JSON.parse(AMRData)\r\n\r\n    Object.keys(AMRData).forEach(key => {\r\n        const data = AMRData[key]\r\n\r\n        const top10 = []\r\n        data.forEach(element => {\r\n            if (top10.length < 10) {\r\n                top10.push(element)\r\n            } else {\r\n                top10.sort(function (a, b) {\r\n                    if (a.total === b.total && a.genotype > b.genotype) return -1\r\n                    return a.total > b.total ? -1 : 1\r\n                })\r\n                if (element.total === top10[9].total) {\r\n                    if (element.genotype > top10[9].genotype) top10[9] = element\r\n                }\r\n                if (element.total > top10[9].total) top10[9] = element\r\n            }\r\n        })\r\n        top10.sort(function (a, b) {\r\n            if (a.total === b.total && a.genotype > b.genotype) return -1\r\n            return a.total > b.total ? -1 : 1\r\n        })\r\n        top10.push({ maxSum: data.length === 0 ? 0 : Math.ceil(data[0].total2 / 50) * 50 })\r\n\r\n        AMRData[key] = top10\r\n    })\r\n\r\n    return AMRData\r\n}\r\n\r\nfunction GDData(currentData, data) {\r\n    currentData = JSON.parse(currentData)\r\n\r\n    const index = currentData.findIndex(x => x.name === data.DATE)\r\n    if (index === -1) {\r\n        currentData.push({\r\n            name: data.DATE,\r\n            [data.GENOTYPE]: 1,\r\n            total: 1\r\n        })\r\n    } else {\r\n        currentData[index].total += 1\r\n        if (currentData[index][data.GENOTYPE] === undefined) currentData[index][data.GENOTYPE] = 1\r\n        else currentData[index][data.GENOTYPE] += 1\r\n    }\r\n      \r\n    return currentData\r\n}\r\n\r\nexport function filterForComponents({country, minYear, maxYear, dataset, region, data, amr}) {\r\n    const [results, genotypes, worldMapResults, PMIDResults] = [[], [], [], []]\r\n    let [aux, auxWM, worldMapComplementaryResults, worldMapG, worldMapH58, worldMapSTAD, worldMapMDR, worldMapXDR, worldMapAZITH, worldMapCIPR, worldMapCIPI, RFWGResults, DRTResults, AMRResults, GDResults] = [null, null, {}, [], [], [], [], [], [], [], [], [], [], {}, []]\r\n    AMRResults = { \"Ampicillin\": [], \"Azithromycin\": [], \"Chloramphenicol\": [], \"Co-trimoxazole\": [], \"ESBL\": [], \"Fluoroquinolones (CipI/R)\": [], \"Sulphonamides\": [], \"Tetracyclines\": [], \"Trimethoprim\": [] }\r\n    \r\n    const empty = [\"\", \"-\"]\r\n    data.forEach(x => {\r\n        aux = true\r\n        auxWM = true\r\n\r\n        // Validation\r\n        if (empty.includes(x.COUNTRY_ONLY) || (country !== \"All\" && x.COUNTRY_ONLY !== country)) auxWM = false\r\n        if (empty.includes(x.DATE) || x.DATE < minYear || x.DATE > maxYear) aux = false\r\n        if (dataset !== \"All\" && x.TRAVEL !== dataset.toLowerCase()) aux = false\r\n        if (country !== \"All\" && region !== \"All\" && (empty.includes(x.REGION_IN_COUNTRY) || region !== x.REGION_IN_COUNTRY)) auxWM = false\r\n        if (x['PURPOSE OF SAMPLING'] !== undefined && !x['PURPOSE OF SAMPLING'].includes('Non Targeted')) aux = false\r\n\r\n        // FINAL\r\n\r\n        if (aux && !empty.includes(x.COUNTRY_ONLY)) {\r\n            let displayName = x.COUNTRY_ONLY\r\n            if (x.COUNTRY_ONLY === 'Democratic Republic of Congo') displayName = 'Dem. Rep. Congo'\r\n            else if (x.COUNTRY_ONLY === 'Central African Republic') displayName = 'Central African Rep.'\r\n            else if (x.COUNTRY_ONLY === 'Ivory Coast') displayName = \"Côte d'Ivoire\"\r\n            else if (x.COUNTRY_ONLY === 'East Timor') displayName = \"Timor-Leste\"\r\n\r\n            // WORLD MAP\r\n            if (!worldMapResults.some(e => e.name === x.COUNTRY_ONLY)) {\r\n                worldMapResults.push({\r\n                    name: x.COUNTRY_ONLY,\r\n                    displayName: displayName,\r\n                    count: 1\r\n                })\r\n            } else {\r\n                let aux2 = worldMapResults.find(e => e.name === x.COUNTRY_ONLY);\r\n                let countryIndex = worldMapResults.findIndex(e => e.name === x.COUNTRY_ONLY);\r\n                aux2.count += 1\r\n                worldMapResults[countryIndex] = aux2;\r\n            }\r\n\r\n            // WORLD MAP COMPLEMENTARY DATA\r\n            if (worldMapComplementaryResults[displayName] === undefined) worldMapComplementaryResults[displayName] = WMCDTemplate\r\n            worldMapComplementaryResults[displayName] = WMCDAux(JSON.stringify(worldMapComplementaryResults[displayName]), x)\r\n            \r\n            // WORLD MAP DATA FOR EACH MAPVIEW\r\n            worldMapG = WMCountData(JSON.stringify(worldMapG), x, displayName, \"GENOTYPE\", \"genotypes\", \"lineage\")\r\n            worldMapH58 = WMCountData(JSON.stringify(worldMapH58), x, displayName, \"GENOTYPE_SIMPLE\", \"genotypes\", \"type\", true)\r\n            worldMapSTAD = WMCountData(JSON.stringify(worldMapSTAD), x, displayName, \"amr_category\", \"STADs\", \"type\", false, \"No AMR detected\")\r\n            worldMapMDR = WMCountData(JSON.stringify(worldMapMDR), x, displayName, \"MDR\", \"MDRs\", \"type\", false, \"MDR\")\r\n            worldMapXDR = WMCountData(JSON.stringify(worldMapXDR), x, displayName, \"XDR\", \"XDRs\", \"type\", false, \"XDR\")\r\n            worldMapAZITH = WMCountData(JSON.stringify(worldMapAZITH), x, displayName, \"azith_pred_pheno\", \"AZs\", \"type\", false, \"AzithR\")\r\n            worldMapCIPR = WMCountData(JSON.stringify(worldMapCIPR), x, displayName, \"cip_pred_pheno\", \"CipRs\", \"type\", false, \"CipR\")\r\n            worldMapCIPI = WMCountData(JSON.stringify(worldMapCIPI), x, displayName, \"cip_pred_pheno\", \"CipIs\", \"type\", false, \"\", true)\r\n        }\r\n\r\n        if (aux && auxWM) {\r\n            results.push(x)\r\n            if (!genotypes.includes(x.GENOTYPE)) genotypes.push(x.GENOTYPE)\r\n\r\n            let chartData = ChartData(JSON.stringify(RFWGResults), JSON.stringify(DRTResults), x)\r\n            RFWGResults = chartData[0]\r\n            DRTResults = chartData[1]\r\n            AMRResults = AMRData(JSON.stringify(AMRResults), x)\r\n            GDResults = GDData(JSON.stringify(GDResults), x)\r\n\r\n            if (x.COUNTRY_ONLY === country) {\r\n                if (!PMIDResults.includes(x.PMID)) {\r\n                    PMIDResults.push(x.PMID)\r\n                }\r\n            }\r\n        }\r\n    });\r\n    worldMapComplementaryResults = WMCDResults(JSON.stringify(worldMapComplementaryResults))\r\n    worldMapG = WMCountDataResults(JSON.stringify(worldMapG), \"genotypes\")\r\n    worldMapH58 = WMCountDataResults(JSON.stringify(worldMapH58), \"genotypes\")\r\n    worldMapSTAD = WMCountDataResults(JSON.stringify(worldMapSTAD), \"STADs\")\r\n    worldMapMDR = WMCountDataResults(JSON.stringify(worldMapMDR), \"MDRs\")\r\n    worldMapXDR = WMCountDataResults(JSON.stringify(worldMapXDR), \"XDRs\")\r\n    worldMapAZITH = WMCountDataResults(JSON.stringify(worldMapAZITH), \"AZs\")\r\n    worldMapCIPR = WMCountDataResults(JSON.stringify(worldMapCIPR), \"CipRs\")\r\n    worldMapCIPI = WMCountDataResults(JSON.stringify(worldMapCIPI), \"CipIs\")\r\n    RFWGResults.sort((a, b) => b.total - a.total)\r\n    DRTResults = DRTResults.filter(item => item.total >= 10)\r\n    DRTResults.sort((a, b) => a.name.localeCompare(b.name))\r\n    DRTResults = DRTDataResults(JSON.stringify(DRTResults))\r\n    AMRResults = AMRDataResults(JSON.stringify(AMRResults))\r\n    GDResults.sort((a, b) => a.name - b.name)\r\n\r\n    return [\r\n        results,\r\n        genotypes.length,\r\n        worldMapResults,\r\n        worldMapComplementaryResults,\r\n        worldMapG,\r\n        worldMapH58,\r\n        worldMapSTAD,\r\n        worldMapMDR,\r\n        worldMapXDR,\r\n        worldMapAZITH,\r\n        worldMapCIPR,\r\n        worldMapCIPI,\r\n        PMIDResults,\r\n        RFWGResults,\r\n        DRTResults,\r\n        AMRResults,\r\n        GDResults\r\n    ]\r\n}","import './index.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule, ZoomableGroup } from \"react-simple-maps\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {Tooltip as IconTooltip} from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TooltipMaterialUI from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { BarChart, Bar, XAxis, Label, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Brush, LineChart, Line, Legend } from 'recharts';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faMinus, faCrosshairs, faCamera, faTable, faFilePdf, faInfoCircle, faUndoAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport download from 'downloadjs';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport typhinetLogoImg from '../../assets/img/logo-typhinet3.png';\r\nimport typhinetLogoImg2 from '../../assets/img/logo-typhinet3.png';\r\nimport geography from '../../assets/world-110m.json'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { getColorForGenotype, getColorForDrug, getColorForTetracyclines } from '../../util/colorHelper';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { Select as DropDownSelect } from \"react-dropdown-select\"\r\nimport 'rodal/lib/rodal.css';\r\nimport domtoimage from 'dom-to-image';\r\nimport { jsPDF } from \"jspdf\";\r\nimport { useStyles, CustomCircularProgress, CustomToggleButton, Buttons, ButtonClearSelect } from './materialUI'\r\nimport moment from 'moment';\r\nimport { filterForComponents } from \"./filters\";\r\n\r\nconst DashboardPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [controlMapPosition, setControlMapPosition] = useState({ coordinates: [0, 0], zoom: 1 });\r\n\r\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\r\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState({});\r\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\r\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\r\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\r\n  const [worldMapSTADData, setWorldMapSTADData] = useState([]);\r\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\r\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\r\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\r\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\r\n\r\n  const [plotAmrClassChart, setPlotAmrClassChart] = useState(function () { })\r\n  const [plotDrugsAndGenotypesChart, setPlotDrugsAndGenotypesChart] = useState(function () { })\r\n  const [plotPopulationStructureChart, setPlotPopulationStructureChart] = useState(function () { })\r\n  const [plotDrugTrendsChart, setPlotDrugTrendsChart] = useState(function () { })\r\n\r\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] = useState(false)\r\n  const [captureControlChartRFWGInProgress, setCaptureControlChartRFWGInProgress] = useState(false)\r\n  const [captureControlChartDRTInProgress, setCaptureControlChartDRTInProgress] = useState(false)\r\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] = useState(false)\r\n  const [captureControlChartRFWAGInProgress, setCaptureControlChartRFWAGInProgress] = useState(false)\r\n  const [captureReportInProgress, setCaptureReportInProgress] = useState(false)\r\n  const [tooltipContent, setTooltipContent] = useState(null);\r\n\r\n  const [timeInitial, setTimeInitial] = React.useState(0);\r\n  const [timeFinal, setTimeFinal] = React.useState(0);\r\n  const [actualTimeInitial, setActualTimeInitial] = React.useState(0);\r\n  const [actualTimeFinal, setActualTimeFinal] = React.useState(0);\r\n  const [years, setYears] = useState([0, 0])\r\n\r\n  const [countriesForFilter, setCountriesForFilter] = React.useState(['All']);\r\n  const [regionsForFilter, setRegionsForFilter] = React.useState(['All']);\r\n  const [actualCountry, setActualCountry] = useState(\"All\");\r\n  const [actualRegion, setActualRegion] = useState(\"All\");\r\n\r\n  const [actualContinent, setActualContinent] = useState(\"All\")\r\n  const [continentOptions] = useState(['All', 'Africa', 'Asia', 'Central America', 'Europe', 'North America', 'Oceania', 'South America'])\r\n\r\n  const [populationStructureFilter, setPopulationStructureFilter] = React.useState(1);\r\n  const [populationStructureFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage per year', id: 2 }])\r\n  const [RFWGFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage within genotype', id: 2 }])\r\n  const [amrClassFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage per genotype', id: 2 }])\r\n  const [amrClassFilterforFilterOptions] = useState([{ value: \"Ampicillin\", id: 0 }, { value: \"Azithromycin\", id: 1 }, { value: \"Chloramphenicol\", id: 2 }, { value: \"Co-trimoxazole\", id: 3 }, { value: \"ESBL\", id: 4 }, { value: \"Fluoroquinolones (CipI/R)\", id: 5 }, { value: \"Sulphonamides\", id: 6 }, { value: \"Tetracyclines\", id: 7 }, { value: \"Trimethoprim\", id: 8 }])\r\n\r\n  const [RFWGFilter, setRFWGFilter] = React.useState(2);\r\n  const [amrClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [drtClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [trendClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", /*\"Fluoroquinolone (CipI)\",*/ \"Fluoroquinolones (CipR)\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [trendDropdownOptions] = useState([{ value: \"Ampicillin\", id: 0 }, { value: \"Azithromycin\", id: 1 }, { value: \"Chloramphenicol\", id: 2 }, /*{value: \"Fluoroquinolone (CipI)\", id: 3},*/ { value: \"Fluoroquinolones (CipR)\", id: 3 }, { value: \"Co-trimoxazole\", id: 4 }, { value: \"ESBL\", id: 5 }, { value: \"Fluoroquinolones (CipI/R)\", id: 6 }, { value: \"Susceptible\", id: 7 }, { value: \"Sulphonamides\", id: 8 }, { value: \"Tetracyclines\", id: 9 }, { value: \"Trimethoprim\", id: 10 }])\r\n  const [RFWGDropdownOptions, setRFWGDropdownOptions] = useState([])\r\n  const [amrClassFilter, setAmrClassFilter] = React.useState(amrClassesForFilter[5])\r\n  const [RDWAGDataviewFilter, setRDWAGDataviewFilter] = React.useState(2)\r\n\r\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([])\r\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState([])\r\n  const [populationStructureChartData, setPopulationStructureChartData] = useState([])\r\n  const [amrClassChartData, setAmrClassChartData] = useState({})\r\n\r\n  const [mapView, setMapView] = React.useState('CipI');\r\n  const [dataset, setDataset] = React.useState('All');\r\n  const [totalGenomes, setTotalGenomes] = useState(0)\r\n  const [actualGenomes, setActualGenomes] = useState(0)\r\n  const [totalGenotypes, setTotalGenotypes] = useState(0)\r\n  const [actualGenotypes, setActualGenotypes] = useState(0)\r\n  const [appLoading, setAppLoading] = useState(true)\r\n  const [lastUpdated, setLastUpdated] = useState(\"\")\r\n  const [countryPMID, setCountryPMID] = useState([])\r\n\r\n  const [trendValues, setTrendValues] = React.useState(trendDropdownOptions)\r\n  const [RFWGValues, setRFWGValues] = React.useState([])\r\n\r\n  const [desktop] = useState(767)\r\n  const [mobile] = useState(500)\r\n\r\n  const [hoverColor] = useState(\"#D2F1F6\")\r\n\r\n  const [dimensions, setDimensions] = React.useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n\r\n  function debounce(fn, ms) {\r\n    let timer\r\n    return _ => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(_ => {\r\n        timer = null\r\n        fn.apply(this, arguments)\r\n      }, ms)\r\n    };\r\n  }\r\n\r\n  function formatDate (date) {\r\n    return moment(date).format(\"ddd MMM DD YYYY HH:mm:ss\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }, 1000)\r\n\r\n    window.addEventListener('resize', debouncedHandleResize)\r\n\r\n    return _ => {\r\n      window.removeEventListener('resize', debouncedHandleResize)\r\n    }\r\n  })\r\n\r\n  const [genotypes] = useState([\r\n    '0', '0.0.1', '0.0.2', '0.0.3', '0.1',\r\n    '0.1.1', '0.1.2', '0.1.3', '1.1', '1.1.1',\r\n    '1.1.2', '1.1.3', '1.1.4', '1.2', '1.2.1',\r\n    '2', '2.0.1', '2.0.2', '2.1',\r\n    '2.1.1', '2.1.2', '2.1.3', '2.1.4', '2.1.5', '2.1.6',\r\n    '2.1.7', '2.1.8', '2.1.9', '2.1.7.1', '2.1.7.2', '2.2',\r\n    '2.2.1', '2.2.2', '2.2.3', '2.2.4',\r\n    '2.3', '2.3.1', '2.3.2', '2.3.3', '2.3.4',\r\n    '2.3.5', '2.4', '2.4.1', '2.5',\r\n    '2.5.1', '2.5.2', '3', '3.0.1', '3.0.2',\r\n    '3.1', '3.1.1', '3.1.2', '3.2',\r\n    '3.2.1', '3.2.2', '3.3', '3.3.1',\r\n    '3.3.2', '3.3.2.Bd1', '3.3.2.Bd2', '3.4',\r\n    '3.5', '3.5.1', '3.5.2', '3.5.3',\r\n    '3.5.4', '4', '4.1', '4.1.1', '4.2', '4.2.1',\r\n    '4.2.2', '4.2.3', /*'4.3', '4.3.0', */'4.3.1', '4.3.1.1',\r\n    '4.3.1.1.P1', '4.3.1.1.EA1', '4.3.1.2', '4.3.1.2.EA2',\r\n    '4.3.1.2.EA3', '4.3.1.3', '4.3.1.3.Bdq'].sort((a, b) => a.localeCompare(b)));\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}mongo/lastUpdated`)\r\n      .then((res) => {\r\n        setLastUpdated(new Date(res.data))\r\n      })\r\n  }, [])\r\n\r\n  const mapSamplesColorScale = (domain) => {\r\n    if (domain >= 1 && domain <= 9) {\r\n      return '#4575b4'\r\n    } else if (domain >= 10 && domain <= 19) {\r\n      return '#91bfdb'\r\n    } else if (domain >= 20 && domain <= 99) {\r\n      return '#addd8e'\r\n    } else if (domain >= 100 && domain <= 299) {\r\n      return '#fee090'\r\n    } else if (domain >= 300) {\r\n      return '#fc8d59'\r\n    }\r\n  }\r\n\r\n  const [mapRedColorScale] = useState(() => scaleLinear()\r\n    .domain([0, 50, 100])\r\n    .range([\"#ffebee\", \"#f44336\", \"#b71c1c\"]));\r\n\r\n  const tooltip = React.useCallback((positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\r\n    return (\r\n      <Tooltip\r\n        position={{ y: dimensions.width < mobile ? positionY[0] : dimensions.width < desktop ? positionY[1] : positionY[2], x: dimensions.width < mobile ? -10 : 0 }}\r\n        wrapperStyle={wrapperS}\r\n        cursor={{ fill: hoverColor }}\r\n        content={({ active, payload, label }) => {\r\n          if (payload !== null) {\r\n            if (payload[0]?.payload.name === \"\") {\r\n              return null;\r\n            }\r\n\r\n            if (sort) {\r\n              payload.sort((a, b) => b.value - a.value)\r\n              payload = payload.reverse()\r\n            }\r\n            if (active) {\r\n              return (\r\n                <div className=\"my-tooltip\">\r\n                  <div className=\"my-tooltip-title\">\r\n                    <span className=\"my-tooltip-title-label\">{label}</span>\r\n                    {chart === 0 && (<span className=\"my-tooltip-title-total\">{\"N = \" + (payload[0].payload.totalS)}</span>)}\r\n                    {chart === 4 && (<span className=\"my-tooltip-title-total\">{\"N = \" + (payload[0].payload.quantities.totalS)}</span>)}\r\n                    {chart === 1 && (<span className=\"my-tooltip-title-total\">{\"N = \" + payload[0].payload.total}</span>)}\r\n                  </div>\r\n                  <div className=\"my-tooltip-content\" style={{ width: width1 }}>\r\n                    {payload.reverse().map((item, index) => {\r\n                      let percentage = ((item.value / item.payload.total) * 100)\r\n                      if (chart === 1) {\r\n                        percentage = ((item.payload.drugsPercentage[item.dataKey] / item.payload.total) * 100)\r\n                      }\r\n                      if (chart === 0) {\r\n                        percentage = ((item.value / item.payload.totalS) * 100)\r\n                      }\r\n                      percentage = Math.round(percentage * 100) / 100\r\n                      if ((populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4)) {\r\n                        percentage = Math.round(item.value * 100) / 100\r\n                      }\r\n                      if (chart === 1 && item.payload.drugsPercentage[item.dataKey] === 0) {\r\n                        return null\r\n                      }\r\n                      return (\r\n                        <div key={index + item} className=\"my-tooltip-content-individual\" style={{ width: width2 }}>\r\n                          <div className=\"my-tooltip-content-square\" style={{ backgroundColor: stroke ? item.stroke : item.fill }} />\r\n                          <div className=\"my-tooltip-content-info\">\r\n                            <span className=\"my-tooltip-content-name\" style={{ width: dimensions.width < mobile ? '80%' : '100%' }}>{item.name}</span>\r\n                            <span className=\"my-tooltip-content-count\">N = {(populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4) ? item.payload.quantities[item.name] : chart === 1 ? item.payload.drugsPercentage[item.dataKey] : item.value}</span>\r\n                            <span className=\"my-tooltip-content-percent\">{percentage}%</span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n          return null;\r\n        }}\r\n      />\r\n    )\r\n  }, [desktop, dimensions, mobile, populationStructureFilter, RFWGFilter, hoverColor])\r\n\r\n  useEffect(() => {\r\n    const plotPopulationStructureChart = () => {\r\n\r\n      if (populationStructureFilter === 1) { /* QUANTITY */\r\n        let maxH = 0\r\n        for (let index = 0; index < populationStructureChartData.length; index++) {\r\n          if (populationStructureChartData[index].total > maxH) {\r\n            maxH = populationStructureChartData[index].total\r\n          }\r\n        }\r\n        maxH = Math.ceil(maxH / 50) * 50\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={populationStructureChartData}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n              maxBarSize={62}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"PSC-label\" offset={6}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {populationStructureChartData.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"PSC_2\"} className=\"PSC-legend-info\">\r\n                              <div className=\"PSC-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"PSC-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip([290, 290, 260], dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false)}\r\n              {genotypes.map((item, i) => <Bar key={i+\"PSC_Q\"} dataKey={item} stackId={0} fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else { /* PERCENTAGE */\r\n        let maxH = 100\r\n\r\n        let teste = JSON.parse(JSON.stringify(populationStructureChartData))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (keys[key] !== 'name' && keys[key] !== 'total' && keys[key] !== 'quantities') {\r\n              let aux = keys[key]\r\n              element.quantities[aux] = element[aux]\r\n              element[aux] = (element[aux] * 100) / element.total\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={teste}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n              maxBarSize={62}\r\n              barCategoryGap={'10%'}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"PSC-label\" offset={6}>\r\n                  % Genomes per year\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"PSC\"} className=\"PSC-legend-info\">\r\n                              <div className=\"PSC-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"PSC-legend-info-name\" >{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip([290, 290, 260], dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false, 3)}\r\n              {genotypes.map((item, i) => <Bar key={i+\"PSC_P\"} dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotPopulationStructureChart(plotPopulationStructureChart)\r\n  }, [dimensions.width, genotypes, populationStructureChartData, populationStructureFilter, tooltip])\r\n\r\n  useEffect(() => {\r\n    const amrClassChartTooltip = () => {\r\n      return (\r\n        <Tooltip\r\n          position={{ x: 0, y: 230 }}\r\n          wrapperStyle={{ zIndex: 100, top: 50 }}\r\n          allowEscapeViewBox={{ x: true, y: true }}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (active) {\r\n                return (\r\n                  <div className=\"my-tooltip\">\r\n                    <span className=\"my-tooltip-title-label\">{label}</span>\r\n                    <div className=\"my-tooltip-content amr-tooltip-content\">\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage\r\n                        if (RDWAGDataviewFilter === 1) {\r\n                          percentage = ((item.value / item.payload.total2) * 100)\r\n                        } else {\r\n                          percentage = item.value\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100\r\n                        return (\r\n                          <div key={index+\"tooltip\"} className=\"amr-tooltip-content-individual\">\r\n                            <div className=\"my-tooltip-content-square\" style={{ backgroundColor: item.fill }} />\r\n                            <div className=\"amr-tooltip-content-info\">\r\n                              <span className=\"amr-tooltip-content-name\">{item.name}</span>\r\n                              <span className=\"my-tooltip-content-count\">N = {RDWAGDataviewFilter === 2 ? item.payload.percentage[item.name] : item.value}</span>\r\n                              <span className=\"my-tooltip-content-percent\">{percentage}%</span>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }}\r\n        />\r\n      )\r\n    }\r\n\r\n    const armClassFilterComponent = (info) => {\r\n      let maxSum = 0\r\n      const amr = amrClassChartData[amrClassFilter]\r\n      if (amr && amr[amr.length - 1] !== undefined) {\r\n        maxSum = amr[amr.length - 1].maxSum\r\n      }\r\n\r\n      let dataAMR = amr?.slice(0, amr.length - 1)\r\n      if (dataAMR === undefined) dataAMR = []\r\n\r\n      if (RDWAGDataviewFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={dataAMR}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < 1700 ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxSum]} type={\"number\"} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"RDWAG-label\" offset={6}>\r\n                  Number of occurrences\r\n                </Label>\r\n              </YAxis>\r\n              {dataAMR.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div className=\"RDWAG-legend-div\" style={{ justifyContent: amrClassFilter === \"Ampicillin\" || amrClassFilter === \"Fluoroquinolones (CipI/R)\" ? \"\" : \"space-between\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index+\"RDWAG-legend\"} className=\"RDWAG-legend-info\">\r\n                              <div className=\"RDWAG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RDWAG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar key={i+\"RDWAG_Q\"} dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else if (RDWAGDataviewFilter === 2) {\r\n        let temp = JSON.parse(JSON.stringify(dataAMR))\r\n\r\n        temp.forEach(element => {\r\n          element.percentage = {}\r\n          for (const key in element) {\r\n            if (![\"genotype\", \"total\", \"total2\", \"percentage\"].includes(key) && !key.includes(\"error\")) {\r\n              const aux = (element[key] * 100) / element.total2\r\n              element.percentage[key] = element[key]\r\n              element[key] = aux\r\n            }\r\n          }\r\n        })\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={temp}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < 1700 ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} type={\"number\"} allowDecimals={false} width={70} allowDataOverflow={true}>\r\n                <Label angle={-90} position='insideLeft' className=\"RDWAG-label\" offset={6}>\r\n                  % Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {temp.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div className=\"RDWAG-legend-div\" style={{ justifyContent: amrClassFilter === \"Ampicillin\" || amrClassFilter === \"Fluoroquinolones (CipI/R)\" ? \"\" : \"space-between\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RDWAG-legend-2\"} className=\"RDWAG-legend-info\">\r\n                              <div className=\"RDWAG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RDWAG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar key={i+\"RDWAG_P\"} dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n\r\n    const plotAmrClassChart = () => {\r\n      switch (amrClassFilter) {\r\n        case 'Azithromycin':\r\n          return (armClassFilterComponent({\r\n            left: -5, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['ereA', \"#9e9ac8\"],\r\n              ['acrB_R717Q', \"#addd8e\"],\r\n              ['acrB_R717L', \"#FBCFE5\"],\r\n              ['ereA + acrB_R717Q', \"#FFEC78\"],\r\n              ['ereA + acrB_R717L', \"#66c2a4\"],\r\n              ['acrB_R717Q + acrB_R717L', \"#fd8d3c\"],\r\n              ['ereA + acrB_R717Q + acrB_R717L', \"#6baed6\"],\r\n              ['None', \"#B9B9B9\"]\r\n            ]\r\n          }))\r\n        case 'Fluoroquinolones (CipI/R)':\r\n          return (armClassFilterComponent({\r\n            left: 10, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['3_QRDR + qnrS (CipR)', \"black\"],\r\n              ['3_QRDR + qnrB (CipR)', \"#660000\"],\r\n              ['3_QRDR (CipR)', \"#cc0000\"],\r\n              ['2_QRDR + qnrS (CipR)', \"#ff6666\"],\r\n              ['2_QRDR + qnrB (CipR)', \"#ffcccc\"],\r\n              ['2_QRDR (CipI)', \"#ff6600\"],\r\n              ['1_QRDR + qnrS (CipR)', \"#660066\"],\r\n              ['1_QRDR + qnrB (CipR)', \"#993399\"],\r\n              ['1_QRDR (CipI)', \"#ffcc00\"],\r\n              ['0_QRDR + qnrS (CipI)', \"#009999\"],\r\n              ['0_QRDR + qnrB (CipI)', \"#0066cc\"],\r\n              ['None (CipS)', \"#B9B9B9\"]]\r\n          }))\r\n        case 'Chloramphenicol':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['cmlA', \"#addd8e\"],\r\n              ['catA1', \"#9e9ac8\"],\r\n              [\"catA1 + cmlA\", \"#FFEC78\"],\r\n              ['None', \"#B9B9B9\"]\r\n            ]\r\n          }))\r\n        case 'Ampicillin':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaTEM-1D', \"#addd8e\"],\r\n              ['None', \"#B9B9B9\"]]\r\n          }))\r\n        case 'Sulphonamides':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['sul2', \"#ffeda0\"],\r\n              ['sul1', \"#fd8d3c\"],\r\n              ['sul1 + sul2', \"#B4DD70\"],\r\n              ['None', \"#B9B9B9\"]]\r\n          }))\r\n        case 'Trimethoprim':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['dfrA1', \"#B4DD70\"],\r\n              ['dfrA5', \"#D7AEF7\"],\r\n              ['dfrA7', \"#FFEC78\"],\r\n              ['dfrA14', \"#6baed6\"],\r\n              ['dfrA7 + dfrA14', \"#fd8d3c\"],\r\n              ['dfrA15', \"#FBCFE5\"],\r\n              ['dfrA17', \"#FCB469\"],\r\n              ['dfrA18', \"#66c2a4\"],\r\n              ['None', \"#B9B9B9\"]]\r\n          }))\r\n        case 'Co-trimoxazole':\r\n          let cotrim = [\"dfrA1\", \"dfrA5\", \"dfrA7\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\"];\r\n          let colors1 = [\"#ffeda0\", \"#fd8d3c\", \"#addd8e\", \"#9e9ac8\", \"#6baed6\", \"#7a0177\", \"#54278f\"]\r\n          let colors2 = [\"#a50f15\", \"#6a5acd\", \"#f1b6da\", \"#fb8072\", \"#4682b4\", \"#2e8b57\", \"#98fb98\"]\r\n          let colors3 = [\"#fcc5c0\", \"#bcbddc\", \"#fdd0a2\", \"#c994c7\", \"#9ecae1\", \"#a8ddb5\", \"#fc9272\"]\r\n          let bars = [['None', \"#B9B9B9\"]]\r\n\r\n          for (const index in cotrim) {\r\n            bars.push([cotrim[index] + \" + sul1\", colors1[index]])\r\n            bars.push([cotrim[index] + \" + sul2\", colors2[index]])\r\n            bars.push([cotrim[index] + \" + sul1 + sul2\", colors3[index]])\r\n          }\r\n          bars.push([\"dfrA7 + dfrA14 + sul1 + sul2\", \"#F54CEB\"])\r\n\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: bars\r\n          }))\r\n        case 'Tetracyclines':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['tetA(D)', getColorForTetracyclines('tetA(D)')],\r\n              ['tetA(C)', getColorForTetracyclines('tetA(C)')],\r\n              ['tetA(B)', getColorForTetracyclines('tetA(B)')],\r\n              ['tetA(A)', getColorForTetracyclines('tetA(A)')],\r\n              ['None', \"#B9B9B9\"]\r\n            ]\r\n          }))\r\n        case 'ESBL':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaSHV-12', \"#addd8e\"],\r\n              ['blaOXA-7', \"#9e9ac8\"],\r\n              ['blaCTX-M-15', \"#6baed6\"],\r\n              ['blaCTX-M-55', \"#FBCFE5\"],\r\n              ['None', \"#B9B9B9\"]]\r\n          }))\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    setPlotAmrClassChart(plotAmrClassChart)\r\n  }, [RDWAGDataviewFilter, amrClassChartData, amrClassFilter, dimensions.width, hoverColor])\r\n\r\n  useEffect(() => {\r\n    const plotDrugTrendsChart = () => {\r\n      let dataDRT = drugTrendsChartData\r\n      for (const index in dataDRT) {\r\n        for (const i in trendClassesForFilter) {\r\n          const TCFF = trendClassesForFilter[i]\r\n          if (!((TCFF.toString()) in dataDRT[index])) {\r\n            dataDRT[index][TCFF] = 0\r\n            dataDRT[index].drugsPercentage[TCFF] = 0\r\n          }\r\n        }\r\n      }\r\n\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <LineChart\r\n            data={dataDRT}\r\n            margin={{\r\n              top: 20, bottom: 5, right: 0, left: -5\r\n            }}\r\n            height={582}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis tickCount={20} allowDecimals={false} type=\"number\" padding={{ left: 20, right: 20 }} dataKey=\"name\" domain={['dataMin', 'dataMax']} interval={\"preserveStartEnd\"} tick={{ fontSize: 14 }} />\r\n            <YAxis tickCount={6} padding={{ top: 20, bottom: 20 }} allowDecimals={false} width={70}>\r\n              <Label angle={-90} position='insideLeft' className=\"DRT-label\" offset={12}>\r\n                Resistant (%)\r\n              </Label>\r\n            </YAxis>\r\n            {drugTrendsChartData.length > 0 && (\r\n              <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n            )}\r\n\r\n            <Legend\r\n              content={(props) => {\r\n                const { payload } = props;\r\n                return (\r\n                  <div className=\"DRT-legend\">\r\n                    <div className=\"DRT-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry\r\n                        return (\r\n                          <div key={index + \"DRT-legend\"} className=\"DRT-legend-info\">\r\n                            <div className=\"DRT-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                            <span className=\"DRT-legend-info-name\">{dataKey}</span>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n            {tooltip([160, 275, 255], dimensions.width < mobile ? 250 : 325, \"50%\", true, { zIndex: 100, top: 175, right: 0 }, true, 1)}\r\n            {trendClassesForFilter.map((item, i) => (<Line key={i + \"DRTLine\"} dataKey={item} strokeWidth={2} stroke={getColorForDrug(item)} connectNulls type=\"monotone\" activeDot={timeInitial === timeFinal ? true : false} />))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n\r\n    setPlotDrugTrendsChart(plotDrugTrendsChart)\r\n  }, [dimensions.width, drugTrendsChartData, mobile, timeFinal, timeInitial, tooltip, trendClassesForFilter])\r\n\r\n  useEffect(() => {\r\n    const plotDrugsAndGenotypesChart = () => {\r\n      let aux = JSON.parse(JSON.stringify(drugsAndGenotypesChartData))\r\n      \r\n      const aux2 = []\r\n      for (let index = 0; index < aux.length; index++) {\r\n        const percentage = (aux[index].total / aux[index].totalS) * 100\r\n        aux2.push({value: aux[index].name, label: aux[index].name + ` (total N=${aux[index].totalS}, ${Math.round(percentage * 100) / 100}% resistant)`, id: index})\r\n      }\r\n      setRFWGDropdownOptions(aux2)\r\n\r\n      const values = RFWGValues.map(x => x.value)\r\n      aux = aux.filter(x => values.includes(x.name))\r\n\r\n      if (RFWGFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              data={aux}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n              height={582}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis allowDecimals={false} width={71}>\r\n                <Label angle={-90} position='insideLeft' className=\"RFWG-label\" offset={12}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {drugsAndGenotypesChartData.length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div className=\"RFWG-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RFWG-legend\"} className=\"RFWG-legend-info\">\r\n                              <div className=\"RFWG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RFWG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip([155, 270, 270], dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 0)}\r\n              {drtClassesForFilter.map((item, i) => (<Bar key={i+\"DRT_Q\"} dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else {\r\n        const teste = JSON.parse(JSON.stringify(aux))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (!['name', 'total', 'quantities', 'totalS'].includes(keys[key])) {\r\n              let aux3 = keys[key]\r\n              element.quantities[aux3] = element[aux3]\r\n              element[aux3] = (element[aux3] * 100) / element.totalS\r\n            }\r\n            element.quantities['totalS'] = element.totalS\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\" height=\"100%\">\r\n            <BarChart\r\n              data={teste}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"RFWG-label\" offset={12}>\r\n                  Percentage within genotype (%)\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div className=\"RFWG-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RFWG-legend-2\"} className=\"RFWG-legend-info\">\r\n                              <div className=\"RFWG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RFWG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip([155, 270, 270], dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 4)}\r\n              {drtClassesForFilter.map((item, i) => (<Bar key={i+\"DRT_P\"} dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotDrugsAndGenotypesChart(plotDrugsAndGenotypesChart)\r\n  }, [RFWGFilter, RFWGValues, dimensions.width, drtClassesForFilter, drugsAndGenotypesChartData, mobile, tooltip])\r\n\r\n  function imgOnLoadPromise(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      obj.onload = () => resolve(obj);\r\n      obj.onerror = reject;\r\n    });\r\n  }\r\n\r\n  const [stopLoading] = useState(() => (index) => {\r\n    switch (index) {\r\n      case 0: setCaptureControlMapInProgress(false)\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(false)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(false)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(false)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(false)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  })\r\n\r\n  const [capturePicture] = useState(() => async (id, index, info = {}) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(true)\r\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(true)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(true)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(true)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(true)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const names = [\"Resistance frequencies within genotypes\", \"Drug resistance trends\", \"Genotype distribution\", \"Resistance determinants within genotypes\"]\r\n    const brokenNames = [[\"Resistance frequencies\", \"within genotypes\"], [\"Resistance determinants\", \"within all genotypes\"]]\r\n\r\n    if (index === 5) {\r\n      let ids = [\"RFWG\", \"RFWAG\", \"DRT\", \"GD\"]\r\n\r\n      var doc = new jsPDF({ unit: 'mm', format: 'a4', orientation: 'l' });\r\n\r\n      const IPW = doc.internal.pageSize.getWidth() / 2;\r\n\r\n      let typhinetLogo = new Image();\r\n      typhinetLogo.src = typhinetLogoImg2;\r\n      doc.addImage(typhinetLogo, 'PNG', 110, 8, 80, 26)\r\n\r\n      let date = new Date()\r\n      date = moment(date).format(\"ddd MMM DD YYYY HH:mm:ss\")\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor(0,0,0);\r\n      let space = 0\r\n      const paragraph1 = `This report was generated by the TyphiNET (http://typhi.net) website, a data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch (http://pathogen.watch). Data were last updated on [${formatDate(lastUpdated)}].  `\r\n      const paragraph2 = `This report was generated at [${formatDate(new Date())}] using the beta version of TyphiNET which is still undergoing development and data are not yet complete. For code and further details please see: https://github.com/zadyson/TyphiNET`\r\n      const paragraph3 = `The genotypes reported here are defined in Dyson & Holt (2021), J. Infect. Dis.`\r\n      const paragraph4 = `Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, Argimón et al. 2021, Nat. Commun.`\r\n      const paragraph5 = `Travel-associated cases are attributed to the country of travel, not the country of isolation (see Ingle et al. 2019, PLoS NTDs).`\r\n      const paragraph6 = `TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (typhi.net).`\r\n      const paragraph7 = `Studies contributing genomes representing infections originating from ${info.country} have the following PubMed IDs (PMIDs): ${info.PMID.join(', ')}.`\r\n      const paragraph8 = `The TyphiNET dashboard was developed with support from the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the EU Horizon 2020 research and innovation programme (Marie Sklodowska-Curie grant #845681).`\r\n      doc.setFont(undefined, 'bold')\r\n      doc.text(`TyphiNET report [${formatDate(new Date())}]`, 20, 50, { align: 'justify', maxWidth: 255 })\r\n      doc.setFont(undefined, 'normal')\r\n      doc.text(paragraph1, 20, 65, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph2, 20, 82, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph3, 20, 99, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph4, 20, 106, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph5, 20, 113, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph6, 20, 125, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph8, 20, 147, { align: 'justify', maxWidth: 255 })\r\n      if (info.country !== \"All\") {\r\n          doc.text(paragraph7, 20, 164, { align: 'justify', maxWidth: 255 })\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200)\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n\r\n      doc.addPage('a4', 'l')\r\n      doc.setFontSize(25);\r\n      doc.text(\"Global Overview of\", 77, 12);\r\n      doc.setFont(undefined, 'italic')\r\n      doc.text(\"Salmonella\", 154, 12);\r\n      doc.setFont(undefined, 'normal')\r\n      doc.text(\"Typhi\", 200, 12);\r\n\r\n      await svgAsPngUri(document.getElementById('control-map'), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          canvas.width = 1400;\r\n          canvas.height = 700;\r\n          ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n          var img = canvas.toDataURL(\"image/png\")\r\n          doc.addImage(img, \"PNG\", 0, 45, 298, 155);\r\n        })\r\n\r\n      let actualMapView = info.mapView\r\n      switch (actualMapView) {\r\n        case \"MDR\":\r\n          actualMapView = \"Multidrug resistant (MDR)\"\r\n          break;\r\n        case \"XDR\":\r\n          actualMapView = \"Extensively drug resistant (XDR)\"\r\n          break;\r\n        case \"Azith\":\r\n          actualMapView = \"Azithromycin resistant\"\r\n          break;\r\n        case \"CipI\":\r\n          actualMapView = \"Ciprofloxacin insusceptible and resistant (CipI/R)\"\r\n          break;\r\n        case \"CipR\":\r\n          actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n          break;\r\n        case \"H58 / Non-H58\":\r\n          actualMapView = \"H58 genotype\"\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      doc.setFontSize(12);\r\n      const dataset = info.dataset === \"All\" ? 'All (local + travel)' : info.dataset === \"Local\" ? 'Locally isolated' : 'Travel isolates'\r\n\r\n      doc.setFont(undefined, 'bold')\r\n      doc.text(info.mapView, 8, 20);\r\n      doc.setFont(undefined, 'normal')\r\n      doc.text(`Total ${info.actualGenomes} genomes`, 8, 25);\r\n      doc.text(\"Dataset: \" + dataset, 8, 30);\r\n      doc.text(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 8, 35);\r\n      doc.text(\"Country: \" + info.country, 8, 40);\r\n      doc.text(\"Region: \" + info.region, 8, 45);\r\n\r\n      if (info.mapView === 'Dominant Genotype') {\r\n        var img = new Image()\r\n        img.src = \"legends/MapView_DominantGenotype.png\"\r\n        doc.addImage(img, 'PNG', 68, 19, 219, 27)\r\n      } else if (info.mapView === 'No. Samples') {\r\n        var img2 = new Image()\r\n        img2.src = \"legends/MapView_NoSamples.png\"\r\n        doc.addImage(img2, 'PNG', 250, 15, 35, 35)\r\n      } else {\r\n        var img3 = new Image()\r\n        img3.src = \"legends/MapView_Others.png\"\r\n        doc.addImage(img3, 'PNG', 250, 15, 35, 35)\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200)\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n\r\n      doc.addPage('a4', 'l')\r\n      const names2 = [\"Resistance frequencies within genotypes\", \"Resistance determinants within genotypes\", \"Drug resistance trends\", \"Genotype distribution\"]\r\n      for (let index = 0; index < ids.length; index++) {\r\n\r\n        let url\r\n        await domtoimage.toJpeg(document.getElementById(ids[index]), { quality: 1, bgcolor: \"white\" })\r\n          .then(function (dataUrl) {\r\n            url = dataUrl\r\n          });\r\n\r\n        let subtitleH = 0\r\n        if (index === 0 || index === 1 || index === 2) {\r\n          subtitleH = 3\r\n        }\r\n        subtitleH += 3\r\n\r\n        doc.addImage(url, \"PNG\", 5, 15 + subtitleH);\r\n\r\n        let imgWidth = jsPDF.API.getImageProperties(url).width\r\n        imgWidth = Math.floor(imgWidth * 0.264583)\r\n        doc.setFontSize(11)\r\n        const texts = [\r\n          \" \",\r\n          \" \",\r\n          \" \",\r\n          \" \"\r\n        ]\r\n        let spaceBetween = -4\r\n        if (dimensions.width < 1750) {\r\n          spaceBetween = 13\r\n        }\r\n\r\n        let drugs = []\r\n        for (let i = 0; i < info.drugs.length; i++) {\r\n          drugs.push(info.drugs[i].value)\r\n        }\r\n        if (drugs.length === 0) {\r\n          drugs.push('None')\r\n        }\r\n\r\n        doc.text(texts[index], imgWidth + spaceBetween, 23 + subtitleH, { align: 'justify', maxWidth: 50 })\r\n\r\n        doc.setFontSize(14)\r\n        if (index === 1) {\r\n          doc.text(names2[index] + ' : ' + info.amrClassFilter, 23, 10)\r\n        } else {\r\n          doc.text(names2[index], 23, 10)\r\n        }\r\n        doc.setFontSize(9)\r\n\r\n        if (index === 0) {\r\n          doc.text(`Top Genotypes (up to ${info.RFWGCount})`, 23, 15)\r\n        }\r\n        if (index === 1) {\r\n          doc.text(\"Top Genotypes (up to 10)\", 23, 15)\r\n        }\r\n        if (index === 2) {\r\n          doc.text(\"Data are plotted for years with N >= 10 genomes\", 23, 15)\r\n        }\r\n\r\n        doc.setFontSize(12)\r\n        doc.text(`Total ${info.actualGenomes} genomes`, 230, 30);\r\n        doc.text(\"Dataset: \" + dataset, 230, 35);\r\n        doc.text(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 230, 40);\r\n        doc.text(\"Country: \" + info.country, 230, 45);\r\n        doc.text(\"Region: \" + info.region, 230, 50);\r\n\r\n        if (index === 3){\r\n          doc.setFillColor(255,255,255);\r\n          doc.rect(22, info.dimensions.width < info.desktop ? 120 : 110, 300, 100, 'F');\r\n        } else if (index === 1){\r\n          doc.setFillColor(255,255,255);\r\n          doc.rect(22, 113, 300, 100, 'F');\r\n        }\r\n\r\n        if (index === 1) {\r\n          var img4 = new Image()\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            img4.src = \"legends/Fluoroquinolones (CipI-R).png\"\r\n          } else {\r\n            img4.src = \"legends/\" + info.amrClassFilter + \".png\"\r\n          }\r\n          doc.addImage(img4, 'PNG', 22, 107 + subtitleH)\r\n        } else if (index === 3) {\r\n          var img5 = new Image()\r\n          img5.src = \"legends/Genotype_Distribution.png\"\r\n          doc.addImage(img5, 'PNG', 22, (info.dimensions.width < info.desktop ? 115 : 108) + subtitleH)\r\n        }\r\n        doc.line(0, 200, 300, 200)\r\n        doc.setFontSize(10);\r\n        doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n        if (index < ids.length - 1) {\r\n          doc.addPage('a4', 'l')\r\n        }\r\n      }\r\n\r\n      doc.save(\"TyphiNET - Report.pdf\");\r\n      setCaptureReportInProgress(false);\r\n\r\n    } else if (index !== 0) {\r\n\r\n      let graph = document.getElementById(id)\r\n      let canvas = document.createElement(\"canvas\")\r\n      let ctx = canvas.getContext('2d');\r\n      let graphImg = document.createElement(\"img\");\r\n      let graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      await domtoimage.toPng(graph, { quality: 0.1, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          graphImg.src = dataUrl;\r\n        });\r\n\r\n      let cHeight = 20\r\n      let logoHeight = 100\r\n      let legendHeight = 0\r\n      let filterHeight = 80\r\n      let subtitleHeight = 0\r\n      if (id === \"RFWG\" || id === \"RFWAG\" || id === \"DRT\") {\r\n        cHeight += 20\r\n        subtitleHeight = 20\r\n      }\r\n      let imgHeight = graphImg.height\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        imgHeight -= 200\r\n      }\r\n\r\n      if (id === \"GD\" || id === \"RFWAG\") legendHeight = 40\r\n\r\n      let imgWidth = graphImg.width\r\n      if (id === \"RFWAG\") {\r\n        imgWidth += 130\r\n        if (info.amrClassFilter === \"Azithromycin\") {\r\n          imgWidth += 100\r\n        }\r\n        else if (info.amrClassFilter === \"Co-trimoxazole\") {\r\n          imgWidth += 195\r\n        }\r\n        else if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n          imgWidth += 250\r\n        }\r\n      } else if (id === \"GD\") {\r\n        imgWidth += 370\r\n      }\r\n\r\n      await graphImgPromise;\r\n      canvas.width = imgWidth;\r\n\r\n      canvas.height = imgHeight + cHeight + logoHeight + legendHeight + filterHeight + subtitleHeight + 60;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"18px Montserrat\"\r\n      ctx.fillStyle = \"black\";\r\n      ctx.textAlign = \"center\";\r\n\r\n      ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight);\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(60, canvas.height - 130, 800, 300);\r\n      ctx.fillStyle = \"black\";\r\n\r\n      if (id === \"RFWG\") {\r\n        ctx.fillText(brokenNames[0][0], canvas.width / 2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[0][1], canvas.width / 2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(`Top Genotypes (up to ${info.RFWGCount})`, canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else if (id === \"RFWAG\") {\r\n        ctx.fillText(brokenNames[1][0], canvas.width / 2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[1][1], canvas.width / 2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Top Genotypes (up to 10)\", canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else if (id === \"DRT\") {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Data are plotted for years with N ≥ 10 genomes\", canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight)\r\n      }\r\n\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        let legendImg = document.createElement(\"img\")\r\n        let legendImgPromise = imgOnLoadPromise(legendImg)\r\n        if (id === \"RFWAG\") {\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            legendImg.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            if (info.amrClassFilter === \"Trimethoprim\" || info.amrClassFilter === \"Co-trimoxazole\") {\r\n              info.amrClassFilter += \"2\"\r\n            }\r\n            legendImg.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n\r\n        } else {\r\n          legendImg.src = \"legends/Genotype_Distribution_2.png\";\r\n        }\r\n        await legendImgPromise;\r\n\r\n        ctx.drawImage(legendImg, graphImg.width, logoHeight + subtitleHeight + 12 + cHeight);\r\n      }\r\n\r\n      let typhinetLogo = document.createElement(\"img\");\r\n      let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n      typhinetLogo.src = typhinetLogoImg2;\r\n      await typhinetLogoPromise;\r\n      ctx.drawImage(typhinetLogo, 10, 10, 170, 55);\r\n\r\n      ctx.fillStyle = \"black\"\r\n      ctx.font = \"14px Montserrat\"\r\n      ctx.textAlign = \"start\"\r\n      ctx.fillText(\"Dataset: \" + info.dataset, 10, canvas.height - 92)\r\n      ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 10, canvas.height - 70)\r\n      ctx.fillText(\"Country: \" + info.country, 10, canvas.height - 48)\r\n      ctx.fillText(\"Region: \" + info.region, 10, canvas.height - 26)\r\n\r\n      const base64 = canvas.toDataURL();\r\n      stopLoading(index)\r\n      download(base64, \"TyphiNET - \" + names[index - 1] + \".png\");\r\n    } else {\r\n      svgAsPngUri(document.getElementById(id), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          let cWidth = 3600\r\n          let cHeight = 1800\r\n          let textHeight = 240\r\n          let legendHeight = 0\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendHeight = 440\r\n          }\r\n\r\n          canvas.width = cWidth;\r\n          canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n          ctx.fillStyle = \"white\";\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n          ctx.font = \"bolder 50px Montserrat\"\r\n          ctx.fillStyle = \"black\";\r\n          ctx.textAlign = \"center\";\r\n          ctx.fillText(\"Global Overview of Salmonella Typhi\", canvas.width / 2, 80)\r\n          ctx.font = \"35px Montserrat\"\r\n          ctx.textAlign = \"center\";\r\n\r\n          let actualMapView = info.mapView\r\n          switch (actualMapView) {\r\n            case \"MDR\":\r\n              actualMapView = \"Multidrug resistant (MDR)\"\r\n              break;\r\n            case \"XDR\":\r\n              actualMapView = \"Extensively drug resistant (XDR)\"\r\n              break;\r\n            case \"Azith\":\r\n              actualMapView = \"Azithromycin resistant\"\r\n              break;\r\n            case \"CipI\":\r\n              actualMapView = \"Ciprofloxacin insusceptible and resistant (CipI/R)\"\r\n              break;\r\n            case \"CipR\":\r\n              actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n              break;\r\n            case \"H58 / Non-H58\":\r\n              actualMapView = \"H58 genotype\"\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          ctx.fillText(\"Map view: \" + actualMapView, canvas.width / 2, 140)\r\n          ctx.fillText(\"Dataset: \" + info.dataset, canvas.width / 2, 190)\r\n          ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], canvas.width / 2, 240)\r\n\r\n          ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n          let legendImg = document.createElement(\"img\");\r\n          let legendImgoPromise = imgOnLoadPromise(legendImg);\r\n          let h\r\n          let w\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendImg.src = \"legends/MapView_DominantGenotype.png\";\r\n            await legendImgoPromise;\r\n            let centerWidth = (canvas.width - 1731) / 2\r\n            ctx.drawImage(legendImg, centerWidth, canvas.height - legendHeight - 20, 1731, 420);\r\n          } else if (info.mapView === 'No. Samples') {\r\n            legendImg.src = \"legends/MapView_NoSamples.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 310\r\n            ctx.drawImage(legendImg, canvas.width - w - 15, canvas.height - h - 10, w, h);\r\n          } else {\r\n            legendImg.src = \"legends/MapView_Others.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 280\r\n            ctx.drawImage(legendImg, canvas.width - w - 25, canvas.height - h - 20, w, h);\r\n          }\r\n\r\n          let typhinetLogo = document.createElement(\"img\");\r\n          let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n          typhinetLogo.src = typhinetLogoImg2;\r\n          await typhinetLogoPromise;\r\n          ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n          const base64 = canvas.toDataURL();\r\n          stopLoading(index)\r\n          download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n        });\r\n    }\r\n\r\n  })\r\n\r\n  const [dowloadBaseSpreadsheet] = useState(() => () => {\r\n    axios.get(`${API_ENDPOINT}file/download`)\r\n      .then((res) => {\r\n        let cols_to_remove = ['azith_pred_pheno', 'cip_pred_pheno', 'dcs_category', 'amr_category', 'num_qrdr', 'num_acrb', 'ESBL_category', 'chloramphenicol_category', 'tetracycline_category', 'cip_pheno_qrdr_gene', 'dcs_mechanisms', 'num_amr_genes', 'dfra_any', 'sul_any', 'co_trim', 'GENOTYPE_SIMPLE', 'h58_genotypes']\r\n        let indexes = []\r\n        let csv = res.data.split('\\n')\r\n        let lines = []\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',')\r\n          if (line[1] !== '-' && line[2] !== '-') {\r\n            lines.push(line)\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < cols_to_remove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(cols_to_remove[index])\r\n          indexes.push(currentIndex)\r\n        }\r\n        indexes.sort()\r\n        indexes.reverse()\r\n\r\n        let newLines = []\r\n        for (let j = 0; j < lines.length; j++) {\r\n          let aux = []\r\n          for (let i = 0; i < lines[j].length; i++) {\r\n            if (!indexes.includes(i)) {\r\n              aux.push(lines[j][i])\r\n            }\r\n          }\r\n          newLines.push(aux)\r\n        }\r\n\r\n        let newCSV = \"\"\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = \"\"\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index]\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += \",\"\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += \"\\n\"\r\n          }\r\n          newCSV += aux\r\n        }\r\n\r\n        download(newCSV, 'TyphiNET_Database.csv');\r\n      })\r\n  })\r\n\r\n  const generateMapLegendOptions = () => {\r\n    let percentageSteps = ['1', '25', '50', '75']\r\n    const otherViews = ['CipI', 'CipR', 'Azith', 'Sensitive to all drugs', 'MDR', 'XDR']\r\n\r\n    if (otherViews.includes(mapView)) {\r\n      return (\r\n        <>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-insufficient-data\" />\r\n            <span>Insufficient data</span>\r\n          </div>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-zero-percent\" />\r\n            <span>0%</span>\r\n          </div>\r\n          {percentageSteps.map((n) => {\r\n            return (\r\n              <div key={n} className=\"samples-info\">\r\n                <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                {n === \"1\" && (<span>{'1 - 25'}%</span>)}\r\n                {n === \"25\" && (<span>{'26 - 50'}%</span>)}\r\n                {n === \"50\" && (<span>{'51 - 75'}%</span>)}\r\n                {n === \"75\" && (<span>{'76 - 100'}%</span>)}\r\n              </div>\r\n            )\r\n          })}\r\n        </>\r\n      )\r\n    }\r\n\r\n    switch (mapView) {\r\n      case 'No. Samples':\r\n        let legends = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300']\r\n        let aux = [1, 10, 20, 100, 300]\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {[...Array(5).keys()].map((n, i) => {\r\n              return (\r\n                <div key={n + i} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapSamplesColorScale(aux[n]) }} />\r\n                  <span>{legends[n]}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'Dominant Genotype':\r\n        return (\r\n          <div className=\"map-legend-DG\">\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {genotypes.map((g, n) => {\r\n              return (\r\n                <div key={n + \"DG\"} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForGenotype(g) }} />\r\n                  <span>{g}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      case 'H58 / Non-H58':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-zero-percent\" />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((g, n) => {\r\n              return (\r\n                <div key={n + \"H58\"} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(g) }} />\r\n                  {g === \"1\" && (<span>{'1 - 25'}%</span>)}\r\n                  {g === \"25\" && (<span>{'26 - 50'}%</span>)}\r\n                  {g === \"50\" && (<span>{'51 - 75'}%</span>)}\r\n                  {g === \"75\" && (<span>{'76 - 100'}%</span>)}\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const renderMapLegend = () => {\r\n    const mapLegends = [\r\n      ['MDR', 'Multidrug resistant (MDR)'], ['XDR', 'Extensively drug resistant (XDR)'], ['Azith', 'Azithromycin resistant'],\r\n      ['CipI', 'Ciprofloxacin insusceptible and resistant (CipI/R)'], ['CipR', 'Ciprofloxacin resistant (CipR)'], ['Sensitive to all drugs', 'Sensitive to all drugs'], \r\n      ['Dominant Genotype', 'Dominant Genotype'], ['H58 / Non-H58', 'H58 genotype'], ['No. Samples', 'No. Samples']\r\n    ]\r\n    return (\r\n      <div className=\"map-legend\">\r\n        <FormControl fullWidth className={classes.formControlSelect}>\r\n          <div className=\"map-legend-formcontrol-div map-legend-formcontrol-div-pad\">\r\n            <div className=\"map-legend-formcontrol-label\">Select map view</div>\r\n            <IconTooltip\r\n              title={<div className={classes.tooltipTitle}>Percentage frequency data is shown only for countries with N≥20 genomes</div>}\r\n              placement=\"top\"\r\n            >\r\n              <IconButton className={classes.tooltipButton}>\r\n                  <FontAwesomeIcon icon={faInfoCircle} size=\"xs\" className={classes.tooltipIcon}/>\r\n              </IconButton>\r\n            </IconTooltip>\r\n          </div>\r\n          <Select\r\n            value={mapView}\r\n            onChange={evt => setMapView(evt.target.value)}\r\n            fullWidth\r\n            className={classes.select}\r\n          >\r\n            {mapLegends.map((n, i) => {\r\n              return (\r\n                <MenuItem key={i + \"mapview\"} className={classes.select} value={n[0]}>\r\n                  {n[1]}\r\n                </MenuItem>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        {generateMapLegendOptions()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------\r\n  const [data, setData] = useState([])\r\n  const [init, setInit] = useState(false)\r\n  const [allCountryRegions, setAllCountryRegions] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Get data\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}filters/getDataFromCSV`)\r\n      .then((res) => {\r\n        console.log('Getting Data');\r\n        setData(res.data)\r\n        setTotalGenomes(res.data.length)\r\n\r\n        let [auxTGenotypes, auxYears, auxCountries, auxRegions] = [[], [], [], {}]\r\n        let empty = [\"\", \"-\"]\r\n        res.data.forEach((x) => {\r\n\r\n          if (!auxTGenotypes.includes(x.GENOTYPE)) auxTGenotypes.push(x.GENOTYPE)\r\n          if (!auxYears.includes(x.DATE) && !empty.includes(x.DATE)) auxYears.push(x.DATE)\r\n          if (!auxCountries.includes(x.COUNTRY_ONLY) && !empty.includes(x.COUNTRY_ONLY)){\r\n            auxCountries.push(x.COUNTRY_ONLY)\r\n            auxRegions[x.COUNTRY_ONLY] = []\r\n          }\r\n          if (!empty.includes(x.COUNTRY_ONLY) && !empty.includes(x.REGION_IN_COUNTRY) && !auxRegions[x.COUNTRY_ONLY].includes(x.REGION_IN_COUNTRY)) {\r\n            auxRegions[x.COUNTRY_ONLY].push(x.REGION_IN_COUNTRY)\r\n          }\r\n          \r\n        })\r\n        auxYears.sort()\r\n        auxCountries.sort()\r\n        auxCountries.unshift(\"All\");\r\n\r\n        setTotalGenotypes(auxTGenotypes.length)\r\n        setTimeInitial(auxYears[0])\r\n        setActualTimeInitial(auxYears[0])\r\n        setTimeFinal(auxYears[auxYears.length - 1])\r\n        setActualTimeFinal(auxYears[auxYears.length - 1])\r\n        setYears(auxYears)\r\n        setCountriesForFilter(auxCountries)\r\n        setAllCountryRegions(auxRegions)\r\n        \r\n        console.log('FINISH');\r\n        setInit(true)\r\n      })\r\n  }, [])\r\n\r\n  // Update regions after country changes\r\n  useEffect(() => {\r\n    if (init) {\r\n      setActualRegion(\"All\")\r\n      if (actualCountry !== \"All\") {\r\n        const auxRegions = allCountryRegions[actualCountry]\r\n        auxRegions.sort()\r\n        auxRegions.unshift(\"All\");\r\n        setRegionsForFilter(auxRegions)\r\n      }\r\n    }\r\n  }, [init, actualCountry, allCountryRegions])\r\n\r\n  useEffect(() => {\r\n    if (init) {\r\n      console.log('Something changed');\r\n      setLoading(true)\r\n    }\r\n  }, [init, dataset, actualTimeInitial, actualTimeFinal, actualCountry, actualRegion])\r\n\r\n  // Update all\r\n  useEffect(() => {\r\n    function update () {\r\n      if (init && loading) {\r\n        console.log('Updating...');\r\n        const aux = filterForComponents(\r\n          {\r\n            data: data,\r\n            dataset: dataset,\r\n            country: actualCountry,\r\n            minYear: actualTimeInitial,\r\n            maxYear: actualTimeFinal,\r\n            region: actualRegion\r\n          }\r\n        )\r\n        setActualGenomes(aux[0].length)\r\n        setActualGenotypes(aux[1])\r\n        setWorldMapSamplesData(aux[2])\r\n        setWorldMapComplementaryData(aux[3])\r\n        setWorldMapGenotypesData(aux[4])\r\n        setWorldMapH58Data(aux[5])\r\n        setWorldMapSTADData(aux[6])\r\n        setWorldMapMDRData(aux[7])\r\n        setWorldMapXDRData(aux[8])\r\n        setWorldMapAZITHData(aux[9])\r\n        setWorldMapCIPRData(aux[10])\r\n        setWorldMapCIPIData(aux[11])\r\n        setCountryPMID(aux[12])\r\n        setDrugsAndGenotypesChartData(aux[13])\r\n        setDrugTrendsChartData(aux[14])\r\n        setAmrClassChartData(aux[15])\r\n        setPopulationStructureChartData(aux[16])\r\n        setAppLoading(false)\r\n        setLoading(false)\r\n      }\r\n    }\r\n    update()\r\n  }, [loading])\r\n\r\n  return (\r\n    <div className=\"dashboard\" style={{height: '100vh'}}>\r\n      <div className=\"menu-bar-mobile\">\r\n        <img className=\"logoImageMenu-mobile\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n      </div>\r\n      <div style={{ padding: dimensions.width > 770 ? '16px 16px 0px 16px' : '16x 0px 0px 0px', display: appLoading ? 'none' : '', backgroundColor: '#E5E5E5' }}>\r\n        <div className=\"info-wrapper\">\r\n          {dimensions.width > desktop && (\r\n            <>\r\n              <div className=\"typhinet-logo\">\r\n                <img className=\"typhinet-logo-image\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className=\"card card-padding\">\r\n            <span>\r\n              Total Genomes\r\n            </span>\r\n            {totalGenomes === actualGenomes ? (\r\n              <span className=\"value\">{totalGenomes}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenomes}\r\n                <span className=\"value-total\">/{totalGenomes}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"card\">\r\n            <span>\r\n              Total Genotypes\r\n            </span>\r\n            {totalGenotypes === actualGenotypes ? (\r\n              <span className=\"value\">{totalGenotypes}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenotypes}\r\n                <span className=\"value-total\">/{totalGenotypes}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"map-filters-wrapper\">\r\n          <h2>Global Overview of <i>Salmonella</i> Typhi</h2>\r\n          <div className=\"map-filters-wrapper-inside\" style={{ flexDirection: dimensions.width > desktop ? 'row' : 'column' }}>\r\n            <div className=\"map-wrapper\">\r\n              <ComposableMap\r\n                id=\"control-map\"\r\n                data-tip=\"\"\r\n                projectionConfig={{\r\n                  rotate: [-10, 0, 0],\r\n                  scale: 210,\r\n                }}\r\n                className=\"composable-map\"\r\n              >\r\n                <ZoomableGroup\r\n                  zoom={controlMapPosition.zoom}\r\n                  center={controlMapPosition.coordinates}\r\n                  onMoveEnd={(position) => {\r\n                    setControlMapPosition(position);\r\n                  }}\r\n                >\r\n                  <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Geographies\r\n                    geography={geography}>\r\n                    {({ geographies }) =>\r\n                      geographies.map((geo) => {\r\n                        const sample = worldMapSamplesData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                        \r\n                        const d = worldMapComplementaryData[geo.properties.NAME];\r\n                        let country\r\n\r\n                        let fill = \"lightgrey\"\r\n                        let darkGray = \"#727272\"\r\n\r\n                        switch (mapView) {\r\n                          case 'No. Samples':\r\n                            if (sample && sample.count !== 0) {\r\n                              fill = mapSamplesColorScale(sample.count);\r\n                            } else if (sample && sample.count === 0) {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'Dominant Genotype':\r\n                            country = worldMapGenotypesData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              const temp = country.genotypes\r\n                              temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                              if (sample) {\r\n                                fill = getColorForGenotype(temp[0].lineage)\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'H58 / Non-H58':\r\n                            country = worldMapH58Data.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              let countH58 = 0\r\n                              const isH58 = country.genotypes.find(g => g.type === 'H58')\r\n                              if (isH58 !== undefined) { countH58 = isH58.count }\r\n\r\n                              if (country.total >= 20 && countH58 > 0) {\r\n                                fill = mapRedColorScale(isH58.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'MDR':\r\n                            country = worldMapMDRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'Sensitive to all drugs':\r\n                            country = worldMapSTADData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'XDR':\r\n                            country = worldMapXDRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'Azith':\r\n                            country = worldMapAZITHData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'CipI':\r\n                            country = worldMapCIPIData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'CipR':\r\n                            country = worldMapCIPRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          default:\r\n                            break;\r\n                        }\r\n\r\n                        return (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            cursor=\"pointer\"\r\n                            fill={fill}\r\n                            onClick={() => {\r\n                              if (d !== undefined && sample !== undefined){\r\n                                setActualCountry(sample.name)\r\n                              }\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              setTooltipContent(null);\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              const { NAME } = geo.properties;\r\n                              switch (mapView) {\r\n                                case 'No. Samples':\r\n                                  if (sample !== undefined && d !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      additionalInfo: {\r\n                                        samples: sample.count,\r\n                                        genotypes: d.GENOTYPES.TOTAL,\r\n                                        H58: Math.round(d.H58) !== d.H58 ? d.H58.toFixed(2) : d.H58,\r\n                                        MDR: Math.round(d.MDR) !== d.MDR ? d.MDR.toFixed(2) : d.MDR,\r\n                                        XDR: Math.round(d.XDR) !== d.XDR ? d.XDR.toFixed(2) : d.XDR,\r\n                                        DCS: Math.round(d.DCS) !== d.DCS ? d.DCS.toFixed(2) : d.DCS,\r\n                                        CipI: Math.round(d.CipI) !== d.CipI ? d.CipI.toFixed(2) : d.CipI,\r\n                                        CipR: Math.round(d.CipR) !== d.CipR ? d.CipR.toFixed(2) : d.CipR,\r\n                                        CipI_R: Math.round(d.CipI_R) !== d.CipI_R ? d.CipI_R.toFixed(2) : d.CipI_R,\r\n                                        AzithR: Math.round(d.AzithR) !== d.AzithR ? d.AzithR.toFixed(2) : d.AzithR,\r\n                                        STAD: Math.round(d.STAD) !== d.STAD ? d.STAD.toFixed(2) : d.STAD\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Dominant Genotype':\r\n                                  if (country !== undefined) {\r\n                                    let temp = country.genotypes\r\n                                    temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      genotypeInfo: temp\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'H58 / Non-H58':\r\n                                  if (country !== undefined && country.genotypes.length > 0) {\r\n                                    let countH58 = 0\r\n                                    const isH58 = country.genotypes.find(g => g.type === 'H58')\r\n                                    if (isH58 !== undefined) { countH58 = isH58.count }\r\n\r\n                                    if (country.total >= 20 && countH58 > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        simpleGenotypeInfo: country.genotypes\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n\r\n                                  break;\r\n                                case 'MDR':\r\n                                  if (country !== undefined && country.MDRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        mdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Sensitive to all drugs':\r\n                                  if (country !== undefined && country.STADs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        stadInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'XDR':\r\n                                  if (country !== undefined && country.XDRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        xdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Azith':\r\n                                  if (country !== undefined && country.AZs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        azInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipI':\r\n                                  if (country !== undefined && country.CipIs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      let cipI = country.CipIs.filter(x => x.type === 'CipI')\r\n                                      if (cipI.length) {\r\n                                        cipI = cipI[0]\r\n                                        if (Math.round(cipI.percentage) !== cipI.percentage)\r\n                                          cipI.percentage = cipI.percentage.toFixed(2)\r\n                                        cipI.percentage = parseFloat(cipI.percentage);\r\n                                      } else {\r\n                                        cipI = {\r\n                                          count: 0,\r\n                                          percentage: 0\r\n                                        }\r\n                                      }\r\n                                      let cipR = country.CipIs.filter(x => x.type === 'CipR')\r\n                                      if (cipR.length) {\r\n                                        cipR = cipR[0]\r\n                                        if (Math.round(cipR.percentage) !== cipR.percentage)\r\n                                          cipR.percentage = cipR.percentage.toFixed(2)\r\n                                        cipR.percentage = parseFloat(cipR.percentage);\r\n                                      } else {\r\n                                        cipR = {\r\n                                          count: 0,\r\n                                          percentage: 0\r\n                                        }\r\n                                      }\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipIInfo: {\r\n                                          count: cipI.count,\r\n                                          percentage: cipI.percentage,\r\n                                        },\r\n                                        cipRInfo2: {\r\n                                          count: cipR.count,\r\n                                          percentage: cipR.percentage,\r\n                                        },\r\n                                        cipIRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipR':\r\n                                  if (country !== undefined && country.CipRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                default:\r\n                                  break;\r\n                              }\r\n                            }}\r\n                            style={{\r\n                              default: {\r\n                                outline: \"none\",\r\n                              },\r\n                              hover: {\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                              pressed: {\r\n                                fill: \"#FF5722\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              }\r\n                            }}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n                  </Geographies>\r\n                </ZoomableGroup>\r\n\r\n              </ComposableMap>\r\n              {(dimensions.width > desktop) && (\r\n                <div className=\"map-upper-right-buttons\">\r\n                  {renderMapLegend()}\r\n                </div>\r\n              )}\r\n              {(dimensions.width > desktop) && (\r\n                <div className=\"map-upper-left-buttons \">\r\n                  <div className=\"map-filters\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span className=\"map-filters-label\" style={{ marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div className=\"margin-div\">\r\n                      {years.length > 2 && (<div className=\"my-year-range\">\r\n                        <div>\r\n                          <Typography gutterBottom className={classes.typography}>\r\n                            Start year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeInitial}\r\n                            onChange={(evt, value) => setActualTimeInitial(value.props.value)}\r\n                            className={classes.selectYear}\r\n                            fullWidth\r\n                          >\r\n                            {years?.filter(x => x <= actualTimeFinal).map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i+\"timeperiod\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                        <div className=\"my-divider\"></div>\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typographyEndYear}>\r\n                            End year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeFinal}\r\n                            onChange={(evt, value) => setActualTimeFinal(value.props.value)}\r\n                            className={classes.selectYear}\r\n                            fullWidth\r\n                          >\r\n                            {years?.filter(x => x >= actualTimeInitial).map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"timeperiod2\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                      </div>)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"map-lower-left-buttons\">\r\n                <Zoom in={controlMapPosition.zoom !== 1 || controlMapPosition.coordinates.some(c => c !== 0)}>\r\n                  <TooltipMaterialUI title={<span className=\"my-font\">Recenter Map</span>} placement=\"right\">\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() => setControlMapPosition({ coordinates: [0, 0], zoom: 1 })}\r\n                    >\r\n                      <FontAwesomeIcon icon={faCrosshairs} />\r\n                    </div>\r\n                  </TooltipMaterialUI>\r\n                </Zoom>\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Zoom In</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom >= 4) return;\r\n                      setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Zoom Out</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom <= 1) return;\r\n                      if (controlMapPosition.zoom / 2 === 1) {\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                      } else {\r\n                        setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n              </div>\r\n              <div className=\"map-lower-right-buttons\">\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Download Map as PNG</span>} placement=\"left\">\r\n                  <div\r\n                    className={`button ${captureControlMapInProgress && \"disabled\"}`}\r\n                    onClick={() => {\r\n                      if (!captureControlMapInProgress)\r\n                        capturePicture('control-map', 0, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal] })\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCamera} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                {captureControlMapInProgress && (\r\n                  <CustomCircularProgress\r\n                    size={54}\r\n                    thickness={4}\r\n                    style={{ top: 5, left: -7 }} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {!(dimensions.width > desktop) && (\r\n              <div className=\"wrapper-map-legend\">\r\n                {renderMapLegend()}\r\n                <div>\r\n                  <div className=\"map-filters-mobile\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span className=\"map-filters-label\" style={{ marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div className=\"margin-div\">\r\n                      <div className=\"my-year-range\">\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typography}>\r\n                            Start year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeInitial}\r\n                            onChange={(evt, value) => setActualTimeInitial(value.props.value)}\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"year\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                        <div className=\"my-divider\"></div>\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typographyEndYear}>\r\n                            End year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeFinal}\r\n                            onChange={(evt, value) => setActualTimeFinal(value.props.value)}\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"year2\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <ReactTooltip>\r\n              {tooltipContent && (\r\n                <div className=\"tooltip-map\">\r\n                  <span className=\"country\">{tooltipContent.name}</span>\r\n                  {tooltipContent.additionalInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Samples: {tooltipContent.additionalInfo.samples}</span>\r\n                      <span>Genotypes: {tooltipContent.additionalInfo.genotypes}</span>\r\n                      <span>H58: {tooltipContent.additionalInfo.H58}%</span>\r\n                      <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\r\n                      <span>XDR: {tooltipContent.additionalInfo.XDR}%</span>\r\n                      <span>DCS: {tooltipContent.additionalInfo.DCS}%</span>\r\n                      <span>AzithR: {tooltipContent.additionalInfo.AzithR}%</span>\r\n                      <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\r\n                      <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\r\n                      <span>CipI/R: {tooltipContent.additionalInfo.CipI_R}%</span>\r\n                      <span>Susceptible: {tooltipContent.additionalInfo.STAD}%</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.genotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.genotypeInfo.map((genotype, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index + \"genotypeInfo\"} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForGenotype(genotype.lineage) }} />\r\n                              <span>{genotype.lineage}: {genotype.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.simpleGenotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[0].type}: {tooltipContent.simpleGenotypeInfo[0].count} ({tooltipContent.simpleGenotypeInfo[0].percentage}%)</span>\r\n                      ) : tooltipContent.simpleGenotypeInfo.length > 1 && tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[1].type}: {tooltipContent.simpleGenotypeInfo[1].count} ({tooltipContent.simpleGenotypeInfo[1].percentage}%)</span>\r\n                      ) : (\r\n                        <span>H58: 0 (0%)</span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.mdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>MDR: {tooltipContent.mdrInfo.count} ({tooltipContent.mdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.stadInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Susceptible: {tooltipContent.stadInfo.count} ({tooltipContent.stadInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.xdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>XDR: {tooltipContent.xdrInfo.count} ({tooltipContent.xdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.azInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>AzithR: {tooltipContent.azInfo.count} ({tooltipContent.azInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipIInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipI/R: {tooltipContent.cipIRInfo.count} ({tooltipContent.cipIRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipRInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipR: {tooltipContent.cipRInfo.count} ({tooltipContent.cipRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {(!tooltipContent.xdrInfo && !tooltipContent.mdrInfo && !tooltipContent.stadInfo && !tooltipContent.azInfo && !tooltipContent.cipIInfo && !tooltipContent.cipRInfo && !tooltipContent.simpleGenotypeInfo && !tooltipContent.genotypeInfo && !tooltipContent.additionalInfo) && (\r\n                    <div className=\"additional-info\">\r\n                      <span>{tooltipContent.smallerThan20 ? \"0%\" : 'Insufficient data'}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n        <div className=\"chart-wrapper\">\r\n          <h2 className=\"showing-data\">Now showing: {dataset} data from {actualCountry === \"All\" ? \"all countries\" : actualCountry} from {actualTimeInitial} to {actualTimeFinal}</h2>\r\n          <div className=\"country-region-div\" style={{flexDirection: dimensions.width > 560 ? 'row' : 'column'}}>\r\n            <FormControl className={classes.formControlSelect, dimensions.width <= 560 ? classes.formControlSelectCountryRegionH : classes.formControlSelectCountryRegionV}>\r\n              <label className=\"select-country-label\">Select country (or click map)</label>\r\n              <Select\r\n                value={actualCountry}\r\n                onChange={evt => {setActualCountry(evt.target.value)}}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {countriesForFilter.map((country, index) => {\r\n                  return (\r\n                    <MenuItem key={index + \"countriesFilter\"} className={classes.selectCountryValues} value={country}>\r\n                      {country}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            {dimensions.width > 560 && <div className=\"country-region-spacer\"></div>}\r\n            <FormControl className={`${classes.formControlSelect} ${dimensions.width <= 560 ? classes.formControlSelectCountryRegionH : classes.formControlSelectCountryRegionV}`}>\r\n              <label className=\"select-country-label\">Select region</label>\r\n              <Select\r\n                value={actualRegion}\r\n                onChange={evt => {setActualRegion(evt.target.value)}}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {regionsForFilter.map((region, index) => {\r\n                  return (\r\n                    <MenuItem key={index + \"regionFilter\"} className={classes.selectCountryValues} value={region}>\r\n                      {region}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"chart-wrapper-div\">\r\n            <div className=\"chart-wrapper-div2\" style={{ flexDirection: dimensions.width > desktop ? \"row\" : \"column\", paddingBottom: dimensions.width > desktop ? 20 : 0 }}>\r\n              <div className=\"chart-wrapper-div3\" style={{ paddingRight: dimensions.width < mobile ? 0 : 10 }}>\r\n                <div className=\"chart-wrapper-RFWA\">\r\n                  <div className=\"chart-wrapper-RFWA-div\">\r\n                    <span className=\"chart-title chart-wrapper-RFWA-title\">Resistance frequencies within genotypes</span>\r\n                    <div className=\"chart-wrapper-RFWA-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartRFWGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWGInProgress)\r\n                              capturePicture('RFWG', 1, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion, RFWGCount: RFWGValues.length})\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">Top Genotypes (up to {RFWGValues.length})</span>\r\n                  <div className=\"chart-wrapper-RFWA-view\" style={{ width: dimensions.width > 790 ? \"71%\" : '260px' }}>\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">Data view</div>\r\n                      <IconTooltip\r\n                        title={<div className={classes.tooltipTitle}>Select up to 7 genotypes</div>}\r\n                        placement=\"top\"\r\n                      >\r\n                        <IconButton className={classes.tooltipButton}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} size=\"xs\" className={classes.tooltipIcon}/>\r\n                        </IconButton>\r\n                      </IconTooltip>\r\n                    </div>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={RFWGFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: RFWGFilterOptions[RFWGFilter - 1].value, id: RFWGFilter }]}\r\n                        onChange={evt => {\r\n                          setRFWGFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl id=\"DDS2\" fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={RFWGDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"label\"}\r\n                        values={RFWGDropdownOptions.slice(0, 5)}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length} Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({ item, itemIndex, props, state, methods }) => {\r\n                          return (\r\n                            <div key={item[props.valueField]} onClick={() => {\r\n                              if (RFWGValues.length >= 7) {\r\n                                if (methods.isSelected(item)) {\r\n                                  methods.addItem(item)\r\n                                }\r\n                              } else {\r\n                                methods.addItem(item)\r\n                              }\r\n                            }}>\r\n                              <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                                <input type=\"checkbox\" checked={methods.isSelected(item)} onChange={() => {}} />\r\n                                &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        }}\r\n                        clearRenderer={\r\n                          ({ props, state, methods }) => {\r\n                            return (\r\n                              <Buttons>\r\n                                {state.values.length > 0 ? (\r\n                                  <ButtonClearSelect id=\"DSButton2\" className=\"clear\" onClick={methods.clearAll} checked={false}>\r\n                                    Clear all\r\n                                  </ButtonClearSelect>\r\n                                ) : (\r\n                                  <ButtonClearSelect\r\n                                    id=\"DSButton2\"\r\n                                    onClick={() => {\r\n                                      methods.selectAll(RFWGDropdownOptions.slice(0,5))\r\n                                    }}\r\n                                    checked={true}\r\n                                  >\r\n                                    Reset\r\n                                  </ButtonClearSelect>\r\n                                )}\r\n                              </Buttons>\r\n                            );\r\n                          }\r\n                        }\r\n                        onChange={(values) => {\r\n                          setRFWGValues(values)\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWG\">\r\n                    {plotDrugsAndGenotypesChart}\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-wrapper-RDWAG\">\r\n                  <div className=\"chart-wrapper-RDWAG-div\">\r\n                    <span className=\"chart-title chart-wrapper-RDWAG-title\">Resistance determinants within genotypes</span>\r\n                    <div className=\"chart-wrapper-RDWAG-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartRFWAGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWAGInProgress)\r\n                              capturePicture('RFWAG', 4, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, amrClassFilter: amrClassFilter, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWAGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title chart-wrapper-RDWAG-top\">Top Genotypes (up to 10)</span>\r\n                  <div className=\"chart-wrapper-RDWAG-view\" style={{ width: dimensions.width > desktop ? \"71%\" : \"90%\" }}>\r\n                    <InputLabel className={classes.inputLabel}>Select Drug Class</InputLabel>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={amrClassFilterforFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: amrClassFilter, id: (amrClassFilterforFilterOptions.find(o => o.value === amrClassFilter)).id }]}\r\n                        onChange={evt => {\r\n                          setAmrClassFilter(evt[0].value)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    <InputLabel className={classes.inputLabel}>Data view</InputLabel>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={amrClassFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: amrClassFilterOptions[RDWAGDataviewFilter - 1].value, id: RDWAGDataviewFilter }]}\r\n                        onChange={evt => {\r\n                          setRDWAGDataviewFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWAG\" >\r\n                    {plotAmrClassChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"chart-wrapper-div3\" style={{ paddingLeft: dimensions.width < mobile ? 0 : 10, marginTop: dimensions.width < desktop ? 50 : 0 }}>\r\n                <div className=\"chart-wrapper-DRT\">\r\n                  <div className=\"chart-wrapper-DRT-div\">\r\n                    <span className=\"chart-title chart-wrapper-DRT-title\">Drug resistance trends</span>\r\n                    <div className=\"chart-wrapper-DRT-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartDRTInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartDRTInProgress)\r\n                              capturePicture('DRT', 2, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, drugs: trendValues, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartDRTInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">Data are plotted for years with N ≥ 10 genomes</span>\r\n                  {dimensions.width > desktop && (<span className=\"chart-title\" ></span>)}\r\n                  <div className=\"chart-wrapper-DRT-view\" style={{ width: dimensions.width > 790 ? \"71%\" : '260px' }}>\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">Drugs view</div>\r\n                    </div>\r\n                    <FormControl id=\"DDS\" fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={trendDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"value\"}\r\n                        values={trendDropdownOptions}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length} Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({ item, itemIndex, props, state, methods }) => (\r\n                          <div key={item[props.valueField]} onClick={() => methods.addItem(item)}>\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                              <input type=\"checkbox\" checked={methods.isSelected(item)} onChange={() => {}}/>\r\n                              &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        clearRenderer={\r\n                          ({ props, state, methods }) => {\r\n                            return (\r\n                              <Buttons>\r\n                                {methods.areAllSelected() ? (\r\n                                  <ButtonClearSelect id=\"DSButton\" className=\"clear\" onClick={methods.clearAll} checked={false}>\r\n                                    Clear all\r\n                                  </ButtonClearSelect>\r\n                                ) : (\r\n                                  <ButtonClearSelect id=\"DSButton\" onClick={methods.selectAll} checked={true}>Select all</ButtonClearSelect>\r\n                                )}\r\n                              </Buttons>\r\n                            );\r\n                          }\r\n                        }\r\n                        onChange={(values) => {\r\n                          const doc = document.getElementById('DRT');\r\n                          const lines = doc.getElementsByClassName('recharts-line')\r\n                          for (let index = 0; index < lines.length; index++) {\r\n                            const isValue = values.some(e => e.id === index)\r\n                            lines[index].style.display = isValue ? 'block' : 'none';\r\n                          }\r\n                          setTrendValues(values)\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"DRT\">\r\n                    {plotDrugTrendsChart}\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-wrapper-GD\">\r\n                  <div className=\"chart-wrapper-GD-div\">\r\n                    <span className=\"chart-title chart-wrapper-GD-title\">Genotype distribution</span>\r\n                    <div className=\"chart-wrapper-GD-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartGDInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartGDInProgress)\r\n                              capturePicture('GD', 3, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartGDInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {dimensions.width > desktop && (<span className=\"chart-title chart-wrapper-GD-space\"></span>)}\r\n                  <div className=\"chart-wrapper-GD-view\" style={{ paddingTop: dimensions.width > desktop ? '67px' : '', width: dimensions.width > desktop ? \"71%\" : \"90%\" }}>\r\n                    <InputLabel className={classes.inputLabel}>Data view</InputLabel>\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={populationStructureFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: populationStructureFilterOptions[populationStructureFilter - 1].value, id: populationStructureFilter }]}\r\n                        onChange={evt => {\r\n                          setPopulationStructureFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"GD\">\r\n                    {plotPopulationStructureChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"wrapper-download-sheet-button\" style={{ flexDirection: dimensions.width > desktop ? \"row\" : \"column\", padding: dimensions.width < desktop ? '0px 12px 12px 12px' : '50px 12px 12px 12px', width: \"-webkit-fill-available\" }}>\r\n              <div className=\"download-sheet-button\" onClick={() => dowloadBaseSpreadsheet()}>\r\n                <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\r\n                <span>Download database</span>\r\n              </div>\r\n              <div style={{ marginTop: dimensions.width > desktop ? 0 : 20, marginLeft: dimensions.width > desktop ? 20 : 0 }} className={`download-sheet-button`} onClick={() => {\r\n                if (!captureReportInProgress) {\r\n                  setCaptureReportInProgress(true);\r\n                  capturePicture('', 5, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion, amrClassFilter: amrClassFilter, actualGenomes: actualGenomes, drugs: trendValues, dimensions: dimensions, desktop: desktop, RFWGCount: RFWGValues.length, PMID: countryPMID });\r\n                }\r\n              }}>\r\n                <FontAwesomeIcon icon={faFilePdf} style={{ marginRight: 8 }} />\r\n                <span>Download report from current view</span>\r\n                {captureReportInProgress && (<div style={{ position: 'absolute', paddingBottom: 32, paddingRight: 20 }}>\r\n                  <CustomCircularProgress\r\n                    size={44}\r\n                    thickness={4}\r\n                    style={{ position: \"absolute\", top: -5, left: -6, color: \"white\" }} />\r\n                </div>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"about-wrapper\">\r\n          <h2>About TyphiNET</h2>\r\n          <p>\r\n            The TyphiNET dashboard collates antimicrobial resistance (AMR) and genotype (lineage) information extracted from whole genome sequence (WGS) data from the bacterial pathogen <i>Salmonella</i> Typhi, the agent of typhoid fever. Data are sourced monthly from Typhoid <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">Pathogenwatch</a>. Information on genotype definitions and population structure can be found in <a href=\"https://www.nature.com/articles/ncomms12827\" target=\"_blank\" rel=\"noreferrer\">Wong et al, 2016</a>, and details of AMR determinants in <a href=\"https://www.nature.com/articles/s41467-021-23091-2\" target=\"_blank\" rel=\"noreferrer\">Argimon et al, 2021</a>. (CipI/R = decreased ciprofloxacin susceptibility).\r\n          </p>\r\n          <p>\r\n            The TyphiNET dashboard is coordinated by Dr Zoe Dyson, Dr Louise Cerdeira &amp; Prof Kat Holt at the <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">London School of Hygiene and Tropical Medicine</a> &amp; <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">Monash University</a>, supported by the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the EU Horizon 2020 research and innovation programme (Marie Skłodowska-Curie grant #845681).\r\n          </p>\r\n          <p>\r\n            <b>Note: This is a beta version, data are incomplete</b>.\r\n          </p>\r\n        </div>\r\n        <div className=\"footer-buttons-wrapper\">\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('mailto:dashboard@typhi.net', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} className=\"fontawesome-icon\" />\r\n            <span>Contact</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://github.com/zadyson/TyphiNET', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} className=\"fontawesome-icon\" />\r\n            <span>GitHub</span>\r\n          </div>\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://twitter.com/typhinet', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} className=\"fontawesome-icon\" />\r\n            <span>Twitter</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }} />\r\n        <div className=\"footer\">\r\n          <span>Data obtained from: <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">pathogen watch project</a> on 15/06/2021. <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">Holt Lab</a></span>\r\n        </div>\r\n        <div className=\"fab-button\" style={{ width: dimensions.width < mobile ? '48px' : '56px' }}>\r\n          <TooltipMaterialUI title={<span className=\"my-font\">Reset Configurations</span>} placement=\"left\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size={dimensions.width < mobile ? 'medium' : 'large'}\r\n              onClick={() => {\r\n                setDataset('All');\r\n                setActualTimeInitial(timeInitial);\r\n                setActualTimeFinal(timeFinal);\r\n                setActualCountry('All');\r\n                setActualRegion('All');\r\n                setMapView('CipI');\r\n                setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                setPopulationStructureFilter(1);\r\n                setAmrClassFilter(amrClassesForFilter[5]);\r\n                setRDWAGDataviewFilter(2)\r\n                setRFWGFilter(2)\r\n                setActualContinent(\"All\")\r\n                const text = document.getElementById('DSButton')\r\n                if (text.innerText === \"SELECT ALL\") {\r\n                  text.click()\r\n                }\r\n                const text2 = document.getElementById('DSButton2')\r\n                if (text2.innerText === \"RESET\") {\r\n                  text2.click()\r\n                }\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faUndoAlt} size=\"lg\" color=\"white\" />\r\n            </Fab>\r\n          </TooltipMaterialUI>\r\n        </div>\r\n        {loading && (<div className=\"loading-2\">\r\n          {/* <Loader\r\n            className=\"my-loader\"\r\n            type=\"Circles\"\r\n            color=\"#D91E45\"\r\n            height={70}\r\n            width={70}\r\n          /> */}\r\n          Loading...\r\n        </div>)}\r\n      </div>\r\n      {appLoading && (<div className=\"loading\">\r\n        {dimensions.width > desktop && (\r\n          <img className=\"logoImageMenu-loading\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n        )}\r\n        <Loader\r\n          className=\"my-loader\"\r\n          type=\"Circles\"\r\n          color=\"#D91E45\"\r\n          height={70}\r\n          width={70}\r\n        />\r\n      </div>)}\r\n      {/* <div className=\"info\" id=\"report-info\">\r\n        <p><b>TyphiNET report [{formatDate(new Date())}]</b></p>\r\n        <p>This report was generated by the TyphiNET <a href=\"http://typhi.net\">(http://typhi.net)</a> website, a data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch <a href=\"http://pathogen.watch\">(http://pathogen.watch)</a>. Data were last updated on [{formatDate(lastUpdated)}].</p>\r\n        <p>This report was generated at [{formatDate(new Date())}] using the beta version of TyphiNET which is still undergoing development and data are not yet complete. For code and further details please see: <a href=\"https://github.com/zadyson/TyphiNET\">https://github.com/zadyson/TyphiNET</a></p>\r\n        <p className=\"info-p\">The genotypes reported here are defined in <b>Dyson & Holt (2021), J. Infect. Dis.</b></p>\r\n        <p className=\"info-p\">Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, <b>Argimón et al. 2021, Nat. Commun.</b></p>\r\n        <p>Travel-associated cases are attributed to the country of travel, not the country of isolation (see <b>Ingle et al. 2019, PLoS NTDs</b>).</p>\r\n        <p>{'TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (typhi.net).'}</p>\r\n        <p>The TyphiNET dashboard was developed with support from the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the EU Horizon 2020 research and innovation programme (Marie Sklodowska-Curie grant #845681).</p>\r\n        { actualCountry !== \"All\" && (\r\n          <div>\r\n            <p className=\"info-p\"><b>For country report:</b></p>\r\n            <p>Studies contributing genomes representing infections originating from {actualCountry} have the following PubMed IDs (PMIDs): {countryPMID.join(', ')}.</p>\r\n          </div>\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","import { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n      color: \"rgb(31, 187, 211)\"\r\n  }\r\n})(CircularProgress);\r\n\r\nconst useStyles = makeStyles({\r\n    cellON: {\r\n        backgroundColor: '#e9f9fc'\r\n    },\r\n    off: {},\r\n    tableID : {\r\n        position: 'sticky',\r\n        right: 0\r\n    },\r\n    tablePadding: {\r\n        marginTop: '16px'\r\n    },\r\n    actionsCell:{\r\n      borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n      backgroundColor: 'white'\r\n    },\r\n    stickyCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n        backgroundColor: 'white'\r\n    },\r\n    actionsHeaderCell: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    stickyHeaderCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    changesTable: {\r\n        maxHeight: '400px',\r\n        marginBottom: 32\r\n    },\r\n    viewButton: {\r\n        width: 80\r\n    },\r\n    resetButton: {\r\n        width: 150,\r\n        height: 40,\r\n        marginRight: 16,\r\n        marginLeft: 16\r\n    },\r\n    uploadButton: {\r\n        width: 150,\r\n        height: 40\r\n    },\r\n    checkChangesButton: {\r\n      width: 100,\r\n      height: 40,\r\n      marginLeft: 16\r\n    }, \r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    input: {\r\n        marginBottom: 16\r\n    },\r\n    input2: {\r\n        marginBottom: 16\r\n    },\r\n    currentData: {\r\n      backgroundColor: 'black',\r\n      color: 'white'\r\n    },\r\n    toolbar: {\r\n      backgroundColor: 'black',\r\n      borderBottom: '1px solid white',\r\n      justifyContent: 'space-between'\r\n    },\r\n    deleteSelected: {\r\n      color: 'red'\r\n    },\r\n    checkboxCell: {\r\n      backgroundColor: 'black'\r\n    },\r\n    checkbox: {\r\n      color: 'white'\r\n    },\r\n    tableRowRoot: {\r\n      \"&$tableRowSelected, &$tableRowSelected:hover\": {\r\n        backgroundColor: '#e9f9fc'\r\n      }\r\n    },\r\n    tableRowSelected: {\r\n      backgroundColor: '#e9f9fc'\r\n    },\r\n    box: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingLeft: 16\r\n    },\r\n    select: {\r\n      textAlign: 'right',\r\n      paddingLeft: 8,\r\n      textAlignLast: 'right',\r\n      minWidth: 16,\r\n      userSelect: 'none',\r\n      borderRadius: 0,\r\n      font: 'inherit',\r\n      letterSpacing: 'inherit',\r\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n      fontSize: 14,\r\n      backgroundColor: 'transparent',\r\n      '&:focus': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      marginRight: 12\r\n    },\r\n    choosePage: {\r\n      opacity: 0.87\r\n    },\r\n    selectFilter: {\r\n      backgroundColor: 'white',\r\n      textAlign: 'start'\r\n    },\r\n    header: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'stretch'\r\n    },\r\n    headerTitle:{\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'flex-start'\r\n    },\r\n    rowHeader: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-start'\r\n    },\r\n    deleteChangeButton: {\r\n      backgroundColor: 'grey',\r\n      width: 35,\r\n      borderRadius: 5,\r\n      color: 'white',\r\n      border: '1px solid rgba(0, 0, 0, 0.23)',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n    },\r\n    // dialogTransition: {\r\n    //   transition: 'none'\r\n    // }\r\n  });\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'grey',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n      marginRight: '16px'\r\n    },\r\n}))(Button);\r\n\r\nconst ColorButton3 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'white',\r\n      color: '#1FBBD3',\r\n      '&:hover': {\r\n        color: 'black',\r\n        backgroundColor: '#CFCFCF'\r\n      },\r\n      borderColor: '#1FBBD3'\r\n    },\r\n}))(Button);\r\n\r\nconst ColorButton4 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: '#1FBBD3',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#188C9E'\r\n      }\r\n    },\r\n}))(Button);\r\n\r\nconst ColorButton5 = withStyles((theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    fontWeight: 'bold'\r\n  },\r\n}))(Button);\r\n\r\nconst StyledHeaderCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\nconst CustomTableContainer = withStyles((theme) => ({\r\n    root: {\r\n        maxHeight: '600px'\r\n    }\r\n}))(TableContainer);\r\n\r\nconst CustomTableSortLabel = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        \"&:hover\": {\r\n        color: 'white',\r\n      },\r\n      '&$active': {\r\n        color: 'white',\r\n      },\r\n    },\r\n    active: {},\r\n    icon: {\r\n        color: 'inherit !important'\r\n    },\r\n}))(TableSortLabel);\r\n\r\n\r\nexport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress};","import './index.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Tooltip, Toolbar, Typography, Checkbox, Box, IconButton, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport {FirstPage, LastPage, KeyboardArrowLeft, KeyboardArrowRight} from '@material-ui/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress } from './materialUI'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport axios from 'axios';\r\nimport LZString from 'lz-string';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction createData(id, date, changes) {\r\n  return { id, date, changes };\r\n}\r\n\r\nconst AdminPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [rows, setRows] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [originalData, setOriginalData] = useState([])\r\n    const [currentData, setCurrentData] = useState(0)\r\n    const [tableKeys, setTableKeys] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('NAME');\r\n    const [currentRow, setCurrentRow] = useState({})\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const [open3, setOpen3] = React.useState(false);\r\n    const [open4, setOpen4] = React.useState(false);\r\n    const [open5, setOpen5] = React.useState(false);\r\n    const [open6, setOpen6] = React.useState(false);\r\n    const [open7, setOpen7] = React.useState(false);\r\n    const [open8, setOpen8] = React.useState(false);\r\n    const [resultMessage, setResultMessage] = React.useState(\"\");\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [filters, setFilters] = React.useState({});\r\n    const [filterOptions, setFilterOptions] = React.useState({});\r\n    const [filteredData, setFilteredData] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [startProgress, setStartProgress] = React.useState(false);\r\n    const [loadingMessage, setLoadingMessage] = React.useState(\"\");\r\n    const [currentChange, setCurrentChange] = React.useState(null);\r\n\r\n    const [exceptions] = React.useState([\"NAME\", \"ACCESION\", \"Genome ID\", \"LATITUDE\", \"LONGITUDE\", \"LOCATION\", \"Mash Distance\", \"Matching Hashes\", \"SANGER LANE\", \"STRAIN\"]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function changeView (id) {\r\n        resetChanges()\r\n        setData(originalData)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        if (id > 0) {\r\n            for (let index = 0; index < id; index++) {\r\n                Object.keys(rows[index].changes.added).forEach(element => {\r\n                    const genome = rows[index].changes.added[element]\r\n                    const gIndex = aux.findIndex(x => x.NAME === genome.NAME)\r\n                    aux.splice(gIndex, 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.deleted).forEach(element => {\r\n                    const genome = rows[index].changes.deleted[element]\r\n                    aux.push(genome)\r\n                    aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.updated).forEach(element => {\r\n                    const keys = rows[index].changes.updated[element]\r\n                    for (const key in keys) {\r\n                        const genome = aux.filter(x => x.NAME === element)\r\n                        if (genome.length > 0) {\r\n                            genome[0][key] = keys[key].old\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            setData(aux)\r\n        }\r\n        setCurrentData(id)\r\n    }\r\n\r\n    function betterChanges (changes) {\r\n        const aux = JSON.parse(JSON.stringify(changes))\r\n        const added = Object.keys(aux.added).length > 0 ? Object.keys(aux.added).join(\", \") + \".\" : \"\"\r\n        const deleted = (Object.keys(aux.deleted).length > 0 ? (Object.keys(aux.deleted).join(\", \")) + \".\" : \"\")\r\n        let updated = \"\"\r\n        \r\n        if (Object.keys(aux.updated).length > 0) {\r\n            updated = Object.entries(aux.updated).map(x => {\r\n                const updates = Object.entries(x[1])\r\n                const changes = updates.map((y, i) => {\r\n                    const point = i === updates.length - 1 ? \".\" : \"\"\r\n                    return y[0] + \" (new: \" + y[1].new + \", old: \" + y[1].old + \")\" + point\r\n                });\r\n                return x[0] + \": \" + changes.join(\", \");\r\n            })\r\n        }\r\n        \r\n        const text = []\r\n        if (added !== \"\") text.push([\"ADDED\", added])\r\n        if (deleted !== \"\") text.push([\"DELETED\", deleted])\r\n        if (updated !== \"\") text.push([\"UPDATED\", updated])\r\n        return text\r\n    }\r\n\r\n    function handleDelete (row) {\r\n        setCurrentRow(row)\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleDeleteChange (id) {\r\n        setCurrentChange(id)\r\n        setOpen8(true)\r\n    }\r\n\r\n    function handleEdit (row) {\r\n        setCurrentRow(row)\r\n        setOpen2(true)\r\n    }\r\n\r\n    function handleUpload () {\r\n        setOpen4(true)\r\n    }\r\n\r\n    function handleCheckChanges (message) {\r\n        setResultMessage(message);\r\n        setOpen5(true);\r\n    }\r\n\r\n    async function deleteChange () {\r\n        axios.post(`${API_ENDPOINT}mongo/deleteChange`, {id: currentChange})\r\n            .then((res) => {\r\n                getChangeData(res.data)\r\n                setCurrentData(0)\r\n            })\r\n            .finally(() => {\r\n                setOpen8(false)\r\n            })\r\n    }\r\n\r\n    async function checkChanges (showPopup = true) {\r\n        setStartProgress(true);\r\n        setLoading(true);\r\n        return await axios.get(`${API_ENDPOINT}mongo/checkForChanges`)\r\n            .then(async (res) => {\r\n                if (res.data.Status === \"Changes\") {\r\n                    await resetChanges();\r\n                    await getData();\r\n                    if (showPopup) {\r\n                        handleCheckChanges('Changes were found. Tables updated.');\r\n                    }\r\n                    return true\r\n                } else if (res.data.Status === \"No Changes\") {\r\n                    if (showPopup) {\r\n                        handleCheckChanges('No changes found.');\r\n                    }\r\n                    return false\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (showPopup) {\r\n                    handleCheckChanges('Could not check for changes. Try again later.');\r\n                }\r\n                return false\r\n            })\r\n            .finally(()=>{\r\n                setOpen7(false)\r\n                setLoading(false);\r\n                setStartProgress(false);\r\n            })\r\n    }\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n          const newSelecteds = filteredData.map((n) => n.NAME);\r\n          setSelected(newSelecteds);\r\n          return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n    \r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n    \r\n        setSelected(newSelected);\r\n    };\r\n\r\n    function deleteRow () {\r\n        // if (isSelected(currentRow.NAME)) {\r\n        //     handleClick(currentRow.NAME)\r\n        // }\r\n        const index = data.findIndex(x => x.NAME === currentRow.NAME)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        aux.splice(index, 1)\r\n        setData(aux)\r\n        setOpen(false)\r\n    }\r\n\r\n    function deleteRows () {\r\n        const aux = JSON.parse(JSON.stringify(filteredData))\r\n        const aux2 = JSON.parse(JSON.stringify(data))\r\n        selected.forEach(row => {\r\n            const index = aux.findIndex(x => x.NAME === row);\r\n            if (index !== -1) {\r\n                aux.splice(index, 1)\r\n            }\r\n            const index2 = aux2.findIndex(x => x.NAME === row);\r\n            if (index2 !== -1) {\r\n                aux2.splice(index2, 1)\r\n            }\r\n        })\r\n        setData(aux2)\r\n        setFilteredData(aux)\r\n        setSelected([])\r\n        setOpen6(false)\r\n    }\r\n\r\n    function editRow () {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const rowIndex = aux.findIndex(x => x.NAME === currentRow.NAME)\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n        \r\n        aux[rowIndex] = row\r\n        setData(aux)\r\n        setOpen2(false)\r\n        setResultMessage(`Row ${currentRow.NAME} edited with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    function addRow () {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n        \r\n        aux.push(row)\r\n        aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n        setData(aux)\r\n        setOpen3(false)\r\n        setResultMessage(`Row ${row.NAME} added with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    async function resetChanges () {\r\n        setSearch(\"\")\r\n        let aux = JSON.parse(JSON.stringify(filters))\r\n        for (const key in aux) {\r\n            aux[key] = \"\"\r\n        }\r\n        setFilters(aux)\r\n        setPage(0)\r\n        setRowsPerPage(10)\r\n        setCurrentData(0)\r\n        setData(originalData)\r\n    }\r\n\r\n    function uploadChanges () {\r\n        setLoading(true)\r\n        setStartProgress(true);\r\n        setResultMessage(\"\")\r\n        const times = Math.ceil(data.length / 1500)\r\n        const parts = []\r\n        for (let index = 0; index < times; index++) {\r\n            if (times === 0) {\r\n                break\r\n            }\r\n            if (times === index - 1) {\r\n                if (times === 1) {\r\n                    parts.push([data])\r\n                } else {\r\n                    parts.push([data.slice((times - 1) * 1500)])\r\n                }\r\n            } else {\r\n                parts.push([data.slice(index * 1500, (index * 1500) + 1500)])\r\n            }\r\n            axios.post(`${API_ENDPOINT}mongo/upload/admin`, {\r\n                data: LZString.compress(JSON.stringify(parts[parts.length - 1])),\r\n                parts: times,\r\n                current: index + 1\r\n            })\r\n                .then((res) => {\r\n                    if (res.data !== '' && res.data.Status === 'Uploaded') {\r\n                        axios.get(`${API_ENDPOINT}mongo/download`)\r\n                        .then(async () => {\r\n                            await checkChanges()\r\n                            setResultMessage(\"Upload and download completed!\")\r\n                        })\r\n                        .catch(() => {\r\n                            setResultMessage(\"Something went wrong with the download, please try again later!\")\r\n                        })\r\n                        .finally(() => {\r\n                            setStartProgress(false)\r\n                            setLoading(false)\r\n                            setOpen4(false)\r\n                            setOpen5(true)\r\n                        })\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    setStartProgress(false)\r\n                    setLoading(false)\r\n                    setOpen4(false)\r\n                    setResultMessage(\"Something went wrong with the upload, please try again later!\")\r\n                    setOpen5(true)\r\n                })\r\n        }\r\n        \r\n    }\r\n\r\n    function getChangeData (changeData) {\r\n        let aux = []\r\n        for (let index = 0; index < changeData.length - 1; index++) {\r\n            const date = new Date(changeData[index].updatedAt)\r\n            aux.push(\r\n                createData(index + 1, date.toLocaleString(), changeData[index].changes)\r\n            )\r\n        }\r\n        setRows(aux)\r\n    }\r\n\r\n    async function getData () {\r\n        await axios.get(`${API_ENDPOINT}file/databaseLog`)\r\n          .then((res) => {\r\n            let data = res.data\r\n\r\n            getChangeData(data)\r\n            \r\n            let aux2 = Object.values(data[data.length - 1].data)\r\n            let aux4 = {}\r\n            let aux5 = {}\r\n\r\n            Object.keys(aux2[0]).forEach(key => {\r\n                if (!exceptions.includes(key)) {\r\n                    aux4[key] = \"\"\r\n                    aux5[key] = []\r\n                    let options = aux2.map(value => value[key]);\r\n                    options.forEach(x => {\r\n                        if (!aux5[key].includes(x)) {\r\n                            aux5[key].push(x)\r\n                        }\r\n                    })\r\n                    aux5[key].sort()\r\n                }\r\n            });\r\n            \r\n            setData(aux2)\r\n            setFilters(aux4)\r\n            setFilterOptions(aux5)\r\n            setFilteredData(JSON.parse(JSON.stringify(aux2)))\r\n            setOriginalData(JSON.parse(JSON.stringify(aux2)))\r\n            setTableKeys(Object.keys(aux2[0]))\r\n          })\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        setLoadingMessage(\"Checking for changes...\")\r\n        checkChanges(false).then((response)=>{\r\n            if (!response) {\r\n                getData().finally(() => {\r\n                    setIsLoading(false);\r\n                });\r\n            } else {\r\n                setIsLoading(false);\r\n            }\r\n        }).finally(()=>{\r\n            setLoadingMessage(\"\")\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let aux = JSON.parse(JSON.stringify(data))\r\n        if (search === \"\" && Object.values(filters).join(\"\") === \"\") {\r\n            setFilteredData(aux)\r\n        } else {\r\n            let s = search.toLowerCase()\r\n\r\n            aux = aux.filter(x => {\r\n                let pass = true\r\n                Object.keys(x).forEach(y => {\r\n                    if (!exceptions.includes(y) && filters[y] !== \"\" && x[y] !== filters[y]) {\r\n                        pass = false\r\n                    }\r\n                    if (search !== \"\" && !Object.values(x).join(\" \").toLowerCase().includes(s)) {\r\n                        pass = false\r\n                    }\r\n                })\r\n                return pass\r\n            })\r\n\r\n            setFilteredData(aux)\r\n        }\r\n    }, [search, data, filters, exceptions])\r\n\r\n    const EnhancedTableToolbar = (props) => {\r\n        const { numSelected } = props;\r\n        \r\n        return (\r\n            <Toolbar className={classes.toolbar}>\r\n                {numSelected > 0 ? (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        color=\"inherit\"\r\n                        variant=\"subtitle1\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        <b>DATA ID:</b> {currentData}\r\n                    </Typography>\r\n                )}\r\n\r\n                <SearchBar\r\n                    value={search}\r\n                    placeholder={\"Search and press enter...\"}\r\n                    onCancelSearch={() => {\r\n                        setSearch(\"\")\r\n                        setPage(0)\r\n                    }}\r\n                    onRequestSearch={(value) => {\r\n                        setSearch(value)\r\n                        setPage(0)\r\n                    }}\r\n                />\r\n            \r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"Delete\">\r\n                        <IconButton onClick={() => setOpen6(true)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className={classes.deleteSelected}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : null}\r\n\r\n                \r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    function EnhancedTableHead(props) {\r\n        const { classes, order, orderBy, onRequestSort, onSelectAllClick, numSelected, rowCount } = props;\r\n        const createSortHandler = (property) => (event) => {\r\n            onRequestSort(event, property);\r\n        };\r\n        \r\n        return data.length > 0 && (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\" className={classes.checkboxCell}>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            className={classes.checkbox}\r\n                        />\r\n                    </TableCell>\r\n                    {tableKeys.map((headCell) => (\r\n                        <StyledHeaderCell\r\n                            key={headCell + 'table'}\r\n                            align={'center'}\r\n                            sortDirection={orderBy === headCell ? order : false}\r\n                        >\r\n                            <CustomTableSortLabel\r\n                                active={orderBy === headCell}\r\n                                direction={orderBy === headCell ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell)}\r\n                                className={classes.rowHeader}\r\n                            >\r\n                                <div className={classes.header}>\r\n                                    <div className={classes.headerTitle}>{headCell}</div>\r\n                                    {!exceptions.includes(headCell) && (\r\n                                        <FormControl>\r\n                                            <Select\r\n                                                value={filters[headCell]}\r\n                                                onChange={(event) => {\r\n                                                    setPage(0)\r\n                                                    let aux = JSON.parse(JSON.stringify(filters))\r\n                                                    aux[headCell] = event.target.value\r\n                                                    setFilters(aux)\r\n                                                    event.stopPropagation()\r\n                                                }}\r\n                                                displayEmpty\r\n                                                className={classes.selectFilter}\r\n                                                onOpen={(event) => event.stopPropagation()}\r\n                                                onClose={(event) => event.stopPropagation()}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem>\r\n                                                {filterOptions[headCell].map((option, i) => (<MenuItem key={i + option} value={option}>{option}</MenuItem>))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    )}\r\n                                </div>\r\n                            </CustomTableSortLabel>\r\n                        </StyledHeaderCell>\r\n                    ))}\r\n                    <TableCell className={classes.stickyHeaderCell}>\r\n                        <div className=\"actions\">ACTIONS</div>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n\r\n    function NumberOfPages() {\r\n        return Math.ceil(filteredData.length / rowsPerPage)\r\n    }\r\n\r\n    function TablePaginationActions(props) {\r\n        const theme = useTheme();\r\n        const { count, page, rowsPerPage, onPageChange } = props;\r\n      \r\n        const handleFirstPageButtonClick = (event) => {\r\n          onPageChange(event, 0);\r\n        };\r\n      \r\n        const handleBackButtonClick = (event) => {\r\n          onPageChange(event, page - 1);\r\n        };\r\n      \r\n        const handleNextButtonClick = (event) => {\r\n          onPageChange(event, page + 1);\r\n        };\r\n      \r\n        const handleLastPageButtonClick = (event) => {\r\n          onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n        };\r\n      \r\n        return (\r\n          <Box sx={{ flexShrink: 0, ml: 2.5 }} className={classes.box}>\r\n            <IconButton\r\n              onClick={handleFirstPageButtonClick}\r\n              disabled={page === 0}\r\n              aria-label=\"first page\"\r\n            >\r\n              {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label=\"previous page\"\r\n            >\r\n              {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleNextButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label=\"next page\"\r\n            >\r\n              {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleLastPageButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label=\"last page\"\r\n            >\r\n              {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n            </IconButton>\r\n          </Box>\r\n        );\r\n    } \r\n      \r\n    TablePaginationActions.propTypes = {\r\n        count: PropTypes.number.isRequired,\r\n        onPageChange: PropTypes.func.isRequired,\r\n        page: PropTypes.number.isRequired,\r\n        rowsPerPage: PropTypes.number.isRequired,\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    return (\r\n        <div className=\"mainDiv\">\r\n            <div className=\"mainDiv-padding\">\r\n                <div className=\"titleActions\">\r\n                    <div className=\"titleButtonRow\">\r\n                        <h2 className=\"title\">MongoDB Admin Page</h2>\r\n                        <ColorButton5 onClick={() => {setOpen7(true)}} variant=\"outlined\" size=\"small\" className={classes.checkChangesButton} >Refresh</ColorButton5>\r\n                    </div>\r\n                    <div className=\"tooltipSubmitRow\">\r\n                        <Tooltip \r\n                            title={<div className=\"tooltipTitle\">Changes are only saved by pressing the <b className=\"boldTooltipText\">SUBMIT CHANGES</b> button</div>}\r\n                            placement=\"left\"\r\n                        >\r\n                            <IconButton>\r\n                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <ColorButton4 onClick={() => {handleUpload()}} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    </div>\r\n                </div>\r\n                <TableContainer component={Paper} className={classes.changesTable}>\r\n                    <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledHeaderCell>ID</StyledHeaderCell>\r\n                                <StyledHeaderCell>Date</StyledHeaderCell>\r\n                                <StyledHeaderCell align=\"left\">Changes</StyledHeaderCell>\r\n                                <StyledHeaderCell className={classes.actionsHeaderCell} align=\"left\">Actions</StyledHeaderCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow key={'00changes'} className={currentData === 0 ? classes.cellON : classes.off}>\r\n                                <TableCell align=\"left\">{0}</TableCell>\r\n                                <TableCell align=\"left\"></TableCell>\r\n                                <TableCell align=\"left\" width=\"70%\">{'CURRENT DATA'}</TableCell>\r\n                                <TableCell align=\"left\" className={classes.actionsCell}>\r\n                                    <ColorButton onClick={() => changeView(0)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            {rows.map((row, r) => (\r\n                                <TableRow key={row.id + 'changes'} className={row.id === currentData ? classes.cellON : classes.off}>\r\n                                    <TableCell align=\"left\">{row.id}</TableCell>\r\n                                    <TableCell align=\"left\">{row.date}</TableCell>\r\n                                    <TableCell align=\"left\" width=\"70%\">{betterChanges(row.changes).map((text, t) => (\r\n                                        <div key={`${r}${t}change`} className=\"changesText\">\r\n                                            <div>{text[0]}</div>\r\n                                            &nbsp;{\"entries with name:\"}&nbsp;\r\n                                            {text[0] !== \"UPDATED\" \r\n                                                ? (<div>{text[1]}</div>) \r\n                                                : (\r\n                                                    <div>\r\n                                                        {Object.values(text[1]).map((x, i) => (<div key={x + i}>{x}</div>))}\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    ))}</TableCell>\r\n                                    <TableCell align=\"left\" className={classes.actionsCell}>\r\n                                        <div className=\"tableActions\">\r\n                                            <ColorButton onClick={() => changeView(row.id)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                            <IconButton aria-label=\"deleteChange\" size=\"small\" className={classes.deleteChangeButton} onClick={() => handleDeleteChange(row.id)}>\r\n                                                <FontAwesomeIcon icon={faTrashAlt}/>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div className=\"addButton\">\r\n                    <ColorButton4 onClick={() => {handleUpload()}} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    <ColorButton3\r\n                        onClick={() => {\r\n                            resetChanges()\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.resetButton}\r\n                    >\r\n                        Reset changes\r\n                    </ColorButton3>\r\n                    <ColorButton3 onClick={() => {setOpen3(true)}} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Add new entry</ColorButton3>\r\n                </div>\r\n                <Paper className={classes.tablePadding}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} />\r\n                    <CustomTableContainer>\r\n                        <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                            <EnhancedTableHead\r\n                                numSelected={selected.length}\r\n                                classes={classes}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                rowCount={filteredData.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(filteredData, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.NAME);\r\n                                    return (\r\n                                        <TableRow\r\n                                            key={row.NAME + index}\r\n                                            className={classes.dataRow}\r\n                                            role=\"checkbox\"\r\n                                            hover\r\n                                            aria-checked={isItemSelected}\r\n                                            selected={isItemSelected}\r\n                                            classes={{selected: classes.tableRowSelected, root: classes.tableRowRoot}}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    onClick={() => handleClick(row.NAME)}\r\n                                                />\r\n                                            </TableCell>\r\n                                            {Object.values(row).map((cell) => (\r\n                                                <TableCell key={Math.random() + 'cell'} align=\"center\">{cell}</TableCell>\r\n                                            ))}\r\n                                            <TableCell align=\"center\" className={classes.stickyCell}>\r\n                                                <div className=\"tableActions\">\r\n                                                    <IconButton aria-label=\"edit\" size=\"small\" onClick={() => handleEdit(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faEdit} className=\"editIcon\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton aria-label=\"delete\" size=\"small\" onClick={() => handleDelete(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} className=\"trashIcon\"/>\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CustomTableContainer>\r\n                    <div className=\"pagination\">\r\n                        <Typography className={classes.choosePage} variant=\"body2\">Choose Page: </Typography>\r\n                        {filteredData.length > 0 && (<Select\r\n                            value={page}\r\n                            onChange={(event) => {setPage(event.target.value)}}\r\n                            className={classes.select}\r\n                            disableUnderline\r\n                        >\r\n                            {[...Array(NumberOfPages())].map((x, i) => <MenuItem key={x + 'nPage'} value={i}>{i}</MenuItem>)}\r\n                        </Select>)}\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 50, 100]}\r\n                            component=\"div\"\r\n                            count={filteredData.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n            { isLoading && (<div className=\"div-loader\">\r\n                <Loader\r\n                    type=\"Circles\"\r\n                    color=\"white\"\r\n                    height={70}\r\n                    width={70}\r\n                />\r\n                <p className=\"div-loader-msg\">{loadingMessage}</p>\r\n            </div>)}\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to delete {currentRow.NAME} ?\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n                <Button onClick={() => deleteRow()} autoFocus>\r\n                    Ok\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open2}\r\n                onClose={() => setOpen2(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Edit\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {Object.entries(currentRow).map(item => (\r\n                        <TextField key={item[0] + 'input'} id={item[0]} className={classes.input} label={item[0]} variant=\"outlined\" defaultValue={item[1]} />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen2(false)}>Cancel</Button>\r\n                    <Button onClick={() => editRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open3}\r\n                onClose={() => setOpen3(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Add\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {data.length > 0 && Object.keys(data[0]).map(item => (\r\n                        <TextField key={item + 'input2'} id={item} className={classes.input2} label={item} variant=\"outlined\" />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen3(false)}>Cancel</Button>\r\n                    <Button onClick={() => addRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open4}\r\n                onClose={() => setOpen4(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Submit data\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Would you like to submit changes to the database and download the new version to TyphiNET ?\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                {!startProgress && (<Button onClick={() => setOpen4(false)}>Cancel</Button>)}\r\n                {!startProgress && (<Button onClick={() => uploadChanges()} autoFocus>\r\n                    Ok\r\n                </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open5}\r\n                onClose={() => setOpen5(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Result\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {resultMessage}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen5(false)} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open6}\r\n                onClose={() => setOpen6(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete many\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to delete {selected.length} row(s) ?\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => setOpen6(false)}>Cancel</Button>\r\n                <Button onClick={() => deleteRows()} autoFocus>\r\n                    Ok\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open7}\r\n                onClose={() => setOpen7(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Look for changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Look for changes in the database? If there are, your current changes in the table below will be reseted.\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                {!startProgress && (<Button onClick={() => setOpen7(false)}>Cancel</Button>)}\r\n                {!startProgress && (<Button onClick={() => {checkChanges()}} autoFocus>\r\n                    Ok\r\n                </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open8}\r\n                onClose={() => setOpen8(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to delete change nº {currentChange} ?\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => setOpen8(false)}>Cancel</Button>\r\n                <Button onClick={() => deleteChange()} autoFocus>\r\n                    Ok\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport DashboardPage from './pages/dashboard'\r\nimport AdminPage from './pages/admin'\r\n// import typhinetLogoImg from './assets/img/logo-typhinet.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <nav>\r\n          <Link to=\"/\"></Link>\r\n          <Link to=\"/admin\"></Link>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <div>\r\n              <AdminPage/>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <div className=\"App\">\r\n              <div className=\"content\">\r\n                <DashboardPage/>\r\n              </div>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    // <div className=\"App\">\r\n    //   <div className=\"content\">\r\n    //     <DashboardPage/>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}